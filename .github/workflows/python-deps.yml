name: python deps
on:
  pull_request:
    paths:
      - '.github/workflows/python-deps.yml'
      - 'requirements*'

jobs:
  # This workflow makes sure that Python dependencies install correctly for
  # a) our current version b) the next version we're targetting
  python-deps:
    name: install
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        os: [macos-11.0, ubuntu-20.04]
        python-version: [3.6.13, 3.8.10]
      fail-fast: false
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: on
      # There's a check that prevents make install-py-dev to work if the developer has not
      # explicitely set the intention to use a non-default Python version
      SENTRY_PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set environment variables & others
        id: brew-info
        run: |
          echo "::set-output name=brew-cache::$(brew --cache)"

      - name: Cache (brew)
        uses: actions/cache@v2
        with:
          path: ${{ steps.brew-info.outputs.brew-cache }}
          key: devenv-${{ runner.os }}-brew-${{ hashFiles('Brewfile') }}
          restore-keys: devenv-${{ runner.os }}-brew

      - name: Install prerequisites
        # Sometimes, brew needs to be updated before brew bundle would work
        run: |
          # If we have a sha mistmatch we can clean up and try again
          [ $(uname) == "Darwin" ] && brew update -q && brew install --cask docker || brew cleanup -v docker && brew install --cask docker
          brew bundle -q

      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          make install-py-dev
