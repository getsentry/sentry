name: self-hosted
on:
  push:
    branches:
      - master
      - releases/**
  pull_request:

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# hack for https://github.com/actions/cache/issues/810#issuecomment-1222550359
env:
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 3
  NODE_OPTIONS: '--max-old-space-size=4096'

jobs:
  self-hosted:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    name: self-hosted-${{ matrix.os }}-${{ matrix.platform }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        id: setup-node
        with:
          node-version-file: '.node-version'

      - uses: pnpm/action-setup@36de12bed180fa130ed56a35e7344f2fa7a820ab # v4

      - uses: getsentry/action-setup-venv@3a832a9604b3e1a4202ae559248f26867b467cc7 # v2.1.1
        with:
          python-version: 3.13.1
          cache-dependency-path: requirements-dev-frozen.txt
          install-cmd: echo

      - name: Step configurations
        id: config
        run: |
          echo "webpack-path=.webpack_cache" >> "$GITHUB_OUTPUT"
          echo "WEBPACK_CACHE_PATH=.webpack_cache" >> "$GITHUB_ENV"

      - name: webpack cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ${{ steps.config.outputs.webpack-path }}
          key: ${{ runner.os }}-self-hosted-webpack-cache-${{ hashFiles('webpack.config.ts') }}

      - name: node_modules cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: nodemodulescache
        with:
          path: node_modules
          key: ${{ runner.os }}-self-hosted-node-modules-${{ hashFiles('pnpm-lock.yaml', '.node-version') }}

      - name: Install Javascript Dependencies
        if: steps.nodemodulescache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --production

      - run: |
          python3 -m tools.fast_editable --path .
          python3 -m sentry.build.main

      - run: docker login --username '${{ github.actor }}' --password '${{ github.token }}' ghcr.io
        if: github.ref_name == 'master' && github.event_name != 'pull_request'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build
        uses: docker/build-push-action@32945a339266b759abcbdc89316275140b0fc960 # v6.8.10
        with:
          context: .
          file: 'self-hosted/Dockerfile'
          cache-from: ghcr.io/getsentry/sentry:latest
          cache-to: type=inline
          platforms: linux/${{ matrix.platform }}
          tags: sentry:${{ matrix.platform }}
          outputs: type=docker,dest=/tmp/sentry-${{ matrix.platform }}.tar
          push: false
          build-args: |
            SOURCE_COMMIT=${{ github.sha }}
            TARGETARCH=${{ matrix.platform }}

      - name: Upload Image
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: sentry-${{ matrix.platform }}
          path: /tmp/sentry-${{ matrix.platform }}.tar

  assemble:
    needs: [self-hosted]
    if: ${{ (github.ref_name == 'master' || startsWith(github.ref_name, 'releases/')) && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker Login
        run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Download amd64 Image
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.2
        with:
          name: sentry-amd64
          path: /tmp

      - name: Load amd64 Image
        run: docker load --input /tmp/sentry-amd64.tar

      - name: Download arm64 Image
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.2
        with:
          name: sentry-arm64
          path: /tmp

      - name: Load arm64 Image
        run: docker load --input /tmp/sentry-arm64.tar

      - name: Push to GitHub Container Registry
        run: |
          docker tag sentry:amd64 ghcr.io/getsentry/sentry:${{ github.sha }}-amd64
          docker push ghcr.io/getsentry/sentry:${{ github.sha }}-amd64

          docker tag sentry:arm64 ghcr.io/getsentry/sentry:${{ github.sha }}-arm64
          docker push ghcr.io/getsentry/sentry:${{ github.sha }}-arm64

          docker manifest create \
            ghcr.io/getsentry/sentry:${{ github.sha }} \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/sentry:${{ github.sha }}

          docker manifest create \
            ghcr.io/getsentry/sentry:latest \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/sentry:latest

          docker manifest create \
            ghcr.io/getsentry/sentry:nightly \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/sentry:nightly

          # These manifests below are being used for development purposes.
          # We shall keep it as is.
          docker manifest create \
            ghcr.io/getsentry/sentry-self-hosted:${{ github.sha }} \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/sentry-self-hosted:${{ github.sha }}

          docker manifest create \
            ghcr.io/getsentry/sentry-self-hosted:latest \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/sentry:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/sentry-self-hosted:latest

  publish-dockerhub:
    needs: [assemble]
    runs-on: ubuntu-latest
    if: ${{ (github.ref_name == 'master') }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Get short SHA for docker tag
        id: short_sha
        shell: bash
        run: |
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          if [[ -z "$SHORT_SHA" ]]; then
            echo "Short SHA empty? Re-running rev-parse."
            git rev-parse --short "$GITHUB_SHA"
          else
            echo "sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          fi
      - name: Push built docker image
        shell: bash
        env:
          SHORT_SHA: ${{ steps.short_sha.outputs.sha }}
          IMAGE_URL: ghcr.io/getsentry/sentry-self-hosted:${{ github.sha }}
        run: |
          # only login if the password is set
          if [[ "${{ secrets.DOCKER_HUB_RW_TOKEN }}" ]]; then echo "${{ secrets.DOCKER_HUB_RW_TOKEN }}" | docker login --username=sentrybuilder --password-stdin; fi

          # We push 3 tags to Dockerhub:
          # first, the full sha of the commit
          docker buildx imagetools create --tag getsentry/sentry:${GITHUB_SHA} ghcr.io/getsentry/sentry:${{ github.sha }}

          # second, the short sha of the commit
          docker buildx imagetools create --tag getsentry/sentry:${SHORT_SHA} ghcr.io/getsentry/sentry:${{ github.sha }}

          # finally, nightly
          docker buildx imagetools create --tag getsentry/sentry:nightly ghcr.io/getsentry/sentry:${{ github.sha }}
