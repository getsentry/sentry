name: dev env
on:
  pull_request:
    paths:
      - '.pre-commit-config.yaml'
      - 'Makefile'
      - '.github/actions/setup-python'
      - '.github/workflows/development-environment.yml'
      - '.envrc'
      - 'Brewfile'
      - 'scripts/*'
      - 'src/sentry/runner/commands/devserver.py'
      - 'src/sentry/runner/commands/devservices.py'
      - 'requirements-*.txt'

jobs:
  # This workflow is optimized to test the dev env as fast as possible
  # We can optimize this further by creating a workflow to only test the pyenv set up and here make
  # use of the provided Python installation
  # The bootstrap workflow (see after this) tests the experience of first time engineers
  dev-environment:
    name: dev docs set up
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40
    strategy:
      matrix:
        os: [macos-11.0]
      fail-fast: false
    env:
      # Make the environment more similar to what Mac defaults to
      SHELL: /bin/zsh

    steps:
      - name: Checkout sentry
        uses: actions/checkout@v2

      - name: Set variables for caches
        id: info
        run: |
          echo "::set-output name=yarn-cache-dir::$(yarn cache dir)"

      # Trick for unattended Docker installations
      # https://github.com/docker/for-mac/issues/2359#issuecomment-943131345
      - name: Install Docker
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker
          sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended --install-privileged-components
          open -a /Applications/Docker.app --args --unattended --accept-license

      - name: Install missing brew packages
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install libxmlsec1 pyenv

      - name: Install volta
        run: |
          curl https://get.volta.sh | bash
          export VOLTA_HOME="$HOME/.volta"
          export PATH="$HOME/.volta/bin:$PATH"

      # This handles Python's cache
      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          # We don't want the dev env cache to be messing the Python tests' cache
          cache-prefix: devenv-
          cache-file-hash: ${{ hashFiles('**/requirements.txt') }}

      - name: Cache (pyenv)
        uses: actions/cache@v2
        with:
          path: ~/.pyenv
          key: devenv-${{ matrix.os }}-pyenv-${{ hashFiles('.python-version') }}

      - name: Cache (yarn)
        uses: actions/cache@v1 # We are explicitly using v1 due to perf reasons
        with:
          path: ${{ steps.info.outputs.yarn-cache-dir }}
          key: devenv-${{ matrix.os }}-v1-yarn-${{ hashFiles('yarn.lock') }}

      - name: Set up pyenv
        run: |
          make setup-pyenv
          [[ $(which python) != "${HOME}/.pyenv/shims/python" ]]
          source ~/.zprofile
          [[ $(which python) == "${HOME}/.pyenv/shims/python" ]]
          [[ $(python -V) == "Python $(cat .python-version)" ]]
          python -m venv .venv

      - name: Test pre-commit
        run: |
          source .venv/bin/activate
          pre-commit

      - name: make bootstrap step
        run: |
          make bootstrap


  # We don't yet test the bootstrap step
  # https://github.com/getsentry/bootstrap-sentry/blob/7af557be84920dd587e48613dbc308c937bc0e08/bootstrap.sh#L618-L619
  bootstrap-script:
    runs-on: macos-11
    timeout-minutes: 40
    env:
      # Make the environment more similar to what Mac defaults to
      SHELL: /bin/zsh

    steps:
      - name: Run bootstrap code
        env:
          STRAP_DEBUG: 1
        run: |
          bash <(curl -s https://raw.githubusercontent.com/getsentry/bootstrap-sentry/main/bootstrap.sh)
