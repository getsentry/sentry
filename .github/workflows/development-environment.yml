name: Development Environment
on:
  push:
    paths:
    - 'Brewfile'
    - 'Makefile'
    - 'setup.py'  # For changes in the sentry CLI used in make bootstrap
    - 'requirements-*.txt'
    - 'scripts/*'
    - 'src/sentry/*'  # Imported in setup.py
    - '.github/workflows/development-environment.yml'
    branches:
      - master
  pull_request:
    paths:
    - 'Brewfile'
    - 'Makefile'
    - 'setup.py'  # For changes in the sentry CLI used in make bootstrap
    - 'requirements-*.txt'
    - 'scripts/*'
    - 'src/sentry/*'  # Imported in setup.py
    - '.github/workflows/development-environment.yml'

jobs:
  dev-environment:
    name: Python set up
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        os: [ macos-11.0 ]

    steps:
      - uses: actions/checkout@v2

      - name: Install prerequisites
        if: ${{ runner.os == 'macOS' }}
        # Depending on the host watchman will not install (read intermittent)
        # The other option is to call brew bundle -f clean which clears all other
        # installed packages
        continue-on-error: true
        # Xcode CLI is already installed; No need to call xcode-select install
        # XXX: Can the Brew set up be cached?
        run: |
          brew bundle
          echo "PYENV_ROOT=$HOME/.pyenv" >> $GITHUB_ENV
          echo "PYENV_ROOT/bin:$PATH" >> $GITHUB_ENV
          echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bash_profile
          echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.zshrc

      - name: Install Python via Pyenv
        # pyenv needs to be setup here in order that we can use the correct Pip cache
        # XXX: Locally pyenv makes 3.6.10 be the Python version in use because of the order within .python-version
        # XXX: For some reason is not quite working
        run: |
          make setup-pyenv
          pyenv versions
          which python && python -V
          which pip && pip freeze
          exec "$SHELL"
          pyenv versions
          which python && python -V
          pyenv local 3.6.10
          pyenv versions
          which python && python -V

      - name: Set python-version
        id: python-version
        shell: bash
        run: |
          echo "::set-output name=python-version::$(python -V  | sed s/Python\ //g)"

      - name: Setup pip
        uses: ./.github/actions/setup-pip
        id: pip

      # XXX: Will it work to cache ~/.venv ?
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.pip.outputs.pip-cache-dir }}
            ~/.pyenv
            .venv
          key: ${{ runner.os }}-pip-py${{ steps.python-version.outputs.python-version }}-${{ hashFiles('**/requirements-*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}

      - name: Set up Python environment (as per docs)
        # We cannot call make bootstrap directly since run-dependent-services requires some Docker magic.
        # We have the magic in the getsentry/bootstrap-develop. We will handle this situation in the next pass of this.
        # make init-config will *not* prompt about overwriting ~/.sentry/config.yml' since we're on a pristine state
        run: |
          which python && python -V
          which pip && pip freeze
          python -m pip install virtualenv
          python -m virtualenv .venv
          source .venv/bin/activate
          make install-py-dev
          make setup-git
          curl https://get.volta.sh | bash
          export VOLTA_HOME="~/.volta"
          export PATH="$VOLTA_HOME/bin:$PATH"
          echo $PATH
          node -v
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          touch foo.txt && git add foo.txt && git commit -m "Test git hooks"
          make develop init-config
