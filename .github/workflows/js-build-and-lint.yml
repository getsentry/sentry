name: js build and lint

on:
  # Only runs webpack on master to save bundle size info into artifacts
  # which are then used on PRs to compare against
  push:
    branches:
      - master
  pull_request:

jobs:
  typescript-and-lint:
    name: typescript and lint
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          # because we want to lint + fix + commit, we need to checkout the HEAD sha (otherwise
          # it checks out the merge commit and we will not be able to commit to it)
          ref: ${{ github.event.pull_request.head.ref || 'master' }}
          # We need the repo here so that this works for forks
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Check for frontend file changes
        uses: getsentry/paths-filter@v2
        id: changes
        with:
          list-files: shell
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - uses: volta-cli/action@v1
        if: steps.changes.outputs.frontend == 'true'

      # See https://github.com/actions/cache/blob/master/examples.md#node---yarn for example
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        if: steps.changes.outputs.frontend == 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        if: steps.changes.outputs.frontend == 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.changes.outputs.frontend == 'true'
        run: yarn install --frozen-lockfile

      # Setup custom tsc matcher, see https://github.com/actions/setup-node/issues/97
      - name: setup matchers
        id: matchers
        if: steps.changes.outputs.frontend == 'true'
        run: |
          echo "::remove-matcher owner=masters::"
          echo "::add-matcher::.github/tsc.json"
          echo "::add-matcher::.github/eslint-stylish.json"

      # Lint entire frontend if this is on main branch
      - name: eslint
        if: github.ref == 'refs/heads/master' && steps.changes.outputs.frontend == 'true'
        run: |
          # Run relax config on main branch (and stricter config for changed files)
          yarn lint -c .eslintrc.relax.js
          yarn lint:css

      # Otherwise if it's not main branch, only lint modified files
      - name: eslint (changed files only)
        if: github.ref != 'refs/heads/master' && steps.changes.outputs.frontend == 'true'
        run: |
          yarn eslint --fix ${{ steps.changes.outputs.frontend_modified_lintable_files }}

      # Apply fixed files via pull request review comments
      - name: Apply any eslint fixed files as Pull Request review comments
        if: github.ref != 'refs/heads/master' && steps.changes.outputs.frontend == 'true'
        uses: getsentry/action-git-diff-suggestions@main
        with:
          message: eslint made this change
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: tsc
        if: always() && steps.changes.outputs.frontend == 'true'
        run: |
          yarn tsc -p config/tsconfig.build.json

      - name: storybook
        if: steps.changes.outputs.frontend == 'true'
        env:
          STORYBOOK_BUILD: 1
        run: |
          yarn storybook-build

  webpack:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2

      - name: Check for frontend file changes
        uses: getsentry/paths-filter@v2
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - uses: volta-cli/action@v1
        if: github.ref == 'refs/heads/master' || steps.changes.outputs.frontend == 'true'

      # See https://github.com/actions/cache/blob/master/examples.md#node---yarn for example
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        if: github.ref == 'refs/heads/master' || steps.changes.outputs.frontend == 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        if: github.ref == 'refs/heads/master' || steps.changes.outputs.frontend == 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: github.ref == 'refs/heads/master' || steps.changes.outputs.frontend == 'true'
        run: yarn install --frozen-lockfile

      - uses: getsentry/size-limit-action@v3
        if: github.ref == 'refs/heads/master' || steps.changes.outputs.frontend == 'true'
        env:
          SENTRY_INSTRUMENTATION: 1
          SENTRY_WEBPACK_WEBHOOK_SECRET: ${{ secrets.SENTRY_WEBPACK_WEBHOOK_SECRET }}
        with:
          main_branch: master
          workflow_name: 'js-build-and-lint'
          skip_step: install
          build_script: build
          windows_verbatim_arguments: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
