name: acceptance
on:
  push:
    branches:
      - master
  pull_request:


jobs:
  ensure_docker:
    name: Ensure docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install gcloud utils
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '281.0.0'
        export_default_credentials: true
        service_account_key: ${{ secrets.GCR_SERVICE_ACCOUNT }}
    - name: Configure docker
      run: |
        mkdir -p $HOME/.docker
        echo '{"experimental": "enabled"}' > $HOME/.docker/config.json
        gcloud auth configure-docker --quiet
    - name: Collect dependencies
      run: bin/test-utils/collect_deps

    - name: Ensure image
      run: bin/test-utils/ensure_image

  python-latest-sdk:
    name: Sentry Python (latest SDK)
    if: ${{ github.ref != 'refs/heads/master' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [ensure_docker]

    env:
      SENTRY_KAFKA_HOSTS: kafka:9093
      SENTRY_ZOOKEEPER_HOSTS: zookeeper:2182
      SENTRY_REDIS_HOST: redis

      PYTEST_SENTRY_DSN: https://6fd5cfea2d4d46b182ad214ac7810508@sentry.io/2423079
      PYTEST_ADDOPTS: "--reruns 5"

      # The hostname used to communicate with the PostgreSQL from sentry
      DATABASE_URL: postgresql://postgres:postgres@localhost/sentry
      PGPASSWORD: postgres

    services:
      clickhouse:
        image: yandex/clickhouse-server:19.17.4.11
        options: --ulimit nofile=262144:262144
        ports:
          - 9000:9000

      snuba:
        image: getsentry/snuba
        env:
          SNUBA_SETTINGS: test
          REDIS_HOST: redis
          CLICKHOUSE_HOST: clickhouse
          CLICKHOUSE_PORT: 9000
        ports:
          - 1218:1218

      redis:
        image: redis:5.0-alpine
        ports:
          - 6379:6379

      memcached:
        image: memcached:1.5-alpine
        ports:
          - 11211:11211

      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: confluentinc/cp-zookeeper:4.1.0
        env:
          ZOOKEEPER_CLIENT_PORT: 2181

      kafka:
        image: confluentinc/cp-kafka:5.1.2
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://kafka:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    steps:
    - uses: actions/checkout@v2
    - name: Install gcloud utils
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '281.0.0'
        export_default_credentials: true
        service_account_key: ${{ secrets.GCR_SERVICE_ACCOUNT }}

    - name: Configure docker
      run: |
        mkdir -p $HOME/.docker
        echo '{"experimental": "enabled"}' > $HOME/.docker/config.json
        gcloud auth configure-docker --quiet

    - name: Collect dependencies
      run: bin/test-utils/collect_deps

    - name: Run tests
      run: |
        createdb -h 127.0.0.1 -U postgres -E utf-8 sentry
        bin/test-utils/docker_run_tests make ci-test-sentry-python-latest-sdk


  acceptance:
    name: acceptance
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [ensure_docker]

    strategy:
      matrix:
        # can't use `strategy.job-total` with nested matrices :/
        # This means we may need to split acceptance and sentry-plugins if we wanted
        # each one to have different number of groups
        job: [acceptance, sentry-plugins]
        instance: [0, 1]
        include:
          - job: sentry-plugins
            instance: [0]
            group-strategy: file
          - job: acceptance
            group-strategy: individual

    env:
      SENTRY_KAFKA_HOSTS: kafka:9093
      SENTRY_ZOOKEEPER_HOSTS: zookeeper:2182
      SENTRY_REDIS_HOST: redis

      PYTEST_SENTRY_DSN: https://6fd5cfea2d4d46b182ad214ac7810508@sentry.io/2423079
      PYTEST_ADDOPTS: "--reruns 5"

      # The hostname used to communicate with the PostgreSQL from sentry
      DATABASE_URL: postgresql://postgres:postgres@localhost/sentry
      # Number of matrix instances
      TOTAL_TEST_GROUPS: 2
      VISUAL_SNAPSHOT_ENABLE: 1
      PGPASSWORD: postgres

    services:
      clickhouse:
        image: yandex/clickhouse-server:19.17.4.11
        options: --ulimit nofile=262144:262144
        ports:
          - 9000:9000

      snuba:
        image: getsentry/snuba
        env:
          SNUBA_SETTINGS: test
          REDIS_HOST: redis
          CLICKHOUSE_HOST: clickhouse
          CLICKHOUSE_PORT: 9000
        ports:
          - 1218:1218

      redis:
        image: redis:5.0-alpine
        ports:
          - 6379:6379

      memcached:
        image: memcached:1.5-alpine
        ports:
          - 11211:11211

      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: confluentinc/cp-zookeeper:4.1.0
        env:
          ZOOKEEPER_CLIENT_PORT: 2181

      kafka:
        image: confluentinc/cp-kafka:5.1.2
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://kafka:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    steps:
    - uses: actions/checkout@v2
    - name: Install gcloud utils
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '281.0.0'
        export_default_credentials: true
        service_account_key: ${{ secrets.GCR_SERVICE_ACCOUNT }}

    - name: Configure docker
      run: |
        mkdir -p $HOME/.docker
        echo '{"experimental": "enabled"}' > $HOME/.docker/config.json
        gcloud auth configure-docker --quiet
    - name: Collect dependencies
      run: bin/test-utils/collect_deps

    - name: Before tests
      run: |
        mkdir -p .artifacts/visual-snapshots/acceptance
        mkdir -p .artifacts/visual-snapshots/acceptance-mobile
        createdb -h 127.0.0.1 -U postgres -E utf-8 sentry

    - name: Run tests
      env:
        TEST_GROUP_STRATEGY: ${{ matrix.group-strategy }}
        TEST_GROUP: ${{ matrix.instance }}
      run: |
        bin/test-utils/docker_run_tests make ci-test-${{ matrix.job }}

    - name: Save snapshots
      if: always()
      uses: getsentry/action-visual-snapshot@v2
      with:
        save-only: true
        snapshot-path: .artifacts/visual-snapshots


  visual-diff:
    if: ${{ github.ref != 'refs/heads/master' }}
    needs: acceptance
    runs-on: ubuntu-16.04

    steps:
      - name: Diff snapshots
        id: visual-snapshots-diff
        uses: getsentry/action-visual-snapshot@v2
        with:
          api-token: ${{ secrets.VISUAL_SNAPSHOT_SECRET }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          gcs-bucket: 'sentry-visual-snapshots'
          gcp-service-account-key: ${{ secrets.SNAPSHOT_GOOGLE_SERVICE_ACCOUNT_KEY }}
