23.3.0
------

### Stacktrace Codecov V2 (ongoing)

This is the work post-MVP release.

By: @armenzg (#44827)

### JavaScript SDK Dynamic Loader (ongoing)

By: @AbhiPrasad (#44496)

### Various fixes & improvements

- fix(ecosystem): Preserve codeowners filters on update (#45810) by @scttcper
- chore(trace_view): Add perf issues to the mock trace (#45794) by @wmak
- feat(dynamic-sampling): Add prioritise low volume transaction rules [TET-736] (#45635) by @RaduW
- ref(onboarding): Update experiment segments (#45843) by @priscilawebdev
- ref(onboarding): Update copy (#45830) by @priscilawebdev
- ref(dynamic-sampling): Update Health Check copy (#45826) by @ale-cota
- chore(commit-context): Flag cleanup (#45804) by @snigdhas
- ref(compactSelect): Maintain menu width while searching (#45356) by @vuluongj20
- ref(outcomes) Add methods to build outcomes queries without django (#45730) by @markstory
- feat(compactSelect): Add optional menu footer (#45339) by @vuluongj20
- ref(dynamic-sampling): Add onboarding experiement to the ds page (temp test) -  (#45827) by @priscilawebdev
- chore(view-hierarchy): Remove frontend feature flags (#45761) by @narsaynorath
- chore(dashboards): Reintroduce release widget feature flag (#45791) by @shruthilayaj
- fix (dyn-sampling): Change schedule interval for prioritise by project task [TET-788] (#45821) by @andriisoldatenko
- chore(hybrid-cloud): Deprecate mediator destroyers (#45656) by @corps
- feat(onboarding): Add view sample error button new design - (#45820) by @priscilawebdev
- feat(onboarding): Add feature flag to control the View Sample Error button - (#45818) by @priscilawebdev
- fix(onboarding): Fix issue when first error sent (#45817) by @priscilawebdev
-  feat(source-maps): Add debug ids UI - (#45711) by @priscilawebdev
- feat(sourcemaps): Add endpoint for listing all artifact bundles of a project (#45751) by @iambriccardo
- chore(hybrid-cloud): Backfill installation_id to service hooks (#45800) by @corps
- fix(issue-platform): Explicitly pass `culprit` as part of the occurrence, and store `subtitle` correctly (#45809) by @wedamija
- feat(crons): Explain crontab syntax in monitor form (#45801) by @davidenwang
- ref(hybrid-cloud): Denormalize user avatars 1/3 (#45685) by @mikejihbe

_Plus 792 more_

23.2.0
------

### Stacktrace Codecov MVP

Related to https://github.com/getsentry/sentry/discussions/42399

By: @snigdhas (#43819, #43667, #43675), @jangjodi (#43746)

### JavaScript SDK Dynamic Loader (ongoing)

By: @AbhiPrasad (#44492, #44346, #44228)

### Various fixes & improvements

- perf(sentry): Add optional referrer to query.search for granularity (#44585) by @k-fish
- bug(replay): Do not render the list page until project data has loaded (#44623) by @ryan953
- fix(ui) Fix navigation between customer-domain accounts (#44625) by @markstory
- feat(codeowners): [BE] Allow project members to edit project owner rules (#44508) by @jangjodi
- ref(heartbeat): Update modal copy (#44658) by @priscilawebdev
- Reverts for INC-307 (#44654) by @beezz
- bump(dynamic-sampling): Bump sentry-relay to 0.8.18 (#44648) by @iambriccardo
- feat(contexts): Add OpenTelemetry context (#44605) by @AbhiPrasad
- fix: Avoid logging a `bad_report` for .NET events (#44291) by @Swatinem
- chore(hybrid-cloud): Api* => Rpc* (#44646) by @corps
- ref(hybrid-cloud): Isolate alert rules functionality by silo (#44644) by @mikejihbe
- fix(api): Don't try and convert_args when http_method_not_allowed (#44635) by @evanpurkhiser
- ref(api): Consistent relative endpoints import (#44640) by @evanpurkhiser
- feat(profile-issues): Add profile category/type to search autocomplete (#44548) by @malwilley
- fix(ui): Bring back Australia timezone (#44634) by @evanpurkhiser
- feat: Deprecate legacy post process forwarder (#44631) by @lynnagara
- fix(api): Remove inclusion of CHECKIN_ID in monitor check-in POST (#44630) by @evanpurkhiser
- fix(source-maps): fixes too many values to unpack error in ArtifactSource (#44624) by @roggenkemper
- ref(rules): Catch environment not existing (#44553) by @ceorourke
- feat(analytics): improve analytics for soure map debugging (#44626) by @scefali
- ref(tabs): Export `Item` as property of `TabList` & `TabPanels` (#44620) by @vuluongj20
- feat(ui): Switch translate tct return type to react element (#44610) by @scttcper
- feat: adds tracking for setup wizard (#44619) by @scefali
- feat(team-roles): Amend PUT on OrganizationMemberDetailsEndpoint (#44599) by @leedongwei

_Plus 637 more_

23.1.1
------

### Post-GA fixes and improvements for derived code mappings

This will track work that are known issues that will be handled after the GA.

See related RFC: https://github.com/getsentry/rfcs/blob/main/text/0016-auto-code-mappings.md

By: @armenzg (#43323, #43325, #43310)

### Stacktrace Codecov MVP (ongoing)

Related to https://github.com/getsentry/sentry/discussions/42399

By: @snigdhas (#43650, #43649, #43404, #43353, #43201), @jangjodi (#43032, #43517, #43407, #43116)

### Various fixes & improvements

- ci(acceptance): Replace selenium finalizer with yield (#43711) by @mattgauntseo-sentry
- test(profiles): test sample stats and raw weights across formats (#43685) by @JonasBa
- fix(release_health) : bad granularity was causing limit validation error in MetricsLayer (#43729) by @RaduW
- ref: upgrade structlog (#43680) by @asottile-sentry
- ref(ui) Remove error for missing router context (#43693) by @markstory
- ref(perf-issues): Increase unc asset duration threshold (#43722) by @k-fish
- hotfix: handle empty series returns from get_series. (#43721) by @RaduW
- Revert "feat(codecov): Get commit sha from Git blame  (#42978)" (7d918eb7) by @getsentry-bot
- feat(perf-issues) Add project options for consecutive db (#43701) by @DominikB2014
- fix(perf-issues): ensure php is not allowed to detect issues (#43694) by @DominikB2014
- feat(codecov): Get commit sha from Git blame  (#42978) by @jangjodi
- ref(mep): Allow up to 10 custom measurements (#43719) by @jan-auer
- (perf-issues) Add detection rate project option to UI (#43698) by @DominikB2014
- fix(txnames): Skip deleted projects (#43716) by @jjbayer
- feat(release-health): Switch release health backend to MetricsLayer (#43545) by @RaduW
- chore(hybrid-cloud): remove region to control, use outbox (#43361) by @corps
- feat(hc): Use hybrid cloud services in AuthIdentityHandler (#43035) by @RyanSkonnord
- fix(sourcemaps): ease check on valid url and add data for invalid url issue (#43709) by @roggenkemper
- test(acceptance): Reduce flakiness by waiting for requests to complete (#43486) by @mattgauntseo-sentry
- ref(hybrid-cloud): test for both urls in MonitorCheckinDetails (#43690) by @cathyteng17
- ui(codecov): Fix codecov legend border (#43704) by @snigdhas
- fix(tasks): Do not ignore exception by default (#43696) by @Zylphrex
- ref: retry on 500s in docker pulls (#43700) by @asottile-sentry
- Revert "CI(dispatch): Switch to merge commit sha where possible (#43570)" (f2dd50ad) by @getsentry-bot

_Plus 285 more_

23.1.0
------

### Derived Code Mappings (GA Release - JS and Python)

Python is in EA already. We will first add JS to EA and then GA both of them.

For JS, this will only apply to stacktraces that have source maps applied, otherwise, it is not possible to derive code mappings.

Read https://github.com/getsentry/rfcs/pull/16 for more details.

By: @armenzg (#42302)

### Stacktrace linking and code mapping improvements (ongoing)

Various improvements to configuring Code Mappings by a customer.

This milestones is simply to track the various related PRs.

By: @armenzg (#43105, #43104, #42810)

### Post-GA fixes and improvements for derived code mappings (ongoing)

This will track work that are known issues that will be handled after the GA.

See related RFC: https://github.com/getsentry/rfcs/blob/main/text/0016-auto-code-mappings.md

By: @armenzg (#43265, #43199, #42554, #42510, #42544, #42540, #42511, #42487)

### Stacktrace Codecov Integration (ongoing)

Related to https://github.com/getsentry/sentry/discussions/42399

By: @snigdhas (#43114, #43025, #43024, #43015)

### Various fixes & improvements

- Revert "fix(domains) Remove usage or params.orgId in search (#43205)" (2fc1398b) by @getsentry-bot
- ref(js): Convert events/userFeedback to a FC (#43283) by @evanpurkhiser
- feat(replays): Remove calendar icon from Replays list table (#43252) by @ryan953
- feat(replays): Remove the icon from the "Open Replay" preview in Issues (#43251) by @ryan953
- ref(ui): Visually improve PageHeadingQuestionTooltip (#43277) by @evanpurkhiser
- chore(ui): Upgrade babel, babel-loader, core-ui (#43286) by @scttcper
- ref(scim): Use transaction instead of span (#43287) by @AniketDas-Tekky
- feat(modal) Consolidate close prevention props (#43258) by @malwilley
- fix(integrations): Use services to get organization data (#43284) by @leeandher
- fix(useOverlay): Only enable maxSize modifier when open (#43193) by @vuluongj20
- fix(domains) Use routing params in join-request route (#43271) by @markstory
- fix(integrations): Use organization_id for finding the integration (#43279) by @leeandher
- ref(js): Remove default Button export (#43280) by @evanpurkhiser
- ref(js): Consistent spacing in eventEntry (#43230) by @evanpurkhiser
- ref(replays): Rename Replay API fields to be snake_case and new names (#43206) by @ryan953
- feat(replays): Convert fields to snake-case and add additional query aliases (#43194) by @cmanallen
- feat(anr-rate): Update ANR rate defaults on project details (#43248) by @shruthilayaj
- bug: Fix import of button (#43272) by @ryan953
- Revert "ref(js): Remove default Button export (#43254)" (9f77d654) by @getsentry-bot
- ci: Skip pip install when we have a cache hit in venv action (#43267) by @mattgauntseo-sentry
- security(codeql): set codeql to weekly scans, on prs, and on master bâ€¦ (#43213) by @mdtro
- revert-revert: feat(hybrid-cloud): Move Integration/OrgIntegration to Control and implement IntegrationService (#43183) by @leeandher
- chore: Add $schema to package.json + tsconfig.json (#43235) by @evanpurkhiser
- ref(js): Export named Alert (#43255) by @evanpurkhiser

_Plus 621 more_

22.12.0
-------

### Derived Code Mappings (EA release - Python only)

This adds the ability of deriving code mappings automatically for all orgs using Python and Github at first.

See RFC for details: https://github.com/getsentry/rfcs/blob/main/text/0016-auto-code-mappings.md

By: @armenzg (#41562, #41523, #41466, #41464, #41384)

### Derived Code Mappings (GA Release - JS and Python) (ongoing)

Python is in EA already. We will first add JS to EA and then GA both of them.

For JS, this will only apply to stacktraces that have source maps applied, otherwise, it is not possible to derive code mappings.

Read https://github.com/getsentry/rfcs/pull/16 for more details.

By: @armenzg (#42293, #42249, #42155, #42161, #42147, #42130, #42082, #42069, #41777, #41933, #41909, #41794, #41771, #41733, #41706, #41718, #41639, #41671, #41648), @jangjodi (#42192)

### Stacktrace linking and code mapping improvements (ongoing)

Various improvements to configuring Code Mappings by a customer.

This milestones is simply to track the various related PRs.

By: @scttcper (#41582, #41585, #41529, #41512, #41474, #41299, #41403, #41372), @snigdhas (#41465), @armenzg (#41409)

### Post-GA fixes and improvements for derived code mappings (ongoing)

This will track work that are known issues that will be handled after the GA.

See related RFC: https://github.com/getsentry/rfcs/blob/main/text/0016-auto-code-mappings.md

By: @armenzg (#42348, #41857)

### Stacktrace linking: Mobile Support (ongoing)

By: @jangjodi (#42117, #41936)

### Various fixes & improvements

- ref(js): Remove enforceActOnUseLegacyStoreHook hack (#42370) by @evanpurkhiser
- feat(java): Add feature flag for deobfuscating java exception values (#42353) by @edwardgou-sentry
- feat(profiling): add profiling-flamechart-spans flag (#42357) by @eliashussary
- feat(node): fix package for windows path (#42325) by @JonasBa
- feat(profiling): add transaction context (#42347) by @JonasBa
- ref(replays): Move replay-events-meta test into correct folder (#42324) by @ryan953
- Revert "chore(routes): Remove support for deprecated pre-Sentry 10 routes" (#42374) by @dashed
- chore(anr-rate): Add option for abnormal_mechanism extraction flag (#42367) by @shruthilayaj
- chore(hybrid-cloud): test model decorators and fk breakage (#42254) by @corps
- chore(transactions): Set the entity argument to default "false" (#42371) by @olksdr
- ref(contexts): Convert chunck from class to function (#42246) by @priscilawebdev
- feat(txnames): Sort rules in project options (#42372) by @jjbayer
- chore(js): useApi in groupEventDetails (#42355) by @evanpurkhiser
- fix(profiling): remove wasteful rect  (#42351) by @JonasBa
- feat(issues): Add frontend typings for issue occurrence data (#42329) by @malwilley
- ref(hybrid-cloud): use organization_slug in MonitorCheckIns (#42356) by @cathyteng17
- ref(replays): Create NetworkHeaderCell for Replay Details (#42240) by @ryan953
- ref(profiling): rm profiling-onboarding-checklist feature flag (#42354) by @eliashussary
- ref(replays): Refactor Replay network table sorting (#42235) by @ryan953
- fix(profiling): fix zoom when frame is in view (#42350) by @JonasBa
- feat(discover-quick-context): Added issue title (#42343) by @Abdkhan14
- chore(hybrid-cloud): use organization_slug in MonitorDetails (#42300) by @cathyteng17
- (perf-issues) add fingerprinting to consecutive db detector (#42339) by @DominikB2014
- frontend(invite): update invite link helper text (#42344) by @mdtro

_Plus 731 more_

22.11.0
-------

### Derived code mappings (Internal Release) (ongoing)

This milestones add support for creating Python code mappings automatically for orgs with the Github integration installed.

This milestone initially focuses on Python projects.

Future work described in this RFC: https://github.com/getsentry/rfcs/blob/main/text/0016-auto-code-mappings.md

By: @snigdhas (#41147, #41036, #40882, #40973, #40934, #40881, #40717, #40528, #40465, #40271), @armenzg (#41131, #41067, #40892, #40781, #40764, #40729, #40671, #40461, #40190, #40101), @scttcper (#40593)

### Derived code mappings (EA release - Python only) (ongoing)

This adds the ability of deriving code mappings automatically for all orgs using Python and Github at first.

See RFC for details: https://github.com/getsentry/rfcs/blob/main/text/0016-auto-code-mappings.md

By: @armenzg (#41313, #41199, #41132, #41125, #41083), @snigdhas (#41097, #41038, #41080, #41003, #41000, #40991, #40979)

### Various fixes & improvements

- feat(profiling): Add release to profile payload (#41282) by @Zylphrex
- fix(tests): escape `.` in regex passed to findByText (#41391) by @mdtro
- test(js): Convert DashboardList to RTL (#41375) by @malwilley
- test(js): Convert SentryApplicationDetails to RTL (#41378) by @evanpurkhiser
- feat(profiling): profiling onboarding sidebar (#41322) by @eliashussary
- feat(useStacktraceLink): add hook to fetch stack trace link (#41269) by @JonasBa
- dep(profiling): Bump sentry sdk for updated profiler (#41324) by @Zylphrex
- feat(analytics): Record analytics for first profile sent (#41315) by @Zylphrex
- perf(users-endpoint): Improve users endpoint performance more (#41347) by @Zylphrex
- fix(metrics): Use parameterize instead of for loop in test (#41316) by @iambriccardo
- ref(perf-issues): Add projectoption for enabling individual detector (#41328) by @k-fish
- ref(contexts): Prettify only known contexts - (#41379) by @priscilawebdev
- ci(jest): regenerate jest-balance.json (#41377) by @getsentry-bot
- fix(code-mappings): Always add a trailing backslash for codemappings (#41330) by @snigdhas
- fix(replays): Adjust Replay Details layout(s) dimensions (#41331) by @jesus4497
- test(js): Convert ManageDashboards test to RTL (#41352) by @malwilley
- feat(monitors): Tag error events with monitor id (#41291) by @davidenwang
- ref(access): Dataclass to represent (requires_sso, sso_is_valid) pairs (#41239) by @RyanSkonnord
- test(js): Convert organizationAuthList to RTL (#41309) by @evanpurkhiser
- feat(hybrid-cloud): Add /user-feedback/* Django route (#41326) by @dashed
- test(js): Convert teamKeyTransactionButton to RTL (#41308) by @evanpurkhiser
- Customize pip-compile header (#41334) by @atugushev
- ref: fix typing in sentry.integrations.slack (#41314) by @asottile-sentry
- feat(hybrid-cloud): Add /issues/* Django route (#41333) by @dashed

_Plus 1017 more_

22.10.0
-------

### Automatic code mappings for Python/Github projects (ongoing)

This milestones add support for creating Python code mappings automatically for orgs with the Github integration installed.

Future work described in this RFC: https://github.com/getsentry/rfcs/blob/main/text/0016-auto-code-mappings.md

By: @armenzg (#39975, #39750)

### Various fixes & improvements

- Revert "feat(commit-context): Refactor Issue Owner auto-assignment (#40048)" (#40081) by @wedamija
- ref(emails): Update perf issue email subject (#40072) by @ceorourke
- test(js): Convert AcceptOrganizationInvite to RTL (#39809) by @evanpurkhiser
- ref: improve pin_github_action ref matching (#40067) by @asottile-sentry
- test(ui): Convert SelectAsyncField test to RTL (#40060) by @malwilley
- test(js): Convert TableField test to RTL (#40064) by @malwilley
- deps(ui): Upgrade to jest v29 (#40070) by @scttcper
- test: Use initialProps when testing hooks with reactHooks.renderHook (#39532) by @ryan953
- feat(hybrid-cloud): Add a test for file upload (#39931) by @AniketDas-Tekky
- feat(ui): Add aria-describedby to form inputs (#40037) by @evanpurkhiser
- feat(commit-context): Refactor Issue Owner auto-assignment (#40048) by @NisanthanNanthakumar
- chore(hybrid-cloud): ORM decorators updated. (#40022) by @corps
- ref(email): Add performance issue alert email template (#39948) by @ceorourke
- test(js): Rebalance tests (#40036) by @evanpurkhiser
- fix(all-events) issue where events tab makes extra api call (#40056) by @DominikB2014
- feat(all-events) Add minidump all events (#40049) by @DominikB2014
- feat(perf_issues): Only send error issues to digests system (#40050) by @wedamija
- feat(commit-context): Support GitLab (#39381) by @NisanthanNanthakumar
- ref: Mark batching kafka consumer as deprecated (#40044) by @lynnagara
- ref(gitlab): No need to show token (#40045) by @armenzg
- Add all inclusive resources (#40047) by @0Calories
- feat(charts): Add auto-generated aria labels (#39653) by @vuluongj20
- fix(auth): Fix `device-failed` position (#40011) by @vuluongj20
- feat(replays): Add Slowest Transaction Column To Transaction Replay Table (#39930) by @danecando

_Plus 916 more_

22.9.0
------

### Various fixes & improvements

- fix(js): Avoid constructing API inside fetchOrganizationDetails (#38859) by @evanpurkhiser
- feat(codeowners): Add assignee dropdown codeowners copy (#38832) by @scttcper
- test(ui): Convert project install tests to RTL (#38866) by @scttcper
- feat(dashboards): widgets use mep setting provider to determine if requests should be metricsEnhanced or not (#38810) by @edwardgou-sentry
- feat(replays): Change replay event tags type and update UI (#38604) by @jesus4497
- ref: Continue typing eventstream (#38858) by @lynnagara
- feat(sidebar): open up broadcasts if #whats-new is the hash (#38838) by @scefali
- Added question tooltip beside processed baseline toggle. (#38875) by @Abdkhan14
- feat(perf-issues): Add analytics event to count num of perf issues on issues stream page (#38876) by @0Calories
- feat(metrics): Add `count_web_vitals` to metrics layer [TET-161] (#38873) by @ahmedetefy
- feat(dashboard): Flip top level query filter flag (#38829) by @narsaynorath
- ref(dashboards): Delete deprecated dashboard tests (#38872) by @edwardgou-sentry
- chore(perf-issues): Add issue creation rate limiter metrics (#38874) by @udameli
- ref(perf-issues): prettify test event JSON (#38871) by @mjq-sentry
- feat(perf_issues): Make `GroupTagKeyValuesEndpoint` work with perf issues (#38865) by @wedamija
- feat(profiling): add links to profiledetails (#38824) by @eliashussary
- fix(perf-issues): N+1 with odd number of potential sources missed (#38862) by @mjq-sentry
- feat(perf_issues): Default `sentry:performance_issue_creation_rate` to 1.0, and gate perf issue creation using `performance-issues-ingest` (#38864) by @wedamija
- feat(perf_issues): Explicitly hide performance issues from search if feature flag is disabled (#38863) by @wedamija
- feat(perf-issues): Add Performance Issues analytics (#38807) by @0Calories
- feat(dashboards): Flip grid layout feature flag (#38827) by @narsaynorath
- feat(metrics): Support rate for derived metric [TET-129 TET-127] (#38792) by @ahmedetefy
- feat(metrics): Register new option [sns-1660] (#38816) by @untitaker
- fix(datascrubbing): Limit sensitiveFields (#38803) by @jjbayer

_Plus 746 more_

22.8.0
------

### Various fixes & improvements

- fix(breadcrumbsFilter): Fix level tag crop issue (#37777) by @vuluongj20
- ref(dropdownMenu): Mark as deprecated (#37319) by @vuluongj20
- feat(workflow): Remove `duplicate-alert-rule` flag (#37489) by @scttcper
- fix(dashboards): Fix custom metrics not displaying with units correctly in widget viewer(#37807) by @edwardgou-sentry
- feat(replays): New column size and improve of a11y (#37765) by @jesus4497
- ref(perf): Add duplicate detection on group hash (#37787) by @k-fish
- fix(profiling): Profiling stats response for no projects (#37772) by @Zylphrex
- feat(replays): Normalize resources with client expectations (#37708) by @cmanallen
- feat(dashboard-filters): Save and expose releaseId in dashboards (#37779) by @narsaynorath
- ref: upgrade confluent-kafka to 1.9.2 (#37733) by @asottile-sentry
- pass resolution time to get_files_changed_in_releases() (#37800) by @komal-saini
- don't call flagr on this feature flag since we'll be hard-coding the handler (#37799) by @barkbarkimashark
- fix(suspect-resolutions): Get files changed in releases within 5h time-window  (#37789) by @komal-saini
- fix: explicitly define app label (#37795) by @MeredithAnya
- fix(integrations): don't remove functions before they're actually removed (#37793) by @vpandiarajan20
- ref(indexer): Add postgres, cloudspanner modules (#37771) by @MeredithAnya
- Sentry Functions: Backend Webhook Integration (#37205) by @vpandiarajan20
- ref(indexer): Deprecate DbKey (#37790) by @lynnagara
- ref(suspect-resolutions): refactor code around (#37775) by @barkbarkimashark
- fix(dashboard): Pass location to handleAddQueryToDashboard (#37785) by @shruthilayaj
- fix(releases): filter out releases with projects by project membership instead of access (#37495) by @barkbarkimashark
- feat(suspect-resolutions): track the suspect resolutions algo changes in analytics events (#37778) by @barkbarkimashark
- Revert "fix(mep): Missed a tag resolver (#37768)" (#37782) by @k-fish
- fix(ui): integrations text alignment (#37776) by @robinrendle

_Plus 789 more_

22.7.0
------

### Various fixes & improvements

- ref(replays): Refactor MouseTracking component into a react hook (#36710) by @ryan953
- feat(release-activity): backend support for tracking release activity (#36608) by @barkbarkimashark
- feat(grouping): Add support for automatic grouping updates (#36358) by @mitsuhiko
- feat(replays): add session replays endpoints, proxy logic (#36631) by @JoshFerge
- fix(dashboards): Open in Discover missing in Default Dashboard (#36728) by @narsaynorath
- chore(deps): Upgrade @sentry/* JS SDKs from 7.6.0 to 7.7.0 (#36727) by @AbhiPrasad
- fix(mep): Remove the granularity hacks (#36724) by @wmak
- chore(deps): Bump eslint-config-sentry 1.94 -> 1.95 (#36693) by @NisanthanNanthakumar
- fix(test) Allow the connection name to be defined by migration tests (#36712) by @markstory
- fix(perf) Disabled performance settings if denied access (#36675) by @DominikB2014
- fix: Remove potentially unnecessary pip installs (#36649) by @untitaker
- fix: Fix unbound variable if DEVENV_NO_REPORT=1 (#36650) by @untitaker
- test(issue-details): Fix issue details create comment test (#36715) by @Zylphrex
- ref(tags): Refactor the Tags table so the rows are independant of the styled title (#36711) by @ryan953
- fix(ci): include workdir to cache-dependency-path in setup-sentry (#36718) by @joshuarli
- bug(replays): Remove the custom replays navTabs, use core nav which supports with dark-mode (#36709) by @ryan953
- feat(replays): Cleanup unneeded tabs from the Replay Details page (#36706) by @ryan953
- feat(alert): Create metric alerts on project creation (#36582) by @Neo-Zhixing
- fix(devserver): Start both string indexers when metrics are enabled (#36682) by @untitaker
- feat(profiling): Ingest profile call trees (#36268) by @Zylphrex
- ref: replace legacy compat.map with list comprehensions (api) (#36694) by @asottile-sentry
- feat(integrations): Endpoint for SentryFunctions creation page (#36557) by @vpandiarajan20
- tests(mep): Add missing tests for entity subscription helper functions (#36689) by @wedamija
- feat(mep): Add `PerformanceMetricsEntitySubscription` for use with MEP alerts (#36653) by @wedamija

_Plus 760 more_

22.6.0
------

### Various fixes & improvements

- ref: replace `import_submodules` with explicit `*` imports (#35677) by @asottile-sentry
- ref: fix linting of fixtures namespace (#35684) by @asottile-sentry
- ref(sentry app): Rewrite Sentry App Tests (#35664) by @ceorourke
- feat(discover): Support sum function while querying metrics in discover (#35576) by @edwardgou-sentry
- ref: re-enable pyc files now that we're on python 3 (#35678) by @asottile-sentry
- ref: allow explicit relative imports `from .json` (#35676) by @asottile-sentry
- fix(replays): fix error/durations on Replays for page >1 (#35647) by @SDaian
- ref(virtualizedtree): compute startindex and avoid wasteful iterations (#35621) by @JonasBa
- feat: Thread names (#35620) by @loewenheim
- Revert "Revert "ref: simplify and type flake8 plugin (#35645)" (#35651)" (#35673) by @asottile-sentry
- fix(cra-metrics): Count all users in metrics alerts (#34957) by @jjbayer
- feat: Run csharp/il2cpp events through symbolicator (#35615) by @Swatinem
- ref: upgrade boto* packages to fix conflicts (#34524) by @asottile-sentry
- ref(stack-trace): Update header style (#35670) by @priscilawebdev
- fix(relay): Defer cache invalidation up until after DB transaction (#35523) by @untitaker
- feat(dashboard): Add field options for table cols to config (#35622) by @shruthilayaj
- fix(projectconfig): Invalidation task deals with deleted project (#35668) by @flub
- ref(stack-trace): Add new design changes - (#35617) by @priscilawebdev
- chore(deps): bump @sentry/release-parser from 1.3.0 to 1.3.1 (#35657) by @dependabot
- chore(deps): bump core-js from 3.22.7 to 3.23.1 (#35656) by @dependabot
- ref(widget-builder): Replace Feedback Button with FeatureFeedback component (#35571) by @priscilawebdev
- chore(deps): bump echarts from 5.3.1 to 5.3.3 (#35658) by @dependabot
- build(deps): bump css-what from 5.0.0 to 5.1.0 (#35623) by @dependabot
- build(deps-dev): bump @types/node from 17.0.38 to 17.0.42 (#35598) by @dependabot

_Plus 746 more_

22.5.0
------

### Replays v0 (ongoing)

By: @billyvg (#34407, #34388)

### Various fixes & improvements

- ref(js): Convert DateTime to a FC (#34628) by @evanpurkhiser
- chore: Update logo for dark or light theme (#34229) by @mattjohnsonpint
- ref(js): Convert U2fContainer to a FC (#34630) by @evanpurkhiser
- ref(js): Convert discover eventsV2 Breadcrumbs to a FC (#34629) by @evanpurkhiser
- ref(js): Convert ProjectPerformanceContainer to a FC (#34624) by @evanpurkhiser
- ref(js): Convert gridEditable/sortLink to a FC (#34615) by @evanpurkhiser
- ref(js): Convert LoadingError to a FC (#34626) by @evanpurkhiser
- ref(js): Convert UnlinkedAlert to a FC (#34632) by @evanpurkhiser
- ref(js): Convert TagDistributionMeter to a FC (#34627) by @evanpurkhiser
- style(js): Small formatting adjustment to projectSettingsLayout (#34625) by @evanpurkhiser
- ref(js): Convert TeamAvatar to a FC (#34623) by @evanpurkhiser
- ref(js): Convert ValueComponent to a FC (#34620) by @evanpurkhiser
- ref(js): Convert BreadcrumbTitle to a FC (#34619) by @evanpurkhiser
- feat(onboarding): Customized cards (#34603) by @Neo-Zhixing
- ref(js): Convert OnboardingWizardSidebar to a FC (#34609) by @evanpurkhiser
- chore(dashboard): Default RH field to crash_free_rate (#34285) by @shruthilayaj
- fix(dashboard): Remove session.status as a filter tag (#34593) by @shruthilayaj
- fix(discover): Fix bug preventing saving queries with equation (#34580) by @wmak
- feat(crash_rate_alerts): Add logic to enforce session -> metric alerts (#34534) by @wedamija
- feat(replays): Better console messages + add string formatting (#34501) by @billyvg
- fix(dev): also patch invalid escape sequences in selenium.* (#34577) by @asottile-sentry
- Revert "fix(notifications): Use `metrics_key` (#34572)" (04f013dd) by @getsentry-bot
- ref(integrations): Update GH and GL feature descriptions (#34578) by @ceorourke
- feat(alertWizard): Show My Projects in project selector in alert wizard (#34583) by @mikellykels

_Plus 732 more_

22.4.0
------

### Replays v0 (ongoing)

By: @ryan953 (#33313)

### Various fixes & improvements

- debug(tests): Added some debugging for flakey ado test (#33632) by @AniketDas-Tekky
- ref(rate limits): Tag DD metric w/ rate limit type (#33621) by @ceorourke
- ref(access log): Add Datadog metrics (#33644) by @ceorourke
- ref(reflux): remove index signature (#33407) by @JonasBa
- feat(flamechart): allow rendering the chart on arbitrary x axis (#33577) by @JonasBa
- fix(ui): typo on languages (#33628) by @23RoMax
- fix(ui): Don't show project picker for alert wizard v3 (#33634) by @taylangocmen
- JSON syntax and OpenAPI spec fixes, to silence (some) swagger/openapi codegen errors. (#28396) by @tesueret-msft
- fix(alertStatus): Handle alert details page when no project (#33635) by @mikellykels
- fix(rate limit): Format 429 response correctly (#33629) by @ceorourke
- fix(workflow): Format metric date to number from query params (#33633) by @scttcper
- fix(ui): Add % to crash free sessions tooltip (#33624) by @mikellykels
- feat(replay): Implement the View in Fullscreen button (#33566) by @ryan953
- feat(workflow): Tidy up projects page design (#33608) by @mikellykels
- fix(sudo modal): no longer trying to log superuser access on sudo (#33622) by @maxiuyuan
- feat(perf): Add MEP to transaction summary (#32773) by @k-fish
- feat(dashboards): Update Release Health dataset to use sessions v2 (#33582) by @shruthilayaj
- ref(alerts): Use Badge in team filter (#33596) by @vuluongj20
- feat(onboarding): remove welcome page experiment and use new experience (#33616) by @scefali
- feat(workflow): Add Undo to issue removal toast (#33249) by @mikellykels
- ref(page-filters): All environments -> All env (#33568) by @davidenwang
- ref(perf): Move long-tasks to app-wide (#33614) by @k-fish
- fix(new-widget-builder-experience): Unnecessary dashboard visit requests (#33619) by @narsaynorath
- ref(page-filters): Move issues sort options inside table (#33590) by @vuluongj20

_Plus 771 more_

22.3.0
------

### Various fixes & improvements

- feat(perf): Add MEP param to other landing requests (#32575) by @k-fish
- feat(devenv): set sentry SDK default off if dsn not provided and relay off (#32569) by @JoshFerge
- ref(dam): Use cols and aggregates (#32441) by @shruthilayaj
- feat(mep): Introduce p100 to the metric query builder (#32570) by @wmak
- feat(mep): Introduce the count_web_vitals functions to metrics (#32507) by @wmak
- ref(sdk): Move back to 5000ms idleTimeout (#32564) by @k-fish
- feat(dashboards): Widget Viewer beta badge and style (#32588) by @edwardgou-sentry
- chore: Add team-web-backend as CODEOWNERS of SDK (#32033) by @sl0thentr0py
- ref(ui): Improve uage of BookmarkStar (#32553) by @evanpurkhiser
- test(js): Convert organizationGroupDetails/action to RTL (#32598) by @evanpurkhiser
- chore(deps): bump pillow from 8.3.2 to 9.0.1 (#32552) by @dependabot
- chore(js): Upgrade babel from 7.15 -> 7.17 (#32016) by @evanpurkhiser
- feat(onboarding): Add onboarding welcome page experiment (#31733) by @scefali
- feat(codeowners): Decode base64 CODEOWNERS contents to utf-8 (#32582) by @NisanthanNanthakumar
- fix(projects): Use subText for project issues table's heading (#32597) by @vuluongj20
- fix(projects): Use subText for project card's score title (#32595) by @vuluongj20
- fix(ui): fixed size of open in issues button (#32573) by @robinrendle
- fix(ui): copy of alert details chart (#32587) by @robinrendle
- ref(ui): Make small UI changes to Button component (#31903) by @vuluongj20
- ref(page-filters): Add `alignDropdown` prop to environment selector (#32461) by @vuluongj20
- fix(tests): Another attempt to reduce flakiness of event frequency tests (#32580) by @wedamija
- fix(dashboards): Don't display edit button in Widget Viewer for prebuilt dashboards (#32567) by @edwardgou-sentry
- fix(design): Fix code css definition (#32589) by @dashed
- fix(discover): Add to Dashboard test from a Discover Query (#32577) by @edwardgou-sentry

_Plus 605 more_

22.2.0
------

### Various fixes & improvements

- ref(ui) Move forms out of views/settings/components (#31785) by @markstory
- feat(perf): Show link to docs when some web vitals data is missing (#31764) by @0Calories
- feat(dashboard): Add duplicate widget button in dashboard edit mode (#31776) by @edwardgou-sentry
- feat(metrics): Add metrics to series transformer (#31783) by @matejminar
- ref(new-widget-builder-experience): Add visualization & query fields  (#31786) by @priscilawebdev
- feat(profiling): add flamegraph tooltip (#31663) by @JonasBa
- ref(endpoints): SentryApp endpoints module (#31749) by @mgaeta
- feat(ui): Add empty state for for review tab (#31782) by @taylangocmen
- ref(models): Move more models to submodules (#31583) by @mgaeta
- Select weekly email template based on feature flag (#31802) by @Neo-Zhixing
- feat(workflow): Add alert-rule-status-page flag (#31796) by @scttcper
- fix(perf): Transaction is missing in perfForSentry (#31801) by @k-fish
- feat(codeowners): add api owners group to CODEOWNERS (#31739) by @JoshFerge
- meta(gha): Deploy workflow issue-routing-helper.yml (#31798) by @chadwhitacre
- chore(auth): Enable automatic IdP migration for all users (#31774) by @RyanSkonnord
- feat(ratelimits): Turn on rate limit enforcement (#31789) by @AniketDas-Tekky
- ref(perf): Switch VC component to use perf.now (#31795) by @k-fish
- ref(api): Refactor organization_member_team_details (#31751) by @RyanSkonnord
- fix(pagerduty): Fix logging params (#31794) by @ceorourke
- feat(dashboards): widget viewer modal feature flags (#31792) by @edwardgou-sentry
- feat(reports): Include transactions in project series histogram (#30839) by @Neo-Zhixing
- feat(apidocs): document SCIM member index post with new tooling (#31695) by @JoshFerge
- feat(apidocs): document SCIM member index get with new tooling (#31694) by @JoshFerge
- fix(alert-rule-action): Initialize formdata with existing values (#31710) by @NisanthanNanthakumar

_Plus 502 more_

22.1.0
------

### Frontend Deploys (ongoing)

By: @billyvg (#28878)

### Python: Add support for Apple arm64 development (ongoing)

Apple started moving away from their Intel based chipset to arm64 chipsets (aka as Apple Silicon).
In order to do Sentry development on this new architecture we need to do various changes to Sentry's development environment. Some of these changes include using a different Python version (arm64 support was added on Python 3.8.10), upgrading Python packages and hosting some Python wheels that third-party maintainers are not yet releasing.

By: @armenzg (#30071, #29739, #29449, #29315, #29013, #28769, #28607)

### Docker: Add support for Apple arm64 development (ongoing)

In order to do development for Sentry, we need to spin up various Docker containers.
Apple is moving away from Intel based chipset to arm64 chipsets (aka Apple Silicon).

This milestones track all work required to make sure we can still use these development services on Apple's arm64 architecture.

By: @armenzg (#29494, #29293, #29284, #29157, #29081, #29117, #29084, #28672, #28724)

### Connecting Dashboards and Discover (ongoing)

Open a Dashboard widget in Discover. Add a Discover Query to a Dashboard.

By: @edwardgou-sentry (#28699, #28827, #28745, #28637)

### Various fixes & improvements

- ref(ratelimit): Added a config and changed a default (#31141) by @AniketDas-Tekky
- feat(dev): Fix `jest --watch` (#31138) by @billyvg
- ref(auth): Increase sample rate to 1.0 on idpmigration.* metrics (#31139) by @RyanSkonnord
- ref(pageFilters): Constrict types on updateParams better (#31073) by @evanpurkhiser
- feat(notifications): Nudge Notifications (#30409) by @mgaeta
- fix(ui): Team details doesn't load depending on navigation (#31081) by @mikellykels
- fix(snuba-tests): wrap tag key in Column (#31137) by @MeredithAnya
- test(ui): Convert globalSelectionLink to RTL (#31007) by @scttcper
- fix(suspect-spans): Make sure to query for frequency column (#31134) by @Zylphrex
- fix(echarts): Remove type casting from MapSeries (#31130) by @scttcper
- ref(webhooks): Use ApiClient (#31127) by @ceorourke
- fix(dashboard): Set line height on BigNumber to avoid clipping (#31136) by @narsaynorath
- fix(echarts): Use default echarts bar series type (#31129) by @scttcper
- fix(teamStats): Adjust gap between bar charts (#31119) by @scttcper
- fix(dashboards): TopN widgets Open in Discover opens with TopN display type (#31120) by @edwardgou-sentry
- ref(metrics): Consolidate wrappers around string indexer (#31051) by @untitaker
- ref(performance-metrics): Port failure Rate sidebar widget - Summary to metrics (#31014) by @priscilawebdev
- feat(profiling): move flamegraph and differential flamegraph (#30910) by @JonasBa
- ref(ui): Extract LoadingTriangle from LoadingIndicator (#31118) by @evanpurkhiser
- ref(notifications): Prepare Slack for sending Nudges. (#30765) by @mgaeta
- ref(integrations): Split up large file (#30786) by @mgaeta
- ref(analytics): Analytics Refactor + Types (#30555) by @mgaeta
- fix(teamStats): Fix link to alert details from triggered (#31124) by @scttcper
- ref(sentry apps): Don't raise IgnoreableSentryAppError (#31033) by @ceorourke

_Plus 2051 more_

21.12.0
-------

### Frontend Deploys (ongoing)

By: @billyvg (#28878)

### Python: Add support for Apple arm64 development (ongoing)

Apple started moving away from their Intel based chipset to arm64 chipsets (aka as Apple Silicon).
In order to do Sentry development on this new architecture we need to do various changes to Sentry's development environment. Some of these changes include using a different Python version (arm64 support was added on Python 3.8.10), upgrading Python packages and hosting some Python wheels that third-party maintainers are not yet releasing.

By: @armenzg (#30071, #29739, #29449, #29315, #29013, #28769, #28607)

### Docker: Add support for Apple arm64 development (ongoing)

In order to do development for Sentry, we need to spin up various Docker containers.
Apple is moving away from Intel based chipset to arm64 chipsets (aka Apple Silicon).

This milestones track all work required to make sure we can still use these development services on Apple's arm64 architecture.

By: @armenzg (#29494, #29293, #29284, #29157, #29081, #29117, #29084, #28672, #28724)

### Connecting Dashboards and Discover (ongoing)

Open a Dashboard widget in Discover. Add a Discover Query to a Dashboard.

By: @edwardgou-sentry (#28699, #28827, #28745, #28637)

### Various fixes & improvements

- feat(cra-metrics): Adds crash rate alerts over metrics [INGEST-629] [INGEST-632] (#30400) by @ahmedetefy
- fix(perf): Re-add onboarding for landing v3 (#30675) by @k-fish
- fix(performance-metrics): Handle null serie values (#30594) by @priscilawebdev
- feat(snql): Enable snql on facets performance endpoints (#30557) by @wmak
- fix(discover): Updates Discover widget modal to propagate global header selection to the dashboard view when submitting (#30641) by @edwardgou-sentry
- feat(suspect-spans): Allow specifying certain columns (#30576) by @Zylphrex
- fix(chart-unfurl): Fix daily top5 rendering (#30669) by @shruthilayaj
- ref(projectconfig_cache): Delete redis-blaster implementation, execute deletes faster (#30636) by @untitaker
- feat(dashboards): Open Library Modal in edit mode (#30591) by @shruthilayaj
- ref(js): Cleanup GSH getParams / utils (#30658) by @evanpurkhiser
- style(js): Improve comments formatting in AsyncComponent (#30667) by @evanpurkhiser
- ref(js): Convert (some of) redirectDeprecatedProjectRoute to a FC (#30640) by @evanpurkhiser
- ref(js): Convert ScrollToTop to a hook (#30652) by @evanpurkhiser
- ref(js): Remove UNSAFE_componentWillReceiveProps (#30663) by @evanpurkhiser
- ref(js): Remove unused getEndpoint (#30659) by @evanpurkhiser
- fix(ui): Span tree connector design (#30498) by @vuluongj20
- fix(js): Remove double `- Sentry` in Activity route title (#30626) by @evanpurkhiser
- feat(teamStats): Remove some team unresolved issue age buckets (#30650) by @scttcper
- style: Hover & focus state for buttons (#30654) by @vuluongj20
- fix(ui): Fix undefined markline data error (#30655) by @taylangocmen
- ref(js): Convert OrganizationCreate to a FC (#30638) by @evanpurkhiser
- chore(deps): bump typescript from 4.4.4 to 4.5.4 (#30615) by @dependabot
- feat(teamStats): Add team-insights-age-unresolved flag (#30644) by @scttcper
- ref(js): Rename constants/{globalSelectionHeader -> pageFilters} (#30618) by @evanpurkhiser

_Plus 1646 more_

21.11.0
-------

### Frontend Deploys (ongoing)

By: @billyvg (#28878)

### Python: Add support for Apple arm64 development (ongoing)

Apple started moving away from their Intel based chipset to arm64 chipsets (aka as Apple Silicon).
In order to do Sentry development on this new architecture we need to do various changes to Sentry's development environment. Some of these changes include using a different Python version (arm64 support was added on Python 3.8.10), upgrading Python packages and hosting some Python wheels that third-party maintainers are not yet releasing.

By: @armenzg (#29739, #29449, #29315, #28769, #28607)

### Docker: Add support for Apple arm64 development (ongoing)

In order to do development for Sentry, we need to spin up various Docker containers.
Apple is moving away from Intel based chipset to arm64 chipsets (aka Apple Silicon).

This milestones track all work required to make sure we can still use these development services on Apple's arm64 architecture.

By: @armenzg (#29494, #29293, #29284, #29157, #29081, #29117, #29084, #28672, #28724)

### Connecting Dashboards and Discover (ongoing)

Open a Dashboard widget in Discover. Add a Discover Query to a Dashboard.

By: @edwardgou-sentry (#28699, #28827, #28745, #28637)

### Various fixes & improvements

- fix(tests) Remove import that wasn't caught in pr (#30018) by @markstory
- chore(tests) Remove old react-select test helpers (#29998) by @markstory
- ref(tests) Replace usage of predicate in MockApiClient (#29997) by @markstory
- feat(dashboards): Add dashboard widget resizing flag (#30000) by @narsaynorath
- feat(ci): Drop ubuntu from dev env CI (#29956) by @armenzg
- ref(native-stack-trace-v2): Add more adjusts (#30013) by @priscilawebdev
- fix(dev): Patch firefox_profile.py from Selenium package (#29887) by @armenzg
- feat(ui): Add metrics switch to performance page [INGEST-572] (#30011) by @matejminar
- ref(native-stack-trace-v2): Apply design feedback (#29989) by @priscilawebdev
- ref(js): Convert GlobalSelectionHeaderRow to a FC (#30004) by @evanpurkhiser
- meta(py): Upgrade python typing analysis script (#29961) by @mgaeta
- ref(ts): Make GlobalSelectionStore useLegacyStore compatible (#30002) by @evanpurkhiser
- security(issue-alerts): Validate the issue alert owner is a member of the organization (#29962) by @wedamija
- feat(ui): Storybook - Add theme switcher & noBorder option to <Sample /> (#29765) by @vuluongj20
- feat(notifications): Slack Digests (#29677) by @mgaeta
- feat(ui): Release Details Sidebar component update (#29842) by @mikellykels
- feat(release-comparison): Add Regressed tab to issue filter tabs (#27896) by @mikellykels
- adds hook and experiment (#29976) by @scefali
- feat(logo-upload): Update serializer to account for popularity (#29978) by @leeandher
- test(ui): Convert seenByList to RTL (#29983) by @scttcper
- test(ui): Convert collapsible component to RTL (#29982) by @scttcper
- feat(widget-library): Add Library Widgets to Dashboard (#29881) by @shruthilayaj
- feat(tests) Add request matchers to MockApiClient (#29910) by @markstory
- ref(tests) Move tests for MutedBox to RTL (#29967) by @markstory

_Plus 1127 more_

21.10.0
-------

### Frontend Deploys (ongoing)

PRs: #28878

### Python: Add support for Apple arm64 development (ongoing)

Apple started moving away from their Intel based chipset to arm64 chipsets (aka as Apple Silicon).
In order to do Sentry development on this new architecture we need to do various changes to Sentry's development environment. Some of these changes include using a different Python version (arm64 support was added on Python 3.8.10), upgrading Python packages and hosting some Python wheels that third-party maintainers are not yet releasing.

PRs: #28769, #28607

### Docker: Add support for Apple arm64 development (ongoing)

In order to do development for Sentry, we need to spin up various Docker containers.
Apple is moving away from Intel based chipset to arm64 chipsets (aka Apple Silicon).

This milestones track all work required to make sure we can still use these development services on Apple's arm64 architecture.

PRs: #29293, #29284, #29157, #29081, #29117, #29084, #28672, #28724

### Connecting Dashboards and Discover (ongoing)

Open a Dashboard widget in Discover. Add a Discover Query to a Dashboard.

PRs: #28699, #28827, #28745, #28637

### Various fixes & improvements

- feat(workflow): Enable issue-percent-filters flag by default (#29325)
- feat(post-process-forwarder) Allow different types of post process forwarders (#29225)
- ref(search): Enable search without waiting for search groups to load (#29336)
- adds experiment for trial label (#29305)
- fix(discover): Various snql discover fixes (#29219)
- chore(deletion) Drop aborted column (#29323)
- fix(snapshots): Fixes datetime comparison with str issue (#29349)
- fix(ui): Handle empty alert chart (#29348)
- feat(dev): Run dev env workflow when .pre-commit-config.yaml changes (#29331)
- ref(tests): Use screen for querying in RTL (#29312)
- fix(alerts): Fix logic that creates snapshots for crash rate alerts (#29320)
- ref(grouprelease):  Buffer GroupRelease.last_seen update per minute (#29328)
- ref(minichart): Add extra empty space on the top - [INGEST-495] (#29321)
- ref(js): Remove unused withProjects on incidentRules/triggers (#29335)
- test(js): Always use our exported act (#29340)
- ref(js): Rewrite Sidebar as a functional component (#29278)
- test(js): Refactor useLegacyStore test to use testing-library/react-hooks (#29338)
- fix(workflow): Filter team release counts by teams projects (#29341)
- feat(team-insights): Add Number of Releases section (#29101)
- Temporarily disable pyright pre-commit checks. (#29326)
- build(deps): bump nth-check from 2.0.0 to 2.0.1 (#29000)
- fix(growth): Select the correct project when showing sample transaction banner (#29324)
- fix(visibility): Unbound errors for visibility files (#29330)
- fix(js): Links should not receive router attributes (#29279)

_Plus 590 more_

21.9.0
------

- No documented changes.

21.8.0
------

- No documented changes.

21.7.0
------

- No documented changes.

21.6.3
------

- No documented changes.

21.6.2
------

- No documented changes.

21.7.1
------

### Breaking Change

If you are upgrading from a release prior to 10.0.0 you need to first upgrade to 21.6.1 and run migrations.
For more information [see the upgrade guide](https://develop.sentry.dev/self-hosted/#hard-stops).

21.6.1
------

- No documented changes.

21.6.0
------

### Deprecation Warning

There will be a future change to where the frontend bundle will be loaded asynchronously. This will be a breaking change that can affect custom plugins that access certain globals in the django template. Please see https://forum.sentry.io/t/breaking-frontend-changes-for-custom-plugins/14184 for more information.

21.5.1
------

- No documented changes.

21.5.0
------

- No documented changes.

21.4.1
------

- No documented changes.

21.4.0
------

- No documented changes.

21.3.1
------

- No documented changes.

21.3.0
------

- No documented changes.

21.2.0
------

- No documented changes.

21.1.0
------

- No documented changes.

20.12.1
-------

- No documented changes.

20.11.1
-------

- No documented changes.

20.11.0
-------

- No documented changes.

20.10.1
-------

- No documented changes.

20.10.0
-------

- No documented changes.

20.9.0
------

- No documented changes.

20.8.0
------

- No documented changes.

20.7.1
------

- No documented changes.

20.7.0
------

- No documented changes.

v20.6.0
-------

- Switched to CalVer

v10.0
-----

Please refer to our blog post: https://blog.sentry.io/2020/01/07/self-hosted-sentry-10-is-ready-to-serve-get-it-while-its-hot/

v9.1.2
------

- Bug fixes from 9.1.1 release.
- See https://github.com/getsentry/sentry/releases/tag/9.1.2 for a summary

v9.1.1
------

- Bug fixes from 9.1.0 release.

v9.1
----

The changelog for Sentry 9.1 is summarized. For full details, we recommend reviewing the
full set of SCM changes on GitHub.

First, an important preface:

FUTURE VERSIONS OF SENTRY WILL INTRODUCE BACKWARDS INCOMPATIBLE INFRASTRUCTURE

This is the last version in the 9.x series, and our next release will migrate many legacy technologies onto standardized versions our SaaS service uses. The most notable, known concerns are:

- Postgres will be the only supported SQL database
- Our new search infrastructure (codenamed Snuba) will become required (we'll provide a migration path)
- Various new infrastructure services will be required (such as Kafka)

This is required for Sentry to continue to support open source releases in a meaningful way, and ensures we have only a single, standard way of running the services.

Integrations
~~~~~~~~~~~~

We've added a new global integration concept to Sentry, which raises plugins to the organization level. Access to these integrations are controlled with the `org:integrations` scope, and are granted to any user with an Admin or higher role.

This release includes integrations for:

- Azure DevOps
- BitBucket
- GitHub
- GitHub Enterprise
- GitLab
- Jira
- Jira Server

There is additionally a Slack integration, though it requires a now-deprecated workspace token in order to use.

Note: a known issue exists where integrations are always shown as enabled, even when you haven't configured the appropriate server settings (such as OAuth keys).

Native Support
~~~~~~~~~~~~~~

Various improvements for native (compiled) runtimes is included in this release.

- Improved rendering for native stacktraces.
- Improved support for Apple crash reports.
- Added unreal engine 4 crash dump support.
- Added code identifier support for debug files.

Security
~~~~~~~~

- Added SAML2 SSO support.
- Member invitations will now automatically expire after 30 days.
- Fixed potential settings exposure if sentry was deployed in DEBUG mode.

Misc
~~~~

- Settings have been greatly improved and updated to allow non-admins read-only access in many areas.
- Added additional localization configuration for User Feedback dialogs.
- Added account session history under Account Settings -> Security -> Session History.
- Event data stored in Redis & RabbitMQ no longer uses pickle to encode data. All data is now encoded in JSON.
- Various improvements to CSP and other browser Reporting API support.
- Many features disabled via feature flags now indicate how to enable them in the UI.
- Improved suspect commit generation for Java projects.
- Repository access is now coupled to integrations access (`org:integrations`)
- Various improvements to exception fingerprinting.

v9.0
----

The changelog for Sentry 9 is summarized. For full details, we recommend reviewing the
full set of SCM changes on GitHub. There are far too many changes to list in Sentry 9,
but the major highlights are documented below.

There are also significant schema and data changes in this release, so plan for a huge amount
of updates and a measurable increase in utilization of your data stores.

Note: Major features which are undocumented here should be considered unstable, and are almost
certainly behind a feature switch which is intended to be disabled.

Dashboard
~~~~~~~~~

We've removed the project-manager-esque dashboard and brought back a team/card based selection as
as a new sidebar for quick access. We will continue to iterate on what projects mean in Sentry
going forward and this is simply a first step towards future changes.

Settings
~~~~~~~~

A new global settings UI has been introduced. This is an attempt to unify all settings and make
it easier to find the numerous configuration options throughout Sentry.

Environments
~~~~~~~~~~~~

Environments have been moved up in the hierarchy and are now a first class citizen. While
still early, this is intended to replace the need for having separate projects per environment.

To use environments you simply need to ensure you're configuring the ``environment`` parameter
in the Sentry SDK, and it should automatically propagate into Sentry proper.

Owners
~~~~~~

A new owners feature allows you to define per-project rules for declaring explicit ownership.
Much like GitHub's .gitowners, this helps Sentry understand who is responsible for a specific
issue, and more importantly lets you limit email alerts to only the relevant parties.

In addition to explicit owners, the release framework has expanded to support implicit owners
and suspect commits. This currently only works with GitHub.com hosted repositories, but will be
expanded to support other providers in future versions of Sentry.

Teams & Projects
~~~~~~~~~~~~~~~~

Projects can now be associated with many teams, and teams can be referenced in comments and
assignment as well as the new ownership features.

Both Team and Project names have been deprecated, and the short name as been promoted as the
canonical reference. Teams can be mentioned using #team-name.

Integrations
~~~~~~~~~~~~

The beginnings of the new integration framework (plugin v3) have landed, along with an initial
version of a new Slack integration.

The new integrations framework will likely change in upcoming versions of Sentry, and we dont
suggest building against it yet.

Some caveats:

- The Slack integration requires Slack workspace tokens.
- While there is some early work of other integrations in this release, they are not yet GA nor
  are they exposed.

API
~~~

Various portions of processing for the API will require additional dependencies and configuration
(such as symbolic).

- The 'secret key' for a DSN is no longer required and has been deprecated in SDKs.
- Added support for Minidumps generated by Breakpad and Crashpad.
- Added support for Cordova and Electron.
- A new standard 'security report' endpoint has been exposed, which supports HKPK, CSP,
  Expect-CT, and Expect-Staple reports.
- Improved reprocessing feature.
- Improved support for native Debug Symbols (Apple, Linux).
- The ingestion API is now JSON-schema based (though still fairly flexible).
- Added setup wizard for various SDKs (e.g. react-native).

Privacy Changes
~~~~~~~~~~~~~~~

As part of GDPR, the open source version of Sentry now changes the default policy for its beacon
(the service which tells sentry.io statistics about open source usage) to **not** send the system's
contact email address by default. You can still opt-in to this, which will allow us to contact you
in the event of a major security issue.

Misc
~~~~

- User Feedback will now send an email notification.
- Almost all major UI components are now driven by the client-side application.
- Avatars have been added for organizations.
- Various improvements to issue hashing, specifically for native (iOS) and javascript
  applications.
- Various improvements to Single Sign-On flows. You should update any external auth extensions
  you're using as part of this (sentry-auth-github, sentry-auth-google).
- Support for SAML via sentry-auth-saml2.
- Support for Google Cloud Storage as a storage backend.
- A new Assistant to help onboard users.
- Add count estimates to search results.
- Superuser has been locked down significantlly with idle timeouts and secondary sessions.
- 2FA can now be enforced for an organization.
- Various performance around event processing to make up for all the added load we're forcing on
  ya'll. =)

v8.22
-----

- BREAKING: Members will no longer be automatically granted membership to the
  default organization. You should use SSO or the invite flows.
- Add support for SAML2 authentication through identity providers that
  implement the ``SAML2AuthProvider``. See getsentry/sentry-auth-saml2.
- BREAKING: Group share urls have all been invalidated and must be regenerated.
- Added the ability for users to disable workflow notifications on a per-project basis.

Schema Changes
~~~~~~~~~~~~~~

- Added ``ProjectSymCacheFile`` model.
- Added index on ``TagValue(project_id, key, last_seen)``
- Add ``GroupShare`` model.

API Changes
~~~~~~~~~~~

- Added API endpoint to list members awaiting access

v8.21
-----

- Ignore querystrings when looking up release artifacts
- Add Visual Studio authentication provider for plugins.
- Add "team" parameter to the project details API.
- Added mailing list support (via ``List-Id`` header) to digest emails.

Schema Changes
~~~~~~~~~~~~~~

- Added ``IdentityProvider`` model.
- Added ``Identity`` model.
- Added ``UserIdentity`` model.
- Added ``ProjectTeam`` model


v8.20
-----
- Make BitBucket repositories enabled by default
- Add raw data toggle for Additional Data
- Improved function name resolving for JavaScript sourcemaps

- Add initial support for Redis Cluster.
- Support a list of hosts in the ``redis.clusters`` configuration along side
  the traditional dictionary style configuration.
- Better support for rendering rich JSON and URL encoded HTTP bodies by
  guessing the content type based on format heuristics.
- Better support for sanitizing of string HTTP bodies.

Schema Changes
~~~~~~~~~~~~~~

- Added index on ``ProjectPlatform(last_seen)`` column
- Added index on ``GroupCommitResolution.commit_id``
- Enable ``citext`` extension in Postgres.
- Dropped ``TagKey.project_id`` foreign key constraint
- Dropped ``TagValue.project_id`` foreign key constraint
- Dropped ``GroupTagKey.project_id`` foreign key constraint
- Dropped ``GroupTagKey.group_id`` foreign key constraint
- Dropped ``EventUser.project_id`` foreign key constraint
- Added ``Email`` model
- Change ``CommitFileChange.filename`` from varchar to text in PostgreSQL

v8.19
-----

- Hide project filter when there are no projects to list.
- Added lookup methods to constants to get a unique `integration_id` for a given
  event, and to get information (documention url, human readable name) from that id.

Schema Changes
~~~~~~~~~~~~~~

- Added ``Integration``, ``OrganizationIntegration``, and ``ProjectIntegration`` models
- Added ``Repository(integration_id)`` column

v8.18
-----

- Expanded resolution options to allow current and explicit versions.
- Added proguard support
- Removed support for global dsyms.
- Moved Queue admin page to React.
- Replaced usage of jQuery Flot library with internal graphs.
- Expanded ignore actions to include deltas and rates for both occurrences and
  users impacted.
- Add a new option (`auth.allow-registration`) for determining whether registration
  is allowed on an installation.
- Moved "create organization" into React.
- Expanded React Form components (Form, ApiForm).
- Moved "create team" into React.
- add Slack to supported auth backends in social auth (for plugins)
- Expanded resolution actions (on stream) to include current release and explicit
  release.

Schema Changes
~~~~~~~~~~~~~~

- Added Release.commit_count
- Added Release.last_commit_id
- Added Release.authors
- Added Release.total_deploys
- Added Release.last_deploy_id
- Added ``FeatureAdoption`` model
- Removed DSymBundle
- Removed DSymObject
- Removed DSymSDK
- Removed DSymSymbol
- Removed GlobalDSymFile
- Added GroupHash.state
- Drop index on ``ReleaseEnvironment(project_id)``
- Drop index on ``ReleaseCommit(project_id)``
- Drop unique constraint on ``ReleaseEnvironment(project_id, release_id, environment_id)``
- Added GroupResolution.type
- Added GroupResolution.actor_id
- Added Project.platform
- Added GroupSnooze.actor_id
- Added ScheduledJob
- Added GroupResolution.actor_id
- Added ``ScheduledJob`` model
- Added User.last_active

API Changes
~~~~~~~~~~~

- Project keys endpoint will include all available keys by default. Use
  ``status=active`` to retain the old behavior.

v8.17
-----

- Added @mentions to comments
- Initial (internal) analytics abstraction.
- Turned on reprocessing by default
- Added basics for Data Forwarding integrations.
- Changed the grouping and default `in_app` values for cocoa events.
- Removed global dsym support.
- Removed support for legacy apple report format.
- The threads interface now contributes to grouping if it contains a single thread.
- Added per-key (DSN) rate limits (``project:rate-limits`` feature).
- Added tsdb statistics for events per-key.
- Added ``sentry.deletions`` abstraction to improve bulk deletions.
- Added basic workspace for Visual Studio Code.
- Added hovercards for Issue IDs in activity entries.
- Added event count options to ignore.
- Added user frequency options to ignore.

Schema Changes
~~~~~~~~~~~~~~

- Dropped ``GroupTagValue.group_id`` foreign key constraint
- Dropped ``GroupTagValue.project_id`` foreign key constraint
- Added ``Deploy.notified`` column
- Added index on ``EventTag.date_added``
- Added unique index on ``Environment(organization_id, name)``
- Added unique index on ``ReleaseEnvironment(organization_id, release_id, environment_id)``
- Added ``EventUser.name`` column
- Added ``UserReport.event_user_id`` column

v8.16.1
-------

- Fixed issue in migration 0302 that prevented upgrading

v8.16
-----

- Added data migration to create UserEmail objects for users whose primary emails did not have them
- Time series data (used by graphs and other features) is now updated when groups are merged.
- Added distributions to the release system to better support mobile apps
- Update activity entries to reference issues by their short ID.
- Added user notifications settings for deploy emails.

Schema Changes
~~~~~~~~~~~~~~

- Added ``Distribution`` model
- Added ``ReleaseFile.dist`` column
- Added ``UserOption.organization`` column
- Added ``CommitAuthor.external_id`` column

API Changes
~~~~~~~~~~~

- Deprecate `dateStarted` in releases endpoints

v8.15
-----

- Added overview for a release to view a breakdown of files changes, commit authors, new issues, and issues resolved
- Refactor usage of ``sentry.app`` to use individual modules.
- Implemented ``--concurrency`` on ``sentry cleanup``
- Added support for the new symbol server system to support native SDKs better.
- Added deploy email
- Added OAuth2 support to the web API.
- Simplified management of secondary email addresses.
- Fixed an issue where changing primary email address would remove the pre-existing verified email.
- Disallow duplicating primary emails for users moving forward.
- Resolve issues when commits with ``Fixes SHORTID`` are included in releases
- Added support for associating debug symbols with iTunes applications and builds.
- Added the ability to claim unassigned issues when resolving them.

API Changes
~~~~~~~~~~~

- Added CommitFileChangeEndpoint
- Added IssuesResolvedInReleaseEndpoint
- Added ReleaseDeploysEndpoint
- Added OrganizationReleaseCommitsEndpoint
- Added EventFileCommittersEndpoint
- Added ReleaseDeploysEndpoint

Schema Changes
~~~~~~~~~~~~~~

- Added ``Deploy`` model
- Added ``ApiApplication`` model
- Added ``ApiAuthorization`` model
- Added ``ApiGrant`` model
- Removed ``ApiToken.key`` column
- Added ``ApiToken.application`` column
- Added ``ApiToken.refresh_token`` column
- Added ``ApiToken.expires_at`` column
- Added ``ApiToken.scope_list`` column
- Added ``ApiKey.scope_list`` column
- Added ``ReleaseHeadCommit`` model

Security
~~~~~~~~

- Added encryption to the following fields:
  - AuthIdentity.data
  - AuthProvider.config
  - Option.value
  - OrganizationOption.value
  - ProjectOption.value
  - UserOption.value

v8.14.1
-------

- Fixed issues related to migrations failing to finish for 8.14
- Fixed an issue where Release version names were erronously too restrictve.
- Fixed an issue where "New Issues" counts would have all been 0 for releases created in 8.14.

v8.14
-----

- Added new internal processing interface that supports multiple processing steps per stacktrace (for instance JavaScript + native)
- Add IE10 legacy browser filter
- Added data migration to merge legacy releases
- Added support for symbolizing inlined frames and added heuristics for fixing up native stacktraces.
- Removed instruction_offset as a frame attribute from stacktraces
- [BREAKING] Quotas must now instantiate RateLimited and NotRateLimited return values.
- [BREAKING] Redis quota implementations now return BasicRedisQuota instead of tuples.
- Commits using the ``Fixes SHORTID`` annotation will now be tracked appropriately.
- Release functionality is now detected at a project level to enable various features.
- Added basic encryption facilities (``sentry.utils.encryption``).
- Added support for "Fixes XXX, YYY" and "Fixes XXX YYY" notations.
- Added bulk "Resolve in Next Release" to stream actions.
- Various visual improvements to notifications, including the addition of
  transactions.
- Plugins can now add tasks that run in sentry as celery workers.
- Added the ability to verify TLS connections when fetching artifacts.
- Added data migration to merge environments across an organization
- Added ``timesSeen`` keyword to issue search.
- Added feature signals, such as first time release tracking is enabled.

API Changes
~~~~~~~~~~~

- Added OrganizationReleasesEndpoint.
- Added context type ``app`` for cocoa events.
- Added ``assignedTo`` param to ``/projects/{org}/{project}/issues/``.
- Split out filtered stats onto Inbound Data Filters page
- Added OrganizationReleasesEndpoint
- Added OrganizationReleaseFileEndpoint

Schema Changes
~~~~~~~~~~~~~~

- Added unique index on ``Release(organization_id, version)``
- Removed unique index on ``Release(project_id, version)``
- Added ``GroupCommitResolution`` model.
- Added ``Environment.organization_id`` column.
- Added ``EnvironmentProject`` model.
- Added ``Project.flags`` column.
- Added not null constraint to ``Environment.organization_id`` column.
- Removed not null constraint on ``Environment.project_id`` and ``ReleaseEnvironment.project_id`` columns

v8.13
-----

- Added individual filters for legacy browsers to improve customization of error filtering based on browser versions
- Support for setting a custom security header for javascript fetching.
- start using ReleaseProject and Release.organization instead of Release.project
- Project quotas are no longer available, and must now be configured via the organizational rate limits.
- Quotas implementation now requires a tuple of maximum rate and interval window.
- Added security emails for adding and removing MFA and password changes.
- Added the ability to download an apple compatible crash report for cocoa events.
- Add memory and storage information for apple devices
- The legacy API keys feature is now disabled by default.
- Show Images Loaded section for cocoa events with version number.
- Added registers to stacktrace for cocoa exceptions.
- Fixed bug where workflow notification subject may not include a custom email prefix.
- Added configurable subject templates for individual alert emails (`mail:subject_template` option).
- Added data migration to populate ReleaseProject.new_groups
- Moved organization settings to React.
- Added support for managing newsletter subscriptions with Sentry.io

Schema Changes
~~~~~~~~~~~~~~

- Added ``ReleaseProject.new_groups`` column.
- Moved organization settings to React.

Schema Changes
~~~~~~~~~~~~~~

- Added ``ReleaseProject.new_groups`` column.
- Added ``OrganizationAvatar`` model.

API Changes
~~~~~~~~~~~

- Added avatar and avatarType to ``/organizations/{org}/`` endpoint.
- Provide commit and author information associated with a given release
- Provide repository information for commits
- Added new internal processing interface that supports multiple processing steps per stacktrace (for instance JavaScript + native)

v8.12
-----

- Fix bug where some users would incorrectly not receive workflow notifications for projects they were subscribed to.
- restructured dSYM processing.  It now records errors in the symbolication process
  more accurately and will report system errors them to the internal logger.
- Added data migration to backfill legacy release data
- Added data migration to backfill legacy commit data
- Added data migration to backfill legacy release file and environment data
- Allow gziped/deflated JavaScript artifacts to be uploaded through the API.
- Shared issue view no longer shows SDK.
- Added ``activeSince`` to search (uses ``active_at``).
- Added ``firstSeen`` to search (uses ``first_seen``).
- Added ``lastSeen`` to search (uses ``last_seen``).
- Added ``firstRelease`` to search (uses ``first_release``).
- Fixed usage (and propagation) of ``Group.first_release``.
- The + and - datetime search helpers now work with ranges (e.g. ``<=``).
- Added the ability to download artifacts from releases.

SDKs
~~~~

- The `repos` interface has been added.

Schema Changes
~~~~~~~~~~~~~~
- Added ``Release.organization`` column.
- Added ``ReleaseProject`` model.
- Added ``ReleaseCommit.organization_id`` column.
- Added ``ReleaseFile.organization`` column.
- Added ``ReleaseEnvironment.organization_id`` column.

v8.11
-----

- Ignore a ``null`` ``Origin`` header for authentication.
- Added the ability to search for issues that you are subscribed to from the stream view.
- Added the ability to search issues by their last seen timestamp.
- Improved UI for password and API key fields used in integrations
- Fixed bug where API responses would include incorrect `isSubscribed` values for issues.
- Added support for switching to unsymbolicated tracebacks in cocoa.
- Invalidate user sessions when changing password and 2fa settings.
- Add configurable password validators to enforce password strength.
- Send email to specific email when adding a new email rather than sending to all unverified email addresses.
- Allow user to resend email verification to primary email address.
- Added additional detail to subscription help text when viewing a group.
- Add Asana to supported auth backends in social auth (for plugins)
- Cleaner install UI when creating a new project.
- Added support for recording symbols separately in frames independent of the function.
- Reduce noisy Postgres logs from inserting duplicate onboarding rows.
- Added device icons for Apple Watch and Apple TV
- Added export action to group tag details.
- Improved display of user tags.
- Added 'transaction' tag which automatically populates from explicit culprits.
- Added beginnings of repository management to UI (behind `organizations:repos` feature).

Schema Changes
~~~~~~~~~~~~~~

- Added ``User.session_nonce`` column.
- Added ``CommitFileChange`` model.
- Added ``Repository.url`` column.
- Added ``Repository.provider`` column.
- Added ``Repository.config`` column.
- Added ``Repository.external_id`` column.
- Added ``Repository.status`` column.

API Changes
~~~~~~~~~~~

- Added ``/organizations/{org}/config/repos/`` endpoint.
- Added ``/organizations/{org}/repos/{repo}/`` endpoint.

v8.10
-----

- New and improved UI.
- Removed previously deprecated ``sentry celery`` command.
- Replaced the ``events`` queue with ``events.{preprocess,process,save}_event``.
- Added Danger (danger/danger) for monitoring various PR requirements.
- Enabled organization weekly report emails for all organizations.
- Add S3 filestore backend.
- ``SENTRY_FILESTORE`` deprecated and replaced with ``filestore.backend``
- ``SENTRY_FILESTORE_OPTIONS`` deprecated and replaced with ``filestore.options``
- Add watchOS support for cocoa interface.
- Fix support for internationalized Origins and raven-js.
- SSO is now enforced to access data within any org that has it set as a requirement.
- Improved rendering of weekly report email on mobile devices.

API Changes
~~~~~~~~~~~

- Add ``/organizations/{org}/repos/`` endpoint.
- Add ``/organizations/{org}/repos/{repo}/commits/`` endpoint.
- Add ``/projects/{org}/{project}/releases/{version}/commits/`` endpoint.
- SSO restrictions are now applied across session-based API authentication.

Schema Changes
~~~~~~~~~~~~~~

- Added ``Repository`` model.
- Added ``Commit`` model.
- Added ``CommitAuthor`` model.
- Added ``ReleaseCommit`` model.
- Added index on ``GroupTagValue(project, key, value, last_seen)``.
- Dropped index on ``GroupTagValue(project, key, value)``.

v8.9
----

- Added support for Elixir.
- Improve performance for bulk deletions of Events and Groups.
- Fix rate limit logic for single organization mode.
- Added ``--no-repair`` flag for ``sentry upgrade`` for large installs.
- Fixed bug with merging counters yielding the wrong values.
- Require password confirmation when enabling/disabling 2fa.
- Collapse repeated frames in the stacktrace UI.
- Added weekly report emails behind feature flag.
- Rebrand Rules as Alerts / Alert Rules.
- Add frequency to Alerts.

Schema Changes
~~~~~~~~~~~~~~

- Added unique index on ``Authenticator(user_id, type)``

v8.8
----

- Added unique user frequency rule condition.
- Fixed a major performance regression from 8.7 on the ``GroupTagValue`` model.
- Various security fixes related to CSRF and XSS.
- Server side filtering of event ingest.

Schema Changes
~~~~~~~~~~~~~~

- Removed ``HelpPage`` model.
- Added ``OrganizationMember.token`` column.
- Removed ``OrganizationMember.counter`` column.

v8.7
----

- Removed "Replay Request" feature.
- Upgraded underlying redis library to resolve some networking issues.
- Added support for minified React exceptions.

Schema Changes
~~~~~~~~~~~~~~

- Remove index ``GroupTagValue(project_id)``.
- Added ``Rule.status`` column.
- Added ``GroupRelease`` model.
- Added ``Environment`` model.
- Added ``ReleaseEnvironment`` model.

v8.6
----

- The ``message`` attribute on Event/Group is now purely used for search storage.
- The ``sentry.interfaces.Message`` interface now contains a ``formatted`` attribute.
- ``SENTRY_MANAGED_USER_FIELDS`` now defaults to an empty list.
- Issues now render based on the type of data present, which are represented by
  the type and metadata attributes in API responses.
- Stacktrace rendering has been greatly simplified and unified across languages.
- Client's may now pass the 'contexts' attribute, which will eventually supercede 'extra'.
- Various named contexts are now automatically generated and summarized for Cocoa and JavaScript
  issues.
- Added JSON formatting for logs with ``system.logging-format``.
- Added a ``loglevel`` command line flag to most commands.
- Added two factor authentication support.
- Added support for setting IP address of an event automatically on event submission for all platforms.
- Added unsubscribe links to mails.
- Added email verification.
- Added ability to link/unlink Issues, support is dependent on plugins.
- Can now toggle between minified/original code in stacktraces where sourcemaps were applied.
- Can now upload release artifacts with tilde prefix (~) to omit protocol + host in URL lookups.

Schema Changes
~~~~~~~~~~~~~~

- Added ``User.is_password_expired`` column.
- Added ``User.last_password_change`` column.
- Added ``UserEmail`` model.
- Added unique index on ``GroupTagValue(group_id, key, value)``
- Remove unique index on ``GroupTagValue(project_id, group_id, key, value)``
- Added index on ``GroupTagValue(project_id, key, value)``
- Added ``GroupSubscription`` model.

v8.5.1
------

- Fixed issue with new Unsubscribe links in emails not working.
- Fixed bug with raven-js compatibility with IE8.
- Fixed bug handling IPv6 addresses.

v8.5
----

- Added option to upload a profile image as an alternative to Gravatar.
- Deprecated ``sentry celery`` subcommand in favor of ``sentry run {worker|cron}``.
- Breadcrumb interface now rendered in event UI.
- Project notification settings page now indicates if current user is subscribed to active project.
- User is now automatically redirected to login page if their session expires inside React client application.
- Added new auth tokens to deprecate the usage of the older API keys.

Schema Changes
~~~~~~~~~~~~~~

- Added ``ProjectPlatform`` model.
- Added index on``EventTag`` index.
- Added unique index on ``UserReport`` model.
- Added ``UserAvatar`` model.
- Added ``EventTag.group_id`` column.
- Added ``ApiToken`` model.
- Added ``Authenticator`` model.


v8.4.1
------

- Fixed issue in running 8.4 migrations on MySQL only.
- Fixed issue that caused an infinite loop in ``patch_context.py`` under a race condition.
- Silently ignore breadcrumb data coming from clients instead of showing an error in the UI.

v8.4
----

- Fixed bug that caused some email subjects to be generated without respecting the project subject prefix option.
- Organization's can now opt-in to early adopter features (via organization settings).
- User Feedback is now enabled by default.
- Deprecated ``sentry start`` in favor of new ``sentry run``.
- Access is no longer restricted by default to the domain matching ``system.url-prefix``. You must opt into this by setting ``ALLOWED_HOSTS`` explicitly.
- Replaced Gravatar mystery man with letter avatars
- Added 'Events Per Hour' graph to organization dashboard
- Moved organization activity stream to main column from sidebar

Schema Changes
~~~~~~~~~~~~~~

- Added ``DSymSymbol`` model.
- Added ``DSymSDK`` model.
- Added ``DSymObject`` model.
- Added ``DSymBundle`` model.

v8.3.3
------

- [SECURITY] Fixed a bug which allows API keys more permission than granted within the organization.

v8.3.2
------

- Fixed bug affecting only MySQL users, see `GH-3030 <https://github.com/getsentry/sentry/issues/3030>`_.

v8.3.1
------

- Fixed bug that, ironically, prevented saving a saved search.
- Fixed bug when merging groups and the counts are merged incorrectly.
- Fixed bug that caused the Installation Wizard to never go away if using a non-smtp email.backend setting.
- Fixed an ImproperlyConfigured issue from a cascading error.

v8.3.0
------

- Added initial support for per-project callsigns and short IDs.  This feature is not exposed to users yet.
- Improved static file delivery performance.
- Added CLI tool to monitor queue sizes. ``sentry queues --help``
- Moved email configuration into ``config.yml``.
- Added mailing list support (via ``List-Id`` header) for outbound email.
- URLs for issues that have been merged now redirect to the issue that absorbed the requested issue.
- Projects can now be bookmarked in the UI.
- Dashboard is now the default view for an organization.

Schema Changes
~~~~~~~~~~~~~~

- Added ``ProjectDSymFile`` model.
- Added ``Counter`` model.
- Added ``GlobalDSymFile`` model.
- Added ``Group.short_id`` column.
- Added ``sentry_increment_project_counter`` function for PostgreSQL.
- Added ``Project.forced_color`` column.
- Added ``GroupRedirect`` model.

v8.2.5
------

- [SECURITY] Fixed a bug which allows API keys more permission than granted within the organization.

v8.2.4
------

- [SECURITY] If being run in multi-organization mode, it was possible for a user to craft a URL which would allow them to view membership details of other users.

v8.2.3
------

- Fix compatibility with Redis 2.8.9.

v8.2.2
------

- [SECURITY] Fixed an issue where a superuser had the ability to inject data into audit logs through the admin UI.

v8.2.1
------

- Fix compatibility with setuptools 20.2

v8.2.0
------

- SENTRY_DISALLOWED_IPS is no longer configured by default. If you're exposing Sentry outside of your company you may wish to configure this.
- Do not require the documentation sync on repair to succeed.
- Added basic organization on-boarding.
- Project keys are no longer usable within the web API.
- Allow requiring data scrubbing security options as an organization wide setting.
- Added basic support for dsym symbol handling.  This feature might leave behind temporary files when used in this version.
- Added support for named Redis clusters for consistency in Redis connection management (GH-2693). This adds a ``redis.clusters`` section to ``config.yml`` (see documentation), and deprecates the ``SENTRY_REDIS_OPTIONS`` setting and per-backend configuration of Redis clusters.

Schema Changes
~~~~~~~~~~~~~~

- Added ``ProjectBookmark`` model.
- Added ``EventTag`` model.
- Added ``OrganizationOnboardingTask`` model.

v8.1.5
------

- [SECURITY] If being run in multi-organization mode, it was possible for a user to craft a URL which would allow them to view membership details of other users.

v8.1.4
------

- [SECURITY] Fixed an issue where a superuser had the ability to inject data into audit logs through the admin UI.

v8.1.3
------

- Fix compatibility with setuptools 20.2

v8.1.2
------

- [CRITICAL] Fix issue running ``sentry start`` with supervisord.
- Fix compatibility with older versions of djangorestframework.
- Updated member invitation emails.

v8.1.1
------

- Fix broken static files compiled from 8.1.0. :(

v8.1.0
------

- Default web server is now uWSGI (https://uwsgi-docs.readthedocs.io/en/latest/) to replace gunicorn.
- New "Saved Searches". See: http://blog.getsentry.com/2016/01/19/introducing-saved-searches.html

Schema Changes
~~~~~~~~~~~~~~
- Remove FK constraints from ``Event.group_id``, ``Event.project_id``, ``EventMapping.group_id``, and ``EventMapping.project_id``.
- Added ``SavedSearch.is_default`` column.
- Added new ``SavedSearchUserDefault`` model.

v8.0.6
------

- Fixed assignee dropdown not being clickable from touch devices.
- Don't ignore ``SENTRY_WEB_OPTIONS['workers']`` value if set.
- Fix Global Throughput dashboard in admin.
- Fix display for Release names when they include special characters.
- Added new ``sentry config generate-secret-key`` to help with regenerating a new SECRET_KEY value if needed.

v8.0.5
------

- [CRITICAL] Fixed another issue where performing a bulk merge could merge more than intended. We're pretty confident we got this all squared away now. :(
- Fixed a bug where Issue assignment emails weren't being delivered.

v8.0.4
------

- Fixed an issue where notification digests weren't sending on some systems.

v8.0.3
------

- [CRITICAL] Fixed an issue where performing a bulk merge would merge more than intended.
- Fixed saving the "Use Default Scrubbers" project setting
- Fix syncing documentation when behind an http proxy

v8.0.2
------

- Fix ``IntegrityError`` after merging groups.
- Be less noisy about ``Cannot digest timeline, timeline is not in the ready state.``
- Fix incorrect ``Install`` links.
- Fixed being able to select a Chinese locale.
- Multiple bulk deletion improvements and bug fixes.
- Clarify ``Forcing documentation sync`` error messaging.

v8.0.1
------

- Ignore ``blob:`` urls in hashing algorithms.
- Bump ``extra`` data size to 16k (previously 4k)
- Fixed some odd behavior where superusers appeared as members of a team when they weren't.
- By default, new superusers created through ``sentry createuser`` will be added as a member to a team, if there is only one team available.

v8.0.0
------

Version 8 of Sentry introduces a brand new frontend. Most of the application has been overhauled
and rewritten on top of React and our web API. Additionally many new features have been exposed
related to workflows (user assignment, snooze, resolution) and release tracking. This changelog
does not attempt to capture the six+ months of incremental features and improvements in this
release of Sentry.

A Note on MySQL
~~~~~~~~~~~~~~~

Due to numerous issues over the years and recent discoveries that nearly all schema migration was
broken in MySQL (due to some behavior in our migration tool), we've made the decision to no longer
support MySQL. It is possible to bring the schema up to date on a MySQL machine, but Sentry's
automated migrations will likely not work and require DBA assistance.

Postgres is now the only supported production database.

A Note on Workers
~~~~~~~~~~~~~~~~~

In the past it was supported to run Sentry's queue workers with the `-B` option to also spawn
a celery beat process within the worker.  This is no longer supported as it causes problems in
some queue setups (in particular if redis is being used).  Instead you should now spawn two
independent processes.  This is outlined in the installation documentation.

Changes to Quotas
~~~~~~~~~~~~~~~~~

Team and System based quotas are now longer available. A new organization-relative project quota replaces them
and can be configured via Rate Limits on the organization dashboard.

Notification Digests
~~~~~~~~~~~~~~~~~~~~

Email notifications will now automatically rollup if the rate of notifications exceeds a threshold. These can be
configured on a per project basis in Project Settings.

Configuration
~~~~~~~~~~~~~

An Install Wizard has been added to aid in configuring necessary first-run options. Notably your Admin Email,
and URL Prefix. The Installation Wizard will also help any future updates and aid when new options are introduced.

A new configuration backend is now utilized for several options. These options can now be
configured via the web UI.

- A new configuration file, `config.yml` has been introduced. This new file is generated during `sentry init`
  the first time, and expected to be pointed at a directory. `config.yml` is the home for new configuration options that will be moved from the existing python config file.

- ``SENTRY_URL_PREFIX`` has been deprecated, and moved to `system.url-prefix` inside of `config.yml` or it
  can be configured at runtime.

- ``INTERNAL_IPS``, if configured, will now restrict superuser access to only users with both ``is_superuser``
  and a matching IP.

CLI
~~~

The `sentry` CLI tooling has been rewritten to be faster and less confusing.

Static files
~~~~~~~~~~~~

Static files are now served with a far-futures Cache-Control header, and are versioned by default. If you were serving `/_static/` explicitly from your server config, you may need to update your rules or adjust the `STATIC_URL` setting accordingly.

General
~~~~~~~

- Source builds now require Node 0.12.x or newer.
- The ``public`` setting on projects has been removed
  - This also removes ``SENTRY_ALLOW_PUBLIC_PROJECTS``
- Clients which were only sending ``sentry_key`` and not using CORS will no
  longer be able to authenticate.
- All incoming events now log through ``sentry.api``, which will additionally
  capture far more events with improved console formatting.
- The 'sentry' user can no longer be removed.
- The Cassandra nodestore backend was broken, and this has been resolved.
- The ``has_perm`` plugin hook is no longer used.
- Do not unconditionally map sys.stdout to sys.stderr
- The HTTP interface's internal structure has greatly changed. Headers and Cookies are now lists. Body
  is now stored as a string.
- The internal metrics backend now supports both Datadog and a simple logging implementation (useful in DEBUG).
- Member roles can now view client keys (DSNs).
- Documentation for configuration wizards is now pulled from docs.getsentry.com as part
  of the ``upgrade`` and ``repair`` processes.
- The SSO flow for existing users has been greatly improved to avoid duplicate accounts.
- Deletions are delayed for one hour and can be cancelled by changing the status
  back to ``VISIBLE``.
- Membership permissions have been overhauled and have been flattened into a single tiered
  role. Additionally owners will no longer be automatically added to new teams.
- ``NotificationPlugin`` now requires ``is_configured`` to be declared.
- ``sentry.search`` should no longer be extended (``index`` and ``upgrade`` have been removed)

Client API
~~~~~~~~~~

- The ``culprit`` attribute will now automatically be filled when not present.
- The ``in_app`` attribute on frames will now be computed on event submission when not present.
- The ``ip_address`` value will always be stored on the user interface when possible.
- The user interface no longer accepts data missing one of the required identifiers.
- The ``fingerprint`` value is now stored in ``Event.data``.
- The ``environment`` attribute is now soft-accepted and tagged.

Schema Changes
~~~~~~~~~~~~~~

- Removed the ``Project.platform`` column.
- Removed the ``Project.organization`` column.
- Removed the ``AccessGroup`` table.
- Added ``EventUser`` table.
- Added ``user.{attribute}`` to search backends.
- Added ``Project.first_event`` column.
- Added ``Release.owner`` column.
- Added ``Organization.default_role`` column.
- Added ``OrganizationMember.role`` column.
- Added ``Broadcast.upstream_id`` column.
- Removed ``Broadcast.badge`` column.
- Added ``Broadcast.title`` column.
- Migrated blob data in ``File`` to ``FileBlob``.
- Removed ``File.storage`` column.
- Removed ``File.storage_options`` columns.
- Added ``OrganizationOption`` table.
- Added ``GroupSnooze`` table.
- Added ``GroupResolution`` table.
- Added ``GroupBookmark.date_added`` column.
- Removed ``User.last_name`` column.
- (App-only) Renamed ``User.first_name`` to ``User.name``.
- Removed ``Activity.event`` column.
- Removed ``Event.num_comments`` column.

v7.7.1
------

- Pin Kombu dependency due to incompatibility.

v7.7.0
------

- The behavior of ``create_or_update`` has changed. If you're using it please see the updated function.
- Added ``Group.first_release`` column.
- Added ``SavedSearch`` model for future features.
- Added ``Release.new_groups`` column.
- The explore feature is now deprecated and links have been hidden.
- Expanded various API endpoints for future usage.
- Initial prototype of embeddable crash reports. This adds the ``UserReport`` model.
- Added basic UI reporting for status checks.
- Added celery/beat alive check.
- Added celery app version check.
- Added queue overview to internal administration.
- Upped TSDB's storage of 10s to 60m of data.
- Added protocol version 7 to client spec.
  - Adds ``fingerprint`` attribute.
- The behavior of ``SENTRY_ENABLE_EXPLORE_USERS`` is now default and the setting has been removed.

v7.6.2
------

- Improved (fixed?) static bundling in various conditions.

v7.6.1
------

- [Security] An XSS vulnerability was addressed with low cardinality tags and the stream filter box:
  https://github.com/getsentry/sentry/commit/364b959811561de83f29893e105cc590224edbee

v7.6.0
------

This releases entirely removes Access Groups. If you're upgrading from an installation that had yet to migrate away from this system you should first upgrade to a previous version, run the migration wizard, and then continue the upgrade.

- The project-wide Alert system has been removed (to be re-implemented in the future).
- Access groups have been permanently removed.
- Added 'access_token' to data blacklist.
- The legacy (unused) search tables have been removed.
- Upgrades must now be applied manually via ``sentry upgrade`` or with ``sentry start --upgrade``.
  (Don't forget to use ``--noinput`` if you're doing this via automated tooling!)
- ``Event.checksum`` and ``Group.checksum`` have been removed.
- The ``cleanup`` task has been removed (the command is still available).
- Various optimizations to ``cleanup`` for Postgres users.
- Within single organization mode users will automatically be added to the default organization.
- Added ``Organization.merge_to()`` helper to assist with merging organizations.
  (i.e. in an on-premise install which wants to convert to a single organization)
- New ``import`` and ``export`` commands now exist for creating backups of critical metadata
  (i.e. api keys, projects, user settings)

v7.5.6
------

- Improved (fixed?) static bundling in various conditions.

v7.5.5
------

- [Security] An XSS vulnerability was addressed with low cardinality tags and the stream filter box:
  https://github.com/getsentry/sentry/commit/364b959811561de83f29893e105cc590224edbee

v7.5.4
------

- Yet another case where valid team membership was being excluded.

v7.5.3
------

- Fix another case where valid team membership was being excluded

v7.5.2
------

- Correctly support SENTRY_PROJECT.

v7.5.1
------

- Fix case where certain pages were not correctly including valid team membership
- Fix default user creation (regain automated signal)
- Fix sampling of internal metrics

v7.5.0
------

This release removes the ability to login or create accounts using a social auth backend.

If your install was based purely on social accounts you'll need to use the standard reset password flows to recover accounts.

Redis must be at least version 2.6.12.

- Interface.compute_hashes() now receives the platform of the event.
- Server-side data scrubbers were incorrectly filtering invalid interface aliases.
- The sensitive_fields option is now exposed in project settings.
- The default logger name is now an empty value.
- Celery has been upgraded to 3.1 and is now available at 'sentry.celery'.
- Facebook, Google, and Twitter identities are no longer available.
- Plugin's inheriting from TagPlugin are now based on v2 of the API.
- Metrics (counters) are now collected both in sentry.tsdb and an optionally configured statsd
  instance.
- Organizations can now toggle open membership which allows members to freely join/leave any team.
- ProjectKey.user has been removed.
- Organization API keys are now exposed in the UI.
- Team.owner has been removed.
- TeamMember has been removed.
- PendingTeamMember has been removed.
- Added OrganizationMember.counter.
- Added 'sentry.db.postgres' optimized Postgres backend.
- Added ReleaseTrackingPlugin and various release-focused endpoints.
- Dedicated configuration pages for Release Tracking and Issue Tracking integrations now exist.
- Several additions to the Release schema.
- Notification integrations are now present within project's notification settings.
- Fixed an issue with tag key deletion not following explicit constraints.

v7.4.3
------

- Corrected various issues involving sampled data. Things should now sample according to actual MATH.


v7.4.2
------

- Corrected invalid reference to SENTRY_ALLOW_REGISTRATION.


v7.4.1
------

- Correct an issue with AuthProvider's migrations on MySQL.


v7.4.0
------

- A new features subsystem was added, and many optional features are now run through it.
- The 'add_organization' permission is no longer used.
- The 'add_team' permission is no longer used.
- SENTRY_ALLOW_REGISTRATION is deprecated in favor of SENTRY_FEATURES['auth:register'].
- SOCIAL_AUTH_CREATE_USERS is deprecated in favor of SENTRY_FEATURES['social-auth:register'].
- SENTRY_SERVER_EMAIL is no longer used.
- Added first pass API at storing javascript artifacts via release APIs.
- Improved error reporting for JavaScript source/sourcemap errors.
- Improved configuration handling on sentry.cache.
- Added various release API endpoints.
- Added various organization API endpoints.
- Added various tag API endpoints.
- Sourcemaps will now always treat sourceRoot as a path.
- Changed many permissions to use new sentry.access abstractions which are now
  scoped based, shared with the API scopes.
- Initial first pass at the SSO subsystem.
- The Sentry internal client will now aggressively prevent recursive errors, but allow more
  internal errors to be recorded to itself.
- An XSS vulnerability with tag values not being escaped (on the group details page) has been resolved.


v7.3.2
------

- Fixed missing beacon task import.

v7.3.1
------

- Updated Gunicorn version and default configuration.
- Fixed periodic task for beacon.

v7.3.0
------

- The SENTRY_ADMIN_EMAIL setting now exists, and should be the technical contact for the install.
- Fixed an issue that would cause job fanout in deletions.
- Notifications are now sent when someone assigns you to an event.
- Release objects are now created automatically.
- Changed team-based API endpoints to use slugs.
- New API endpoints:
  - Help page list
  - Help page details
  - Group tag values
  - Project tag values
- Moved JavaScript sourcemap processing into language extension.
  - Sourcemap processing errors are now annotated into the frame.
- Refactored API to be scope-based permissions.
- Added backend support for organization API keys.
- Moved sentry_webhooks into builtins.
- Added reporting Beacon (see docs).

v7.2.0
------

- A py.test plugin now exists to make extension testing easier.
- A Mailgun webhook endpoint is now available for incoming email.
- Added security token for JS source expansion.
- Duct tape workaround for event navigation buttons repeating the same event.
- Origins now support custom protocols as well as relaxed support on other components.
- Minor optimizations for deletion tasks and endpoints.
- Minor optimizations for Redis buffer.
- Added the ability to enable/disable project keys.
- Added audit log entries for project keys.
- Added UI, API, and async task for deleting project tag keys.
- Various fixes/improvements to regression windows.
- Rules will no longer execute duplicate actions.
- EventFrequencyCondition will now fire a maximum of once every 30 minutes.

v7.1.4
------

- Fixed an issue with hourly rollups not expiring accurately in TSDB

If you've been running a 7.x series release for a while you may considering running a cleanup script to ensure erroneous values dont still exist in Redis:

  https://gist.github.com/dcramer/55a44904be883f8d03e1


v7.1.3
------

- Resolved an issue with migrations we created in 7.1.2.


v7.1.2
------

- Fix migrations to ensure org/teams arent created with empty slugs.


v7.1.1
------

- Suggest realip module over X-Forwarded-For


v7.1.0
------

Plugin v2
~~~~~~~~~

The beginnings of version 2 of the plugin interface have landed. This will expand over time but currently includes the following hooks:

- get_actions
- get_annotations
- get_event_preprocessors
- get_notifiers
- get_rules
- get_tags

Other Changes
~~~~~~~~~~~~~

- crossdomain.xml no longer supports projects-by-slug.
- A basic file storage abstraction is now available internally.
- The project group list API endpoint now has pagination.
- Several API endpoints have been added to public docs.
- X-Forwarded-For is now handled automatically (and we do not support non-proxy installs).
- Various tweaks to GroupMeta caching.
- The raven-python Sentry server-specific client code is now part of Sentry.
- Various improvements to tag rendering.
- Various improvements to bulk deletion strategies.
- Added NodeStore.multi_delete.


v7.0.0
------

Between version 6.4.x and 7.0 a significant number of changes have landed (approximately a years worth of commits). There are a large number of overall architecture changes, as well as various API compatibility changes. This document does not attempt to cover them all.

As many things have changed, it's strongly recommended that you regenerate your ``sentry.conf.py`` (using ``sentry init``) and merge in your custom settings.

Backwards Incompatible Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Django has been upgraded to 1.6
- The buffer API has been rewritten and the Redis buffer has had its performance greatly improved.
- The UDP server has been removed. Threaded/async models or a buffer proxy are the preferred replacement.
- The ``is_rate_limited`` plugin hook has been removed in favor of singular quota managers.
- The trends feature has been removed until it can be reimplemented in a more scalable way.
- Filters have been removed. Integrations should use the tagging infrastructure instead.
- ``NodeStore.generate_id()`` now returns a base64-encoded UUID.
- The API for interfaces has been rewritten.
- ``GroupMeta.objects.get_value`` no longer errors when a value is missing.
- ``sentry.plugins.sentry_sites`` has been removed.
- The Search API has been rewritten and now powers the entire stream.
- Removed Event.{logger,site,logger,level,culprit} references/columns. Legacy attributes for transitional behavior are available.
- Removed Project.owner.
- Removed Team.owner.
- ``is_new`` in ``Plugin.post_process`` will **only** be set if the event is brand new.
- Project-based URLs are changed to be organization scoped instead of team scoped.
- Static assets are no longer bundled as part of the repository and are instead compiled during the sdist/installation phases (as needed). See installation notes for further information.
- Graphs have been transitiong to ``sentry.tsdb`` (historical data is not preserved)
- Workers must now also run ``celerybeat``. This can be done either via passing -B to worker, or by running another process: ``sentry celerybeat``.
- Access Groups are now deprecated and will be removed in a version version.

Organizations
~~~~~~~~~~~~~

Organizations are the new top-level item of your Sentry install. All membership and team management has been moved into the new organization hub.

Generally for self-hosted installations you'll only have a single organization.

Migrations will happen automatically for this, and while these were able to applied cleanly and automatically on getsentry.com, we suggest considering snapshotting your database before running them. Additionally consider doing this at a period of the day where users generally wont be tweaking options to team membership.

TSDB
~~~~

A new time-series backend is now used (removing the legacy SQL-based graphing solutions). The only currently supported/bundled backend requires Redis. More information can be found in ``sentry.tsdb``.

Rules
~~~~~

A new system for basic controls around notifications (called Rules) has been added. These are per-project hooks for doing dynamic customization of "what happens when a new event is seen?".

Web API
~~~~~~~

The first offering a public API has landed. You'll find it with the new embedded docs (at /docs/).

Protocol Version 6
~~~~~~~~~~~~~~~~~~

Version 6 of the protocol has been introduced. The only change is the addition of the `release` attribute.

BIGINT
~~~~~~

All integer fields have been replaced with bigint's. This migration is *not* automated (due to it causing locking) and if you need it locally you will need to sort out the migration on your own, as well as set `SENTRY_USE_BIG_INTS = True` in your configuration.

Help Pages
~~~~~~~~~~

The beginnings of bundled documentation now exists. The defaults are generated from disk (see sentry/data/help_pages/).


v6.4.0
------

Some major backend changes are introduced in Sentry 6.4.0.

django.contrib.auth
~~~~~~~~~~~~~~~~~~~

The builtin Django authentication module is no more. The Group and Permission models are no
longer used, and the User model has been replaced with sentry.User.

Search
~~~~~~

Search has been abstracted from the simple search manager, and now lives within
``sentry.search``. Currently only the Django backend is supported, but some sample
code for Solr Cloud integration is also available.

Event Storage
~~~~~~~~~~~~~

A new application called ``nodestore`` now manages the event blob data. By default it
uses a Django-based backend (storing each node as a row in a table), however a Riak
backend is included and fully supported.

Additional Changes
~~~~~~~~~~~~~~~~~~

- Some initial support for time zones (user setting).
- You can now choose which tag annotations are applied to the event stream via Project Settings -> Tags.
- A new subsystem for handling email is available in ``sentry.utils.email``.
- You can now receive email notifications for notes.
- Charts now show tooltips describing the datapoint.
- JavaScript sourcemaps now support embedded sources.
- Stream annotations can now be customized to show any tags (not just number of users).
- Stacktrace frames now get truncated down to a maximum length of 50.

Protocol Version 5
~~~~~~~~~~~~~~~~~~

- sentry_version should be sent as '5'.
- The stacktrace interface now accepts a 'frames_omitted' tuple.

v6.3.0
------

- Most of the db utilities were refactored into ``sentry.db``.
- The user interface now accepts an ``ip_address`` attribute.
- User tracking will now use the ip_address attribute if available.
- ``time_spent`` is now expected to be sent as an integer in milliseconds.
- A new Notes feature is available for leaving comments on an event.

v6.2.0
------

- Added tracking to which users have seen which groups
- The stream now reflects if you've viewed an event since it was created or regressed.
- The group details page shows other users who have glanced at an event.
- Streams which have recorded user data will now show the number of unique users
  an event has happened to.
- Various stream polling fixes and improvements.

v6.1.1 (Security Release)
-------------------------

Sentry 6.1.1 is a security release which patches a remote code execution exploit.

This only affects servers hosted public clients (e.g. raven.js).

The following commit demonstrates the exploit, as well as the patch:

https://github.com/getsentry/sentry/commit/5793c6cac19aeb7d2e19f9a09f4421b771af4306

v6.1.0
------

- Added Rate Limit controls.

v6.0.0
------

Say hello to our new logomark! Version 6 of Sentry includes many changes within
the core designed to improve future compatibility for various platforms.

It also includes quite a number of incompatible changes, so it's recommended
that plugin authors read through the notes carefully, and run some simply
sanity checks. It also introduces version 4 of the protocol.

Incompatible Changes
~~~~~~~~~~~~~~~~~~~~

- Django has been upgraded to 1.5.
- django.contrib.auth.models.User has been replaced with sentry.models.User.
- sentry_servers no longer exists, and the behavior is now always present. If
  you had it manually listed in INSTALLED_APPS, simply remove it.
- Filters have been deprecated, and most functionality removed. See notes below.
- TrackedUser, AffectedByUser, and Group.users_seen have been removed in favor
  of reusing the tagging architecture for user tracking.
- Suspension of team members is no longer available. The feature was rarely
  used, and removing it greatly simplifies the auth logic in the API.
- **The mail plugin can no longer be disabled, and all mail-specific options
  have been removed.**
- Nearly all data within an event now has a fixed max size. See client
  developer documentation for details.
- Project keys are no longer created for individuals by default
- sentry.conf.settings has been removed
- LOG_LEVELS, DEFAULT_LOG_LEVEL, and DEFAULT_LOGGER_NAME are no longer configurable.
- DEFAULT_ALERT_PROJECT_THRESHOLD and DEFAULT_ALERT_GROUP_THRESHOLD are no longer
  configurable.
- SENTRY_EMAIL_SUBJECT_PREFIX and SENTRY_SERVER_EMAIL are no longer used, and default to
  the appropriate Django options.
- SENTRY_CACHE_BACKEND is no longer configurable.
- SENTRY_AUTH_PROVIDERS is now AUTH_PROVIDERS.
- Existing account recovery tokens are no longer valid.
- sentry.utils.router has been removed.

Protocol Version 4
~~~~~~~~~~~~~~~~~~

- sentry_version should be sent as '4'.
- Aliases are now recommended instead of full interface names.
- The exception interface now supports a bound stacktrace, and all events
  (in all protocols) which contain both an exception and a stacktrace will
  be rolled up. This should be sent as the ``stacktrace`` attribute.
- The exception interface now supports chained exceptions, and should
  be sent as a list of exception values. Check the updated documentation for
  ordering details.

Alerts
~~~~~~

A basic alert system has been added.

- Configured at the project level.
- Signaled via Plugin.on_alert.

Filters
~~~~~~~

The outdated filter system has been mostly removed. You should rely on
tagged data for filter generation.

If you were previously defining ``SENTRY_FILTERS`` you should remove it
from your settings as it will be entirely obsolete in a future version.

Other Changes
~~~~~~~~~~~~~

- Activity feeds will now attempt to filter out some duplicates.
- Tags now show on the event details page.
- Corrected some invalid behavior when storing tags with an individual event.
- Plugin.get_tag_values was added.
- A new team select dashboard exists if you are a member of multiple teams.
- A new Sentry logo mark has replaced the simple text header.
- C# has been added to experimental clients.

v5.4.0
------

SENTRY_PUBLIC now dictates whether or not a Sentry install should be considered
accessible by all users or not. This should better solve the use-case of companies
hosting a Sentry instance internally and not necessarily needing the permissions
that teams give you.

If enabled, all teams and all projects will be accessible all members (for any endpoint
which does not require a certain level of access). Project.is_public now dictates the
implied state of all events, but will not allow a non-member to browse events.

Additionally, this includes the following other items:

- [Important!] The URLS for social authentication have been moved.
- Improved rendering of data values in all interfaces.
- django-compressor was replaced with django-static-compiler.
- A better defined public view of events (which removes several items from being visible).
- Improved SourceMap discovery.
- Most events will no longer cause a hard error when validation fails. Instead we attempt
  to drop any non-required data so that at least a partial event is stored.
- MessageCountByMinute was renamed to GroupCountByMinute.
- MessageFilterValue was renamed to GroupTag.
- Syntax highlighting was disabled (pending performance solutions).
- Added Team.date_added column.
- Lots of various design changes.
- Trending SQL queries can now be disabled by setting
  ``SENTRY_USE_TRENDING = False``


v5.3.0
------

A brand new Sentry design has landed.

Some things of note:

- An improved dashboard.
- Improved activity feeds on aggregate details.
- Similar event navigation links on aggregate details.
- Redesigned team management flow.

Additionally:

- Aggregates now happen on (project, checksum), which means events that have different
  levels or culprits can now be grouped together.
- Sentry now requires authentication for all pages.
- SENTRY_PUBLIC behavior has changed to signify the default state of projects.
- Project slug's are now only unique within a team.

v5.2.2
------

- [New] The dashboard will now stream updates to the new and trending event components.

v5.2.1
------

- [Fix] Trends sorting options on the Stream page work correctly again.

v5.2.0
------

- [New] A new activity stream exists on event pages.
- [New] Syntax highlighting now exists on all context frames.
- [New] Support for JavaScript Sourcemaps now exists.
- [New] The server will now fetch remote source files for JavaScript events.
- [New] Sentry will now ask for your project's platform.
- [Fix] Resolved -> Regressed state change is now atomic.
- [Fix] ``cleanup`` now runs with lower resource overhead.
- [Fix] Cookies will now be coerced to dicts if possible.
- More (storage only still) work on user tracking.
- Several indexes were added to speed up various queries.
- Removed savepoint use in plugin hooks (99% of the time there were no queries).

Additional, the following client protocol changes are part of this release:

- Cookies should be not be sent by default.
- POST data should not be sent by default.
- Recommended values regexp for sanitizing credit cards was updated.
- ``colno`` was added to the Stacktrace spec.
- Timestamps that are more than one minute in the future are now discarded.
- (Undocumented) Client-side support now exists for GET + Referrer store requests.

We've also reduced the test suite time down to 25% of what it originally was (thanks, Alex!)

v5.1.3
------

A new user's affected-tracking mechanism is present (storage only). This will
become available in the UX in a future version, and relies on the existing HTTP
and User interface datas.

- [Fix] Correct a bug with search queries.
- [New] Group.users_seen will now track unique users when possible.
- [New] Team and project owners can now change ownership (non-superuser).
- [Fix] Counts are now formatted correctly when number of visible digits > 3.

v5.1.2
------

- [Fix] Option schema (key length = 64).
- [Fix] Template interface now renders correctly.
- [Fix] Update design on admin status pages.
- [New] iOS client documentation.
- Improved client documentation visuals.

v5.1.1
------

Several schema changes are made in this upgrade:

- A new model: LostPasswordHash
- Two new fields on ProjectKey: date_added and user_added
- A new field on Event: platform
- A new field on Group: platform

The following changes are also part of this release:

- [New] A new plugin, sentry-interface-types will now automatically tag the available interface
  types in an event.
- [New] The platform value sent with an event is now recorded in the database.
- [New] A recover account flow has been added.
- [New] There is now a sticky nav on the event details pages.
- [New] getting started page now shows if there's no data for a project.
- [New] An API key management page now exists (under project settings).
- [New] A tag overview page now exists for group details pages.
- [Fix] Line numbers now show correctly in collapsed source context.
- [Fix] Pending members now show correctly on the team management page (under project settings).
- [Fix] The time since value now updates correctly when events change.
- Various changes to how event details components render.
- Various fixes for breadcrumbs and header styles.
- Most plugins will no longer default to enabled on new projects.

v5.1.0
------

Minor point releases now signify major changes (5.1.0 is a major release). Bugfix and smaller
releases will continue as normal.

This release includes a very large set of changes from 5.0.0, including a new client protocol
and an overhaul to the frontend code (specifically the JavaScript).

If you're a contributor, take note that there is now a JavaScript test suite. You can run all
test suites with the ``make test`` command.

Protocol Version 3
~~~~~~~~~~~~~~~~~~

Sentry 5.1 removes support for version 1.0 of the protocol, and maintains a compatibility layer
for version 2.0.

Additionally, the following changes apply to the new protocol:

- sentry_version should be sent as '3' (not 3.0).
- Signed messages are no longer supported (signatures are not calculated).
  - sentry_signature is no longer used.
  - sentry_timestamp is no longer used.
- Clients must pass sentry_secret for server-side requests as part of the auth
  header. This check runs in the event that there is no Origin header sent.
  - version 2.0 supports validation of this, version 3 requires it.
- The ``project`` attribute in the JSON packet is no longer required.
- The ``platform`` attribute is now recommended.
- The ``tags`` attribute is now recommended.

Other Changes
~~~~~~~~~~~~~

- Aggregation 'Views' have been removed.
- All streaming components are now powered by Backbone.js.
- Frontend has been updated to Bootstrap 2.1.
- The event stream now includes sparklines representing the last 24 hours of data for each event.
- Trends have greatly improved.
- Grouping events that have identical stacktraces other than the function name (e.g. dynamically generated
  functions) is not possible.
- SiteFilter has been removed, as has the sites plugin.
- If frames are included in a stacktrace that have the attribute ``in_app: false``, they will be hidden by default in
  the details view.
- crossdomain.xml support is now available (see documentation).
- The search feature now uses buffers to better handle write concurrency.
- Early support for WSGI (should be functional) exists as ``sentry.wsgi``.
- Many fixes around cache usage.

v5.0.0
------

- Variable versions of Django are no longer supported. Django 1.4.x must now be used.
- Public projects are restricted to viewing without being authenticated.
- The default behavior of Sentry is to now use timezone-aware datetimes everywhere.
- Permissions have been refactored to be more precise.


v4.10.0
-------

- A new IssuePlugin base is available.
- Charts have been refactored to show 7 days worth of data.
- django.contrib.staticfiles is now supported.
- django.contrib.messages is now supported.

v4.9.0
------

Social authentication is now supported!

By configuring several options (documented in the getting started guide), you can allow users to signup and login
with accounts from several social services. Additionally users can associate their existing accounts (via a
new identities panel in their account settings) with any number of these services.

Currently, the following services are supported:

* GitHub
* Twitter
* Facebook
* Google

v4.8.0
------

Tags are now able to be created dynamically! See the documentation for more details on implementing it inside
of your client.

You can also configure which tags will show up as filters in the sidebar via your project's settings page. By
default all tags will show up.

v4.7.0
------

User options are now available to plugins. The builtin mail plugin also now takes advantage of them.

- sentry_mail will now use the alert_email option over your account email if specified.
- sentry_mail now allows you to choose which projects to receive alerts for.
- Numeric slugs will no longer return 404s.
- Corrected the repair command with the --owner argument.

v4.6.0
------

Improvements to the dashboard are trickling in, with this update including:

- Changing "Top Events" to "Trends" (if supported by your RDBMS)
- Time interval selections for both widgets

Plugins now have a new interface for registering themselves. Please see the developer documentation
for notes on how to use ``entry_points``.

Additionally:

- Signed messages are now deprecated. Save yourself some CPU cycles, and rely on SSL.
- A new plugin which tags user's email addresses.
- Several UI cleanups in various areas, such as improvements to the account dropdown and lists of projects/teams.
- Long awaited cleanup/fixes for applying the initial database migrations (sorry MySQL users).
- Initial support for arbitrary event tagging (coming soon to a client near you).

v4.5.0
------

Builtin plugins have been refactored to be more concise. This includes changes to the
servers, urls, and sites plugins. There is also a new builtin plugin::

  sentry.plugins.sentry_useragents

With these changes, it now makes it even easier to create a basic plugin that just handles extra
"tag"-like data. Take a look at one of the aforementioned plugins for an example.

Additionally:

- The mail plugin now sends additional Sentry-specific headers.
- Signatures are deprecated, and no longer required.
- Several fixes regarding CORS support.

v4.4.0
------

Two new columns were added to the ``Group`` model:

- ``resolved_at``: The datetime at which this event was marked as resolved.
- ``active_at``:  The datetime at which this event was marked as open.

The dashboard's "New Events" will now use the active_at date rather than the original
first seen date on an event.

v4.3.0
------

A new global dashboard now exists. The dashboard contains an event graph for all projects which
you have access to, as well as a list of the top events, and new events.

Additionally:

- API endpoints now properly send no-cache headers.
- Added a countdown to update buffers.

v4.2.0
------

Sentry now has support for buffering a majority of its counters via Redis. For more information, check
the buffer section of the configuration documentation.

- Nearly all race conditions are now handled correctly using distributed cache locks.

v4.1.0
------

Sentry now maintains full support for CORS requests from external hosts. This means that clients like
raven-js will now able to securely send messages to Sentry, without compromising their secret key.

In addition:

- Trusted domains were removed. These were not fully implemented.
- A new datepicker for selecting ranges of events.
- raven-javascript and raven-ruby are now officially supported clients.
- Added ``sentry repair``.

v4.0.0
------

Introducing Teams!

Projects are now assigned to a single team, and that team may consist of many members. Additionally
each team may own multiple projects. This makes it much easier to handle permissions across a single
organization that has many projects.

This update also includes initial changes to how filters work. ServerName Filter and SiteFilter are
no longer specified in the ``FILTERS`` setting, but instead are included automatically if you
load the respective ``sentry_servers`` and ``sentry_sites`` plugins.

Additional changes:

- Legacy data format is no longer supported (pre-Raven 1.x)
- API will now validate data before sending it into the queue, enabling better debugging for clients.

v3.8.0
------

Plugins are now configurable per-project. This makes it easy to install a plugin globally
and allow it to run only on selective projects.

v3.7.0
------

Several minor fixes, as well as a backwards incompatible change with filters.

All filters must now accept the project argument in the initializer. The signature is
now __init__(request, project).

v3.6.0
------

This version focuses on improving membership control. It includes the ability to revoke
project members access temporarily (by suspending them), as well as revoking users
(outside of Sentry) via the user.is_active flag.

Additionally, it brings the beginnings of an "invite user" flow, allowing you to
invite users who may or may not already have accounts in the system. We plan to improve
this flow in an upcoming release to allow invitees easy registration within the system
if they don't already have an account.

v3.5.0
------

Several improvements and additions have been made around the administration, including
performance improvements.

If you're utilizing the queue, the installation guide now recommends you switch off the
database backend, and move to something more efficient (such as Redis).

v3.4.0
------

Eventlet is no longer used as the default worker for gunicorn, and thus is no longer
installed by default. If you're using the udp worker, or ``send_fake_data`` you MUST
install eventlet yourself. The recommended worker class for gunicorn is now ``gevent``
as it corrects some issues with async queries in psycopg2.

v3.3.0
------

The queue has been changed from direct Kombu, to utilizing Celery entirely. If you were
already using the queue, the upgrade simply requires you to change "sentry start worker"
to "sentry celeryd".

v3.0.0
------

Version 3 of Sentry is centered around a restructure of the internal services and
the architecture for running those. It also includes improvements to the plugin architecture.

The upgrade process should be trivial, just be aware that if you were using --config before
you must change the way you pass it so that it's before the subcommand. For example
if you were doing ``sentry start --config...`` the command would now be changed to
``sentry --config... start``.

* Sentry no longer provides the ability to daemonize processes. This should now be
  done at the system level.
* All of Sentry's CLI is now handled through Logan (https://github.com/dcramer/logan),
  which simply pipes commands to Django's internal system utilizing custom configuration.
* Plugins now have a hook for managing some level of permissions (beyond the required defaults).
* The plugin interface (IPlugin) is now documented.
* It is now recommended that clients allow the Sentry server to compute checksums.

v2.9.0
------

* Plugins must now behave as singletons and be registered with a newly provided
  sentry.plugins.@register decorator.
* The Bugzilla and Redmine extensions are no longer part of Sentry core.
* Added a global overview of projects to the administration.

v2.8.0
------

* Added an Account Settings panel which allows users to change their name,
  email, and password.
* The default Sentry server now correctly wraps itself in its own middleware.
* Improved Real-time JavaScript.

v2.7.0
------

* Added first_seen and last_seen to all message filter values.
* Added a new "since" option to the dashboard with a default value of 3 days.

v2.6.0
------

* The built-in webserver is now powered by gunicorn.
* Cleaned up several admin pages and split them into sub-pages.

v2.5.0
------

* Corrected some queue behavior.
* Resolve Feed now only resolves items active within current filters.
* Handle unicode characters in POST body for replay request.
* Ensure client side requests run checks on HTTP_REFERER
* Adjust documentation for service settings.

v2.4.5
------

* Corrected indexing behavior to handle non strings.
* If queuing is enabled the indexer will now queue it's jobs.
* Moved group creation into a transaction.

v2.4.4
------

* Mail configuration value of send_to now correctly uses ',' as a separator
  (rather than ';').
* Changed rendering of sidebar widgets for all builtin extensions.
* Added an event details slot to the sidebar pane for individual events.

v2.4.3
------

* Correct some behavior with MySQL on the groups pane.
* Correct generated configuration behavior to use absolute
  paths for run and log folders.

v2.4.2
------

* Include DSN and member type on projects list grid.

v2.4.1
------

* Change appearance of resolve states.
* Adjust user management to link username (which is required) and not
  optional fields.

v2.4.0
------

* Added user management for admins.
* Resolved events should now appear differently.
* Default membership access is now configurable.

v2.3.2
------

* Maintaining *some* level of support for SQLite.

v2.3.1
------

* Correct rendering of sites, urls, and servers on details panes.

v2.3.0
------

* The polling API and JavaScript have been refactored.

  Events now stream in (they generally do not update if they already
  exist), and will maintain correct ordering in the feed.

  This API is available for most sort options, excluding trends.
* The builtin plugin's widgets have been fixed.
* Sampling rates are now configurable.
* Some minor design tweaks.

v2.2.5
------

* The \|date filter now forces things to UTC (it assumes local time).
* Event templates have been updated to resemble groups.

v2.2.4
------

* Improve error logging in API.
* Update Celery client code to use new send_encoded interfaces.
* Change JS datetimes to use UTC.
* Force clients which specify version 2.0 or newer to pass identification.
* Better default logging configuration.
* Adjust eventlet to monkey patch the world before any imports happen.
* Adjust default configuration to specify LOG and RUN directories.
* upgrade now correctly handles the delete ghosts argument.

v2.2.3
------

* Lower font size of counts on event list.
* Align actions to right side (vertical).
* Fix issue with long filters not transforming to selects.

v2.2.2
------

* Corrected event_id key to contain (project_id, event_id).
* Adjusted project form to default the user to the current user
  when accessed by an admin.
* Change sentry admin to be /manage/ to avoid any unintentional
  conflict with the Django admin.

v2.2.1
------

* Cleaned up several pages.

v2.2.0
------

* Sentry has a brand new design utilizing Bootstrap 2.
* Superusers can now create projects for users.

v2.1.3
------

* Ensure we truncate tokens to 128 characters for SearchDocument.
* Gracefully handle errors with indexing.
* Gracefully handle errors with post_process.
* Gracefully handle errors with regression_signal.
* Fixed priority sort option not activating.

v2.1.2
------

* Fixed an issue that was causing signals to not be registered.
* Made date the default sort order for aggregate stream.

v2.1.1
------

* Fixed an issue with indexing pre and post context on templates.

v2.1.0
------

* ``pytz`` is now a requirement.
* Changed default TIME_ZONE to be "UTC".
* Corrected some issues around how dates were localized.
* Initial implementation of full-text search.
* Fixed sending of regression_signal so it only happens if event
  has been marked as new.
* Changed ProjectMember.get_dsn() to use request.get_host() which
  corrects a bug in some webservers.

v2.0.2
------

* ``start`` no longer performs ``upgrade`` as its problematic.
* Initial queue usage (optional).
* Fix reference to bookmark_querystring.
* Added DSN to project member details page.

v2.0.1
------

* Skip logging of south in default server configuration as it proves to be problematic.
* Remove use of deprecated logging handler in default server configuration.
* Run ``upgrade`` as part of ``start``.
* Fix GroupBookmark related_name to be sentry namespaced.
* Correctly handle before_events() hook in polling responses.
* Removed integrated install documentation as it is no longer officially supported.
* Gracefully handle rendering errors with interfaces.
* Correct a bug with default email options.

v2.0
----

Sentry 2.0 is a major release which contains many new features as well as some large
rearchitecting of the codebase.

If you were previously extending Sentry, it would be wise
to test your extensions before upgrading.

* Added project scoping to all data in sentry.
* Added permissions to projects.
* The authorization header is now X-Sentry-Auth to avoid certain default behaviors such as
  mod_wsgi's "don't pass HTTP Authorization header".
* sentry.client has been removed
* The default key is now base64-encoded.
* sentry.interfaces are now used for coercing and rendering structured data.
* The store endpoint has a new API.
* The from_kwargs method has a new API.
* The ``class_name``, ``traceback``, an ``url`` fields have been removed.
* GroupedMessage was renamed to Group.
* Message was renamed to Event.
* Switched to Bootstrap framework.
* Added "Replay Request" action for events.
* Graphs can now be generated for Projects.
* There is now a trends sort option for aggregated events.
* Added ``sentry manage`` command.
* Sentry now has its own isolated queues (using Kombu).

v1.13.5
-------

* Level filters are now precise (they no longer show their level + messages from higher levels).

v1.13.4
-------

* Updated message details page to resemble look and feel of group details.

v1.13.3
-------

* Added back in the "raw traceback" view.

v1.13.2
-------

* Counts will now render differently with large values (e.g. 13000 will now be 13k)

v1.13.1
-------

* Search by message_id will now display a list of results if there are multiple matches.

v1.13.0
-------

* Deprecated the Sentry client, and added Raven to the as the default builtin.
* Removed Highstock and replaced it with an awesome OPEN SOURCE alternative, jQuery Flot.
* Default Sentry server options should now work out of the box.
* Packaged Google Web Font as part of Sentry.

v1.12.2
-------

* Fixed infinite loop.

v1.12.1
-------

* Stabilize migration schema (solves problem with index creation fail introduced in 1.12.0).

v1.12.0
-------

* Adjusted message_id to include the checksum to avoid situations were the message_id
  that was generated did not exist due to sampling.

v1.11.4
-------

* Several design improvements for group/message details panes.

v1.11.3
-------

* Fixed a bug that was causing exception summary to not show.

v1.11.2
-------

* Cleaned up message and group details pages (adding back some missing information).
* Cleaned up some design around odd margins/padding.

v1.11.1
-------

* Fixed a bug that would cause the admin (and potentially other modules) to get loaded multiple times.

v1.11.0
-------

* Added license headers.
* Removed ``sentry.helpers`` and ``sentry.routers``.
* Global module versions are now cached to avoid continuous path walking and
  import overhead.

v1.10.1
-------

* Fixed an issue that was causing servers to show logger names.

v1.10.0
-------

* You can now pass ``extra={'stack': True}`` to logging methods to capture
  the current frames and their locals.
* Code refactoring in various places related to stack extraction.
* Denormalized graph data in MessageCountByMinute (stores at 5m intervals).
* Denormalized filter counts into MessageFilterValue
* Added message sampling (adapted from Yuri Baburov's patch).
* Added SENTRY_MAIL_LEVEL setting.
* Added SENTRY_MAIL_INCLUDE_LOGGERS setting.
* Added SENTRY_MAIL_EXCLUDE_LOGGERS setting.
* Added the ``level`` argument to the cleanup command.
* The thrashed key is now set correctly in request.sentry.
* Added user information to all messages that have ``request``.
* Changed the hashing function for messages that include
  stacktraces to ignore the ``message`` and line numbers.
* Much improved test coverage.

v1.9.0
------

* Load the Frequency chart asynchronously.
* Frequency chart no longer shows for SQLite.
* Switch graphing library to Highstock from Highcharts.

v1.8.10
-------

* Ensure dictionary keys are coerced to strings.
* Fixed path to missing_permissions.html.

v1.8.9
------

* Safely handle unpickling objects that may not have been stored in a
  valid format.

v1.8.8
------

* Changed ``sentry cleanup`` to use a range query.

v1.8.7
------

* Added "Clear Feed" option.
* Version information will be read from pkg_resources if possible.
* Cleared up documentation on configuration settings..
* Performance improvements to ``Client.send()``.
* Added default 404/500 pages.
* Added support for Django's LOGIN_URL setting.
* Fixed a memory leak in the client (thanks to Ben Bangert).

v1.8.6.2
--------

* Reverted change which required distribute.
* Cleaned up configuration defaults.

v1.8.6.1
--------

* Include distribute_setup.py in the MANIFEST to ship it in sdists.

v1.8.6
------

* Corrected an issue which was causing certain settings (like WEB_HOST) to
  not take affect in custom configuration files.
* The Sentry server will now pull in default server settings, as well as
  ~/.sentry/sentry.conf.py if --config is not passed to it.

v1.8.5.1
--------

* Fixed a bug which caused thrashing prevention to not function correctly.
* Corrected an error in transform()'s recursion safety.
* Changed packaging to use Distribute.

v1.8.5
------

* Pulled test suite out of the Sentry namespace to avoid conflicts in projects.

v1.8.4.2
--------

* Added missing invalid_message_id template.

v1.8.4.1
--------

* Fixed an error that was causing LOG_LEVELS to not display correctly.

v1.8.4
------

* The Sentry base client will now pass along the timestamp from when the
  message was generated.

v1.8.3.1
--------

* Fixed a case where the client may hit a transaction aborted error when
  transforming variables.

v1.8.3
------

* Added several settings which were Django specific so that they can be
  configured isolated to the Sentry instance.
* Graceful failover for when a cache backend isnt working properly and
  throttling is enabled.
* Better rendering of non-dict variables when passed within extra data.
* Graceful failover for searching on message_id's that aren't found.

v1.8.0
------

* Refactored Sentry server to run standalone (sentry --help).

v1.7.5
------

* Implemented new client/server storage API and signing methods.
* Fixed a bug where accessing __sentry__ would sometimes cause errors on
  certain code paths.

v1.7.4
------

* Fixed a bug with potential recursion issues.
* Fixed a bug with the storage API and unicode keys.

v1.7.3
------

* Storage API has better responses when data fails to decode, or
  you send a bad request.
* Documentation improvements for JSON storage API.

v1.7.2
------

* All strings, lists, tuples, and sets are now shortened before sending
  to the server. Iterable data structures are truncated to the first
  50 items, and strings are truncated to the first 200 characters.

  Both shorteners have configurable values in the settings.

v1.7.1
------

* Fixed a bug that slipped through with blocktrans usage.

v1.7.0
------

* Added ``score`` to ``GroupedMessage`` (schema change).
* Added ``MessageIndex`` (schema change).
* Added Async client (thanks to Yuri Baburov).
* Added support for raw_post_data (thanks to Matthew Schinckel).
* django-paging and django-indexer no longer need to be in INSTALLED_APPS.
* Added an index for GroupedMessages.times_seen.
* The ``score`` column will update atomically in PostgreSQL and MySQL.
* Added the frequency sort option.
* Better internationalization support.
* Fixed a bug with Oracle's date truncation support (changed to hh24).
* Respect TIME_ZONE by using auto_now_* on DateTimeField's.
* Tests required Haystack and Celery are now skipped if module is not found.

v1.6.10
-------

* Added JSON support to storage API.
* Changed default client to use JSON format.

v1.6.9.1
--------

* Fixed an issue with encoding to UTF-8 for Haystack.

v1.6.9
------

* Added URLs to default search parameters.
* Fixed a bug to ensure template information is only added if its the correct loader

v1.6.8.1
--------

* Search will now show when unauthenticated (e.g. when SENTRY_PUBLIC is enabled)

v1.6.8
------

* Search no longer allows filters.
* Search no longer allows arbitrary queries without Haystack.
* Added logger, level, site, server, and url to search index.
* Haystack has been updated for further flexibility.
* SearchFilter is now unused (you should update your configs).

v1.6.7
------

* Moved static media into /static/.
* Added serve_static view to handle static media solely within Sentry.
* Added SENTRY_STATIC_URL_PREFIX setting.

v1.6.6
------

* setup.py install will no longer install example_project.
* Fixed an issue where __sentry__ would be called even if it wasn't a callable.
* Fixed an issue where transactions would attempt a rollback when not managed while creating
  the sort index.

v1.8.8
------

* Set a last_message_id so when thrashing is hit there is still a point of reference for tracing.
* Check correct permissions for Sentry.

v1.6.4
------

* Fixed a memory leak due to TextNode's being created from leading whitespace in realtime packets.

v1.6.3
------

* Fixed a critical bug in the Sentry JS namespace preventing it from loading.

v1.6.2
------

* LogHandler will attempt to pick up the request automatically using SentryLogMiddleware.
* Updated AJAX CSRF support for Django 1.2.5.
* request.sentry is now set in any event which has request as part of the parameters.

v1.6.0
------

* Added message references (uuid's) as message_id in Message
* Fixed css compatibility issues with TextWidget
* SearchFilter now allows searching by message reference id
* Added Sentry404CatchMiddleware
* Added SentryResponseErrorIdMiddleware
* The `request` argument can now be passed into any ``create_from_`` method.

(History beyond 1.6.0 is not present)
