// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`projectAlertRules renders 1`] = `
<ProjectAlertRules
  params={
    Object {
      "orgId": "org1",
      "projectId": "project1",
    }
  }
  routes={Array []}
>
  <div>
    <SettingsPageHeading
      action={
        <Button
          disabled={false}
          icon="icon-circle-add"
          priority="primary"
          size="small"
          to="new/"
        >
          New Alert Rule
        </Button>
      }
      tabs={
        <ul
          className="nav nav-tabs"
          style={
            Object {
              "borderBottom": "1px solid #ddd",
            }
          }
        >
          <ListLink
            activeClassName="active"
            index={true}
            to="alerts/"
          >
            Settings
          </ListLink>
          <ListLink
            activeClassName="active"
            index={false}
            to=""
          >
            Rules
          </ListLink>
        </ul>
      }
      title="Alerts"
    >
      <Wrapper
        tabs={
          <ul
            className="nav nav-tabs"
            style={
              Object {
                "borderBottom": "1px solid #ddd",
              }
            }
          >
            <ListLink
              activeClassName="active"
              index={true}
              to="alerts/"
            >
              Settings
            </ListLink>
            <ListLink
              activeClassName="active"
              index={false}
              to=""
            >
              Rules
            </ListLink>
          </ul>
        }
      >
        <div
          className="css-foidy-Wrapper css-17jmgia0"
        >
          <Flex
            align="center"
          >
            <Base
              align="center"
              className="css-5ipae5"
            >
              <div
                className="css-5ipae5"
                is={null}
              >
                <Title>
                  <div
                    className="css-zmdcxu-Title css-17jmgia1"
                  >
                    Alerts
                  </div>
                </Title>
                <div>
                  <Button
                    disabled={false}
                    icon="icon-circle-add"
                    priority="primary"
                    size="small"
                    to="new/"
                  >
                    <Link
                      className="button button-primary button-sm"
                      disabled={false}
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      role="button"
                      style={Object {}}
                      to="new/"
                    >
                      <a
                        className="button button-primary button-sm"
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        style={Object {}}
                      >
                        <Flex
                          align="center"
                          className="button-label"
                        >
                          <Base
                            align="center"
                            className="button-label css-5ipae5"
                          >
                            <div
                              className="button-label css-5ipae5"
                              is={null}
                            >
                              <Icon
                                size="small"
                              >
                                <Base
                                  className="css-11bwulm-Icon css-geyqay0"
                                  size="small"
                                >
                                  <div
                                    className="css-11bwulm-Icon css-geyqay0"
                                    is={null}
                                    size="small"
                                  >
                                    <StyledInlineSvg
                                      size="12px"
                                      src="icon-circle-add"
                                    >
                                      <InlineSvg
                                        className="css-1ov3rcq-StyledInlineSvg css-geyqay1"
                                        size="12px"
                                        src="icon-circle-add"
                                      >
                                        <StyledSvg
                                          className="css-1ov3rcq-StyledInlineSvg css-geyqay1"
                                          height="12px"
                                          viewBox={Object {}}
                                          width="12px"
                                        >
                                          <svg
                                            className="css-geyqay1 css-1rlza0i-StyledSvg css-adkcw30"
                                            height="12px"
                                            viewBox={Object {}}
                                            width="12px"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </StyledSvg>
                                      </InlineSvg>
                                    </StyledInlineSvg>
                                  </div>
                                </Base>
                              </Icon>
                              New Alert Rule
                            </div>
                          </Base>
                        </Flex>
                      </a>
                    </Link>
                  </Button>
                </div>
              </div>
            </Base>
          </Flex>
          <div>
            <ul
              className="nav nav-tabs"
              style={
                Object {
                  "borderBottom": "1px solid #ddd",
                }
              }
            >
              <ListLink
                activeClassName="active"
                index={true}
                to="alerts/"
              >
                <li
                  className=""
                >
                  <Link
                    onlyActiveOnIndex={true}
                    style={Object {}}
                    to="alerts/"
                  >
                    <a
                      onClick={[Function]}
                      style={Object {}}
                    >
                      Settings
                    </a>
                  </Link>
                </li>
              </ListLink>
              <ListLink
                activeClassName="active"
                index={false}
                to=""
              >
                <li
                  className=""
                >
                  <Link
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to=""
                  >
                    <a
                      style={Object {}}
                    >
                      Rules
                    </a>
                  </Link>
                </li>
              </ListLink>
            </ul>
          </div>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <div
      className="rules-list"
    >
      <RuleRow
        data={
          Object {
            "actions": Array [
              Object {
                "id": "sentry.rules.actions.notify1",
                "name": "Send a notification to all services",
              },
            ],
            "conditions": Array [
              Object {
                "id": "sentry.rules.conditions.1",
                "name": "An alert is first seen",
              },
            ],
            "environment": "staging",
            "id": "1",
            "name": "My alert rule",
          }
        }
        key="1"
        onDelete={[Function]}
        orgId="org1"
        params={
          Object {
            "orgId": "org1",
            "projectId": "project1",
          }
        }
        projectId="project1"
        routes={Array []}
      >
        <Panel>
          <StyledPanel>
            <div
              className="css-wfa8ap-StyledPanel css-5bw71w0"
            >
              <PanelHeader
                align="center"
                className="css-1lx593h"
                justify="space-between"
              >
                <StyledPanelHeader
                  align="center"
                  className="css-1lx593h"
                  justify="space-between"
                >
                  <Component
                    align="center"
                    className="css-too9c5-StyledPanelHeader css-zott9u0"
                    justify="space-between"
                  >
                    <Flex
                      align="center"
                      className="css-too9c5-StyledPanelHeader css-zott9u0"
                      justify="space-between"
                    >
                      <Base
                        align="center"
                        className="css-zott9u0 css-1ij5e33"
                        justify="space-between"
                      >
                        <div
                          className="css-zott9u0 css-1ij5e33"
                          is={null}
                        >
                          <TextColorLink
                            to="1/"
                          >
                            <Link
                              className="css-1763h46-TextColorLink css-trpu9x0"
                              onlyActiveOnIndex={false}
                              style={Object {}}
                              to="1/"
                            >
                              <a
                                className="css-1763h46-TextColorLink css-trpu9x0"
                                onClick={[Function]}
                                style={Object {}}
                              >
                                My alert rule
                                 - 
                                All Environments
                              </a>
                            </Link>
                          </TextColorLink>
                          <div>
                            <Button
                              disabled={false}
                              size="small"
                              style={
                                Object {
                                  "marginRight": 5,
                                }
                              }
                              to="1/"
                            >
                              <Link
                                className="button button-default button-sm"
                                disabled={false}
                                onClick={[Function]}
                                onlyActiveOnIndex={false}
                                role="button"
                                style={
                                  Object {
                                    "marginRight": 5,
                                  }
                                }
                                to="1/"
                              >
                                <a
                                  className="button button-default button-sm"
                                  disabled={false}
                                  onClick={[Function]}
                                  role="button"
                                  style={
                                    Object {
                                      "marginRight": 5,
                                    }
                                  }
                                >
                                  <Flex
                                    align="center"
                                    className="button-label"
                                  >
                                    <Base
                                      align="center"
                                      className="button-label css-5ipae5"
                                    >
                                      <div
                                        className="button-label css-5ipae5"
                                        is={null}
                                      >
                                        Edit Rule
                                      </div>
                                    </Base>
                                  </Flex>
                                </a>
                              </Link>
                            </Button>
                            <Confirm
                              cancelText="Cancel"
                              confirmText="Confirm"
                              message="Are you sure you want to remove this rule?"
                              onConfirm={[Function]}
                              priority="primary"
                            >
                              <Button
                                disabled={false}
                                onClick={[Function]}
                                size="small"
                              >
                                <button
                                  className="button button-default button-sm"
                                  disabled={false}
                                  onClick={[Function]}
                                  role="button"
                                >
                                  <Flex
                                    align="center"
                                    className="button-label"
                                  >
                                    <Base
                                      align="center"
                                      className="button-label css-5ipae5"
                                    >
                                      <div
                                        className="button-label css-5ipae5"
                                        is={null}
                                      >
                                        <span
                                          className="icon-trash"
                                        />
                                      </div>
                                    </Base>
                                  </Flex>
                                </button>
                              </Button>
                              <Modal
                                animation={false}
                                autoFocus={true}
                                backdrop={true}
                                bsClass="modal"
                                dialogComponentClass={[Function]}
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                              >
                                <Modal
                                  autoFocus={true}
                                  backdrop={true}
                                  backdropClassName="modal-backdrop"
                                  containerClassName="modal-open"
                                  enforceFocus={true}
                                  keyboard={true}
                                  manager={
                                    ModalManager {
                                      "add": [Function],
                                      "containers": Array [],
                                      "data": Array [],
                                      "handleContainerOverflow": true,
                                      "hideSiblingNodes": true,
                                      "isTopModal": [Function],
                                      "modals": Array [],
                                      "remove": [Function],
                                    }
                                  }
                                  onEntering={[Function]}
                                  onExited={[Function]}
                                  onHide={[Function]}
                                  renderBackdrop={[Function]}
                                  restoreFocus={true}
                                  show={false}
                                />
                              </Modal>
                            </Confirm>
                          </div>
                        </div>
                      </Base>
                    </Flex>
                  </Component>
                </StyledPanelHeader>
              </PanelHeader>
              <PanelBody
                direction="column"
                disablePadding={true}
                flex={false}
              >
                <div
                  className=""
                >
                  <RuleDescriptionRow>
                    <div
                      className="css-16pvk6d-RuleDescriptionRow css-trpu9x1"
                    >
                      <RuleDescriptionColumn>
                        <div
                          className="css-ta36pl-RuleDescriptionColumn css-trpu9x2"
                        >
                          <Condition>
                            <div
                              className="css-1d9hhun-Condition css-trpu9x3"
                            >
                              <h6>
                                When 
                                <strong />
                                 of these conditions are met:
                              </h6>
                              <table
                                className="conditions-list table"
                              >
                                <tbody>
                                  <tr
                                    key="0"
                                  >
                                    <td>
                                      An alert is first seen
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>
                          </Condition>
                        </div>
                      </RuleDescriptionColumn>
                      <RuleDescriptionColumn>
                        <div
                          className="css-ta36pl-RuleDescriptionColumn css-trpu9x2"
                        >
                          <Condition>
                            <div
                              className="css-1d9hhun-Condition css-trpu9x3"
                            >
                              <h6>
                                Take these actions at most
                                 
                                <strong>
                                  once every 
                                  <Duration
                                    seconds={NaN}
                                  >
                                    <span>
                                      NaN ms
                                    </span>
                                  </Duration>
                                </strong>
                                 
                                for an issue:
                              </h6>
                              <table
                                className="actions-list table"
                              >
                                <tbody>
                                  <tr
                                    key="0"
                                  >
                                    <td>
                                      Send a notification to all services
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>
                          </Condition>
                        </div>
                      </RuleDescriptionColumn>
                    </div>
                  </RuleDescriptionRow>
                </div>
              </PanelBody>
            </div>
          </StyledPanel>
        </Panel>
      </RuleRow>
    </div>
  </div>
</ProjectAlertRules>
`;
