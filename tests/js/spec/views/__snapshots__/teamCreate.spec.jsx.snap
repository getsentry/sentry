// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TeamCreate render() renders correctly 1`] = `
<TeamCreate
  params={
    Object {
      "orgId": "org",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Create Team - Sentry"
  >
    <DocumentTitle
      title="Create Team - Sentry"
    >
      <NarrowLayout>
        <div
          className="app"
        >
          <div
            className="pattern-bg"
          />
          <div
            className="container"
            style={
              Object {
                "maxWidth": undefined,
              }
            }
          >
            <div
              className="box box-modal"
            >
              <div
                className="box-header"
              >
                <a
                  href="/"
                >
                  <IconSentry
                    size="lg"
                  >
                    <ForwardRef(SvgIcon)
                      size="lg"
                    >
                      <svg
                        fill="currentColor"
                        height="24px"
                        viewBox="0 0 16 16"
                        width="24px"
                      >
                        <path
                          d="M15.8,14.57a1.53,1.53,0,0,0,0-1.52L9.28,1.43a1.46,1.46,0,0,0-2.56,0L4.61,5.18l.54.32A10.43,10.43,0,0,1,8.92,9.39a10.84,10.84,0,0,1,1.37,4.67H8.81a9.29,9.29,0,0,0-1.16-3.91A9,9,0,0,0,4.41,6.81L3.88,6.5,1.91,10l.53.32a5.12,5.12,0,0,1,2.42,3.73H1.48a.25.25,0,0,1-.21-.12.24.24,0,0,1,0-.25L2.21,12a3.32,3.32,0,0,0-1.07-.63L.2,13.05a1.53,1.53,0,0,0,0,1.52,1.46,1.46,0,0,0,1.28.76H6.13V14.7a6.55,6.55,0,0,0-.82-3.16,6.31,6.31,0,0,0-1.73-2l.74-1.32a7.85,7.85,0,0,1,2.26,2.53,8,8,0,0,1,1,3.92v.63h3.94V14.7A12.14,12.14,0,0,0,10,8.75a11.8,11.8,0,0,0-3.7-4l1.5-2.67a.24.24,0,0,1,.42,0l6.52,11.63a.24.24,0,0,1,0,.25.24.24,0,0,1-.21.12H13c0,.43,0,.85,0,1.27h1.53a1.46,1.46,0,0,0,1.28-.76"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </IconSentry>
                </a>
              </div>
              <div
                className="box-content with-padding"
              >
                <h3>
                  Create a New Team
                </h3>
                <CreateTeamForm
                  onSuccess={[Function]}
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "org:integrations",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "experiments": Object {},
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [
                        Object {
                          "environments": Array [],
                          "hasAccess": true,
                          "id": "2",
                          "isBookmarked": false,
                          "isMember": true,
                          "name": "Project Name",
                          "slug": "project-slug",
                          "teams": Array [],
                        },
                      ],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "active",
                        "name": "active",
                      },
                      "teams": Array [],
                    }
                  }
                >
                  <p>
                    Teams group members' access to a specific focus, e.g. a major product or application that may have sub-projects.
                  </p>
                  <Form
                    allowUndo={false}
                    apiEndpoint="/organizations/org-slug/teams/"
                    apiMethod="POST"
                    cancelLabel="Cancel"
                    className="form-stacked"
                    data-test-id="create-team-form"
                    onSubmitSuccess={[Function]}
                    requireChanges={true}
                    saveOnBlur={false}
                    submitDisabled={false}
                    submitLabel="Create Team"
                    submitPriority="primary"
                  >
                    <form
                      className="form-stacked"
                      data-test-id="create-team-form"
                      onSubmit={[Function]}
                    >
                      <div>
                        <TextField
                          flexibleControlStateSize={true}
                          help="May contain lowercase letters, numbers, dashes and underscores."
                          inline={false}
                          label="Team Slug"
                          name="slug"
                          placeholder="e.g. operations, web-frontend, desktop"
                          required={true}
                          stacked={true}
                          transformInput={[Function]}
                        >
                          <InputField
                            field={[Function]}
                            flexibleControlStateSize={true}
                            help="May contain lowercase letters, numbers, dashes and underscores."
                            inline={false}
                            label="Team Slug"
                            name="slug"
                            placeholder="e.g. operations, web-frontend, desktop"
                            required={true}
                            stacked={true}
                            transformInput={[Function]}
                            type="text"
                          >
                            <FormField
                              field={[Function]}
                              flexibleControlStateSize={true}
                              help="May contain lowercase letters, numbers, dashes and underscores."
                              hideErrorMessage={false}
                              inline={false}
                              label="Team Slug"
                              name="slug"
                              placeholder="e.g. operations, web-frontend, desktop"
                              required={true}
                              stacked={true}
                              transformInput={[Function]}
                              type="text"
                            >
                              <Field
                                alignRight={false}
                                disabled={false}
                                field={[Function]}
                                flexibleControlStateSize={true}
                                help="May contain lowercase letters, numbers, dashes and underscores."
                                id="slug"
                                inline={false}
                                label="Team Slug"
                                name="slug"
                                placeholder="e.g. operations, web-frontend, desktop"
                                required={true}
                                showHelpInTooltip={false}
                                stacked={true}
                                transformInput={[Function]}
                                type="text"
                                visible={true}
                              >
                                <FieldWrapper
                                  hasControlState={false}
                                  inline={false}
                                  stacked={true}
                                >
                                  <div
                                    className="css-1kl5jlp-FieldWrapper-FieldWrapper e2iyls20"
                                  >
                                    <FieldDescription
                                      htmlFor="slug"
                                      inline={false}
                                    >
                                      <label
                                        className="css-1q141sp-FieldDescription e3z18c30"
                                        htmlFor="slug"
                                      >
                                        <FieldLabel
                                          disabled={false}
                                        >
                                          <div
                                            className="css-wufuns-FieldLabel e16ushrl0"
                                          >
                                            <span>
                                              Team Slug
                                              <FieldRequiredBadge>
                                                <div
                                                  className="css-34gop3-FieldRequiredBadge e1uclnuk0"
                                                />
                                              </FieldRequiredBadge>
                                            </span>
                                          </div>
                                        </FieldLabel>
                                        <FieldHelp
                                          inline={false}
                                          stacked={true}
                                        >
                                          <div
                                            className="css-1i2y8a7-FieldHelp e54sr8f0"
                                          >
                                            May contain lowercase letters, numbers, dashes and underscores.
                                          </div>
                                        </FieldHelp>
                                      </label>
                                    </FieldDescription>
                                    <FieldControl
                                      alignRight={false}
                                      controlState={
                                        <FormFieldControlState
                                          model={
                                            FormModel {
                                              "api": Client {
                                                "_chain": [Function],
                                                "_wrapRequest": [Function],
                                                "bulkUpdate": [Function],
                                                "handleRequestError": [Function],
                                                "hasProjectBeenRenamed": [Function],
                                              },
                                              "errors": Object {},
                                              "fieldDescriptor": Map {
                                                "slug" => Object {
                                                  "children": [Function],
                                                  "className": undefined,
                                                  "field": [Function],
                                                  "flexibleControlStateSize": true,
                                                  "help": "May contain lowercase letters, numbers, dashes and underscores.",
                                                  "hideErrorMessage": false,
                                                  "inline": false,
                                                  "label": "Team Slug",
                                                  "name": "slug",
                                                  "placeholder": "e.g. operations, web-frontend, desktop",
                                                  "required": true,
                                                  "stacked": true,
                                                  "transformInput": [Function],
                                                  "type": "text",
                                                },
                                              },
                                              "fieldState": Object {},
                                              "fields": Object {},
                                              "formErrors": undefined,
                                              "formState": undefined,
                                              "initialData": Object {},
                                              "options": Object {
                                                "allowUndo": false,
                                                "apiEndpoint": "/organizations/org-slug/teams/",
                                                "apiMethod": "POST",
                                                "onFieldChange": undefined,
                                                "onSubmitError": undefined,
                                                "onSubmitSuccess": [Function],
                                                "resetOnError": undefined,
                                                "saveOnBlur": false,
                                              },
                                              "snapshots": Array [
                                                Map {},
                                              ],
                                            }
                                          }
                                          name="slug"
                                        />
                                      }
                                      disabled={false}
                                      errorState={
                                        <Observer>
                                          [Function]
                                        </Observer>
                                      }
                                      flexibleControlStateSize={true}
                                      inline={false}
                                    >
                                      <FieldControlErrorWrapper
                                        inline={false}
                                      >
                                        <div
                                          className="css-szisuz-FieldControlErrorWrapper e12jpfuq0"
                                        >
                                          <FieldControlWrapper>
                                            <div
                                              className="css-1evsibf-FieldControlWrapper e12jpfuq2"
                                            >
                                              <FieldControlStyled
                                                alignRight={false}
                                              >
                                                <div
                                                  className="css-ld1e0a-FieldControlStyled e12jpfuq1"
                                                >
                                                  <Observer>
                                                    <Input
                                                      disabled={false}
                                                      error={false}
                                                      field={[Function]}
                                                      help="May contain lowercase letters, numbers, dashes and underscores."
                                                      id="slug"
                                                      initialData={Object {}}
                                                      inline={false}
                                                      label="Team Slug"
                                                      model={
                                                        FormModel {
                                                          "api": Client {
                                                            "_chain": [Function],
                                                            "_wrapRequest": [Function],
                                                            "bulkUpdate": [Function],
                                                            "handleRequestError": [Function],
                                                            "hasProjectBeenRenamed": [Function],
                                                          },
                                                          "errors": Object {},
                                                          "fieldDescriptor": Map {
                                                            "slug" => Object {
                                                              "children": [Function],
                                                              "className": undefined,
                                                              "field": [Function],
                                                              "flexibleControlStateSize": true,
                                                              "help": "May contain lowercase letters, numbers, dashes and underscores.",
                                                              "hideErrorMessage": false,
                                                              "inline": false,
                                                              "label": "Team Slug",
                                                              "name": "slug",
                                                              "placeholder": "e.g. operations, web-frontend, desktop",
                                                              "required": true,
                                                              "stacked": true,
                                                              "transformInput": [Function],
                                                              "type": "text",
                                                            },
                                                          },
                                                          "fieldState": Object {},
                                                          "fields": Object {},
                                                          "formErrors": undefined,
                                                          "formState": undefined,
                                                          "initialData": Object {},
                                                          "options": Object {
                                                            "allowUndo": false,
                                                            "apiEndpoint": "/organizations/org-slug/teams/",
                                                            "apiMethod": "POST",
                                                            "onFieldChange": undefined,
                                                            "onSubmitError": undefined,
                                                            "onSubmitSuccess": [Function],
                                                            "resetOnError": undefined,
                                                            "saveOnBlur": false,
                                                          },
                                                          "snapshots": Array [
                                                            Map {},
                                                          ],
                                                        }
                                                      }
                                                      name="slug"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="e.g. operations, web-frontend, desktop"
                                                      required={true}
                                                      stacked={true}
                                                      transformInput={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="css-1g2jzij-Input e1xej46s0"
                                                        disabled={false}
                                                        id="slug"
                                                        label="Team Slug"
                                                        name="slug"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="e.g. operations, web-frontend, desktop"
                                                        type="text"
                                                        value=""
                                                      />
                                                    </Input>
                                                  </Observer>
                                                </div>
                                              </FieldControlStyled>
                                              <FieldControlState
                                                flexibleControlStateSize={true}
                                              >
                                                <div
                                                  className="css-mlgkyn-FieldControlState ep9s0su0"
                                                >
                                                  <FormFieldControlState
                                                    model={
                                                      FormModel {
                                                        "api": Client {
                                                          "_chain": [Function],
                                                          "_wrapRequest": [Function],
                                                          "bulkUpdate": [Function],
                                                          "handleRequestError": [Function],
                                                          "hasProjectBeenRenamed": [Function],
                                                        },
                                                        "errors": Object {},
                                                        "fieldDescriptor": Map {
                                                          "slug" => Object {
                                                            "children": [Function],
                                                            "className": undefined,
                                                            "field": [Function],
                                                            "flexibleControlStateSize": true,
                                                            "help": "May contain lowercase letters, numbers, dashes and underscores.",
                                                            "hideErrorMessage": false,
                                                            "inline": false,
                                                            "label": "Team Slug",
                                                            "name": "slug",
                                                            "placeholder": "e.g. operations, web-frontend, desktop",
                                                            "required": true,
                                                            "stacked": true,
                                                            "transformInput": [Function],
                                                            "type": "text",
                                                          },
                                                        },
                                                        "fieldState": Object {},
                                                        "fields": Object {},
                                                        "formErrors": undefined,
                                                        "formState": undefined,
                                                        "initialData": Object {},
                                                        "options": Object {
                                                          "allowUndo": false,
                                                          "apiEndpoint": "/organizations/org-slug/teams/",
                                                          "apiMethod": "POST",
                                                          "onFieldChange": undefined,
                                                          "onSubmitError": undefined,
                                                          "onSubmitSuccess": [Function],
                                                          "resetOnError": undefined,
                                                          "saveOnBlur": false,
                                                        },
                                                        "snapshots": Array [
                                                          Map {},
                                                        ],
                                                      }
                                                    }
                                                    name="slug"
                                                  >
                                                    <Observer>
                                                      <ControlState
                                                        error={false}
                                                        isSaved={null}
                                                        isSaving={null}
                                                      />
                                                    </Observer>
                                                  </FormFieldControlState>
                                                </div>
                                              </FieldControlState>
                                            </div>
                                          </FieldControlWrapper>
                                          <Observer />
                                        </div>
                                      </FieldControlErrorWrapper>
                                    </FieldControl>
                                  </div>
                                </FieldWrapper>
                              </Field>
                            </FormField>
                          </InputField>
                        </TextField>
                      </div>
                      <StyledFooter
                        saveOnBlur={false}
                      >
                        <div
                          className="css-yfxs1k-StyledFooter e1r1zmbj0"
                        >
                          <DefaultButtons>
                            <div
                              className="css-1utgghf-DefaultButtons e1r1zmbj1"
                            >
                              <Observer>
                                <forwardRef<Button>
                                  data-test-id="form-submit"
                                  disabled={true}
                                  priority="primary"
                                  type="submit"
                                >
                                  <Button
                                    align="center"
                                    data-test-id="form-submit"
                                    disabled={true}
                                    forwardRef={null}
                                    priority="primary"
                                    type="submit"
                                  >
                                    <StyledButton
                                      aria-disabled={true}
                                      aria-label="Create Team"
                                      data-test-id="form-submit"
                                      disabled={true}
                                      forwardRef={null}
                                      onClick={[Function]}
                                      priority="primary"
                                      role="button"
                                      type="submit"
                                    >
                                      <Component
                                        aria-disabled={true}
                                        aria-label="Create Team"
                                        className="css-9j7ei9-StyledButton edwq9my0"
                                        data-test-id="form-submit"
                                        forwardRef={null}
                                        onClick={[Function]}
                                        role="button"
                                        type="submit"
                                      >
                                        <button
                                          aria-disabled={true}
                                          aria-label="Create Team"
                                          className="css-9j7ei9-StyledButton edwq9my0"
                                          data-test-id="form-submit"
                                          onClick={[Function]}
                                          role="button"
                                          type="submit"
                                        >
                                          <ButtonLabel
                                            align="center"
                                            priority="primary"
                                          >
                                            <span
                                              className="css-zmpclt-ButtonLabel edwq9my1"
                                            >
                                              Create Team
                                            </span>
                                          </ButtonLabel>
                                        </button>
                                      </Component>
                                    </StyledButton>
                                  </Button>
                                </forwardRef<Button>>
                              </Observer>
                            </div>
                          </DefaultButtons>
                        </div>
                      </StyledFooter>
                    </form>
                  </Form>
                </CreateTeamForm>
              </div>
            </div>
          </div>
        </div>
      </NarrowLayout>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</TeamCreate>
`;
