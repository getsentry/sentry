// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RuleBuilder render() renders 1`] = `
<RuleBuilder
  onAddRule={
    [MockFunction] {
      "calls": Array [
        Array [
          "path:some/path/* janedoe@example.com",
        ],
      ],
    }
  }
  project={
    Object {
      "hasAccess": true,
      "id": "2",
      "isBookmarked": false,
      "isMember": true,
      "name": "Project Name",
      "slug": "project-slug",
      "teams": Array [],
    }
  }
>
  <BuilderBar>
    <div
      className="css-1rsoebt-BuilderBar css-wiuq245"
    >
      <BuilderSelect
        onChange={[Function]}
        showSearch={false}
        value="path"
      >
        <SelectInput
          className="css-1eslqkc-BuilderSelect css-wiuq246"
          disabled={false}
          multiple={false}
          onChange={[Function]}
          placeholder="Select an option..."
          required={false}
          showSearch={false}
          value="path"
        >
          <select
            className="css-1eslqkc-BuilderSelect css-wiuq246"
            disabled={false}
            multiple={false}
            onChange={[Function]}
            placeholder="Select an option..."
            required={false}
            value="path"
          >
            <option
              value="path"
            >
              Path
            </option>
            <option
              value="url"
            >
              URL
            </option>
          </select>
        </SelectInput>
      </BuilderSelect>
      <BuilderInput
        controlled={true}
        onChange={[Function]}
        placeholder="src/example/*"
        value=""
      >
        <input
          className="css-1t4syiu-Input-BuilderInput css-wiuq247"
          onChange={[Function]}
          placeholder="src/example/*"
          value=""
        />
      </BuilderInput>
      <Divider
        src="icon-chevron-right"
      >
        <InlineSvg
          className="css-a4tn6s-Divider css-wiuq248"
          src="icon-chevron-right"
        >
          <StyledSvg
            className="css-a4tn6s-Divider css-wiuq248"
            height="1em"
            viewBox={Object {}}
            width="1em"
          >
            <svg
              className="css-wiuq248 css-5e2rei-StyledSvg css-adkcw30"
              height="1em"
              viewBox={Object {}}
              width="1em"
            >
              <use
                href="#test"
                xlinkHref="#test"
              />
            </svg>
          </StyledSvg>
        </InlineSvg>
      </Divider>
      <Flex
        align="center"
        flex="1"
      >
        <Base
          align="center"
          className="css-1yrw3fm"
          flex="1"
        >
          <div
            className="css-1yrw3fm"
            is={null}
          >
            <DropdownAutoComplete
              alignMenu="right"
              items={
                Array [
                  Object {
                    "items": Array [],
                    "label": "Teams",
                    "value": "team",
                  },
                  Object {
                    "items": Array [
                      Object {
                        "actor": Object {
                          "id": "1",
                          "name": "Jane Doe",
                          "type": "user",
                        },
                        "label": "janedoe@example.com",
                        "searchKey": "janedoe@example.com  nodejs",
                        "value": "user:1",
                      },
                      Object {
                        "actor": Object {
                          "id": "2",
                          "name": "John Smith",
                          "type": "user",
                        },
                        "label": "johnsmith@example.com",
                        "searchKey": "johnsmith@example.com  nodejs",
                        "value": "user:2",
                      },
                    ],
                    "label": "Users",
                    "value": "user",
                  },
                ]
              }
              onSelect={[Function]}
            >
              <DropdownAutoCompleteMenu
                alignMenu="right"
                blendCorner={true}
                items={
                  Array [
                    Object {
                      "items": Array [],
                      "label": "Teams",
                      "value": "team",
                    },
                    Object {
                      "items": Array [
                        Object {
                          "actor": Object {
                            "id": "1",
                            "name": "Jane Doe",
                            "type": "user",
                          },
                          "label": "janedoe@example.com",
                          "searchKey": "janedoe@example.com  nodejs",
                          "value": "user:1",
                        },
                        Object {
                          "actor": Object {
                            "id": "2",
                            "name": "John Smith",
                            "type": "user",
                          },
                          "label": "johnsmith@example.com",
                          "searchKey": "johnsmith@example.com  nodejs",
                          "value": "user:2",
                        },
                      ],
                      "label": "Users",
                      "value": "user",
                    },
                  ]
                }
                onSelect={[Function]}
              >
                <AutoComplete
                  itemToString={[Function]}
                  onSelect={[Function]}
                >
                  <DropdownMenu
                    isOpen={false}
                    keepMenuOpen={false}
                    onClickOutside={[Function]}
                  >
                    <AutoCompleteRoot>
                      <Component
                        className="css-6v04yn-AutoCompleteRoot css-1w01jf00"
                      >
                        <div
                          className="css-6v04yn-AutoCompleteRoot css-1w01jf00"
                        >
                          <div
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            role="button"
                          >
                            <BuilderDropdownButton
                              isOpen={false}
                              size="zero"
                            >
                              <DropdownButton
                                className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                isOpen={false}
                                size="zero"
                              >
                                <StyledButton
                                  className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                  isOpen={false}
                                  size="zero"
                                >
                                  <Component
                                    className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                    isOpen={false}
                                    size="zero"
                                  >
                                    <Button
                                      className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                      disabled={false}
                                      size="zero"
                                    >
                                      <button
                                        className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1 button button-default button-zero"
                                        disabled={false}
                                        onClick={[Function]}
                                        role="button"
                                      >
                                        <Flex
                                          align="center"
                                          className="button-label"
                                        >
                                          <Base
                                            align="center"
                                            className="button-label css-5ipae5"
                                          >
                                            <div
                                              className="button-label css-5ipae5"
                                              is={null}
                                            >
                                              <Owners>
                                                <div
                                                  className="css-1t34ifm-Owners css-wiuq249"
                                                />
                                              </Owners>
                                              <div>
                                                Add Owners
                                              </div>
                                              <StyledChevronDown>
                                                <Component
                                                  className="css-17v3tc-StyledChevronDown css-1pig06q0"
                                                >
                                                  <InlineSvg
                                                    className="css-17v3tc-StyledChevronDown css-1pig06q0"
                                                    src="icon-chevron-down"
                                                  >
                                                    <StyledSvg
                                                      className="css-17v3tc-StyledChevronDown css-1pig06q0"
                                                      height="1em"
                                                      viewBox={Object {}}
                                                      width="1em"
                                                    >
                                                      <svg
                                                        className="css-1pig06q0 css-1vk3ljv-StyledSvg css-adkcw30"
                                                        height="1em"
                                                        viewBox={Object {}}
                                                        width="1em"
                                                      >
                                                        <use
                                                          href="#test"
                                                          xlinkHref="#test"
                                                        />
                                                      </svg>
                                                    </StyledSvg>
                                                  </InlineSvg>
                                                </Component>
                                              </StyledChevronDown>
                                            </div>
                                          </Base>
                                        </Flex>
                                      </button>
                                    </Button>
                                  </Component>
                                </StyledButton>
                              </DropdownButton>
                            </BuilderDropdownButton>
                          </div>
                        </div>
                      </Component>
                    </AutoCompleteRoot>
                  </DropdownMenu>
                </AutoComplete>
              </DropdownAutoCompleteMenu>
            </DropdownAutoComplete>
          </div>
        </Base>
      </Flex>
      <RuleAddButton
        icon="icon-circle-add"
        onClick={[Function]}
        priority="primary"
        size="zero"
      >
        <Button
          className="css-3daogo-RuleAddButton css-wiuq2411"
          disabled={false}
          icon="icon-circle-add"
          onClick={[Function]}
          priority="primary"
          size="zero"
        >
          <button
            className="css-3daogo-RuleAddButton css-wiuq2411 button button-primary button-zero"
            disabled={false}
            onClick={[Function]}
            role="button"
          >
            <Flex
              align="center"
              className="button-label"
            >
              <Base
                align="center"
                className="button-label css-5ipae5"
              >
                <div
                  className="button-label css-5ipae5"
                  is={null}
                >
                  <Icon
                    size="zero"
                  >
                    <Base
                      className="css-l3pkcx-Icon css-1vxxnb60"
                      size="zero"
                    >
                      <div
                        className="css-l3pkcx-Icon css-1vxxnb60"
                        is={null}
                        size="zero"
                      >
                        <StyledInlineSvg
                          size="16px"
                          src="icon-circle-add"
                        >
                          <InlineSvg
                            className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
                            size="16px"
                            src="icon-circle-add"
                          >
                            <StyledSvg
                              className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
                              height="16px"
                              viewBox={Object {}}
                              width="16px"
                            >
                              <svg
                                className="css-1vxxnb61 css-1rlza0i-StyledSvg css-adkcw30"
                                height="16px"
                                viewBox={Object {}}
                                width="16px"
                              >
                                <use
                                  href="#test"
                                  xlinkHref="#test"
                                />
                              </svg>
                            </StyledSvg>
                          </InlineSvg>
                        </StyledInlineSvg>
                      </div>
                    </Base>
                  </Icon>
                </div>
              </Base>
            </Flex>
          </button>
        </Button>
      </RuleAddButton>
    </div>
  </BuilderBar>
</RuleBuilder>
`;

exports[`RuleBuilder renders with suggestions renders 1`] = `
<RuleBuilder
  onAddRule={[MockFunction]}
  paths={
    Array [
      "a/bar",
      "a/foo",
    ]
  }
  project={
    Object {
      "hasAccess": true,
      "id": "2",
      "isBookmarked": false,
      "isMember": true,
      "name": "Project Name",
      "slug": "project-slug",
      "teams": Array [],
    }
  }
  urls={
    Array [
      "example.com/a",
      "example.com/a/foo",
    ]
  }
>
  <Candidates>
    <div
      className="css-1fyz2uk-Candidates css-wiuq240"
    >
      <RuleCandidate
        key="a/bar"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate css-wiuq243"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon css-wiuq244"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon css-wiuq244"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
            >
              a/bar
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint css-wiuq241"
            >
              [PATH]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
      <RuleCandidate
        key="a/foo"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate css-wiuq243"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon css-wiuq244"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon css-wiuq244"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
            >
              a/foo
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint css-wiuq241"
            >
              [PATH]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
      <RuleCandidate
        key="example.com/a"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate css-wiuq243"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon css-wiuq244"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon css-wiuq244"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
            >
              example.com/a
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint css-wiuq241"
            >
              [URL]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
      <RuleCandidate
        key="example.com/a/foo"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate css-wiuq243"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon css-wiuq244"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon css-wiuq244"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="css-wiuq244 css-eomeeu-StyledSvg css-adkcw30"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow css-wiuq242"
            >
              example.com/a/foo
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint css-wiuq241"
            >
              [URL]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
    </div>
  </Candidates>
  <BuilderBar>
    <div
      className="css-1rsoebt-BuilderBar css-wiuq245"
    >
      <BuilderSelect
        onChange={[Function]}
        showSearch={false}
        value="path"
      >
        <SelectInput
          className="css-1eslqkc-BuilderSelect css-wiuq246"
          disabled={false}
          multiple={false}
          onChange={[Function]}
          placeholder="Select an option..."
          required={false}
          showSearch={false}
          value="path"
        >
          <select
            className="css-1eslqkc-BuilderSelect css-wiuq246"
            disabled={false}
            multiple={false}
            onChange={[Function]}
            placeholder="Select an option..."
            required={false}
            value="path"
          >
            <option
              value="path"
            >
              Path
            </option>
            <option
              value="url"
            >
              URL
            </option>
          </select>
        </SelectInput>
      </BuilderSelect>
      <BuilderInput
        controlled={true}
        onChange={[Function]}
        placeholder="src/example/*"
        value="a/bar"
      >
        <input
          className="css-1t4syiu-Input-BuilderInput css-wiuq247"
          onChange={[Function]}
          placeholder="src/example/*"
          value="a/bar"
        />
      </BuilderInput>
      <Divider
        src="icon-chevron-right"
      >
        <InlineSvg
          className="css-a4tn6s-Divider css-wiuq248"
          src="icon-chevron-right"
        >
          <StyledSvg
            className="css-a4tn6s-Divider css-wiuq248"
            height="1em"
            viewBox={Object {}}
            width="1em"
          >
            <svg
              className="css-wiuq248 css-5e2rei-StyledSvg css-adkcw30"
              height="1em"
              viewBox={Object {}}
              width="1em"
            >
              <use
                href="#test"
                xlinkHref="#test"
              />
            </svg>
          </StyledSvg>
        </InlineSvg>
      </Divider>
      <Flex
        align="center"
        flex="1"
      >
        <Base
          align="center"
          className="css-1yrw3fm"
          flex="1"
        >
          <div
            className="css-1yrw3fm"
            is={null}
          >
            <DropdownAutoComplete
              alignMenu="right"
              items={
                Array [
                  Object {
                    "items": Array [],
                    "label": "Teams",
                    "value": "team",
                  },
                  Object {
                    "items": Array [
                      Object {
                        "actor": Object {
                          "id": "1",
                          "name": "Jane Doe",
                          "type": "user",
                        },
                        "label": "janedoe@example.com",
                        "searchKey": "janedoe@example.com  nodejs",
                        "value": "user:1",
                      },
                      Object {
                        "actor": Object {
                          "id": "2",
                          "name": "John Smith",
                          "type": "user",
                        },
                        "label": "johnsmith@example.com",
                        "searchKey": "johnsmith@example.com  nodejs",
                        "value": "user:2",
                      },
                    ],
                    "label": "Users",
                    "value": "user",
                  },
                ]
              }
              onSelect={[Function]}
            >
              <DropdownAutoCompleteMenu
                alignMenu="right"
                blendCorner={true}
                items={
                  Array [
                    Object {
                      "items": Array [],
                      "label": "Teams",
                      "value": "team",
                    },
                    Object {
                      "items": Array [
                        Object {
                          "actor": Object {
                            "id": "1",
                            "name": "Jane Doe",
                            "type": "user",
                          },
                          "label": "janedoe@example.com",
                          "searchKey": "janedoe@example.com  nodejs",
                          "value": "user:1",
                        },
                        Object {
                          "actor": Object {
                            "id": "2",
                            "name": "John Smith",
                            "type": "user",
                          },
                          "label": "johnsmith@example.com",
                          "searchKey": "johnsmith@example.com  nodejs",
                          "value": "user:2",
                        },
                      ],
                      "label": "Users",
                      "value": "user",
                    },
                  ]
                }
                onSelect={[Function]}
              >
                <AutoComplete
                  itemToString={[Function]}
                  onSelect={[Function]}
                >
                  <DropdownMenu
                    isOpen={false}
                    keepMenuOpen={false}
                    onClickOutside={[Function]}
                  >
                    <AutoCompleteRoot>
                      <Component
                        className="css-6v04yn-AutoCompleteRoot css-1w01jf00"
                      >
                        <div
                          className="css-6v04yn-AutoCompleteRoot css-1w01jf00"
                        >
                          <div
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            role="button"
                          >
                            <BuilderDropdownButton
                              isOpen={false}
                              size="zero"
                            >
                              <DropdownButton
                                className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                isOpen={false}
                                size="zero"
                              >
                                <StyledButton
                                  className="css-agp1qb-BuilderDropdownButton css-wiuq2410"
                                  isOpen={false}
                                  size="zero"
                                >
                                  <Component
                                    className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                    isOpen={false}
                                    size="zero"
                                  >
                                    <Button
                                      className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1"
                                      disabled={false}
                                      size="zero"
                                    >
                                      <button
                                        className="css-wiuq2410 css-vx22y2-StyledButton css-1pig06q1 button button-default button-zero"
                                        disabled={false}
                                        onClick={[Function]}
                                        role="button"
                                      >
                                        <Flex
                                          align="center"
                                          className="button-label"
                                        >
                                          <Base
                                            align="center"
                                            className="button-label css-5ipae5"
                                          >
                                            <div
                                              className="button-label css-5ipae5"
                                              is={null}
                                            >
                                              <Owners>
                                                <div
                                                  className="css-1t34ifm-Owners css-wiuq249"
                                                >
                                                  <span
                                                    key="user-1"
                                                    onClick={[Function]}
                                                  >
                                                    <ActorAvatar
                                                      actor={
                                                        Object {
                                                          "id": "1",
                                                          "name": "Jane Doe",
                                                          "type": "user",
                                                        }
                                                      }
                                                    >
                                                      <Avatar
                                                        hasTooltip={true}
                                                        user={
                                                          Object {
                                                            "email": "janedoe@example.com",
                                                            "id": "1",
                                                            "name": "Jane Doe",
                                                            "username": "foo@example.com",
                                                          }
                                                        }
                                                      >
                                                        <UserAvatar
                                                          gravatar={true}
                                                          hasTooltip={true}
                                                          user={
                                                            Object {
                                                              "email": "janedoe@example.com",
                                                              "id": "1",
                                                              "name": "Jane Doe",
                                                              "username": "foo@example.com",
                                                            }
                                                          }
                                                        >
                                                          <BaseAvatar
                                                            gravatar={true}
                                                            gravatarId="janedoe@example.com"
                                                            hasTooltip={true}
                                                            letterId="janedoe@example.com"
                                                            style={Object {}}
                                                            title="Jane Doe"
                                                            tooltip="Jane Doe (janedoe@example.com)"
                                                            type="gravatar"
                                                          >
                                                            <Tooltip
                                                              disabled={false}
                                                              title="Jane Doe (janedoe@example.com)"
                                                            >
                                                              <span
                                                                className="tip avatar"
                                                                style={Object {}}
                                                                title="Jane Doe (janedoe@example.com)"
                                                              >
                                                                <img
                                                                  onError={[Function]}
                                                                  onLoad={[Function]}
                                                                  src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=64"
                                                                />
                                                              </span>
                                                            </Tooltip>
                                                          </BaseAvatar>
                                                        </UserAvatar>
                                                      </Avatar>
                                                    </ActorAvatar>
                                                  </span>
                                                </div>
                                              </Owners>
                                              <div>
                                                Add Owners
                                              </div>
                                              <StyledChevronDown>
                                                <Component
                                                  className="css-17v3tc-StyledChevronDown css-1pig06q0"
                                                >
                                                  <InlineSvg
                                                    className="css-17v3tc-StyledChevronDown css-1pig06q0"
                                                    src="icon-chevron-down"
                                                  >
                                                    <StyledSvg
                                                      className="css-17v3tc-StyledChevronDown css-1pig06q0"
                                                      height="1em"
                                                      viewBox={Object {}}
                                                      width="1em"
                                                    >
                                                      <svg
                                                        className="css-1pig06q0 css-1vk3ljv-StyledSvg css-adkcw30"
                                                        height="1em"
                                                        viewBox={Object {}}
                                                        width="1em"
                                                      >
                                                        <use
                                                          href="#test"
                                                          xlinkHref="#test"
                                                        />
                                                      </svg>
                                                    </StyledSvg>
                                                  </InlineSvg>
                                                </Component>
                                              </StyledChevronDown>
                                            </div>
                                          </Base>
                                        </Flex>
                                      </button>
                                    </Button>
                                  </Component>
                                </StyledButton>
                              </DropdownButton>
                            </BuilderDropdownButton>
                          </div>
                        </div>
                      </Component>
                    </AutoCompleteRoot>
                  </DropdownMenu>
                </AutoComplete>
              </DropdownAutoCompleteMenu>
            </DropdownAutoComplete>
          </div>
        </Base>
      </Flex>
      <RuleAddButton
        icon="icon-circle-add"
        onClick={[Function]}
        priority="primary"
        size="zero"
      >
        <Button
          className="css-3daogo-RuleAddButton css-wiuq2411"
          disabled={false}
          icon="icon-circle-add"
          onClick={[Function]}
          priority="primary"
          size="zero"
        >
          <button
            className="css-3daogo-RuleAddButton css-wiuq2411 button button-primary button-zero"
            disabled={false}
            onClick={[Function]}
            role="button"
          >
            <Flex
              align="center"
              className="button-label"
            >
              <Base
                align="center"
                className="button-label css-5ipae5"
              >
                <div
                  className="button-label css-5ipae5"
                  is={null}
                >
                  <Icon
                    size="zero"
                  >
                    <Base
                      className="css-l3pkcx-Icon css-1vxxnb60"
                      size="zero"
                    >
                      <div
                        className="css-l3pkcx-Icon css-1vxxnb60"
                        is={null}
                        size="zero"
                      >
                        <StyledInlineSvg
                          size="16px"
                          src="icon-circle-add"
                        >
                          <InlineSvg
                            className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
                            size="16px"
                            src="icon-circle-add"
                          >
                            <StyledSvg
                              className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
                              height="16px"
                              viewBox={Object {}}
                              width="16px"
                            >
                              <svg
                                className="css-1vxxnb61 css-1rlza0i-StyledSvg css-adkcw30"
                                height="16px"
                                viewBox={Object {}}
                                width="16px"
                              >
                                <use
                                  href="#test"
                                  xlinkHref="#test"
                                />
                              </svg>
                            </StyledSvg>
                          </InlineSvg>
                        </StyledInlineSvg>
                      </div>
                    </Base>
                  </Icon>
                </div>
              </Base>
            </Flex>
          </button>
        </Button>
      </RuleAddButton>
    </div>
  </BuilderBar>
</RuleBuilder>
`;
