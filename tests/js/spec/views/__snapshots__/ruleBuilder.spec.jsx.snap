// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RuleBuilder renders 1`] = `
<RuleBuilder
  onAddRule={
    [MockFunction] {
      "calls": Array [
        Array [
          "path:some/path/* janedoe@example.com",
        ],
      ],
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  project={
    Object {
      "hasAccess": true,
      "id": "2",
      "isBookmarked": false,
      "isMember": true,
      "name": "Project Name",
      "slug": "project-slug",
      "teams": Array [
        Object {
          "id": "3",
          "isMember": true,
          "name": "COOL TEAM",
          "slug": "cool-team",
        },
      ],
    }
  }
>
  <BuilderBar>
    <div
      className="css-1kvuz3c-BuilderBar e1hyuoc75"
    >
      <BuilderSelect
        clearable={false}
        name="select-type"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Path",
              "value": "path",
            },
            Object {
              "label": "URL",
              "value": "url",
            },
          ]
        }
        showSearch={false}
        style={
          Object {
            "width": 140,
          }
        }
        value="path"
      >
        <SelectField
          className="css-1bclqmz-BuilderSelect e1hyuoc76"
          clearable={false}
          disabled={false}
          hideErrorMessage={false}
          name="select-type"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Path",
                "value": "path",
              },
              Object {
                "label": "URL",
                "value": "url",
              },
            ]
          }
          required={false}
          showSearch={false}
          style={
            Object {
              "width": 140,
            }
          }
          value="path"
        >
          <div
            className="css-1bclqmz-BuilderSelect e1hyuoc76"
            style={
              Object {
                "width": 140,
              }
            }
          >
            <div
              className="controls"
            >
              <SelectControl
                clearable={false}
                disabled={false}
                id="id-select-type"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "Path",
                      "value": "path",
                    },
                    Object {
                      "label": "URL",
                      "value": "url",
                    },
                  ]
                }
                required={false}
                value="path"
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  clearable={false}
                  disabled={false}
                  id="id-select-type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "Path",
                        "value": "path",
                      },
                      Object {
                        "label": "URL",
                        "value": "url",
                      },
                    ]
                  }
                  required={false}
                  value="path"
                >
                  <SelectPicker
                    arrowRenderer={[Function]}
                    className="css-16280ey-StyledSelect eho28m20"
                    clearable={false}
                    disabled={false}
                    id="id-select-type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Path",
                          "value": "path",
                        },
                        Object {
                          "label": "URL",
                          "value": "url",
                        },
                      ]
                    }
                    required={false}
                    value="path"
                  >
                    <Select
                      arrowRenderer={[Function]}
                      autosize={true}
                      backspaceRemoves={true}
                      backspaceToRemoveMessage="Press backspace to remove {label}"
                      className="css-16280ey-StyledSelect eho28m20"
                      clearAllText="Clear all"
                      clearRenderer={[Function]}
                      clearValueText="Clear value"
                      clearable={false}
                      closeOnSelect={true}
                      deleteRemoves={true}
                      delimiter=","
                      disabled={false}
                      escapeClearsValue={true}
                      filterOptions={[Function]}
                      id="id-select-type"
                      ignoreAccents={true}
                      ignoreCase={true}
                      inputProps={Object {}}
                      isLoading={false}
                      joinValues={false}
                      labelKey="label"
                      matchPos="any"
                      matchProp="any"
                      menuBuffer={0}
                      menuRenderer={[Function]}
                      multi={false}
                      noResultsText="No results found"
                      onBlurResetsInput={true}
                      onChange={[Function]}
                      onCloseResetsInput={true}
                      onSelectResetsInput={true}
                      openOnClick={true}
                      optionComponent={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Path",
                            "value": "path",
                          },
                          Object {
                            "label": "URL",
                            "value": "url",
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder="Select..."
                      removeSelected={true}
                      required={false}
                      rtl={false}
                      scrollMenuIntoView={true}
                      searchable={true}
                      simpleValue={false}
                      tabSelectsValue={true}
                      trimFilter={true}
                      value="path"
                      valueComponent={[Function]}
                      valueKey="value"
                    >
                      <div
                        className="Select css-16280ey-StyledSelect eho28m20 has-value is-searchable Select--single"
                      >
                        <div
                          className="Select-control"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                        >
                          <span
                            className="Select-multi-value-wrapper"
                            id="react-select-2--value"
                          >
                            <Value
                              disabled={false}
                              id="react-select-2--value-item"
                              instancePrefix="react-select-2-"
                              onClick={null}
                              placeholder="Select..."
                              value={
                                Object {
                                  "label": "Path",
                                  "value": "path",
                                }
                              }
                            >
                              <div
                                className="Select-value"
                              >
                                <span
                                  aria-selected="true"
                                  className="Select-value-label"
                                  id="react-select-2--value-item"
                                  role="option"
                                >
                                  Path
                                </span>
                              </div>
                            </Value>
                            <AutosizeInput
                              aria-activedescendant="react-select-2--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-owns=""
                              className="Select-input"
                              id="id-select-type"
                              injectStyles={true}
                              minWidth="5"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              value=""
                            >
                              <div
                                className="Select-input"
                                style={
                                  Object {
                                    "display": "inline-block",
                                  }
                                }
                              >
                                <input
                                  aria-activedescendant="react-select-2--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  id="id-select-type"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  style={
                                    Object {
                                      "boxSizing": "content-box",
                                      "width": "5px",
                                    }
                                  }
                                  value=""
                                />
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "left": 0,
                                      "overflow": "scroll",
                                      "position": "absolute",
                                      "top": 0,
                                      "visibility": "hidden",
                                      "whiteSpace": "pre",
                                    }
                                  }
                                />
                              </div>
                            </AutosizeInput>
                          </span>
                          <span
                            className="Select-arrow-zone"
                            onMouseDown={[Function]}
                          >
                            <span
                              className="icon-arrow-down"
                            />
                          </span>
                        </div>
                      </div>
                    </Select>
                  </SelectPicker>
                </StyledSelect>
              </SelectControl>
            </div>
          </div>
        </SelectField>
      </BuilderSelect>
      <BuilderInput
        controlled={true}
        onChange={[Function]}
        placeholder="src/example/*"
        value=""
      >
        <input
          className="css-1xtn8xn-Input-inputStyles-BuilderInput e1hyuoc77"
          onChange={[Function]}
          placeholder="src/example/*"
          value=""
        />
      </BuilderInput>
      <Divider
        src="icon-chevron-right"
      >
        <InlineSvg
          className="css-a4tn6s-Divider e1hyuoc78"
          src="icon-chevron-right"
        >
          <StyledSvg
            className="css-a4tn6s-Divider e1hyuoc78"
            height="1em"
            viewBox={Object {}}
            width="1em"
          >
            <svg
              className="e1hyuoc78 css-1uv43pt-StyledSvg-Divider e2idor0"
              height="1em"
              viewBox={Object {}}
              width="1em"
            >
              <use
                href="#test"
                xlinkHref="#test"
              />
            </svg>
          </StyledSvg>
        </InlineSvg>
      </Divider>
      <Flex
        align="center"
        flex="1"
        mr={1}
      >
        <Base
          align="center"
          className="css-1q48dzo"
          flex="1"
          mr={1}
        >
          <div
            className="css-1q48dzo"
            is={null}
          >
            <SelectOwners
              onChange={[Function]}
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              project={
                Object {
                  "hasAccess": true,
                  "id": "2",
                  "isBookmarked": false,
                  "isMember": true,
                  "name": "Project Name",
                  "slug": "project-slug",
                  "teams": Array [
                    Object {
                      "id": "3",
                      "isMember": true,
                      "name": "COOL TEAM",
                      "slug": "cool-team",
                    },
                  ],
                }
              }
              value={Array []}
            >
              <MultiSelectControl
                async={true}
                cache={false}
                className="css-1domaf0"
                defaultOptions={true}
                filterOptions={[Function]}
                loadOptions={[Function]}
                onChange={[Function]}
                onInputChange={[Function]}
                placeholder="Add Owners"
                value={Array []}
                valueComponent={[Function]}
              >
                <SelectControl
                  async={true}
                  cache={false}
                  className="css-1domaf0"
                  defaultOptions={true}
                  filterOptions={[Function]}
                  loadOptions={[Function]}
                  multi={true}
                  onChange={[Function]}
                  onInputChange={[Function]}
                  placeholder="Add Owners"
                  value={Array []}
                  valueComponent={[Function]}
                >
                  <StyledSelect
                    arrowRenderer={[Function]}
                    async={true}
                    cache={false}
                    className="css-1domaf0"
                    defaultOptions={true}
                    filterOptions={[Function]}
                    loadOptions={[Function]}
                    multi={true}
                    onChange={[Function]}
                    onInputChange={[Function]}
                    placeholder="Add Owners"
                    value={Array []}
                    valueComponent={[Function]}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      async={true}
                      cache={false}
                      className="css-11osmt1-StyledSelect eho28m20"
                      defaultOptions={true}
                      filterOptions={[Function]}
                      loadOptions={[Function]}
                      multi={true}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      placeholder="Add Owners"
                      value={Array []}
                      valueComponent={[Function]}
                    >
                      <Async
                        arrowRenderer={[Function]}
                        autoload={true}
                        cache={false}
                        className="css-11osmt1-StyledSelect eho28m20"
                        defaultOptions={true}
                        filterOptions={[Function]}
                        ignoreAccents={true}
                        ignoreCase={true}
                        loadOptions={[Function]}
                        loadingPlaceholder="Loading..."
                        multi={true}
                        onChange={[Function]}
                        onInputChange={[Function]}
                        options={Array []}
                        placeholder="Add Owners"
                        searchPromptText="Type to search"
                        value={Array []}
                        valueComponent={[Function]}
                      >
                        <Select
                          arrowRenderer={[Function]}
                          autoload={true}
                          autosize={true}
                          backspaceRemoves={true}
                          backspaceToRemoveMessage="Press backspace to remove {label}"
                          cache={false}
                          className="css-11osmt1-StyledSelect eho28m20"
                          clearAllText="Clear all"
                          clearRenderer={[Function]}
                          clearValueText="Clear value"
                          clearable={true}
                          closeOnSelect={true}
                          defaultOptions={true}
                          deleteRemoves={true}
                          delimiter=","
                          disabled={false}
                          escapeClearsValue={true}
                          filterOptions={[Function]}
                          ignoreAccents={true}
                          ignoreCase={true}
                          inputProps={Object {}}
                          isLoading={false}
                          joinValues={false}
                          labelKey="label"
                          loadOptions={[Function]}
                          loadingPlaceholder="Loading..."
                          matchPos="any"
                          matchProp="any"
                          menuBuffer={0}
                          menuRenderer={[Function]}
                          multi={true}
                          noResultsText="Type to search"
                          onBlurResetsInput={true}
                          onChange={[Function]}
                          onCloseResetsInput={true}
                          onInputChange={[Function]}
                          onSelectResetsInput={true}
                          openOnClick={true}
                          optionComponent={[Function]}
                          options={
                            Array [
                              Object {
                                "actor": Object {
                                  "id": "1",
                                  "name": "Jane Doe",
                                  "type": "user",
                                },
                                "label": <IdBadge
                                  avatarSize={24}
                                  hideEmail={true}
                                  useLink={false}
                                  user={
                                    Object {
                                      "email": "janedoe@example.com",
                                      "flags": Object {
                                        "newsletter_consent_prompt": false,
                                      },
                                      "hasPasswordAuth": true,
                                      "id": "1",
                                      "isAuthenticated": true,
                                      "name": "Jane Doe",
                                      "options": Object {
                                        "timezone": "UTC",
                                      },
                                      "user": Object {
                                        "email": "janedoe@example.com",
                                        "id": "1",
                                        "name": "Jane Doe",
                                      },
                                      "username": "foo@example.com",
                                    }
                                  }
                                />,
                                "searchKey": "janedoe@example.com jane doe",
                                "value": "user:1",
                              },
                              Object {
                                "actor": Object {
                                  "id": "3",
                                  "name": "cool-team",
                                  "type": "team",
                                },
                                "label": <IdBadge
                                  team={
                                    Object {
                                      "id": "3",
                                      "isMember": true,
                                      "name": "COOL TEAM",
                                      "slug": "cool-team",
                                    }
                                  }
                                />,
                                "searchKey": "#cool-team",
                                "value": "team:3",
                              },
                              Object {
                                "actor": Object {
                                  "id": "4",
                                  "name": "team-not-in-project",
                                  "type": "team",
                                },
                                "disabled": true,
                                "label": <Flex
                                  justify="space-between"
                                >
                                  <DisabledLabel>
                                    <Tooltip
                                      title="#team-not-in-project is not a member of project"
                                      tooltipOptions={
                                        Object {
                                          "container": "body",
                                          "placement": "left",
                                        }
                                      }
                                    >
                                      <IdBadge
                                        team={
                                          Object {
                                            "id": "4",
                                            "isMember": true,
                                            "name": "TEAM NOT IN PROJECT",
                                            "slug": "team-not-in-project",
                                          }
                                        }
                                      />
                                    </Tooltip>
                                  </DisabledLabel>
                                  <Tooltip
                                    title="Add #team-not-in-project to project"
                                  >
                                    <AddToProjectButton
                                      borderless={true}
                                      disabled={false}
                                      onClick={[Function]}
                                      size="zero"
                                    >
                                      <InlineSvg
                                        src="icon-circle-add"
                                      />
                                    </AddToProjectButton>
                                  </Tooltip>
                                </Flex>,
                                "searchKey": "#team-not-in-project",
                                "value": "team:4",
                              },
                              Object {
                                "actor": Object {
                                  "id": "2",
                                  "name": "John Smith",
                                  "type": "user",
                                },
                                "disabled": true,
                                "label": <DisabledLabel>
                                  <Tooltip
                                    title="John Smith is not a member of project"
                                    tooltipOptions={
                                      Object {
                                        "container": "body",
                                        "placement": "left",
                                      }
                                    }
                                  >
                                    <IdBadge
                                      avatarSize={24}
                                      hideEmail={true}
                                      useLink={false}
                                      user={
                                        Object {
                                          "email": "johnsmith@example.com",
                                          "id": "2",
                                          "name": "John Smith",
                                        }
                                      }
                                    />
                                  </Tooltip>
                                </DisabledLabel>,
                                "searchKey": "johnsmith@example.com john smith",
                                "value": "user:2",
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="Add Owners"
                          removeSelected={true}
                          required={false}
                          rtl={false}
                          scrollMenuIntoView={true}
                          searchPromptText="Type to search"
                          searchable={true}
                          simpleValue={false}
                          tabSelectsValue={true}
                          trimFilter={true}
                          value={Array []}
                          valueComponent={[Function]}
                          valueKey="value"
                        >
                          <div
                            className="Select css-11osmt1-StyledSelect eho28m20 is-clearable is-searchable Select--multi"
                          >
                            <div
                              className="Select-control"
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                            >
                              <span
                                className="Select-multi-value-wrapper"
                                id="react-select-3--value"
                              >
                                <div
                                  className="Select-placeholder"
                                >
                                  Add Owners
                                </div>
                                <AutosizeInput
                                  aria-activedescendant="react-select-3--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  className="Select-input"
                                  injectStyles={true}
                                  minWidth="5"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  value=""
                                >
                                  <div
                                    className="Select-input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                      }
                                    }
                                  >
                                    <input
                                      aria-activedescendant="react-select-3--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns=""
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      style={
                                        Object {
                                          "boxSizing": "content-box",
                                          "width": "5px",
                                        }
                                      }
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </span>
                              <span
                                className="Select-arrow-zone"
                                onMouseDown={[Function]}
                              >
                                <span
                                  className="icon-arrow-down"
                                />
                              </span>
                            </div>
                          </div>
                        </Select>
                      </Async>
                    </SelectPicker>
                  </StyledSelect>
                </SelectControl>
              </MultiSelectControl>
            </SelectOwners>
          </div>
        </Base>
      </Flex>
      <AddButton
        disabled={true}
        icon="icon-circle-add"
        onClick={[Function]}
        priority="primary"
        size="small"
      >
        <Button
          className="css-po7kq7-AddButton e1hyuoc79"
          disabled={true}
          icon="icon-circle-add"
          onClick={[Function]}
          priority="primary"
          size="small"
        >
          <StyledButton
            className="css-po7kq7-AddButton e1hyuoc79"
            disabled={true}
            href={null}
            onClick={[Function]}
            priority="primary"
            role="button"
            size="small"
            to={null}
          >
            <Component
              className="e1hyuoc79 css-in0b2i-StyledButton-getColors-AddButton e17811v30"
              disabled={true}
              href={null}
              onClick={[Function]}
              priority="primary"
              role="button"
              size="small"
              to={null}
            >
              <button
                className="e1hyuoc79 css-in0b2i-StyledButton-getColors-AddButton e17811v30"
                disabled={true}
                href={null}
                onClick={[Function]}
                priority="primary"
                role="button"
                size="small"
                to={null}
              >
                <ButtonLabel
                  size="small"
                >
                  <Component
                    className="css-19bmqb3-ButtonLabel e17811v31"
                    size="small"
                  >
                    <Flex
                      align="center"
                      className="css-19bmqb3-ButtonLabel e17811v31"
                      size="small"
                    >
                      <Base
                        align="center"
                        className="e17811v31 css-1eblpyp-ButtonLabel"
                        size="small"
                      >
                        <div
                          className="e17811v31 css-1eblpyp-ButtonLabel"
                          is={null}
                          size="small"
                        >
                          <Icon
                            hasChildren={false}
                            size="small"
                          >
                            <Component
                              className="css-ljhpxy-Icon e17811v32"
                              hasChildren={false}
                              size="small"
                            >
                              <Box
                                className="css-ljhpxy-Icon e17811v32"
                                size="small"
                              >
                                <Base
                                  className="e17811v32 css-7mohvl-Icon"
                                  size="small"
                                >
                                  <div
                                    className="e17811v32 css-7mohvl-Icon"
                                    is={null}
                                    size="small"
                                  >
                                    <StyledInlineSvg
                                      size="12px"
                                      src="icon-circle-add"
                                    >
                                      <InlineSvg
                                        className="css-1ov3rcq-StyledInlineSvg e17811v33"
                                        size="12px"
                                        src="icon-circle-add"
                                      >
                                        <StyledSvg
                                          className="css-1ov3rcq-StyledInlineSvg e17811v33"
                                          height="12px"
                                          viewBox={Object {}}
                                          width="12px"
                                        >
                                          <svg
                                            className="e17811v33 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                            height="12px"
                                            viewBox={Object {}}
                                            width="12px"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </StyledSvg>
                                      </InlineSvg>
                                    </StyledInlineSvg>
                                  </div>
                                </Base>
                              </Box>
                            </Component>
                          </Icon>
                        </div>
                      </Base>
                    </Flex>
                  </Component>
                </ButtonLabel>
              </button>
            </Component>
          </StyledButton>
        </Button>
      </AddButton>
    </div>
  </BuilderBar>
</RuleBuilder>
`;

exports[`RuleBuilder renders with suggestions 1`] = `
<RuleBuilder
  onAddRule={[MockFunction]}
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  paths={
    Array [
      "a/bar",
      "a/foo",
    ]
  }
  project={
    Object {
      "hasAccess": true,
      "id": "2",
      "isBookmarked": false,
      "isMember": true,
      "name": "Project Name",
      "slug": "project-slug",
      "teams": Array [
        Object {
          "id": "3",
          "isMember": true,
          "name": "COOL TEAM",
          "slug": "cool-team",
        },
      ],
    }
  }
  urls={
    Array [
      "example.com/a",
      "example.com/a/foo",
    ]
  }
>
  <Candidates>
    <div
      className="css-1fyz2uk-Candidates e1hyuoc70"
    >
      <RuleCandidate
        key="a/bar"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate e1hyuoc73"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon e1hyuoc74"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon e1hyuoc74"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="e1hyuoc74 css-1i6gwke-StyledSvg-AddIcon e2idor0"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow e1hyuoc72"
            >
              a/bar
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint e1hyuoc71"
            >
              [PATH]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
      <RuleCandidate
        key="a/foo"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate e1hyuoc73"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon e1hyuoc74"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon e1hyuoc74"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="e1hyuoc74 css-1i6gwke-StyledSvg-AddIcon e2idor0"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow e1hyuoc72"
            >
              a/foo
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint e1hyuoc71"
            >
              [PATH]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
      <RuleCandidate
        key="example.com/a"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate e1hyuoc73"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon e1hyuoc74"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon e1hyuoc74"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="e1hyuoc74 css-1i6gwke-StyledSvg-AddIcon e2idor0"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow e1hyuoc72"
            >
              example.com/a
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint e1hyuoc71"
            >
              [URL]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
      <RuleCandidate
        key="example.com/a/foo"
        onClick={[Function]}
      >
        <div
          className="css-4hexhh-RuleCandidate e1hyuoc73"
          onClick={[Function]}
        >
          <AddIcon
            src="icon-circle-add"
          >
            <InlineSvg
              className="css-1ivdji5-AddIcon e1hyuoc74"
              src="icon-circle-add"
            >
              <StyledSvg
                className="css-1ivdji5-AddIcon e1hyuoc74"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <svg
                  className="e1hyuoc74 css-1i6gwke-StyledSvg-AddIcon e2idor0"
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <use
                    href="#test"
                    xlinkHref="#test"
                  />
                </svg>
              </StyledSvg>
            </InlineSvg>
          </AddIcon>
          <StyledTextOverflow>
            <div
              className="css-q3yspe-TextOverflow-StyledTextOverflow e1hyuoc72"
            >
              example.com/a/foo
            </div>
          </StyledTextOverflow>
          <TypeHint>
            <div
              className="css-6d8mj3-TypeHint e1hyuoc71"
            >
              [URL]
            </div>
          </TypeHint>
        </div>
      </RuleCandidate>
    </div>
  </Candidates>
  <BuilderBar>
    <div
      className="css-1kvuz3c-BuilderBar e1hyuoc75"
    >
      <BuilderSelect
        clearable={false}
        name="select-type"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Path",
              "value": "path",
            },
            Object {
              "label": "URL",
              "value": "url",
            },
          ]
        }
        showSearch={false}
        style={
          Object {
            "width": 140,
          }
        }
        value="path"
      >
        <SelectField
          className="css-1bclqmz-BuilderSelect e1hyuoc76"
          clearable={false}
          disabled={false}
          hideErrorMessage={false}
          name="select-type"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Path",
                "value": "path",
              },
              Object {
                "label": "URL",
                "value": "url",
              },
            ]
          }
          required={false}
          showSearch={false}
          style={
            Object {
              "width": 140,
            }
          }
          value="path"
        >
          <div
            className="css-1bclqmz-BuilderSelect e1hyuoc76"
            style={
              Object {
                "width": 140,
              }
            }
          >
            <div
              className="controls"
            >
              <SelectControl
                clearable={false}
                disabled={false}
                id="id-select-type"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "Path",
                      "value": "path",
                    },
                    Object {
                      "label": "URL",
                      "value": "url",
                    },
                  ]
                }
                required={false}
                value="path"
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  clearable={false}
                  disabled={false}
                  id="id-select-type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "Path",
                        "value": "path",
                      },
                      Object {
                        "label": "URL",
                        "value": "url",
                      },
                    ]
                  }
                  required={false}
                  value="path"
                >
                  <SelectPicker
                    arrowRenderer={[Function]}
                    className="css-16280ey-StyledSelect eho28m20"
                    clearable={false}
                    disabled={false}
                    id="id-select-type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Path",
                          "value": "path",
                        },
                        Object {
                          "label": "URL",
                          "value": "url",
                        },
                      ]
                    }
                    required={false}
                    value="path"
                  >
                    <Select
                      arrowRenderer={[Function]}
                      autosize={true}
                      backspaceRemoves={true}
                      backspaceToRemoveMessage="Press backspace to remove {label}"
                      className="css-16280ey-StyledSelect eho28m20"
                      clearAllText="Clear all"
                      clearRenderer={[Function]}
                      clearValueText="Clear value"
                      clearable={false}
                      closeOnSelect={true}
                      deleteRemoves={true}
                      delimiter=","
                      disabled={false}
                      escapeClearsValue={true}
                      filterOptions={[Function]}
                      id="id-select-type"
                      ignoreAccents={true}
                      ignoreCase={true}
                      inputProps={Object {}}
                      isLoading={false}
                      joinValues={false}
                      labelKey="label"
                      matchPos="any"
                      matchProp="any"
                      menuBuffer={0}
                      menuRenderer={[Function]}
                      multi={false}
                      noResultsText="No results found"
                      onBlurResetsInput={true}
                      onChange={[Function]}
                      onCloseResetsInput={true}
                      onSelectResetsInput={true}
                      openOnClick={true}
                      optionComponent={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Path",
                            "value": "path",
                          },
                          Object {
                            "label": "URL",
                            "value": "url",
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder="Select..."
                      removeSelected={true}
                      required={false}
                      rtl={false}
                      scrollMenuIntoView={true}
                      searchable={true}
                      simpleValue={false}
                      tabSelectsValue={true}
                      trimFilter={true}
                      value="path"
                      valueComponent={[Function]}
                      valueKey="value"
                    >
                      <div
                        className="Select css-16280ey-StyledSelect eho28m20 has-value is-searchable Select--single"
                      >
                        <div
                          className="Select-control"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                        >
                          <span
                            className="Select-multi-value-wrapper"
                            id="react-select-4--value"
                          >
                            <Value
                              disabled={false}
                              id="react-select-4--value-item"
                              instancePrefix="react-select-4-"
                              onClick={null}
                              placeholder="Select..."
                              value={
                                Object {
                                  "label": "Path",
                                  "value": "path",
                                }
                              }
                            >
                              <div
                                className="Select-value"
                              >
                                <span
                                  aria-selected="true"
                                  className="Select-value-label"
                                  id="react-select-4--value-item"
                                  role="option"
                                >
                                  Path
                                </span>
                              </div>
                            </Value>
                            <AutosizeInput
                              aria-activedescendant="react-select-4--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-owns=""
                              className="Select-input"
                              id="id-select-type"
                              injectStyles={true}
                              minWidth="5"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              value=""
                            >
                              <div
                                className="Select-input"
                                style={
                                  Object {
                                    "display": "inline-block",
                                  }
                                }
                              >
                                <input
                                  aria-activedescendant="react-select-4--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  id="id-select-type"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  style={
                                    Object {
                                      "boxSizing": "content-box",
                                      "width": "5px",
                                    }
                                  }
                                  value=""
                                />
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "left": 0,
                                      "overflow": "scroll",
                                      "position": "absolute",
                                      "top": 0,
                                      "visibility": "hidden",
                                      "whiteSpace": "pre",
                                    }
                                  }
                                />
                              </div>
                            </AutosizeInput>
                          </span>
                          <span
                            className="Select-arrow-zone"
                            onMouseDown={[Function]}
                          >
                            <span
                              className="icon-arrow-down"
                            />
                          </span>
                        </div>
                      </div>
                    </Select>
                  </SelectPicker>
                </StyledSelect>
              </SelectControl>
            </div>
          </div>
        </SelectField>
      </BuilderSelect>
      <BuilderInput
        controlled={true}
        onChange={[Function]}
        placeholder="src/example/*"
        value="a/bar"
      >
        <input
          className="css-1xtn8xn-Input-inputStyles-BuilderInput e1hyuoc77"
          onChange={[Function]}
          placeholder="src/example/*"
          value="a/bar"
        />
      </BuilderInput>
      <Divider
        src="icon-chevron-right"
      >
        <InlineSvg
          className="css-a4tn6s-Divider e1hyuoc78"
          src="icon-chevron-right"
        >
          <StyledSvg
            className="css-a4tn6s-Divider e1hyuoc78"
            height="1em"
            viewBox={Object {}}
            width="1em"
          >
            <svg
              className="e1hyuoc78 css-1uv43pt-StyledSvg-Divider e2idor0"
              height="1em"
              viewBox={Object {}}
              width="1em"
            >
              <use
                href="#test"
                xlinkHref="#test"
              />
            </svg>
          </StyledSvg>
        </InlineSvg>
      </Divider>
      <Flex
        align="center"
        flex="1"
        mr={1}
      >
        <Base
          align="center"
          className="css-1q48dzo"
          flex="1"
          mr={1}
        >
          <div
            className="css-1q48dzo"
            is={null}
          >
            <SelectOwners
              onChange={[Function]}
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              project={
                Object {
                  "hasAccess": true,
                  "id": "2",
                  "isBookmarked": false,
                  "isMember": true,
                  "name": "Project Name",
                  "slug": "project-slug",
                  "teams": Array [
                    Object {
                      "id": "3",
                      "isMember": true,
                      "name": "COOL TEAM",
                      "slug": "cool-team",
                    },
                  ],
                }
              }
              value={
                Array [
                  Object {
                    "actor": Object {
                      "id": "1",
                      "name": "Jane Doe",
                      "type": "user",
                    },
                    "label": <IdBadge
                      avatarSize={24}
                      hideEmail={true}
                      useLink={false}
                      user={
                        Object {
                          "email": "janedoe@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Jane Doe",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "user": Object {
                            "email": "janedoe@example.com",
                            "id": "1",
                            "name": "Jane Doe",
                          },
                          "username": "foo@example.com",
                        }
                      }
                    />,
                    "searchKey": "janedoe@example.com jane doe",
                    "value": "user:1",
                  },
                ]
              }
            >
              <MultiSelectControl
                async={true}
                cache={false}
                className="css-1domaf0"
                defaultOptions={true}
                filterOptions={[Function]}
                loadOptions={[Function]}
                onChange={[Function]}
                onInputChange={[Function]}
                placeholder="Add Owners"
                value={
                  Array [
                    Object {
                      "actor": Object {
                        "id": "1",
                        "name": "Jane Doe",
                        "type": "user",
                      },
                      "label": <IdBadge
                        avatarSize={24}
                        hideEmail={true}
                        useLink={false}
                        user={
                          Object {
                            "email": "janedoe@example.com",
                            "flags": Object {
                              "newsletter_consent_prompt": false,
                            },
                            "hasPasswordAuth": true,
                            "id": "1",
                            "isAuthenticated": true,
                            "name": "Jane Doe",
                            "options": Object {
                              "timezone": "UTC",
                            },
                            "user": Object {
                              "email": "janedoe@example.com",
                              "id": "1",
                              "name": "Jane Doe",
                            },
                            "username": "foo@example.com",
                          }
                        }
                      />,
                      "searchKey": "janedoe@example.com jane doe",
                      "value": "user:1",
                    },
                  ]
                }
                valueComponent={[Function]}
              >
                <SelectControl
                  async={true}
                  cache={false}
                  className="css-1domaf0"
                  defaultOptions={true}
                  filterOptions={[Function]}
                  loadOptions={[Function]}
                  multi={true}
                  onChange={[Function]}
                  onInputChange={[Function]}
                  placeholder="Add Owners"
                  value={
                    Array [
                      Object {
                        "actor": Object {
                          "id": "1",
                          "name": "Jane Doe",
                          "type": "user",
                        },
                        "label": <IdBadge
                          avatarSize={24}
                          hideEmail={true}
                          useLink={false}
                          user={
                            Object {
                              "email": "janedoe@example.com",
                              "flags": Object {
                                "newsletter_consent_prompt": false,
                              },
                              "hasPasswordAuth": true,
                              "id": "1",
                              "isAuthenticated": true,
                              "name": "Jane Doe",
                              "options": Object {
                                "timezone": "UTC",
                              },
                              "user": Object {
                                "email": "janedoe@example.com",
                                "id": "1",
                                "name": "Jane Doe",
                              },
                              "username": "foo@example.com",
                            }
                          }
                        />,
                        "searchKey": "janedoe@example.com jane doe",
                        "value": "user:1",
                      },
                    ]
                  }
                  valueComponent={[Function]}
                >
                  <StyledSelect
                    arrowRenderer={[Function]}
                    async={true}
                    cache={false}
                    className="css-1domaf0"
                    defaultOptions={true}
                    filterOptions={[Function]}
                    loadOptions={[Function]}
                    multi={true}
                    onChange={[Function]}
                    onInputChange={[Function]}
                    placeholder="Add Owners"
                    value={
                      Array [
                        Object {
                          "actor": Object {
                            "id": "1",
                            "name": "Jane Doe",
                            "type": "user",
                          },
                          "label": <IdBadge
                            avatarSize={24}
                            hideEmail={true}
                            useLink={false}
                            user={
                              Object {
                                "email": "janedoe@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Jane Doe",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "user": Object {
                                  "email": "janedoe@example.com",
                                  "id": "1",
                                  "name": "Jane Doe",
                                },
                                "username": "foo@example.com",
                              }
                            }
                          />,
                          "searchKey": "janedoe@example.com jane doe",
                          "value": "user:1",
                        },
                      ]
                    }
                    valueComponent={[Function]}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      async={true}
                      cache={false}
                      className="css-11osmt1-StyledSelect eho28m20"
                      defaultOptions={true}
                      filterOptions={[Function]}
                      loadOptions={[Function]}
                      multi={true}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      placeholder="Add Owners"
                      value={
                        Array [
                          Object {
                            "actor": Object {
                              "id": "1",
                              "name": "Jane Doe",
                              "type": "user",
                            },
                            "label": <IdBadge
                              avatarSize={24}
                              hideEmail={true}
                              useLink={false}
                              user={
                                Object {
                                  "email": "janedoe@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Jane Doe",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "user": Object {
                                    "email": "janedoe@example.com",
                                    "id": "1",
                                    "name": "Jane Doe",
                                  },
                                  "username": "foo@example.com",
                                }
                              }
                            />,
                            "searchKey": "janedoe@example.com jane doe",
                            "value": "user:1",
                          },
                        ]
                      }
                      valueComponent={[Function]}
                    >
                      <Async
                        arrowRenderer={[Function]}
                        autoload={true}
                        cache={false}
                        className="css-11osmt1-StyledSelect eho28m20"
                        defaultOptions={true}
                        filterOptions={[Function]}
                        ignoreAccents={true}
                        ignoreCase={true}
                        loadOptions={[Function]}
                        loadingPlaceholder="Loading..."
                        multi={true}
                        onChange={[Function]}
                        onInputChange={[Function]}
                        options={Array []}
                        placeholder="Add Owners"
                        searchPromptText="Type to search"
                        value={
                          Array [
                            Object {
                              "actor": Object {
                                "id": "1",
                                "name": "Jane Doe",
                                "type": "user",
                              },
                              "label": <IdBadge
                                avatarSize={24}
                                hideEmail={true}
                                useLink={false}
                                user={
                                  Object {
                                    "email": "janedoe@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Jane Doe",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "user": Object {
                                      "email": "janedoe@example.com",
                                      "id": "1",
                                      "name": "Jane Doe",
                                    },
                                    "username": "foo@example.com",
                                  }
                                }
                              />,
                              "searchKey": "janedoe@example.com jane doe",
                              "value": "user:1",
                            },
                          ]
                        }
                        valueComponent={[Function]}
                      >
                        <Select
                          arrowRenderer={[Function]}
                          autoload={true}
                          autosize={true}
                          backspaceRemoves={true}
                          backspaceToRemoveMessage="Press backspace to remove {label}"
                          cache={false}
                          className="css-11osmt1-StyledSelect eho28m20"
                          clearAllText="Clear all"
                          clearRenderer={[Function]}
                          clearValueText="Clear value"
                          clearable={true}
                          closeOnSelect={true}
                          defaultOptions={true}
                          deleteRemoves={true}
                          delimiter=","
                          disabled={false}
                          escapeClearsValue={true}
                          filterOptions={[Function]}
                          ignoreAccents={true}
                          ignoreCase={true}
                          inputProps={Object {}}
                          isLoading={false}
                          joinValues={false}
                          labelKey="label"
                          loadOptions={[Function]}
                          loadingPlaceholder="Loading..."
                          matchPos="any"
                          matchProp="any"
                          menuBuffer={0}
                          menuRenderer={[Function]}
                          multi={true}
                          noResultsText="Type to search"
                          onBlurResetsInput={true}
                          onChange={[Function]}
                          onCloseResetsInput={true}
                          onInputChange={[Function]}
                          onSelectResetsInput={true}
                          openOnClick={true}
                          optionComponent={[Function]}
                          options={
                            Array [
                              Object {
                                "actor": Object {
                                  "id": "1",
                                  "name": "Jane Doe",
                                  "type": "user",
                                },
                                "label": <IdBadge
                                  avatarSize={24}
                                  hideEmail={true}
                                  useLink={false}
                                  user={
                                    Object {
                                      "email": "janedoe@example.com",
                                      "flags": Object {
                                        "newsletter_consent_prompt": false,
                                      },
                                      "hasPasswordAuth": true,
                                      "id": "1",
                                      "isAuthenticated": true,
                                      "name": "Jane Doe",
                                      "options": Object {
                                        "timezone": "UTC",
                                      },
                                      "user": Object {
                                        "email": "janedoe@example.com",
                                        "id": "1",
                                        "name": "Jane Doe",
                                      },
                                      "username": "foo@example.com",
                                    }
                                  }
                                />,
                                "searchKey": "janedoe@example.com jane doe",
                                "value": "user:1",
                              },
                              Object {
                                "actor": Object {
                                  "id": "3",
                                  "name": "cool-team",
                                  "type": "team",
                                },
                                "label": <IdBadge
                                  team={
                                    Object {
                                      "id": "3",
                                      "isMember": true,
                                      "name": "COOL TEAM",
                                      "slug": "cool-team",
                                    }
                                  }
                                />,
                                "searchKey": "#cool-team",
                                "value": "team:3",
                              },
                              Object {
                                "actor": Object {
                                  "id": "4",
                                  "name": "team-not-in-project",
                                  "type": "team",
                                },
                                "disabled": true,
                                "label": <Flex
                                  justify="space-between"
                                >
                                  <DisabledLabel>
                                    <Tooltip
                                      title="#team-not-in-project is not a member of project"
                                      tooltipOptions={
                                        Object {
                                          "container": "body",
                                          "placement": "left",
                                        }
                                      }
                                    >
                                      <IdBadge
                                        team={
                                          Object {
                                            "id": "4",
                                            "isMember": true,
                                            "name": "TEAM NOT IN PROJECT",
                                            "slug": "team-not-in-project",
                                          }
                                        }
                                      />
                                    </Tooltip>
                                  </DisabledLabel>
                                  <Tooltip
                                    title="Add #team-not-in-project to project"
                                  >
                                    <AddToProjectButton
                                      borderless={true}
                                      disabled={false}
                                      onClick={[Function]}
                                      size="zero"
                                    >
                                      <InlineSvg
                                        src="icon-circle-add"
                                      />
                                    </AddToProjectButton>
                                  </Tooltip>
                                </Flex>,
                                "searchKey": "#team-not-in-project",
                                "value": "team:4",
                              },
                              Object {
                                "actor": Object {
                                  "id": "2",
                                  "name": "John Smith",
                                  "type": "user",
                                },
                                "disabled": true,
                                "label": <DisabledLabel>
                                  <Tooltip
                                    title="John Smith is not a member of project"
                                    tooltipOptions={
                                      Object {
                                        "container": "body",
                                        "placement": "left",
                                      }
                                    }
                                  >
                                    <IdBadge
                                      avatarSize={24}
                                      hideEmail={true}
                                      useLink={false}
                                      user={
                                        Object {
                                          "email": "johnsmith@example.com",
                                          "id": "2",
                                          "name": "John Smith",
                                        }
                                      }
                                    />
                                  </Tooltip>
                                </DisabledLabel>,
                                "searchKey": "johnsmith@example.com john smith",
                                "value": "user:2",
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="Add Owners"
                          removeSelected={true}
                          required={false}
                          rtl={false}
                          scrollMenuIntoView={true}
                          searchPromptText="Type to search"
                          searchable={true}
                          simpleValue={false}
                          tabSelectsValue={true}
                          trimFilter={true}
                          value={
                            Array [
                              Object {
                                "actor": Object {
                                  "id": "1",
                                  "name": "Jane Doe",
                                  "type": "user",
                                },
                                "label": <IdBadge
                                  avatarSize={24}
                                  hideEmail={true}
                                  useLink={false}
                                  user={
                                    Object {
                                      "email": "janedoe@example.com",
                                      "flags": Object {
                                        "newsletter_consent_prompt": false,
                                      },
                                      "hasPasswordAuth": true,
                                      "id": "1",
                                      "isAuthenticated": true,
                                      "name": "Jane Doe",
                                      "options": Object {
                                        "timezone": "UTC",
                                      },
                                      "user": Object {
                                        "email": "janedoe@example.com",
                                        "id": "1",
                                        "name": "Jane Doe",
                                      },
                                      "username": "foo@example.com",
                                    }
                                  }
                                />,
                                "searchKey": "janedoe@example.com jane doe",
                                "value": "user:1",
                              },
                            ]
                          }
                          valueComponent={[Function]}
                          valueKey="value"
                        >
                          <div
                            className="Select css-11osmt1-StyledSelect eho28m20 has-value is-clearable is-focused is-searchable Select--multi"
                          >
                            <div
                              className="Select-control"
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                            >
                              <span
                                className="Select-multi-value-wrapper"
                                id="react-select-5--value"
                              >
                                <ValueComponent
                                  disabled={false}
                                  id="react-select-5--value-0"
                                  instancePrefix="react-select-5-"
                                  key="value-0-user:1"
                                  onClick={null}
                                  onRemove={[Function]}
                                  placeholder="Add Owners"
                                  value={
                                    Object {
                                      "actor": Object {
                                        "id": "1",
                                        "name": "Jane Doe",
                                        "type": "user",
                                      },
                                      "label": <IdBadge
                                        avatarSize={24}
                                        hideEmail={true}
                                        useLink={false}
                                        user={
                                          Object {
                                            "email": "janedoe@example.com",
                                            "flags": Object {
                                              "newsletter_consent_prompt": false,
                                            },
                                            "hasPasswordAuth": true,
                                            "id": "1",
                                            "isAuthenticated": true,
                                            "name": "Jane Doe",
                                            "options": Object {
                                              "timezone": "UTC",
                                            },
                                            "user": Object {
                                              "email": "janedoe@example.com",
                                              "id": "1",
                                              "name": "Jane Doe",
                                            },
                                            "username": "foo@example.com",
                                          }
                                        }
                                      />,
                                      "searchKey": "janedoe@example.com jane doe",
                                      "value": "user:1",
                                    }
                                  }
                                >
                                  <a
                                    onClick={[Function]}
                                  >
                                    <ActorAvatar
                                      actor={
                                        Object {
                                          "id": "1",
                                          "name": "Jane Doe",
                                          "type": "user",
                                        }
                                      }
                                      size={28}
                                    >
                                      <Avatar
                                        hasTooltip={true}
                                        size={28}
                                        user={
                                          Object {
                                            "email": "janedoe@example.com",
                                            "flags": Object {
                                              "newsletter_consent_prompt": false,
                                            },
                                            "hasPasswordAuth": true,
                                            "id": "1",
                                            "isAuthenticated": true,
                                            "name": "Jane Doe",
                                            "options": Object {
                                              "timezone": "UTC",
                                            },
                                            "user": Object {
                                              "email": "janedoe@example.com",
                                              "id": "1",
                                              "name": "Jane Doe",
                                            },
                                            "username": "foo@example.com",
                                          }
                                        }
                                      >
                                        <UserAvatar
                                          gravatar={false}
                                          hasTooltip={true}
                                          size={28}
                                          user={
                                            Object {
                                              "email": "janedoe@example.com",
                                              "flags": Object {
                                                "newsletter_consent_prompt": false,
                                              },
                                              "hasPasswordAuth": true,
                                              "id": "1",
                                              "isAuthenticated": true,
                                              "name": "Jane Doe",
                                              "options": Object {
                                                "timezone": "UTC",
                                              },
                                              "user": Object {
                                                "email": "janedoe@example.com",
                                                "id": "1",
                                                "name": "Jane Doe",
                                              },
                                              "username": "foo@example.com",
                                            }
                                          }
                                        >
                                          <BaseAvatar
                                            gravatarId="janedoe@example.com"
                                            hasTooltip={true}
                                            letterId="janedoe@example.com"
                                            round={true}
                                            size={28}
                                            style={Object {}}
                                            title="Jane Doe"
                                            tooltip="Jane Doe (janedoe@example.com)"
                                            type="letter_avatar"
                                            uploadPath="avatar"
                                          >
                                            <Tooltip
                                              disabled={false}
                                              title="Jane Doe (janedoe@example.com)"
                                            >
                                              <StyledBaseAvatar
                                                className="tip avatar"
                                                style={
                                                  Object {
                                                    "height": "28px",
                                                    "width": "28px",
                                                  }
                                                }
                                                title="Jane Doe (janedoe@example.com)"
                                              >
                                                <span
                                                  className="tip avatar css-15umz1j-StyledBaseAvatar e1z0ohzl0"
                                                  style={
                                                    Object {
                                                      "height": "28px",
                                                      "width": "28px",
                                                    }
                                                  }
                                                  title="Jane Doe (janedoe@example.com)"
                                                >
                                                  <LetterAvatar
                                                    displayName="Jane Doe"
                                                    identifier="janedoe@example.com"
                                                    round={true}
                                                  >
                                                    <Svg
                                                      round={true}
                                                      viewBox="0 0 120 120"
                                                    >
                                                      <svg
                                                        className="css-1r4mnb9-Svg e1knxa8x0"
                                                        viewBox="0 0 120 120"
                                                      >
                                                        <rect
                                                          fill="#f868bc"
                                                          height="120"
                                                          rx="15"
                                                          ry="15"
                                                          width="120"
                                                          x="0"
                                                          y="0"
                                                        />
                                                        <text
                                                          fill="#FFFFFF"
                                                          fontSize="65"
                                                          style={
                                                            Object {
                                                              "dominantBaseline": "central",
                                                            }
                                                          }
                                                          textAnchor="middle"
                                                          x="50%"
                                                          y="50%"
                                                        >
                                                          JD
                                                        </text>
                                                      </svg>
                                                    </Svg>
                                                  </LetterAvatar>
                                                </span>
                                              </StyledBaseAvatar>
                                            </Tooltip>
                                          </BaseAvatar>
                                        </UserAvatar>
                                      </Avatar>
                                    </ActorAvatar>
                                  </a>
                                </ValueComponent>
                                <AutosizeInput
                                  aria-activedescendant="react-select-5--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns="react-select-5--backspace-remove-message"
                                  className="Select-input"
                                  injectStyles={true}
                                  minWidth="5"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  value=""
                                >
                                  <div
                                    className="Select-input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                      }
                                    }
                                  >
                                    <input
                                      aria-activedescendant="react-select-5--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns="react-select-5--backspace-remove-message"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      style={
                                        Object {
                                          "boxSizing": "content-box",
                                          "width": "5px",
                                        }
                                      }
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </span>
                              <span
                                aria-live="assertive"
                                className="Select-aria-only"
                                id="react-select-5--backspace-remove-message"
                              >
                                Press backspace to remove [object Object]
                              </span>
                              <span
                                aria-label="Clear all"
                                className="Select-clear-zone"
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                title="Clear all"
                              >
                                <span
                                  className="Select-clear"
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "&times;",
                                    }
                                  }
                                />
                              </span>
                              <span
                                className="Select-arrow-zone"
                                onMouseDown={[Function]}
                              >
                                <span
                                  className="icon-arrow-down"
                                />
                              </span>
                            </div>
                          </div>
                        </Select>
                      </Async>
                    </SelectPicker>
                  </StyledSelect>
                </SelectControl>
              </MultiSelectControl>
            </SelectOwners>
          </div>
        </Base>
      </Flex>
      <AddButton
        disabled={false}
        icon="icon-circle-add"
        onClick={[Function]}
        priority="primary"
        size="small"
      >
        <Button
          className="css-po7kq7-AddButton e1hyuoc79"
          disabled={false}
          icon="icon-circle-add"
          onClick={[Function]}
          priority="primary"
          size="small"
        >
          <StyledButton
            className="css-po7kq7-AddButton e1hyuoc79"
            disabled={false}
            onClick={[Function]}
            priority="primary"
            role="button"
            size="small"
          >
            <Component
              className="e1hyuoc79 css-1q9tuf6-StyledButton-getColors-AddButton e17811v30"
              disabled={false}
              onClick={[Function]}
              priority="primary"
              role="button"
              size="small"
            >
              <button
                className="e1hyuoc79 css-1q9tuf6-StyledButton-getColors-AddButton e17811v30"
                disabled={false}
                onClick={[Function]}
                priority="primary"
                role="button"
                size="small"
              >
                <ButtonLabel
                  size="small"
                >
                  <Component
                    className="css-19bmqb3-ButtonLabel e17811v31"
                    size="small"
                  >
                    <Flex
                      align="center"
                      className="css-19bmqb3-ButtonLabel e17811v31"
                      size="small"
                    >
                      <Base
                        align="center"
                        className="e17811v31 css-1eblpyp-ButtonLabel"
                        size="small"
                      >
                        <div
                          className="e17811v31 css-1eblpyp-ButtonLabel"
                          is={null}
                          size="small"
                        >
                          <Icon
                            hasChildren={false}
                            size="small"
                          >
                            <Component
                              className="css-ljhpxy-Icon e17811v32"
                              hasChildren={false}
                              size="small"
                            >
                              <Box
                                className="css-ljhpxy-Icon e17811v32"
                                size="small"
                              >
                                <Base
                                  className="e17811v32 css-7mohvl-Icon"
                                  size="small"
                                >
                                  <div
                                    className="e17811v32 css-7mohvl-Icon"
                                    is={null}
                                    size="small"
                                  >
                                    <StyledInlineSvg
                                      size="12px"
                                      src="icon-circle-add"
                                    >
                                      <InlineSvg
                                        className="css-1ov3rcq-StyledInlineSvg e17811v33"
                                        size="12px"
                                        src="icon-circle-add"
                                      >
                                        <StyledSvg
                                          className="css-1ov3rcq-StyledInlineSvg e17811v33"
                                          height="12px"
                                          viewBox={Object {}}
                                          width="12px"
                                        >
                                          <svg
                                            className="e17811v33 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                            height="12px"
                                            viewBox={Object {}}
                                            width="12px"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </StyledSvg>
                                      </InlineSvg>
                                    </StyledInlineSvg>
                                  </div>
                                </Base>
                              </Box>
                            </Component>
                          </Icon>
                        </div>
                      </Base>
                    </Flex>
                  </Component>
                </ButtonLabel>
              </button>
            </Component>
          </StyledButton>
        </Button>
      </AddButton>
    </div>
  </BuilderBar>
</RuleBuilder>
`;
