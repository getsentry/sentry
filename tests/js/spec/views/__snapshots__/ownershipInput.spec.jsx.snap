// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTeamsSettings render() renders 1`] = `
<OwnerInput
  initialText="url:src @dummy@example.com"
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  project={
    Object {
      "hasAccess": true,
      "id": "2",
      "isBookmarked": false,
      "isMember": true,
      "name": "Project Name",
      "slug": "project-slug",
      "teams": Array [],
    }
  }
>
  <RuleBuilder
    onAddRule={[Function]}
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    project={
      Object {
        "hasAccess": true,
        "id": "2",
        "isBookmarked": false,
        "isMember": true,
        "name": "Project Name",
        "slug": "project-slug",
        "teams": Array [],
      }
    }
  >
    <BuilderBar>
      <div
        className="css-1rsoebt-BuilderBar css-13f5eg05"
      >
        <BuilderSelect
          onChange={[Function]}
          showSearch={false}
          value="path"
        >
          <SelectInput
            className="css-1eslqkc-BuilderSelect css-13f5eg06"
            disabled={false}
            multiple={false}
            onChange={[Function]}
            placeholder="Select an option..."
            required={false}
            showSearch={false}
            value="path"
          >
            <select
              className="css-1eslqkc-BuilderSelect css-13f5eg06"
              disabled={false}
              multiple={false}
              onChange={[Function]}
              placeholder="Select an option..."
              required={false}
              value="path"
            >
              <option
                value="path"
              >
                Path
              </option>
              <option
                value="url"
              >
                URL
              </option>
            </select>
          </SelectInput>
        </BuilderSelect>
        <BuilderInput
          controlled={true}
          onChange={[Function]}
          placeholder="src/example/*"
          value=""
        >
          <input
            className="css-1t4syiu-Input-BuilderInput css-13f5eg07"
            onChange={[Function]}
            placeholder="src/example/*"
            value=""
          />
        </BuilderInput>
        <Divider
          src="icon-chevron-right"
        >
          <InlineSvg
            className="css-a4tn6s-Divider css-13f5eg08"
            src="icon-chevron-right"
          >
            <StyledSvg
              className="css-a4tn6s-Divider css-13f5eg08"
              height="1em"
              viewBox={Object {}}
              width="1em"
            >
              <svg
                className="css-13f5eg08 css-5e2rei-StyledSvg css-adkcw30"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <use
                  href="#test"
                  xlinkHref="#test"
                />
              </svg>
            </StyledSvg>
          </InlineSvg>
        </Divider>
        <Flex
          align="center"
          flex="1"
          mr={1}
        >
          <Base
            align="center"
            className="css-1q48dzo"
            flex="1"
            mr={1}
          >
            <div
              className="css-1q48dzo"
              is={null}
            >
              <SelectOwners
                onChange={[Function]}
                options={Array []}
                value={Array []}
              >
                <MultiSelectField
                  disabled={false}
                  hideErrorMessage={false}
                  multi={true}
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Add Owners"
                  required={false}
                  style={
                    Object {
                      "width": 200,
                    }
                  }
                  value={Array []}
                  valueComponent={[Function]}
                >
                  <MultiSelect
                    arrowRenderer={[Function]}
                    disabled={false}
                    hideErrorMessage={false}
                    id="id-undefined"
                    multi={true}
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Add Owners"
                    required={false}
                    style={
                      Object {
                        "width": 200,
                      }
                    }
                    value={Array []}
                    valueComponent={[Function]}
                  >
                    <Select
                      arrowRenderer={[Function]}
                      autosize={true}
                      backspaceRemoves={true}
                      backspaceToRemoveMessage="Press backspace to remove {label}"
                      className="css-1yznv6y-MultiSelect css-12eevnk0"
                      clearAllText="Clear all"
                      clearRenderer={[Function]}
                      clearValueText="Clear value"
                      clearable={true}
                      closeOnSelect={true}
                      deleteRemoves={true}
                      delimiter=","
                      disabled={false}
                      escapeClearsValue={true}
                      filterOptions={[Function]}
                      hideErrorMessage={false}
                      id="id-undefined"
                      ignoreAccents={true}
                      ignoreCase={true}
                      inputProps={Object {}}
                      isLoading={false}
                      joinValues={false}
                      labelKey="label"
                      matchPos="any"
                      matchProp="any"
                      menuBuffer={0}
                      menuRenderer={[Function]}
                      multi={true}
                      noResultsText="No results found"
                      onBlurResetsInput={true}
                      onChange={[Function]}
                      onCloseResetsInput={true}
                      onSelectResetsInput={true}
                      openOnClick={true}
                      optionComponent={[Function]}
                      options={Array []}
                      pageSize={5}
                      placeholder="Add Owners"
                      removeSelected={true}
                      required={false}
                      rtl={false}
                      scrollMenuIntoView={true}
                      searchable={true}
                      simpleValue={false}
                      style={
                        Object {
                          "width": 200,
                        }
                      }
                      tabSelectsValue={true}
                      trimFilter={true}
                      value={Array []}
                      valueComponent={[Function]}
                      valueKey="value"
                    >
                      <div
                        className="Select css-1yznv6y-MultiSelect css-12eevnk0 is-clearable is-searchable Select--multi"
                      >
                        <div
                          className="Select-control"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          style={
                            Object {
                              "width": 200,
                            }
                          }
                        >
                          <span
                            className="Select-multi-value-wrapper"
                            id="react-select-2--value"
                          >
                            <div
                              className="Select-placeholder"
                            >
                              Add Owners
                            </div>
                            <AutosizeInput
                              aria-activedescendant="react-select-2--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-owns=""
                              className="Select-input"
                              id="id-undefined"
                              injectStyles={true}
                              minWidth="5"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              value=""
                            >
                              <div
                                className="Select-input"
                                style={
                                  Object {
                                    "display": "inline-block",
                                  }
                                }
                              >
                                <input
                                  aria-activedescendant="react-select-2--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  id="id-undefined"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  style={
                                    Object {
                                      "boxSizing": "content-box",
                                      "width": "5px",
                                    }
                                  }
                                  value=""
                                />
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "left": 0,
                                      "overflow": "scroll",
                                      "position": "absolute",
                                      "top": 0,
                                      "visibility": "hidden",
                                      "whiteSpace": "pre",
                                    }
                                  }
                                />
                              </div>
                            </AutosizeInput>
                          </span>
                          <span
                            className="Select-arrow-zone"
                            onMouseDown={[Function]}
                          >
                            <span
                              className="icon-arrow-down"
                            />
                          </span>
                        </div>
                      </div>
                    </Select>
                  </MultiSelect>
                </MultiSelectField>
              </SelectOwners>
            </div>
          </Base>
        </Flex>
        <RuleAddButton
          icon="icon-circle-add"
          onClick={[Function]}
          priority="primary"
          size="zero"
        >
          <Button
            className="css-3daogo-RuleAddButton css-13f5eg09"
            disabled={false}
            icon="icon-circle-add"
            onClick={[Function]}
            priority="primary"
            size="zero"
          >
            <button
              className="css-3daogo-RuleAddButton css-13f5eg09 button button-primary button-zero"
              onClick={[Function]}
              role="button"
            >
              <Flex
                align="center"
                className="button-label"
              >
                <Base
                  align="center"
                  className="button-label css-5ipae5"
                >
                  <div
                    className="button-label css-5ipae5"
                    is={null}
                  >
                    <Icon
                      size="zero"
                    >
                      <Base
                        className="css-l3pkcx-Icon css-yr2ozh0"
                        size="zero"
                      >
                        <div
                          className="css-l3pkcx-Icon css-yr2ozh0"
                          is={null}
                          size="zero"
                        >
                          <StyledInlineSvg
                            size="16px"
                            src="icon-circle-add"
                          >
                            <InlineSvg
                              className="css-1ov3rcq-StyledInlineSvg css-yr2ozh1"
                              size="16px"
                              src="icon-circle-add"
                            >
                              <StyledSvg
                                className="css-1ov3rcq-StyledInlineSvg css-yr2ozh1"
                                height="16px"
                                viewBox={Object {}}
                                width="16px"
                              >
                                <svg
                                  className="css-yr2ozh1 css-1rlza0i-StyledSvg css-adkcw30"
                                  height="16px"
                                  viewBox={Object {}}
                                  width="16px"
                                >
                                  <use
                                    href="#test"
                                    xlinkHref="#test"
                                  />
                                </svg>
                              </StyledSvg>
                            </InlineSvg>
                          </StyledInlineSvg>
                        </div>
                      </Base>
                    </Icon>
                  </div>
                </Base>
              </Flex>
            </button>
          </Button>
        </RuleAddButton>
      </div>
    </BuilderBar>
  </RuleBuilder>
  <div
    onKeyDown={[Function]}
    style={
      Object {
        "position": "relative",
      }
    }
  >
    <StyledTextArea
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      onChange={[Function]}
      placeholder="#example usage
path:src/example/pipeline/* person@sentry.io #infra
url:http://example.com/settings/* #product"
      spellCheck="false"
      value="new"
    >
      <TextareaAutosize
        autoCapitalize="off"
        autoComplete="off"
        autoCorrect="off"
        className="css-e9agsp-StyledTextArea css-zed2xb2"
        onChange={[Function]}
        placeholder="#example usage
path:src/example/pipeline/* person@sentry.io #infra
url:http://example.com/settings/* #product"
        rows={1}
        spellCheck="false"
        value="new"
      >
        <textarea
          autoCapitalize="off"
          autoComplete="off"
          autoCorrect="off"
          className="css-e9agsp-StyledTextArea css-zed2xb2"
          onChange={[Function]}
          placeholder="#example usage
path:src/example/pipeline/* person@sentry.io #infra
url:http://example.com/settings/* #product"
          rows={1}
          spellCheck="false"
          value="new"
        />
      </TextareaAutosize>
    </StyledTextArea>
    <SaveButton>
      <div
        className="css-5zvod-SaveButton css-zed2xb1"
      >
        <Button
          disabled={false}
          onClick={[Function]}
          priority="primary"
          size="small"
        >
          <button
            className="button button-primary button-sm"
            onClick={[Function]}
            role="button"
          >
            <Flex
              align="center"
              className="button-label"
            >
              <Base
                align="center"
                className="button-label css-5ipae5"
              >
                <div
                  className="button-label css-5ipae5"
                  is={null}
                >
                  Save Changes
                </div>
              </Base>
            </Flex>
          </button>
        </Button>
      </div>
    </SaveButton>
  </div>
</OwnerInput>
`;
