// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTeamsSettings render() renders 1`] = `
<OwnerInput
  initialText="url:src @dummy@example.com"
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  project={
    Object {
      "hasAccess": true,
      "id": "2",
      "isBookmarked": false,
      "isMember": true,
      "name": "Project Name",
      "slug": "project-slug",
      "teams": Array [],
    }
  }
>
  <RuleBuilder
    onAddRule={[Function]}
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    project={
      Object {
        "hasAccess": true,
        "id": "2",
        "isBookmarked": false,
        "isMember": true,
        "name": "Project Name",
        "slug": "project-slug",
        "teams": Array [],
      }
    }
  >
    <BuilderBar>
      <div
        className="css-1rsoebt-BuilderBar css-spr3415"
      >
        <BuilderSelect
          clearable={false}
          name="select-type"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Path",
                "value": "path",
              },
              Object {
                "label": "URL",
                "value": "url",
              },
            ]
          }
          showSearch={false}
          style={
            Object {
              "width": 140,
            }
          }
          value="path"
        >
          <SelectField
            className="css-1bclqmz-BuilderSelect css-spr3416"
            clearable={false}
            disabled={false}
            hideErrorMessage={false}
            name="select-type"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Path",
                  "value": "path",
                },
                Object {
                  "label": "URL",
                  "value": "url",
                },
              ]
            }
            required={false}
            showSearch={false}
            style={
              Object {
                "width": 140,
              }
            }
            value="path"
          >
            <div
              className="css-1bclqmz-BuilderSelect css-spr3416"
              style={
                Object {
                  "width": 140,
                }
              }
            >
              <div
                className="controls"
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  clearable={false}
                  disabled={false}
                  id="id-select-type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "Path",
                        "value": "path",
                      },
                      Object {
                        "label": "URL",
                        "value": "url",
                      },
                    ]
                  }
                  required={false}
                  value="path"
                >
                  <Select
                    arrowRenderer={[Function]}
                    autosize={true}
                    backspaceRemoves={true}
                    backspaceToRemoveMessage="Press backspace to remove {label}"
                    className="css-16280ey-StyledSelect css-seafkz0"
                    clearAllText="Clear all"
                    clearRenderer={[Function]}
                    clearValueText="Clear value"
                    clearable={false}
                    closeOnSelect={true}
                    deleteRemoves={true}
                    delimiter=","
                    disabled={false}
                    escapeClearsValue={true}
                    filterOptions={[Function]}
                    id="id-select-type"
                    ignoreAccents={true}
                    ignoreCase={true}
                    inputProps={Object {}}
                    isLoading={false}
                    joinValues={false}
                    labelKey="label"
                    matchPos="any"
                    matchProp="any"
                    menuBuffer={0}
                    menuRenderer={[Function]}
                    multi={false}
                    noResultsText="No results found"
                    onBlurResetsInput={true}
                    onChange={[Function]}
                    onCloseResetsInput={true}
                    onSelectResetsInput={true}
                    openOnClick={true}
                    optionComponent={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Path",
                          "value": "path",
                        },
                        Object {
                          "label": "URL",
                          "value": "url",
                        },
                      ]
                    }
                    pageSize={5}
                    placeholder="Select..."
                    removeSelected={true}
                    required={false}
                    rtl={false}
                    scrollMenuIntoView={true}
                    searchable={true}
                    simpleValue={false}
                    tabSelectsValue={true}
                    trimFilter={true}
                    value="path"
                    valueComponent={[Function]}
                    valueKey="value"
                  >
                    <div
                      className="Select css-16280ey-StyledSelect css-seafkz0 has-value is-searchable Select--single"
                    >
                      <div
                        className="Select-control"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                      >
                        <span
                          className="Select-multi-value-wrapper"
                          id="react-select-2--value"
                        >
                          <Value
                            disabled={false}
                            id="react-select-2--value-item"
                            instancePrefix="react-select-2-"
                            onClick={null}
                            placeholder="Select..."
                            value={
                              Object {
                                "label": "Path",
                                "value": "path",
                              }
                            }
                          >
                            <div
                              className="Select-value"
                            >
                              <span
                                aria-selected="true"
                                className="Select-value-label"
                                id="react-select-2--value-item"
                                role="option"
                              >
                                Path
                              </span>
                            </div>
                          </Value>
                          <AutosizeInput
                            aria-activedescendant="react-select-2--value"
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-owns=""
                            className="Select-input"
                            id="id-select-type"
                            injectStyles={true}
                            minWidth="5"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            value=""
                          >
                            <div
                              className="Select-input"
                              style={
                                Object {
                                  "display": "inline-block",
                                }
                              }
                            >
                              <input
                                aria-activedescendant="react-select-2--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                id="id-select-type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                style={
                                  Object {
                                    "boxSizing": "content-box",
                                    "width": "5px",
                                  }
                                }
                                value=""
                              />
                              <div
                                style={
                                  Object {
                                    "height": 0,
                                    "left": 0,
                                    "overflow": "scroll",
                                    "position": "absolute",
                                    "top": 0,
                                    "visibility": "hidden",
                                    "whiteSpace": "pre",
                                  }
                                }
                              />
                            </div>
                          </AutosizeInput>
                        </span>
                        <span
                          className="Select-arrow-zone"
                          onMouseDown={[Function]}
                        >
                          <span
                            className="icon-arrow-down"
                          />
                        </span>
                      </div>
                    </div>
                  </Select>
                </StyledSelect>
              </div>
            </div>
          </SelectField>
        </BuilderSelect>
        <BuilderInput
          controlled={true}
          onChange={[Function]}
          placeholder="src/example/*"
          value=""
        >
          <input
            className="css-1t4syiu-Input-BuilderInput css-spr3417"
            onChange={[Function]}
            placeholder="src/example/*"
            value=""
          />
        </BuilderInput>
        <Divider
          src="icon-chevron-right"
        >
          <InlineSvg
            className="css-a4tn6s-Divider css-spr3418"
            src="icon-chevron-right"
          >
            <StyledSvg
              className="css-a4tn6s-Divider css-spr3418"
              height="1em"
              viewBox={Object {}}
              width="1em"
            >
              <svg
                className="css-spr3418 css-5e2rei-StyledSvg css-adkcw30"
                height="1em"
                viewBox={Object {}}
                width="1em"
              >
                <use
                  href="#test"
                  xlinkHref="#test"
                />
              </svg>
            </StyledSvg>
          </InlineSvg>
        </Divider>
        <Flex
          align="center"
          flex="1"
          mr={1}
        >
          <Base
            align="center"
            className="css-1q48dzo"
            flex="1"
            mr={1}
          >
            <div
              className="css-1q48dzo"
              is={null}
            >
              <SelectOwners
                onChange={[Function]}
                options={Array []}
                value={Array []}
              >
                <MultiSelectField
                  disabled={false}
                  hideErrorMessage={false}
                  multi={true}
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Add Owners"
                  required={false}
                  style={
                    Object {
                      "width": 200,
                    }
                  }
                  value={Array []}
                  valueComponent={[Function]}
                >
                  <div
                    className=""
                    style={
                      Object {
                        "width": 200,
                      }
                    }
                  >
                    <div
                      className="controls"
                    >
                      <StyledSelect
                        arrowRenderer={[Function]}
                        disabled={false}
                        hideErrorMessage={false}
                        id="id-undefined"
                        multi={true}
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Add Owners"
                        required={false}
                        style={
                          Object {
                            "width": 200,
                          }
                        }
                        value={Array []}
                        valueComponent={[Function]}
                      >
                        <Select
                          arrowRenderer={[Function]}
                          autosize={true}
                          backspaceRemoves={true}
                          backspaceToRemoveMessage="Press backspace to remove {label}"
                          className="css-16280ey-StyledSelect css-seafkz0"
                          clearAllText="Clear all"
                          clearRenderer={[Function]}
                          clearValueText="Clear value"
                          clearable={true}
                          closeOnSelect={true}
                          deleteRemoves={true}
                          delimiter=","
                          disabled={false}
                          escapeClearsValue={true}
                          filterOptions={[Function]}
                          hideErrorMessage={false}
                          id="id-undefined"
                          ignoreAccents={true}
                          ignoreCase={true}
                          inputProps={Object {}}
                          isLoading={false}
                          joinValues={false}
                          labelKey="label"
                          matchPos="any"
                          matchProp="any"
                          menuBuffer={0}
                          menuRenderer={[Function]}
                          multi={true}
                          noResultsText="No results found"
                          onBlurResetsInput={true}
                          onChange={[Function]}
                          onCloseResetsInput={true}
                          onSelectResetsInput={true}
                          openOnClick={true}
                          optionComponent={[Function]}
                          options={Array []}
                          pageSize={5}
                          placeholder="Add Owners"
                          removeSelected={true}
                          required={false}
                          rtl={false}
                          scrollMenuIntoView={true}
                          searchable={true}
                          simpleValue={false}
                          style={
                            Object {
                              "width": 200,
                            }
                          }
                          tabSelectsValue={true}
                          trimFilter={true}
                          value={Array []}
                          valueComponent={[Function]}
                          valueKey="value"
                        >
                          <div
                            className="Select css-16280ey-StyledSelect css-seafkz0 is-clearable is-searchable Select--multi"
                          >
                            <div
                              className="Select-control"
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              style={
                                Object {
                                  "width": 200,
                                }
                              }
                            >
                              <span
                                className="Select-multi-value-wrapper"
                                id="react-select-3--value"
                              >
                                <div
                                  className="Select-placeholder"
                                >
                                  Add Owners
                                </div>
                                <AutosizeInput
                                  aria-activedescendant="react-select-3--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  className="Select-input"
                                  id="id-undefined"
                                  injectStyles={true}
                                  minWidth="5"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  value=""
                                >
                                  <div
                                    className="Select-input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                      }
                                    }
                                  >
                                    <input
                                      aria-activedescendant="react-select-3--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns=""
                                      id="id-undefined"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      style={
                                        Object {
                                          "boxSizing": "content-box",
                                          "width": "5px",
                                        }
                                      }
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </span>
                              <span
                                className="Select-arrow-zone"
                                onMouseDown={[Function]}
                              >
                                <span
                                  className="icon-arrow-down"
                                />
                              </span>
                            </div>
                          </div>
                        </Select>
                      </StyledSelect>
                    </div>
                  </div>
                </MultiSelectField>
              </SelectOwners>
            </div>
          </Base>
        </Flex>
        <RuleAddButton
          icon="icon-circle-add"
          onClick={[Function]}
          priority="primary"
          size="zero"
        >
          <Button
            className="css-3daogo-RuleAddButton css-spr3419"
            disabled={false}
            icon="icon-circle-add"
            onClick={[Function]}
            priority="primary"
            size="zero"
          >
            <button
              className="css-3daogo-RuleAddButton css-spr3419 button button-primary button-zero"
              disabled={false}
              onClick={[Function]}
              role="button"
            >
              <Flex
                align="center"
                className="button-label"
              >
                <Base
                  align="center"
                  className="button-label css-5ipae5"
                >
                  <div
                    className="button-label css-5ipae5"
                    is={null}
                  >
                    <Icon
                      size="zero"
                    >
                      <Base
                        className="css-l3pkcx-Icon css-1vxxnb60"
                        size="zero"
                      >
                        <div
                          className="css-l3pkcx-Icon css-1vxxnb60"
                          is={null}
                          size="zero"
                        >
                          <StyledInlineSvg
                            size="16px"
                            src="icon-circle-add"
                          >
                            <InlineSvg
                              className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
                              size="16px"
                              src="icon-circle-add"
                            >
                              <StyledSvg
                                className="css-1ov3rcq-StyledInlineSvg css-1vxxnb61"
                                height="16px"
                                viewBox={Object {}}
                                width="16px"
                              >
                                <svg
                                  className="css-1vxxnb61 css-1rlza0i-StyledSvg css-adkcw30"
                                  height="16px"
                                  viewBox={Object {}}
                                  width="16px"
                                >
                                  <use
                                    href="#test"
                                    xlinkHref="#test"
                                  />
                                </svg>
                              </StyledSvg>
                            </InlineSvg>
                          </StyledInlineSvg>
                        </div>
                      </Base>
                    </Icon>
                  </div>
                </Base>
              </Flex>
            </button>
          </Button>
        </RuleAddButton>
      </div>
    </BuilderBar>
  </RuleBuilder>
  <div
    onKeyDown={[Function]}
    style={
      Object {
        "position": "relative",
      }
    }
  >
    <StyledTextArea
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      onChange={[Function]}
      placeholder="#example usage
path:src/example/pipeline/* person@sentry.io #infra
url:http://example.com/settings/* #product"
      spellCheck="false"
      value="new"
    >
      <TextareaAutosize
        autoCapitalize="off"
        autoComplete="off"
        autoCorrect="off"
        className="css-e9agsp-StyledTextArea css-1rksra02"
        onChange={[Function]}
        placeholder="#example usage
path:src/example/pipeline/* person@sentry.io #infra
url:http://example.com/settings/* #product"
        rows={1}
        spellCheck="false"
        value="new"
      >
        <textarea
          autoCapitalize="off"
          autoComplete="off"
          autoCorrect="off"
          className="css-e9agsp-StyledTextArea css-1rksra02"
          onChange={[Function]}
          placeholder="#example usage
path:src/example/pipeline/* person@sentry.io #infra
url:http://example.com/settings/* #product"
          rows={1}
          spellCheck="false"
          value="new"
        />
      </TextareaAutosize>
    </StyledTextArea>
    <SaveButton>
      <div
        className="css-5zvod-SaveButton css-1rksra01"
      >
        <Button
          disabled={false}
          onClick={[Function]}
          priority="primary"
          size="small"
        >
          <button
            className="button button-primary button-sm"
            disabled={false}
            onClick={[Function]}
            role="button"
          >
            <Flex
              align="center"
              className="button-label"
            >
              <Base
                align="center"
                className="button-label css-5ipae5"
              >
                <div
                  className="button-label css-5ipae5"
                  is={null}
                >
                  Save Changes
                </div>
              </Base>
            </Flex>
          </button>
        </Button>
      </div>
    </SaveButton>
  </div>
</OwnerInput>
`;
