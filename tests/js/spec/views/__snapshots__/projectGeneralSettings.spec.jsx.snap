// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`projectGeneralSettings renders 1`] = `
<SideEffect(DocumentTitle)
  title="Sentry"
>
  <div>
    <SettingsPageHeading
      title="Project Settings"
    />
    <Form
      allowUndo={true}
      apiEndpoint="/projects/org-slug/project-slug/"
      apiMethod="PUT"
      cancelLabel="Cancel"
      className="form-stacked"
      footerClass="form-actions align-right"
      initialData={
        Object {
          "allowedDomains": undefined,
          "dataScrubber": undefined,
          "dataScrubberDefaults": undefined,
          "defaultEnvironment": undefined,
          "name": "Project Name",
          "resolveAge": undefined,
          "safeFields": undefined,
          "scrapeJavaScript": undefined,
          "scrubIPAddresses": undefined,
          "securityHeader": undefined,
          "securityToken": undefined,
          "securityTokenHeader": undefined,
          "sensitiveFields": undefined,
          "slug": "project-slug",
          "subjectPrefix": undefined,
          "team": undefined,
          "verifySSL": undefined,
        }
      }
      onSubmitError={[Function]}
      onSubmitSuccess={[Function]}
      requireChanges={false}
      saveOnBlur={true}
      submitDisabled={false}
      submitLabel="Save Changes"
    >
      <JsonForm
        access={
          Set {
            "org:read",
            "org:write",
            "org:admin",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          }
        }
        additionalFieldProps={
          Object {
            "organization": Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            },
          }
        }
        forms={
          Array [
            Object {
              "fields": Array [
                Object {
                  "help": "The name of your project",
                  "label": "Project Name",
                  "name": "name",
                  "placeholder": "My Service Name",
                  "required": true,
                  "type": "string",
                },
                Object {
                  "help": "A unique ID used to identify this project",
                  "label": "Short Name",
                  "name": "slug",
                  "placeholder": "my-service-name",
                  "required": true,
                  "type": "string",
                },
                Object {
                  "choices": [Function],
                  "help": "Opt-in to new features before they're released to the public.",
                  "label": "Team",
                  "name": "team",
                  "type": "array",
                  "visible": [Function],
                },
              ],
              "title": "Project Details",
            },
            Object {
              "fields": Array [
                Object {
                  "help": "Choose a custom prefix for emails from this project",
                  "label": "Subject Prefix",
                  "name": "subjectPrefix",
                  "type": "string",
                },
              ],
              "title": "Email",
            },
            Object {
              "fields": Array [
                Object {
                  "help": "The default selected environment when viewing issues",
                  "label": "Default Environment",
                  "name": "defaultEnvironment",
                  "placeholder": "production",
                  "type": "string",
                },
                Object {
                  "allowedValues": Array [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    15,
                    18,
                    21,
                    24,
                    30,
                    36,
                    48,
                    72,
                    96,
                    120,
                    144,
                    168,
                    192,
                    216,
                    240,
                    264,
                    288,
                    312,
                    336,
                    360,
                    384,
                    408,
                    432,
                    456,
                    480,
                    504,
                    528,
                    552,
                    576,
                    600,
                    624,
                    648,
                    672,
                    696,
                    720,
                  ],
                  "formatLabel": [Function],
                  "help": "Automatically resolve an issue if it hasn't been seen for this amount of time",
                  "label": "Auto Resolve",
                  "name": "resolveAge",
                  "type": "range",
                },
              ],
              "title": "Event Settings",
            },
            Object {
              "fields": Array [
                Object {
                  "disabled": [Function],
                  "disabledReason": "This option is enforced by your organization's settings and cannot be customized per-project.",
                  "help": "Enable server-side data scrubbing",
                  "label": "Data Scrubber",
                  "name": "dataScrubber",
                  "type": "boolean",
                },
                Object {
                  "disabled": [Function],
                  "disabledReason": "This option is enforced by your organization's settings and cannot be customized per-project.",
                  "help": "Apply default scrubbers to prevent things like passwords and credit cards from being stored",
                  "label": "Use Default Scrubbers",
                  "name": "dataScrubberDefaults",
                  "type": "boolean",
                },
                Object {
                  "getValue": [Function],
                  "help": "Additional field names to match against when scrubbing data. Separate multiple entries with a newline",
                  "label": "Additional Sensitive Fields",
                  "multiline": true,
                  "name": "sensitiveFields",
                  "placeholder": "email",
                  "setValue": [Function],
                  "type": "string",
                },
                Object {
                  "getValue": [Function],
                  "help": "Field names which data scrubbers should ignore. Separate multiple entries with a newline",
                  "label": "Safe Fields",
                  "multiline": true,
                  "name": "safeFields",
                  "placeholder": "business-email",
                  "setValue": [Function],
                  "type": "string",
                },
                Object {
                  "disabled": [Function],
                  "disabledReason": "This option is enforced by your organization's settings and cannot be customized per-project.",
                  "help": "Preventing IP addresses from being stored for new events",
                  "label": "Don't Store IP Addresses",
                  "name": "scrubIPAddresses",
                  "type": "boolean",
                },
              ],
              "title": "Data Privacy",
            },
            Object {
              "fields": Array [
                Object {
                  "getValue": [Function],
                  "help": "Separate multiple entries with a newline",
                  "label": "Allowed Domains",
                  "multiline": true,
                  "name": "allowedDomains",
                  "placeholder": "https://example.com or example.com",
                  "setValue": [Function],
                  "type": "string",
                },
                Object {
                  "help": "Allow Sentry to scrape missing JavaScript source context when possible",
                  "label": "Enable JavaScript source fetching",
                  "name": "scrapeJavaScript",
                  "type": "boolean",
                },
                Object {
                  "help": "Outbound requests matching Allowed Domains will have the header \\"{token_header}: {token}\\" appended",
                  "label": "Security Token",
                  "name": "securityToken",
                  "type": "string",
                },
                Object {
                  "help": "Outbound requests matching Allowed Domains will have the header \\"{token_header}: {token}\\" appended.",
                  "label": "Security Token Header",
                  "name": "securityTokenHeader",
                  "placeholder": "X-Sentry-Token",
                  "type": "string",
                },
                Object {
                  "help": "Outbound requests will verify TLS (sometimes known as SSL) connections.",
                  "label": "Verify TLS/SSL",
                  "name": "verifySSL",
                  "type": "boolean",
                },
              ],
              "title": "Client Security",
            },
          ]
        }
        renderBodyStart={[Function]}
        renderFooter={[Function]}
      />
    </Form>
    <Panel>
      <PanelHeader>
        Project Administration
      </PanelHeader>
      <FieldWrapper
        inline={true}
      >
        <FieldDescription
          inline={true}
        >
          <FieldLabel>
            Remove Project
          </FieldLabel>
          <FieldHelp>
            Remove the 
            <strong>
              project-slug
            </strong>
             project and all related data.
            <br />
            Careful, this action cannot be undone.
          </FieldHelp>
        </FieldDescription>
        <FieldControl
          hideControlState={false}
        >
          <a
            className="btn btn-danger"
            href="/org-slug/project-slug/settings/remove/"
          >
            Remove Project
          </a>
        </FieldControl>
      </FieldWrapper>
      <FieldWrapper
        inline={true}
      >
        <FieldDescription
          inline={true}
        >
          <FieldLabel>
            Transfer Project
          </FieldLabel>
          <FieldHelp>
            Transfer the 
            <strong>
              project-slug
            </strong>
             project and all related data.
            <br />
            Careful, this action cannot be undone.
          </FieldHelp>
        </FieldDescription>
        <FieldControl
          hideControlState={false}
        >
          <a
            className="btn btn-danger"
            href="/org-slug/project-slug/settings/transfer/"
          >
            Transfer Project
          </a>
        </FieldControl>
      </FieldWrapper>
    </Panel>
  </div>
</SideEffect(DocumentTitle)>
`;
