// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTags renders 1`] = `
<ProjectTags
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <SettingsPageHeading
        title="Tags"
      >
        <Wrapper>
          <div
            className="css-1pnrn3o-Wrapper e1kblvez1"
          >
            <Flex
              align="center"
            >
              <Base
                align="center"
                className="css-5ipae5"
              >
                <div
                  className="css-5ipae5"
                  is={null}
                >
                  <Title>
                    <Base
                      className="css-1mqcea-Title e1kblvez0"
                    >
                      <div
                        className="css-1mqcea-Title e1kblvez0"
                        is={null}
                      >
                        Tags
                      </div>
                    </Base>
                  </Title>
                </div>
              </Base>
            </Flex>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <PermissionAlert
        access={
          Array [
            "project:write",
          ]
        }
      >
        <AccessContainer
          access={
            Array [
              "project:write",
            ]
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            configUser={
              Object {
                "email": "foo@example.com",
                "flags": Object {
                  "newsletter_consent_prompt": false,
                },
                "hasPasswordAuth": true,
                "id": "1",
                "isAuthenticated": true,
                "name": "Foo Bar",
                "options": Object {
                  "timezone": "UTC",
                },
                "permissions": Set {},
                "username": "foo@example.com",
              }
            }
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </AccessContainer>
      </PermissionAlert>
      <TextBlock>
        <Component
          className="css-1geyb25-TextBlock ec8ep340"
        >
          <div
            className="css-1geyb25-TextBlock ec8ep340"
          >
            <span
              key="5"
            >
              <span
                key="0"
              >
                Each event in Sentry may be annotated with various tags (key and value pairs).
                 Learn how to 
              </span>
              <ExternalLink
                href="https://docs.sentry.io/hosted/learn/context/"
                key="2"
                rel="noreferrer noopener"
                target="_blank"
              >
                <a
                  href="https://docs.sentry.io/hosted/learn/context/"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  <span
                    key="1"
                  >
                    add custom tags
                  </span>
                </a>
              </ExternalLink>
              <span
                key="3"
              >
                .
              </span>
            </span>
          </div>
        </Component>
      </TextBlock>
      <Panel>
        <Component
          className="css-yahxlu-Panel e1laxa7d0"
        >
          <div
            className="css-yahxlu-Panel e1laxa7d0"
          >
            <PanelHeader>
              <Component
                className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
              >
                <Flex
                  align="center"
                  className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                  justify="space-between"
                >
                  <Base
                    align="center"
                    className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                    justify="space-between"
                  >
                    <div
                      className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                      is={null}
                    >
                      <Flex>
                        <Base
                          className="css-sncxrr"
                        >
                          <div
                            className="css-sncxrr"
                            is={null}
                          >
                            <Box
                              flex="1"
                            >
                              <Base
                                className="css-vti0ei"
                                flex="1"
                              >
                                <div
                                  className="css-vti0ei"
                                  is={null}
                                >
                                  Tags
                                </div>
                              </Base>
                            </Box>
                          </div>
                        </Base>
                      </Flex>
                    </div>
                  </Base>
                </Flex>
              </Component>
            </PanelHeader>
            <PanelBody
              direction="column"
              disablePadding={true}
              flex={false}
            >
              <div
                className="css-9vq8an-textStyles"
              >
                <AccessContainer
                  access={
                    Array [
                      "project:write",
                    ]
                  }
                >
                  <Access
                    access={
                      Array [
                        "project:write",
                      ]
                    }
                    configUser={
                      Object {
                        "email": "foo@example.com",
                        "flags": Object {
                          "newsletter_consent_prompt": false,
                        },
                        "hasPasswordAuth": true,
                        "id": "1",
                        "isAuthenticated": true,
                        "name": "Foo Bar",
                        "options": Object {
                          "timezone": "UTC",
                        },
                        "permissions": Set {},
                        "username": "foo@example.com",
                      }
                    }
                    organization={
                      Object {
                        "access": Array [
                          "org:read",
                          "org:write",
                          "org:admin",
                          "project:read",
                          "project:write",
                          "project:admin",
                          "team:read",
                          "team:write",
                          "team:admin",
                        ],
                        "features": Array [],
                        "id": "3",
                        "name": "Organization Name",
                        "onboardingTasks": Array [],
                        "projects": Array [],
                        "scrapeJavaScript": true,
                        "slug": "org-slug",
                        "status": Object {
                          "id": "active",
                          "name": "active",
                        },
                        "teams": Array [],
                      }
                    }
                    renderNoAccessMessage={false}
                    requireAll={true}
                  >
                    <PanelItem
                      align="center"
                      className="ref-tag-row"
                      key="browser"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  browser
                                </span>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <Tooltip
                                  disabled={true}
                                  title="This tag cannot be deleted."
                                >
                                  <span>
                                    <LinkWithConfirmation
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disableConfirmButton={false}
                                        disabled={false}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                      >
                                        <a
                                          disabled={false}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <Button
                                            data-test-id="delete"
                                            disabled={false}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              data-test-id="delete"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <Component
                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                disabled={false}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                  data-test-id="delete"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    size="xsmall"
                                                  >
                                                    <Component
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                      >
                                                        <Icon
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <Component
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            hasChildren={false}
                                                            size="xsmall"
                                                          >
                                                            <span
                                                              className="css-ljhpxy-Icon eqrebog2"
                                                              size="xsmall"
                                                            >
                                                              <StyledInlineSvg
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <InlineSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </StyledInlineSvg>
                                                            </span>
                                                          </Component>
                                                        </Icon>
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </span>
                                </Tooltip>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </PanelItem>
                    <PanelItem
                      align="center"
                      className="ref-tag-row"
                      key="device"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  device
                                </span>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <Tooltip
                                  disabled={true}
                                  title="This tag cannot be deleted."
                                >
                                  <span>
                                    <LinkWithConfirmation
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disableConfirmButton={false}
                                        disabled={false}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                      >
                                        <a
                                          disabled={false}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <Button
                                            data-test-id="delete"
                                            disabled={false}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              data-test-id="delete"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <Component
                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                disabled={false}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                  data-test-id="delete"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    size="xsmall"
                                                  >
                                                    <Component
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                      >
                                                        <Icon
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <Component
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            hasChildren={false}
                                                            size="xsmall"
                                                          >
                                                            <span
                                                              className="css-ljhpxy-Icon eqrebog2"
                                                              size="xsmall"
                                                            >
                                                              <StyledInlineSvg
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <InlineSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </StyledInlineSvg>
                                                            </span>
                                                          </Component>
                                                        </Icon>
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </span>
                                </Tooltip>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </PanelItem>
                    <PanelItem
                      align="center"
                      className="ref-tag-row"
                      key="url"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  url
                                </span>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <Tooltip
                                  disabled={true}
                                  title="This tag cannot be deleted."
                                >
                                  <span>
                                    <LinkWithConfirmation
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disableConfirmButton={false}
                                        disabled={false}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                      >
                                        <a
                                          disabled={false}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <Button
                                            data-test-id="delete"
                                            disabled={false}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              data-test-id="delete"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <Component
                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                disabled={false}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                  data-test-id="delete"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    size="xsmall"
                                                  >
                                                    <Component
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                      >
                                                        <Icon
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <Component
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            hasChildren={false}
                                                            size="xsmall"
                                                          >
                                                            <span
                                                              className="css-ljhpxy-Icon eqrebog2"
                                                              size="xsmall"
                                                            >
                                                              <StyledInlineSvg
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <InlineSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </StyledInlineSvg>
                                                            </span>
                                                          </Component>
                                                        </Icon>
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </span>
                                </Tooltip>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </PanelItem>
                    <PanelItem
                      align="center"
                      className="ref-tag-row"
                      key="environment"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  environment
                                </span>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <Tooltip
                                  disabled={false}
                                  title="This tag cannot be deleted."
                                >
                                  <span
                                    className="tip"
                                    title="This tag cannot be deleted."
                                  >
                                    <LinkWithConfirmation
                                      disabled={true}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disableConfirmButton={false}
                                        disabled={true}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                      >
                                        <a
                                          className="undefined disabled"
                                          disabled={true}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <Button
                                            data-test-id="delete"
                                            disabled={true}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              data-test-id="delete"
                                              disabled={true}
                                              href={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                              to={null}
                                            >
                                              <Component
                                                className="css-1ujzp8g-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                disabled={true}
                                                href={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                                to={null}
                                              >
                                                <button
                                                  className="css-1ujzp8g-StyledButton-getColors eqrebog0"
                                                  data-test-id="delete"
                                                  disabled={true}
                                                  href={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                  to={null}
                                                >
                                                  <ButtonLabel
                                                    size="xsmall"
                                                  >
                                                    <Component
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel eqrebog1"
                                                      >
                                                        <Icon
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <Component
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            hasChildren={false}
                                                            size="xsmall"
                                                          >
                                                            <span
                                                              className="css-ljhpxy-Icon eqrebog2"
                                                              size="xsmall"
                                                            >
                                                              <StyledInlineSvg
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <InlineSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
                                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </StyledInlineSvg>
                                                            </span>
                                                          </Component>
                                                        </Icon>
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </span>
                                </Tooltip>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </PanelItem>
                  </Access>
                </AccessContainer>
              </div>
            </PanelBody>
          </div>
        </Component>
      </Panel>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTags>
`;
