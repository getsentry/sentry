// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTags renders 1`] = `
<ProjectTags
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <div>
        <SettingsPageHeading
          title="Tags"
        >
          <Wrapper>
            <div
              className="css-1pnrn3o-Wrapper e1kblvez0"
            >
              <Flex
                align="center"
              >
                <Base
                  align="center"
                  className="css-5ipae5"
                >
                  <div
                    className="css-5ipae5"
                    is={null}
                  >
                    <Title>
                      <div
                        className="css-zmdcxu-Title e1kblvez1"
                      >
                        Tags
                      </div>
                    </Title>
                  </div>
                </Base>
              </Flex>
            </div>
          </Wrapper>
        </SettingsPageHeading>
        <TextBlock>
          <Component
            className="css-1geyb25-TextBlock ec8ep340"
          >
            <div
              className="css-1geyb25-TextBlock ec8ep340"
            >
              <span
                key="5"
              >
                <span
                  key="0"
                >
                  Each event in Sentry may be annotated with various tags (key and value pairs).
          Learn how to 
                </span>
                <ExternalLink
                  href="https://docs.sentry.io/hosted/learn/context/"
                  key="2"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  <a
                    href="https://docs.sentry.io/hosted/learn/context/"
                    rel="noreferrer noopener"
                    target="_blank"
                  >
                    <span
                      key="1"
                    >
                      add custom tags
                    </span>
                  </a>
                </ExternalLink>
                <span
                  key="3"
                >
                  .
                </span>
              </span>
            </div>
          </Component>
        </TextBlock>
        <Panel>
          <StyledPanel>
            <div
              className="css-17lswg2-StyledPanel e1laxa7d0"
            >
              <PanelHeader>
                <StyledPanelHeader>
                  <Component
                    className="css-18jrszy-StyledPanelHeader-getPadding e1p8v8nv0"
                  >
                    <Flex
                      align="center"
                      className="css-18jrszy-StyledPanelHeader-getPadding e1p8v8nv0"
                      justify="space-between"
                    >
                      <Base
                        align="center"
                        className="e1p8v8nv0 css-16zagq0-StyledPanelHeader-getPadding"
                        justify="space-between"
                      >
                        <div
                          className="e1p8v8nv0 css-16zagq0-StyledPanelHeader-getPadding"
                          is={null}
                        >
                          <Flex>
                            <Base
                              className="css-sncxrr"
                            >
                              <div
                                className="css-sncxrr"
                                is={null}
                              >
                                <Box
                                  flex="1"
                                >
                                  <Base
                                    className="css-vti0ei"
                                    flex="1"
                                  >
                                    <div
                                      className="css-vti0ei"
                                      is={null}
                                    >
                                      Tags
                                    </div>
                                  </Base>
                                </Box>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </Flex>
                  </Component>
                </StyledPanelHeader>
              </PanelHeader>
              <PanelBody
                direction="column"
                disablePadding={true}
                flex={false}
              >
                <div
                  className="css-9vq8an-textStyles"
                >
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="browser"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  Browser
                                </span>
                                <Description>
                                  <span
                                    className="css-ecmgih-Description e6a8kyc0"
                                  >
                                    browser
                                  </span>
                                </Description>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <LinkWithConfirmation
                                  className="btn btn-sm btn-default"
                                  disabled={false}
                                  message="Are you sure you want to remove this tag?"
                                  onConfirm={[Function]}
                                  title="Remove tag?"
                                >
                                  <Confirm
                                    cancelText="Cancel"
                                    confirmText="Confirm"
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    priority="primary"
                                  >
                                    <a
                                      className="btn btn-sm btn-default"
                                      disabled={false}
                                      onClick={[Function]}
                                      title="Remove tag?"
                                    >
                                      <span
                                        className="icon icon-trash"
                                      />
                                    </a>
                                    <Modal
                                      animation={false}
                                      autoFocus={true}
                                      backdrop={true}
                                      bsClass="modal"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop={true}
                                        backdropClassName="modal-backdrop"
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      />
                                    </Modal>
                                  </Confirm>
                                </LinkWithConfirmation>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </StyledPanelItem>
                  </PanelItem>
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="device"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  Device
                                </span>
                                <Description>
                                  <span
                                    className="css-ecmgih-Description e6a8kyc0"
                                  >
                                    device
                                  </span>
                                </Description>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <LinkWithConfirmation
                                  className="btn btn-sm btn-default"
                                  disabled={false}
                                  message="Are you sure you want to remove this tag?"
                                  onConfirm={[Function]}
                                  title="Remove tag?"
                                >
                                  <Confirm
                                    cancelText="Cancel"
                                    confirmText="Confirm"
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    priority="primary"
                                  >
                                    <a
                                      className="btn btn-sm btn-default"
                                      disabled={false}
                                      onClick={[Function]}
                                      title="Remove tag?"
                                    >
                                      <span
                                        className="icon icon-trash"
                                      />
                                    </a>
                                    <Modal
                                      animation={false}
                                      autoFocus={true}
                                      backdrop={true}
                                      bsClass="modal"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop={true}
                                        backdropClassName="modal-backdrop"
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      />
                                    </Modal>
                                  </Confirm>
                                </LinkWithConfirmation>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </StyledPanelItem>
                  </PanelItem>
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="url"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  URL
                                </span>
                                <Description>
                                  <span
                                    className="css-ecmgih-Description e6a8kyc0"
                                  >
                                    url
                                  </span>
                                </Description>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <LinkWithConfirmation
                                  className="btn btn-sm btn-default"
                                  disabled={false}
                                  message="Are you sure you want to remove this tag?"
                                  onConfirm={[Function]}
                                  title="Remove tag?"
                                >
                                  <Confirm
                                    cancelText="Cancel"
                                    confirmText="Confirm"
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    priority="primary"
                                  >
                                    <a
                                      className="btn btn-sm btn-default"
                                      disabled={false}
                                      onClick={[Function]}
                                      title="Remove tag?"
                                    >
                                      <span
                                        className="icon icon-trash"
                                      />
                                    </a>
                                    <Modal
                                      animation={false}
                                      autoFocus={true}
                                      backdrop={true}
                                      bsClass="modal"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop={true}
                                        backdropClassName="modal-backdrop"
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      />
                                    </Modal>
                                  </Confirm>
                                </LinkWithConfirmation>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </StyledPanelItem>
                  </PanelItem>
                  <PanelItem
                    align="center"
                    className="ref-tag-row"
                    key="environment"
                    p={0}
                  >
                    <StyledPanelItem
                      align="center"
                      className="ref-tag-row"
                      p={0}
                    >
                      <Base
                        align="center"
                        className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1oshx4q-StyledPanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            align="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Base
                              align="flex-end"
                              className="css-14o7hgh"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-14o7hgh"
                                is={null}
                              >
                                <span>
                                  Environment
                                </span>
                                <Description>
                                  <span
                                    className="css-ecmgih-Description e6a8kyc0"
                                  >
                                    environment
                                  </span>
                                </Description>
                              </div>
                            </Base>
                          </Box>
                          <Flex
                            align="center"
                            p={2}
                          >
                            <Base
                              align="center"
                              className="css-p3ab1k"
                              p={2}
                            >
                              <div
                                className="css-p3ab1k"
                                is={null}
                              >
                                <Tooltip
                                  title="This tag cannot be deleted."
                                >
                                  <span
                                    className="tip"
                                    title="This tag cannot be deleted."
                                  >
                                    <LinkWithConfirmation
                                      className="btn btn-sm btn-default"
                                      disabled={true}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disabled={true}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                      >
                                        <a
                                          className="btn btn-sm btn-default disabled"
                                          disabled={true}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <span
                                            className="icon icon-trash"
                                          />
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </span>
                                </Tooltip>
                              </div>
                            </Base>
                          </Flex>
                        </div>
                      </Base>
                    </StyledPanelItem>
                  </PanelItem>
                </div>
              </PanelBody>
            </div>
          </StyledPanel>
        </Panel>
      </div>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTags>
`;
