// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTags renders 1`] = `
.glamor-4 {
  font-size: 14px;
  box-shadow: inset 0 -1px 0;
  margin: -20px 0 30px;
}

.glamor-2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.glamor-0 {
  font-size: 20px;
  font-weight: bold;
  margin: 20px 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.glamor-6 {
  line-height: 1.5;
  margin-bottom: 30px;
}

.glamor-53 {
  background: #fff;
  border: 1px solid;
  margin-bottom: NaNpx;
  position: relative;
}

.glamor-19 {
  border-bottom: 1px solid;
  border-radius: 0 0;
  text-transform: uppercase;
  font-size: 13px;
  line-height: 1;
  padding: 15px 20px;
}

.glamor-15 {
  font-size: inherit;
  text-transform: inherit;
  margin: 0;
}

.glamor-13 {
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
  margin-bottom: 20px;
  font-size: inherit;
  text-transform: inherit;
  margin: 0;
}

.glamor-10 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.glamor-8 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.glamor-29 {
  box-sizing: border-box;
  padding: 0px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-bottom: 1px solid;
}

.glamor-29:last-child {
  border: 0;
}

.glamor-25 {
  box-sizing: border-box;
  padding: 16px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.glamor-23 {
  font-size: 0.8em;
  margin-left: 8px;
}

.glamor-27 {
  box-sizing: border-box;
  padding: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<ProjectTags
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <div>
        <SettingsPageHeading
          title="Tags"
        >
          <Wrapper>
            <div
              className="glamor-4 glamor-5"
            >
              <Flex
                align="center"
              >
                <Base
                  align="center"
                  className="glamor-2"
                >
                  <div
                    className="glamor-2"
                    is={null}
                  >
                    <Title>
                      <div
                        className="glamor-0 glamor-1"
                      >
                        Tags
                      </div>
                    </Title>
                  </div>
                </Base>
              </Flex>
            </div>
          </Wrapper>
        </SettingsPageHeading>
        <TextBlock>
          <div
            className="glamor-6 glamor-7"
          >
            <span
              key="5"
            >
              <span
                key="0"
              >
                Each event in Sentry may be annotated with various tags (key and value pairs).
          Learn how to 
              </span>
              <ExternalLink
                href="https://docs.sentry.io/hosted/learn/context/"
                key="2"
                rel="noreferrer noopener"
                target="_blank"
              >
                <a
                  href="https://docs.sentry.io/hosted/learn/context/"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  <span
                    key="1"
                  >
                    add custom tags
                  </span>
                </a>
              </ExternalLink>
              <span
                key="3"
              >
                .
              </span>
            </span>
          </div>
        </TextBlock>
        <Panel>
          <div
            className="glamor-53 glamor-54"
          >
            <PanelHeader>
              <StyledPanelHeader>
                <Component
                  className="glamor-19 glamor-20"
                >
                  <div
                    className="glamor-19 glamor-20"
                  >
                    <StyledPanelHeading>
                      <Component
                        className="glamor-15 glamor-12"
                      >
                        <_default
                          className="glamor-15 glamor-12"
                        >
                          <div
                            className="glamor-12 glamor-13 glamor-14"
                          >
                            <Flex>
                              <Base
                                className="glamor-10"
                              >
                                <div
                                  className="glamor-10"
                                  is={null}
                                >
                                  <Box
                                    flex="1"
                                  >
                                    <Base
                                      className="glamor-8"
                                      flex="1"
                                    >
                                      <div
                                        className="glamor-8"
                                        is={null}
                                      >
                                        Tags
                                      </div>
                                    </Base>
                                  </Box>
                                </div>
                              </Base>
                            </Flex>
                          </div>
                        </_default>
                      </Component>
                    </StyledPanelHeading>
                  </div>
                </Component>
              </StyledPanelHeader>
            </PanelHeader>
            <PanelBody
              direction="column"
              disablePadding={true}
              flex={false}
            >
              <div
                className=""
              >
                <PanelItem
                  className="ref-tag-row"
                  key="browser"
                  p={0}
                >
                  <StyledPanelItem
                    className="ref-tag-row"
                    p={0}
                  >
                    <Base
                      className="ref-tag-row glamor-29 glamor-30"
                      p={0}
                    >
                      <div
                        className="ref-tag-row glamor-29 glamor-30"
                        is={null}
                      >
                        <Box
                          align="flex-end"
                          flex="1"
                          p={2}
                        >
                          <Base
                            align="flex-end"
                            className="glamor-25"
                            flex="1"
                            p={2}
                          >
                            <div
                              className="glamor-25"
                              is={null}
                            >
                              <span>
                                Browser
                              </span>
                              <Description>
                                <span
                                  className="glamor-23 glamor-24"
                                >
                                  browser
                                </span>
                              </Description>
                            </div>
                          </Base>
                        </Box>
                        <Flex
                          align="center"
                          p={2}
                        >
                          <Base
                            align="center"
                            className="glamor-27"
                            p={2}
                          >
                            <div
                              className="glamor-27"
                              is={null}
                            >
                              <LinkWithConfirmation
                                className="btn btn-sm btn-default"
                                disabled={false}
                                message="Are you sure you want to remove this tag?"
                                onConfirm={[Function]}
                                title="Remove tag?"
                              >
                                <Confirm
                                  cancelText="Cancel"
                                  confirmText="Confirm"
                                  disabled={false}
                                  message="Are you sure you want to remove this tag?"
                                  onConfirm={[Function]}
                                  priority="primary"
                                >
                                  <a
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    onClick={[Function]}
                                    title="Remove tag?"
                                  >
                                    <span
                                      className="icon icon-trash"
                                    />
                                  </a>
                                  <Modal
                                    animation={false}
                                    autoFocus={true}
                                    backdrop={true}
                                    bsClass="modal"
                                    dialogComponentClass={[Function]}
                                    enforceFocus={true}
                                    keyboard={true}
                                    manager={
                                      ModalManager {
                                        "add": [Function],
                                        "containers": Array [],
                                        "data": Array [],
                                        "handleContainerOverflow": true,
                                        "hideSiblingNodes": true,
                                        "isTopModal": [Function],
                                        "modals": Array [],
                                        "remove": [Function],
                                      }
                                    }
                                    onHide={[Function]}
                                    renderBackdrop={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  >
                                    <Modal
                                      autoFocus={true}
                                      backdrop={true}
                                      backdropClassName="modal-backdrop"
                                      containerClassName="modal-open"
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onEntering={[Function]}
                                      onExited={[Function]}
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    />
                                  </Modal>
                                </Confirm>
                              </LinkWithConfirmation>
                            </div>
                          </Base>
                        </Flex>
                      </div>
                    </Base>
                  </StyledPanelItem>
                </PanelItem>
                <PanelItem
                  className="ref-tag-row"
                  key="device"
                  p={0}
                >
                  <StyledPanelItem
                    className="ref-tag-row"
                    p={0}
                  >
                    <Base
                      className="ref-tag-row glamor-29 glamor-30"
                      p={0}
                    >
                      <div
                        className="ref-tag-row glamor-29 glamor-30"
                        is={null}
                      >
                        <Box
                          align="flex-end"
                          flex="1"
                          p={2}
                        >
                          <Base
                            align="flex-end"
                            className="glamor-25"
                            flex="1"
                            p={2}
                          >
                            <div
                              className="glamor-25"
                              is={null}
                            >
                              <span>
                                Device
                              </span>
                              <Description>
                                <span
                                  className="glamor-23 glamor-24"
                                >
                                  device
                                </span>
                              </Description>
                            </div>
                          </Base>
                        </Box>
                        <Flex
                          align="center"
                          p={2}
                        >
                          <Base
                            align="center"
                            className="glamor-27"
                            p={2}
                          >
                            <div
                              className="glamor-27"
                              is={null}
                            >
                              <LinkWithConfirmation
                                className="btn btn-sm btn-default"
                                disabled={false}
                                message="Are you sure you want to remove this tag?"
                                onConfirm={[Function]}
                                title="Remove tag?"
                              >
                                <Confirm
                                  cancelText="Cancel"
                                  confirmText="Confirm"
                                  disabled={false}
                                  message="Are you sure you want to remove this tag?"
                                  onConfirm={[Function]}
                                  priority="primary"
                                >
                                  <a
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    onClick={[Function]}
                                    title="Remove tag?"
                                  >
                                    <span
                                      className="icon icon-trash"
                                    />
                                  </a>
                                  <Modal
                                    animation={false}
                                    autoFocus={true}
                                    backdrop={true}
                                    bsClass="modal"
                                    dialogComponentClass={[Function]}
                                    enforceFocus={true}
                                    keyboard={true}
                                    manager={
                                      ModalManager {
                                        "add": [Function],
                                        "containers": Array [],
                                        "data": Array [],
                                        "handleContainerOverflow": true,
                                        "hideSiblingNodes": true,
                                        "isTopModal": [Function],
                                        "modals": Array [],
                                        "remove": [Function],
                                      }
                                    }
                                    onHide={[Function]}
                                    renderBackdrop={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  >
                                    <Modal
                                      autoFocus={true}
                                      backdrop={true}
                                      backdropClassName="modal-backdrop"
                                      containerClassName="modal-open"
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onEntering={[Function]}
                                      onExited={[Function]}
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    />
                                  </Modal>
                                </Confirm>
                              </LinkWithConfirmation>
                            </div>
                          </Base>
                        </Flex>
                      </div>
                    </Base>
                  </StyledPanelItem>
                </PanelItem>
                <PanelItem
                  className="ref-tag-row"
                  key="environment"
                  p={0}
                >
                  <StyledPanelItem
                    className="ref-tag-row"
                    p={0}
                  >
                    <Base
                      className="ref-tag-row glamor-29 glamor-30"
                      p={0}
                    >
                      <div
                        className="ref-tag-row glamor-29 glamor-30"
                        is={null}
                      >
                        <Box
                          align="flex-end"
                          flex="1"
                          p={2}
                        >
                          <Base
                            align="flex-end"
                            className="glamor-25"
                            flex="1"
                            p={2}
                          >
                            <div
                              className="glamor-25"
                              is={null}
                            >
                              <span>
                                Environment
                              </span>
                              <Description>
                                <span
                                  className="glamor-23 glamor-24"
                                >
                                  environment
                                </span>
                              </Description>
                            </div>
                          </Base>
                        </Box>
                        <Flex
                          align="center"
                          p={2}
                        >
                          <Base
                            align="center"
                            className="glamor-27"
                            p={2}
                          >
                            <div
                              className="glamor-27"
                              is={null}
                            >
                              <Tooltip
                                title="This tag cannot be deleted."
                              >
                                <span
                                  className="tip"
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    className="btn btn-sm btn-default"
                                    disabled={true}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disabled={true}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                    >
                                      <a
                                        className="btn btn-sm btn-default disabled"
                                        disabled={true}
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <span
                                          className="icon icon-trash"
                                        />
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </span>
                              </Tooltip>
                            </div>
                          </Base>
                        </Flex>
                      </div>
                    </Base>
                  </StyledPanelItem>
                </PanelItem>
              </div>
            </PanelBody>
          </div>
        </Panel>
      </div>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTags>
`;
