// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTags renders 1`] = `
<ProjectTags
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Tags - project-slug - Sentry"
  >
    <DocumentTitle
      title="Tags - project-slug - Sentry"
    >
      <StyledSettingsPageHeading
        noTitleStyles={false}
        title="Tags"
      >
        <SettingsPageHeading
          className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
          noTitleStyles={false}
          title="Tags"
        >
          <div
            className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
          >
            <TitleAndActions>
              <div
                className="css-ifzfc5-TitleAndActions e1uay4fd0"
              >
                <Title
                  styled={false}
                >
                  <div
                    className="css-120v9s3-Title e1uay4fd1"
                  >
                    <HeaderTitle>
                      <h4
                        className="css-1bosio6-HeaderTitle eqkydle2"
                      >
                        Tags
                      </h4>
                    </HeaderTitle>
                  </div>
                </Title>
              </div>
            </TitleAndActions>
          </div>
        </SettingsPageHeading>
      </StyledSettingsPageHeading>
      <PermissionAlert>
        <WithOrganizationMockWrapper
          access={
            Array [
              "project:write",
            ]
          }
        >
          <withConfig(Access)
            access={
              Array [
                "project:write",
              ]
            }
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "experiments": Object {},
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
          >
            <Access
              access={
                Array [
                  "project:write",
                ]
              }
              config={
                Object {
                  "features": Set {},
                  "messages": Array [],
                  "user": Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  },
                }
              }
              isSuperuser={false}
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "org:integrations",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "experiments": Object {},
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              renderNoAccessMessage={false}
              requireAll={true}
            />
          </withConfig(Access)>
        </WithOrganizationMockWrapper>
      </PermissionAlert>
      <TextBlock>
        <div
          className="css-1j3tvli-TextBlock e1x1lar10"
        >
          <span
            key="5"
          >
            <span
              key="0"
            >
              Each event in Sentry may be annotated with various tags (key and value pairs).
                 Learn how to 
            </span>
            <ForwardRef(ExternalLink)
              href="https://docs.sentry.io/hosted/learn/context/"
              key="2"
            >
              <a
                href="https://docs.sentry.io/hosted/learn/context/"
                rel="noreferrer noopener"
                target="_blank"
              >
                <span
                  key="1"
                >
                  add custom tags
                </span>
              </a>
            </ForwardRef(ExternalLink)>
            <span
              key="3"
            >
              .
            </span>
          </span>
        </div>
      </TextBlock>
      <Panel>
        <Component
          className="css-15hwgrz-Panel e119nu470"
        >
          <div
            className="css-15hwgrz-Panel e119nu470"
          >
            <PanelHeader>
              <div
                className="css-1es1m70-PanelHeader en8g1d30"
              >
                Tags
              </div>
            </PanelHeader>
            <PanelBody
              flexible={false}
              withPadding={false}
            >
              <FlexBox
                withPadding={false}
              >
                <div
                  className="css-1ehogmz-FlexBox e1vnwt6f0"
                >
                  <WithOrganizationMockWrapper
                    access={
                      Array [
                        "project:write",
                      ]
                    }
                  >
                    <withConfig(Access)
                      access={
                        Array [
                          "project:write",
                        ]
                      }
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "org:integrations",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "experiments": Object {},
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "active",
                            "name": "active",
                          },
                          "teams": Array [],
                        }
                      }
                    >
                      <Access
                        access={
                          Array [
                            "project:write",
                          ]
                        }
                        config={
                          Object {
                            "features": Set {},
                            "messages": Array [],
                            "user": Object {
                              "email": "foo@example.com",
                              "flags": Object {
                                "newsletter_consent_prompt": false,
                              },
                              "hasPasswordAuth": true,
                              "id": "1",
                              "isAuthenticated": true,
                              "name": "Foo Bar",
                              "options": Object {
                                "timezone": "UTC",
                              },
                              "permissions": Set {},
                              "username": "foo@example.com",
                            },
                          }
                        }
                        isSuperuser={false}
                        organization={
                          Object {
                            "access": Array [
                              "org:read",
                              "org:write",
                              "org:admin",
                              "org:integrations",
                              "project:read",
                              "project:write",
                              "project:admin",
                              "team:read",
                              "team:write",
                              "team:admin",
                            ],
                            "experiments": Object {},
                            "features": Array [],
                            "id": "3",
                            "name": "Organization Name",
                            "onboardingTasks": Array [],
                            "projects": Array [],
                            "scrapeJavaScript": true,
                            "slug": "org-slug",
                            "status": Object {
                              "id": "active",
                              "name": "active",
                            },
                            "teams": Array [],
                          }
                        }
                        renderNoAccessMessage={false}
                        requireAll={true}
                      >
                        <TagPanelItem
                          data-test-id="tag-row"
                          key="browser"
                          p={2}
                        >
                          <div
                            className="css-maiyp9-PanelItem-TagPanelItem e1s2odbs0"
                            data-test-id="tag-row"
                          >
                            <TagName>
                              <div
                                className="css-1bqp74k-TagName e1s2odbs1"
                              >
                                browser
                              </div>
                            </TagName>
                            <Actions>
                              <div
                                className="css-y4ry98-Actions e1s2odbs2"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className=""
                                        disabled={false}
                                        href="#"
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <forwardRef<Button>
                                          data-test-id="delete"
                                          disabled={false}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <Button
                                            align="center"
                                            data-test-id="delete"
                                            disabled={false}
                                            forwardRef={null}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              aria-disabled={false}
                                              data-test-id="delete"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <Component
                                                aria-disabled={false}
                                                className="css-12ogwys-StyledButton edwq9my0"
                                                data-test-id="delete"
                                                forwardRef={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  aria-disabled={false}
                                                  className="css-12ogwys-StyledButton edwq9my0"
                                                  data-test-id="delete"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <span
                                                          className="css-1j44i9a-Icon edwq9my2"
                                                          size="xsmall"
                                                        >
                                                          <StyledInlineSvg
                                                            size="12px"
                                                            src="icon-trash"
                                                          >
                                                            <ForwardRef
                                                              className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <svg
                                                                className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                                height="12px"
                                                                viewBox={Object {}}
                                                                width="12px"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </ForwardRef>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </Icon>
                                                    </span>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </forwardRef<Button>>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Actions>
                          </div>
                        </TagPanelItem>
                        <TagPanelItem
                          data-test-id="tag-row"
                          key="device"
                          p={2}
                        >
                          <div
                            className="css-maiyp9-PanelItem-TagPanelItem e1s2odbs0"
                            data-test-id="tag-row"
                          >
                            <TagName>
                              <div
                                className="css-1bqp74k-TagName e1s2odbs1"
                              >
                                device
                              </div>
                            </TagName>
                            <Actions>
                              <div
                                className="css-y4ry98-Actions e1s2odbs2"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className=""
                                        disabled={false}
                                        href="#"
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <forwardRef<Button>
                                          data-test-id="delete"
                                          disabled={false}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <Button
                                            align="center"
                                            data-test-id="delete"
                                            disabled={false}
                                            forwardRef={null}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              aria-disabled={false}
                                              data-test-id="delete"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <Component
                                                aria-disabled={false}
                                                className="css-12ogwys-StyledButton edwq9my0"
                                                data-test-id="delete"
                                                forwardRef={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  aria-disabled={false}
                                                  className="css-12ogwys-StyledButton edwq9my0"
                                                  data-test-id="delete"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <span
                                                          className="css-1j44i9a-Icon edwq9my2"
                                                          size="xsmall"
                                                        >
                                                          <StyledInlineSvg
                                                            size="12px"
                                                            src="icon-trash"
                                                          >
                                                            <ForwardRef
                                                              className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <svg
                                                                className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                                height="12px"
                                                                viewBox={Object {}}
                                                                width="12px"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </ForwardRef>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </Icon>
                                                    </span>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </forwardRef<Button>>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Actions>
                          </div>
                        </TagPanelItem>
                        <TagPanelItem
                          data-test-id="tag-row"
                          key="url"
                          p={2}
                        >
                          <div
                            className="css-maiyp9-PanelItem-TagPanelItem e1s2odbs0"
                            data-test-id="tag-row"
                          >
                            <TagName>
                              <div
                                className="css-1bqp74k-TagName e1s2odbs1"
                              >
                                url
                              </div>
                            </TagName>
                            <Actions>
                              <div
                                className="css-y4ry98-Actions e1s2odbs2"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className=""
                                        disabled={false}
                                        href="#"
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <forwardRef<Button>
                                          data-test-id="delete"
                                          disabled={false}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <Button
                                            align="center"
                                            data-test-id="delete"
                                            disabled={false}
                                            forwardRef={null}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              aria-disabled={false}
                                              data-test-id="delete"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <Component
                                                aria-disabled={false}
                                                className="css-12ogwys-StyledButton edwq9my0"
                                                data-test-id="delete"
                                                forwardRef={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  aria-disabled={false}
                                                  className="css-12ogwys-StyledButton edwq9my0"
                                                  data-test-id="delete"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <span
                                                          className="css-1j44i9a-Icon edwq9my2"
                                                          size="xsmall"
                                                        >
                                                          <StyledInlineSvg
                                                            size="12px"
                                                            src="icon-trash"
                                                          >
                                                            <ForwardRef
                                                              className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <svg
                                                                className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                                height="12px"
                                                                viewBox={Object {}}
                                                                width="12px"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </ForwardRef>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </Icon>
                                                    </span>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </forwardRef<Button>>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Actions>
                          </div>
                        </TagPanelItem>
                        <TagPanelItem
                          data-test-id="tag-row"
                          key="environment"
                          p={2}
                        >
                          <div
                            className="css-maiyp9-PanelItem-TagPanelItem e1s2odbs0"
                            data-test-id="tag-row"
                          >
                            <TagName>
                              <div
                                className="css-1bqp74k-TagName e1s2odbs1"
                              >
                                environment
                              </div>
                            </TagName>
                            <Actions>
                              <div
                                className="css-y4ry98-Actions e1s2odbs2"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={false}
                                  position="top"
                                  title="This tag cannot be deleted."
                                >
                                  <Manager>
                                    <Reference>
                                      <InnerReference
                                        setReferenceNode={[Function]}
                                      >
                                        <Container
                                          aria-describedby="tooltip-123456"
                                          containerDisplayMode="inline-block"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                        >
                                          <span
                                            aria-describedby="tooltip-123456"
                                            className="css-1y4rfpo-Container eowlwvy0"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                          >
                                            <LinkWithConfirmation
                                              disabled={true}
                                              message="Are you sure you want to remove this tag?"
                                              onConfirm={[Function]}
                                              title="Remove tag?"
                                            >
                                              <Confirm
                                                cancelText="Cancel"
                                                confirmText="Confirm"
                                                disableConfirmButton={false}
                                                disabled={true}
                                                message="Are you sure you want to remove this tag?"
                                                onConfirm={[Function]}
                                                priority="primary"
                                                stopPropagation={false}
                                              >
                                                <a
                                                  className="disabled"
                                                  disabled={true}
                                                  href="#"
                                                  onClick={[Function]}
                                                  title="Remove tag?"
                                                >
                                                  <forwardRef<Button>
                                                    data-test-id="delete"
                                                    disabled={true}
                                                    icon="icon-trash"
                                                    size="xsmall"
                                                  >
                                                    <Button
                                                      align="center"
                                                      data-test-id="delete"
                                                      disabled={true}
                                                      forwardRef={null}
                                                      icon="icon-trash"
                                                      size="xsmall"
                                                    >
                                                      <StyledButton
                                                        aria-disabled={true}
                                                        data-test-id="delete"
                                                        disabled={true}
                                                        forwardRef={null}
                                                        onClick={[Function]}
                                                        role="button"
                                                        size="xsmall"
                                                      >
                                                        <Component
                                                          aria-disabled={true}
                                                          className="css-1lloe1u-StyledButton edwq9my0"
                                                          data-test-id="delete"
                                                          forwardRef={null}
                                                          onClick={[Function]}
                                                          role="button"
                                                          size="xsmall"
                                                        >
                                                          <button
                                                            aria-disabled={true}
                                                            className="css-1lloe1u-StyledButton edwq9my0"
                                                            data-test-id="delete"
                                                            onClick={[Function]}
                                                            role="button"
                                                            size="xsmall"
                                                          >
                                                            <ButtonLabel
                                                              align="center"
                                                              size="xsmall"
                                                            >
                                                              <span
                                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                              >
                                                                <Icon
                                                                  hasChildren={false}
                                                                  size="xsmall"
                                                                >
                                                                  <span
                                                                    className="css-1j44i9a-Icon edwq9my2"
                                                                    size="xsmall"
                                                                  >
                                                                    <StyledInlineSvg
                                                                      size="12px"
                                                                      src="icon-trash"
                                                                    >
                                                                      <ForwardRef
                                                                        className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                                        size="12px"
                                                                        src="icon-trash"
                                                                      >
                                                                        <svg
                                                                          className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                                          height="12px"
                                                                          viewBox={Object {}}
                                                                          width="12px"
                                                                        >
                                                                          <use
                                                                            href="#test"
                                                                            xlinkHref="#test"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef>
                                                                    </StyledInlineSvg>
                                                                  </span>
                                                                </Icon>
                                                              </span>
                                                            </ButtonLabel>
                                                          </button>
                                                        </Component>
                                                      </StyledButton>
                                                    </Button>
                                                  </forwardRef<Button>>
                                                </a>
                                                <Modal
                                                  animation={false}
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  bsClass="modal"
                                                  dialogComponentClass={[Function]}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  manager={
                                                    ModalManager {
                                                      "add": [Function],
                                                      "containers": Array [],
                                                      "data": Array [],
                                                      "handleContainerOverflow": true,
                                                      "hideSiblingNodes": true,
                                                      "isTopModal": [Function],
                                                      "modals": Array [],
                                                      "remove": [Function],
                                                    }
                                                  }
                                                  onHide={[Function]}
                                                  renderBackdrop={[Function]}
                                                  restoreFocus={true}
                                                  show={false}
                                                >
                                                  <Modal
                                                    autoFocus={true}
                                                    backdrop={true}
                                                    backdropClassName="modal-backdrop"
                                                    containerClassName="modal-open"
                                                    enforceFocus={true}
                                                    keyboard={true}
                                                    manager={
                                                      ModalManager {
                                                        "add": [Function],
                                                        "containers": Array [],
                                                        "data": Array [],
                                                        "handleContainerOverflow": true,
                                                        "hideSiblingNodes": true,
                                                        "isTopModal": [Function],
                                                        "modals": Array [],
                                                        "remove": [Function],
                                                      }
                                                    }
                                                    onEntering={[Function]}
                                                    onExited={[Function]}
                                                    onHide={[Function]}
                                                    renderBackdrop={[Function]}
                                                    restoreFocus={true}
                                                    show={false}
                                                  />
                                                </Modal>
                                              </Confirm>
                                            </LinkWithConfirmation>
                                          </span>
                                        </Container>
                                      </InnerReference>
                                    </Reference>
                                  </Manager>
                                </Tooltip>
                              </div>
                            </Actions>
                          </div>
                        </TagPanelItem>
                        <TagPanelItem
                          data-test-id="tag-row"
                          key="user"
                          p={2}
                        >
                          <div
                            className="css-maiyp9-PanelItem-TagPanelItem e1s2odbs0"
                            data-test-id="tag-row"
                          >
                            <TagName>
                              <div
                                className="css-1bqp74k-TagName e1s2odbs1"
                              >
                                user
                              </div>
                            </TagName>
                            <Actions>
                              <div
                                className="css-y4ry98-Actions e1s2odbs2"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  position="top"
                                  title="This tag cannot be deleted."
                                >
                                  <Manager>
                                    <Reference>
                                      <InnerReference
                                        setReferenceNode={[Function]}
                                      >
                                        <Container
                                          aria-describedby="tooltip-123456"
                                          containerDisplayMode="inline-block"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                        >
                                          <span
                                            aria-describedby="tooltip-123456"
                                            className="css-1y4rfpo-Container eowlwvy0"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                          >
                                            <LinkWithConfirmation
                                              disabled={true}
                                              message="Are you sure you want to remove this tag?"
                                              onConfirm={[Function]}
                                              title="Remove tag?"
                                            >
                                              <Confirm
                                                cancelText="Cancel"
                                                confirmText="Confirm"
                                                disableConfirmButton={false}
                                                disabled={true}
                                                message="Are you sure you want to remove this tag?"
                                                onConfirm={[Function]}
                                                priority="primary"
                                                stopPropagation={false}
                                              >
                                                <a
                                                  className="disabled"
                                                  disabled={true}
                                                  href="#"
                                                  onClick={[Function]}
                                                  title="Remove tag?"
                                                >
                                                  <forwardRef<Button>
                                                    data-test-id="delete"
                                                    disabled={true}
                                                    icon="icon-trash"
                                                    size="xsmall"
                                                  >
                                                    <Button
                                                      align="center"
                                                      data-test-id="delete"
                                                      disabled={true}
                                                      forwardRef={null}
                                                      icon="icon-trash"
                                                      size="xsmall"
                                                    >
                                                      <StyledButton
                                                        aria-disabled={true}
                                                        data-test-id="delete"
                                                        disabled={true}
                                                        forwardRef={null}
                                                        onClick={[Function]}
                                                        role="button"
                                                        size="xsmall"
                                                      >
                                                        <Component
                                                          aria-disabled={true}
                                                          className="css-1lloe1u-StyledButton edwq9my0"
                                                          data-test-id="delete"
                                                          forwardRef={null}
                                                          onClick={[Function]}
                                                          role="button"
                                                          size="xsmall"
                                                        >
                                                          <button
                                                            aria-disabled={true}
                                                            className="css-1lloe1u-StyledButton edwq9my0"
                                                            data-test-id="delete"
                                                            onClick={[Function]}
                                                            role="button"
                                                            size="xsmall"
                                                          >
                                                            <ButtonLabel
                                                              align="center"
                                                              size="xsmall"
                                                            >
                                                              <span
                                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                              >
                                                                <Icon
                                                                  hasChildren={false}
                                                                  size="xsmall"
                                                                >
                                                                  <span
                                                                    className="css-1j44i9a-Icon edwq9my2"
                                                                    size="xsmall"
                                                                  >
                                                                    <StyledInlineSvg
                                                                      size="12px"
                                                                      src="icon-trash"
                                                                    >
                                                                      <ForwardRef
                                                                        className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                                        size="12px"
                                                                        src="icon-trash"
                                                                      >
                                                                        <svg
                                                                          className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                                          height="12px"
                                                                          viewBox={Object {}}
                                                                          width="12px"
                                                                        >
                                                                          <use
                                                                            href="#test"
                                                                            xlinkHref="#test"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef>
                                                                    </StyledInlineSvg>
                                                                  </span>
                                                                </Icon>
                                                              </span>
                                                            </ButtonLabel>
                                                          </button>
                                                        </Component>
                                                      </StyledButton>
                                                    </Button>
                                                  </forwardRef<Button>>
                                                </a>
                                                <Modal
                                                  animation={false}
                                                  autoFocus={true}
                                                  backdrop={true}
                                                  bsClass="modal"
                                                  dialogComponentClass={[Function]}
                                                  enforceFocus={true}
                                                  keyboard={true}
                                                  manager={
                                                    ModalManager {
                                                      "add": [Function],
                                                      "containers": Array [],
                                                      "data": Array [],
                                                      "handleContainerOverflow": true,
                                                      "hideSiblingNodes": true,
                                                      "isTopModal": [Function],
                                                      "modals": Array [],
                                                      "remove": [Function],
                                                    }
                                                  }
                                                  onHide={[Function]}
                                                  renderBackdrop={[Function]}
                                                  restoreFocus={true}
                                                  show={false}
                                                >
                                                  <Modal
                                                    autoFocus={true}
                                                    backdrop={true}
                                                    backdropClassName="modal-backdrop"
                                                    containerClassName="modal-open"
                                                    enforceFocus={true}
                                                    keyboard={true}
                                                    manager={
                                                      ModalManager {
                                                        "add": [Function],
                                                        "containers": Array [],
                                                        "data": Array [],
                                                        "handleContainerOverflow": true,
                                                        "hideSiblingNodes": true,
                                                        "isTopModal": [Function],
                                                        "modals": Array [],
                                                        "remove": [Function],
                                                      }
                                                    }
                                                    onEntering={[Function]}
                                                    onExited={[Function]}
                                                    onHide={[Function]}
                                                    renderBackdrop={[Function]}
                                                    restoreFocus={true}
                                                    show={false}
                                                  />
                                                </Modal>
                                              </Confirm>
                                            </LinkWithConfirmation>
                                          </span>
                                        </Container>
                                      </InnerReference>
                                    </Reference>
                                  </Manager>
                                </Tooltip>
                              </div>
                            </Actions>
                          </div>
                        </TagPanelItem>
                      </Access>
                    </withConfig(Access)>
                  </WithOrganizationMockWrapper>
                </div>
              </FlexBox>
            </PanelBody>
          </div>
        </Component>
      </Panel>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTags>
`;
