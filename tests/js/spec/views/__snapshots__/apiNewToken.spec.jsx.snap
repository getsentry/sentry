// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApiNewToken render() renders 1`] = `
<SideEffect(DocumentTitle)
  title="Create API Token - Sentry"
>
  <div>
    <StyledSettingsPageHeading
      noTitleStyles={false}
      title="Create New Token"
    />
    <TextBlock>
      Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.
    </TextBlock>
    <TextBlock>
      <span
        key="5"
      >
        <span
          key="0"
        >
          For more information on how to use the web API, see our 
        </span>
        <a
          href="https://docs.sentry.io/hosted/api/"
          key="2"
        >
          <span
            key="1"
          >
            documentation
          </span>
        </a>
        <span
          key="3"
        >
          .
        </span>
      </span>
    </TextBlock>
    <Panel>
      <PanelHeader>
        Create New Token
      </PanelHeader>
      <ApiForm
        apiEndpoint="/api-tokens/"
        apiMethod="POST"
        footerStyle={
          Object {
            "marginTop": 0,
            "paddingRight": 20,
          }
        }
        initialData={
          Object {
            "scopes": Array [
              "event:admin",
              "event:read",
              "member:read",
              "org:read",
              "project:read",
              "project:releases",
              "team:read",
            ],
          }
        }
        onCancel={[Function]}
        onSubmitSuccess={[Function]}
        submitLabel="Create Token"
      >
        <PanelBody
          direction="column"
          disablePadding={true}
          flex={false}
        >
          <FormField
            choices={
              Array [
                Array [
                  "project:read",
                  "project:read",
                ],
                Array [
                  "project:write",
                  "project:write",
                ],
                Array [
                  "project:admin",
                  "project:admin",
                ],
                Array [
                  "project:releases",
                  "project:releases",
                ],
                Array [
                  "team:read",
                  "team:read",
                ],
                Array [
                  "team:write",
                  "team:write",
                ],
                Array [
                  "team:admin",
                  "team:admin",
                ],
                Array [
                  "event:read",
                  "event:read",
                ],
                Array [
                  "event:write",
                  "event:write",
                ],
                Array [
                  "event:admin",
                  "event:admin",
                ],
                Array [
                  "org:read",
                  "org:read",
                ],
                Array [
                  "org:write",
                  "org:write",
                ],
                Array [
                  "org:admin",
                  "org:admin",
                ],
                Array [
                  "org:integrations",
                  "org:integrations",
                ],
                Array [
                  "member:read",
                  "member:read",
                ],
                Array [
                  "member:write",
                  "member:write",
                ],
                Array [
                  "member:admin",
                  "member:admin",
                ],
              ]
            }
            flexibleControlStateSize={false}
            hideErrorMessage={false}
            inline={false}
            label="Scopes"
            name="scopes"
            required={true}
          >
            <Component />
          </FormField>
        </PanelBody>
      </ApiForm>
    </Panel>
  </div>
</SideEffect(DocumentTitle)>
`;
