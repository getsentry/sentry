// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectDebugSymbols renders 1`] = `
.glamor-4 {
  font-size: 14px;
  box-shadow: inset 0 -1px 0;
  margin: -20px 0 30px;
}

.glamor-2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.glamor-0 {
  font-size: 20px;
  font-weight: bold;
  margin: 20px 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.glamor-6 {
  line-height: 1.5;
  margin-bottom: 30px;
}

.glamor-43 {
  background: #fff;
  border: 1px solid;
  margin-bottom: NaNpx;
  position: relative;
}

.glamor-15 {
  border-bottom: 1px solid;
  border-radius: 0 0;
  text-transform: uppercase;
  font-size: 13px;
  line-height: 1;
  padding: 15px 20px;
}

.glamor-11 {
  font-size: inherit;
  text-transform: inherit;
  margin: 0;
}

.glamor-9 {
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
  margin-bottom: 20px;
  font-size: inherit;
  text-transform: inherit;
  margin: 0;
}

.glamor-39 {
  box-sizing: border-box;
  padding: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-bottom: 1px solid;
}

.glamor-39:last-child {
  border: 0;
}

.glamor-35 {
  cursor: pointer;
  -webkit-transition: all 0s ease-in-out;
  transition: all 0s ease-in-out;
}

.glamor-30 {
  box-sizing: border-box;
  padding: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-bottom: 1px solid;
  cursor: pointer;
  -webkit-transition: all 0s ease-in-out;
  transition: all 0s ease-in-out;
}

.glamor-30:last-child {
  border: 0;
}

.glamor-25 {
  box-sizing: border-box;
  padding: 16px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.glamor-21 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 12px;
}

.glamor-19 {
  margin-right: 4px;
}

.glamor-27 {
  box-sizing: border-box;
  padding: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<ProjectDebugSymbols
  params={
    Object {
      "orgId": "org",
      "projectId": "project",
    }
  }
>
  <div>
    <SettingsPageHeading
      title="Debug Information Files"
    >
      <Wrapper>
        <div
          className="glamor-4 glamor-5"
        >
          <Flex
            align="center"
          >
            <Base
              align="center"
              className="glamor-2"
            >
              <div
                className="glamor-2"
                is={null}
              >
                <Title>
                  <div
                    className="glamor-0 glamor-1"
                  >
                    Debug Information Files
                  </div>
                </Title>
              </div>
            </Base>
          </Flex>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <TextBlock>
      <div
        className="glamor-6 glamor-7"
      >
        
          Here you can find uploaded debug information (for instance debug
          symbol files or proguard mappings).  This is used to convert
          addresses and minified function names from crash dumps
          into function names and locations.  For JavaScript debug support
          look at releases instead.
        
      </div>
    </TextBlock>
    <Panel
      key="1"
      style={
        Object {
          "marginBottom": 40,
        }
      }
    >
      <div
        className="glamor-43 glamor-44"
        style={
          Object {
            "marginBottom": 40,
          }
        }
      >
        <PanelHeader>
          <StyledPanelHeader>
            <Component
              className="glamor-15 glamor-16"
            >
              <div
                className="glamor-15 glamor-16"
              >
                <StyledPanelHeading>
                  <Component
                    className="glamor-11 glamor-8"
                  >
                    <_default
                      className="glamor-11 glamor-8"
                    >
                      <div
                        className="glamor-8 glamor-9 glamor-10"
                      >
                        <div
                          className="app-icon"
                          style={null}
                        />
                        MyApp
                         
                        <small>
                          (
                          com.example.myapp
                          )
                        </small>
                      </div>
                    </_default>
                  </Component>
                </StyledPanelHeading>
              </div>
            </Component>
          </StyledPanelHeader>
        </PanelHeader>
        <PanelBody
          direction="column"
          disablePadding={true}
          flex={false}
        >
          <div
            className=""
          >
            <PanelItem
              direction="column"
              key="1.0"
              p={2}
            >
              <StyledPanelItem
                direction="column"
                p={2}
              >
                <Base
                  className="glamor-39 glamor-31"
                  direction="column"
                  p={2}
                >
                  <div
                    className="glamor-39 glamor-31"
                    is={null}
                  >
                    <HoverablePanelItem
                      className="hoverable"
                      onClick={[Function]}
                    >
                      <PanelItem
                        className="hoverable glamor-35 glamor-29"
                        onClick={[Function]}
                        p={2}
                      >
                        <StyledPanelItem
                          className="hoverable glamor-35 glamor-29"
                          onClick={[Function]}
                          p={2}
                        >
                          <Base
                            className="hoverable glamor-29 glamor-30 glamor-31"
                            onClick={[Function]}
                            p={2}
                          >
                            <div
                              className="hoverable glamor-29 glamor-30 glamor-31"
                              is={null}
                              onClick={[Function]}
                            >
                              <Flex
                                direction="column"
                                flex="1"
                                p={2}
                              >
                                <Base
                                  className="glamor-25"
                                  direction="column"
                                  flex="1"
                                  p={2}
                                >
                                  <div
                                    className="glamor-25"
                                    is={null}
                                  >
                                    <h3
                                      className="truncate"
                                    >
                                      1.0
                                    </h3>
                                    <div
                                      className="event-message"
                                    >
                                      Builds
                                      : 
                                      1
                                    </div>
                                    <LastSeen
                                      align="center"
                                    >
                                      <Base
                                        align="center"
                                        className="glamor-21 glamor-22"
                                      >
                                        <div
                                          className="glamor-21 glamor-22"
                                          is={null}
                                        >
                                          <TimeIcon
                                            className="icon icon-clock"
                                          >
                                            <span
                                              className="icon icon-clock glamor-19 glamor-20"
                                            />
                                          </TimeIcon>
                                          <TimeSince
                                            date="2018-01-31T07:16:26.072Z"
                                            suffix="ago"
                                          >
                                            <time
                                              dateTime="2018-01-31T07:16:26.072Z"
                                              title="January 31, 2018 7:16 AM UTC"
                                            >
                                              in 3 months
                                            </time>
                                          </TimeSince>
                                        </div>
                                      </Base>
                                    </LastSeen>
                                  </div>
                                </Base>
                              </Flex>
                              <Flex
                                p={2}
                              >
                                <Base
                                  className="glamor-27"
                                  p={2}
                                >
                                  <div
                                    className="glamor-27"
                                    is={null}
                                  >
                                    Debug Information Files
                                    : 
                                    1
                                  </div>
                                </Base>
                              </Flex>
                            </div>
                          </Base>
                        </StyledPanelItem>
                      </PanelItem>
                    </HoverablePanelItem>
                  </div>
                </Base>
              </StyledPanelItem>
            </PanelItem>
          </div>
        </PanelBody>
      </div>
    </Panel>
    <div>
      <SettingsPageHeading
        title="Unreferenced Debug Information Files"
      >
        <Wrapper>
          <div
            className="glamor-4 glamor-5"
          >
            <Flex
              align="center"
            >
              <Base
                align="center"
                className="glamor-2"
              >
                <div
                  className="glamor-2"
                  is={null}
                >
                  <Title>
                    <div
                      className="glamor-0 glamor-1"
                    >
                      Unreferenced Debug Information Files
                    </div>
                  </Title>
                </div>
              </Base>
            </Flex>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <TextBlock>
        <div
          className="glamor-6 glamor-7"
        >
          
          This list represents all Debug Information Files which are not assigned to an
          app version. We will still find these debug symbols for symbolication
          but we can't tell you which versions they belong to.  This happens
          if you upload them with an old verison of sentry-cli or if sentry-cli
          can't locate the Info.plist file at the time of upload.
        
        </div>
      </TextBlock>
      <table
        className="table"
      >
        <thead>
          <tr>
            <th>
              UUID
            </th>
            <th>
              Object
            </th>
            <th>
              Type
            </th>
            <th>
              Uploaded
            </th>
            <th>
              Size
            </th>
            <th />
          </tr>
        </thead>
        <tbody />
      </table>
    </div>
    <Modal
      animation={false}
      autoFocus={true}
      backdrop="static"
      bsClass="modal"
      bsSize="lg"
      dialogComponentClass={[Function]}
      enforceFocus={false}
      keyboard={true}
      manager={
        ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        }
      }
      onHide={[Function]}
      renderBackdrop={[Function]}
      restoreFocus={true}
      show={false}
    >
      <Modal
        autoFocus={true}
        backdrop="static"
        backdropClassName="modal-backdrop"
        containerClassName="modal-open"
        enforceFocus={false}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onEntering={[Function]}
        onExited={[Function]}
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      />
    </Modal>
  </div>
</ProjectDebugSymbols>
`;

exports[`ProjectDebugSymbols renders empty 1`] = `
<div>
  <SettingsPageHeading
    title="Debug Information Files"
  />
  <TextBlock>
    
          Here you can find uploaded debug information (for instance debug
          symbol files or proguard mappings).  This is used to convert
          addresses and minified function names from crash dumps
          into function names and locations.  For JavaScript debug support
          look at releases instead.
        
  </TextBlock>
  <div
    className="box"
  >
    <LoadingIndicator />
  </div>
  <Modal
    animation={false}
    autoFocus={true}
    backdrop="static"
    bsClass="modal"
    bsSize="lg"
    dialogComponentClass={[Function]}
    enforceFocus={false}
    keyboard={true}
    manager={
      ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      }
    }
    onHide={[Function]}
    renderBackdrop={[Function]}
    restoreFocus={true}
    show={false}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="Close"
    >
      <ModalTitle
        bsClass="modal-title"
        componentClass="h4"
      >
         (
        )
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <table
        className="table"
      >
        <thead>
          <tr>
            <th>
              UUID
            </th>
            <th>
              Object
            </th>
            <th>
              Type
            </th>
            <th>
              Uploaded
            </th>
            <th>
              Size
            </th>
          </tr>
        </thead>
        <tbody />
      </table>
    </ModalBody>
  </Modal>
</div>
`;
