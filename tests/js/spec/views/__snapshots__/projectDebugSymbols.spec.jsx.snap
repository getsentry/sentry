// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectDebugSymbols renders 1`] = `
<ProjectDebugSymbols
  params={
    Object {
      "orgId": "org",
      "projectId": "project",
    }
  }
>
  <div>
    <SettingsPageHeading
      title="Debug Information Files"
    >
      <Wrapper>
        <div
          className="css-1pnrn3o-Wrapper e1kblvez1"
        >
          <Flex
            align="center"
          >
            <Base
              align="center"
              className="css-5ipae5"
            >
              <div
                className="css-5ipae5"
                is={null}
              >
                <Title>
                  <Base
                    className="css-1mqcea-Title e1kblvez0"
                  >
                    <div
                      className="css-1mqcea-Title e1kblvez0"
                      is={null}
                    >
                      Debug Information Files
                    </div>
                  </Base>
                </Title>
              </div>
            </Base>
          </Flex>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <TextBlock>
      <Component
        className="css-1geyb25-TextBlock ec8ep340"
      >
        <div
          className="css-1geyb25-TextBlock ec8ep340"
        >
          
          Here you can find uploaded debug information (for instance debug
          symbol files or proguard mappings).  This is used to convert
          addresses and minified function names from crash dumps
          into function names and locations.  For JavaScript debug support
          look at releases instead.
        
        </div>
      </Component>
    </TextBlock>
    <Panel
      key="1"
      style={
        Object {
          "marginBottom": 40,
        }
      }
    >
      <Component
        className="css-10qfvek-Panel e1laxa7d0"
        style={
          Object {
            "marginBottom": 40,
          }
        }
      >
        <div
          className="css-10qfvek-Panel e1laxa7d0"
          style={
            Object {
              "marginBottom": 40,
            }
          }
        >
          <PanelHeader>
            <Component
              className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
            >
              <Flex
                align="center"
                className="css-gxu3mm-PanelHeader-getPadding e1p8v8nv0"
                justify="space-between"
              >
                <Base
                  align="center"
                  className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
                  justify="space-between"
                >
                  <div
                    className="e1p8v8nv0 css-18dn1ya-PanelHeader-getPadding"
                    is={null}
                  >
                    <div>
                      <div
                        className="app-icon"
                        style={null}
                      />
                      MyApp
                    </div>
                    <small>
                      (
                      com.example.myapp
                      )
                    </small>
                  </div>
                </Base>
              </Flex>
            </Component>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <div
              className="css-9vq8an-textStyles"
            >
              <PanelItem
                direction="column"
                key="1.0"
                p={2}
              >
                <Base
                  className="css-1cf8lr1-PanelItem eo8n7lk0"
                  direction="column"
                  p={2}
                >
                  <div
                    className="css-1cf8lr1-PanelItem eo8n7lk0"
                    is={null}
                  >
                    <HoverablePanelItem
                      className="hoverable"
                      onClick={[Function]}
                    >
                      <Base
                        className="hoverable css-oncsnl-PanelItem-HoverablePanelItem emphg7t2"
                        onClick={[Function]}
                      >
                        <div
                          className="hoverable css-oncsnl-PanelItem-HoverablePanelItem emphg7t2"
                          is={null}
                          onClick={[Function]}
                        >
                          <Flex
                            direction="column"
                            flex="1"
                          >
                            <Base
                              className="css-oui462"
                              direction="column"
                              flex="1"
                            >
                              <div
                                className="css-oui462"
                                is={null}
                              >
                                <h3
                                  className="truncate"
                                >
                                  1.0
                                </h3>
                                <BuildLabel>
                                  <div
                                    className="css-m8ese3-BuildLabel emphg7t3"
                                  >
                                    Builds
                                    : 
                                    1
                                  </div>
                                </BuildLabel>
                                <LastSeen
                                  align="center"
                                >
                                  <Base
                                    align="center"
                                    className="css-1eq7ivg-LastSeen emphg7t0"
                                  >
                                    <div
                                      className="css-1eq7ivg-LastSeen emphg7t0"
                                      is={null}
                                    >
                                      <TimeIcon
                                        className="icon icon-clock"
                                      >
                                        <span
                                          className="icon icon-clock css-3im64z-TimeIcon emphg7t1"
                                        />
                                      </TimeIcon>
                                      <TimeSince
                                        date="2018-01-31T07:16:26.072Z"
                                        suffix="ago"
                                      >
                                        <time
                                          dateTime="2018-01-31T07:16:26.072Z"
                                          title="January 31, 2018 7:16 AM UTC"
                                        >
                                          in 3 months
                                        </time>
                                      </TimeSince>
                                    </div>
                                  </Base>
                                </LastSeen>
                              </div>
                            </Base>
                          </Flex>
                          <Box>
                            <Base
                              className="css-roynbj"
                            >
                              <div
                                className="css-roynbj"
                                is={null}
                              >
                                Debug Information Files
                                : 
                                1
                              </div>
                            </Base>
                          </Box>
                        </div>
                      </Base>
                    </HoverablePanelItem>
                  </div>
                </Base>
              </PanelItem>
            </div>
          </PanelBody>
        </div>
      </Component>
    </Panel>
    <div>
      <SettingsPageHeading
        title="Unreferenced Debug Information Files"
      >
        <Wrapper>
          <div
            className="css-1pnrn3o-Wrapper e1kblvez1"
          >
            <Flex
              align="center"
            >
              <Base
                align="center"
                className="css-5ipae5"
              >
                <div
                  className="css-5ipae5"
                  is={null}
                >
                  <Title>
                    <Base
                      className="css-1mqcea-Title e1kblvez0"
                    >
                      <div
                        className="css-1mqcea-Title e1kblvez0"
                        is={null}
                      >
                        Unreferenced Debug Information Files
                      </div>
                    </Base>
                  </Title>
                </div>
              </Base>
            </Flex>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <TextBlock>
        <Component
          className="css-1geyb25-TextBlock ec8ep340"
        >
          <div
            className="css-1geyb25-TextBlock ec8ep340"
          >
            
          This list represents all Debug Information Files which are not assigned to an
          app version. We will still find these debug symbols for symbolication
          but we can't tell you which versions they belong to.  This happens
          if you upload them with an old verison of sentry-cli or if sentry-cli
          can't locate the Info.plist file at the time of upload.
        
          </div>
        </Component>
      </TextBlock>
      <table
        className="table"
      >
        <thead>
          <tr>
            <th>
              Debug ID
            </th>
            <th>
              Object
            </th>
            <th>
              Type
            </th>
            <th>
              Uploaded
            </th>
            <th>
              Size
            </th>
            <th />
          </tr>
        </thead>
        <tbody />
      </table>
    </div>
    <Modal
      animation={false}
      autoFocus={true}
      backdrop="static"
      bsClass="modal"
      bsSize="lg"
      dialogComponentClass={[Function]}
      enforceFocus={false}
      keyboard={true}
      manager={
        ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        }
      }
      onHide={[Function]}
      renderBackdrop={[Function]}
      restoreFocus={true}
      show={false}
    >
      <Modal
        autoFocus={true}
        backdrop="static"
        backdropClassName="modal-backdrop"
        containerClassName="modal-open"
        enforceFocus={false}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onEntering={[Function]}
        onExited={[Function]}
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      />
    </Modal>
  </div>
</ProjectDebugSymbols>
`;

exports[`ProjectDebugSymbols renders empty 1`] = `
<div>
  <SettingsPageHeading
    title="Debug Information Files"
  />
  <TextBlock>
    
          Here you can find uploaded debug information (for instance debug
          symbol files or proguard mappings).  This is used to convert
          addresses and minified function names from crash dumps
          into function names and locations.  For JavaScript debug support
          look at releases instead.
        
  </TextBlock>
  <Panel>
    <LoadingIndicator />
  </Panel>
  <Modal
    animation={false}
    autoFocus={true}
    backdrop="static"
    bsClass="modal"
    bsSize="lg"
    dialogComponentClass={[Function]}
    enforceFocus={false}
    keyboard={true}
    manager={
      ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      }
    }
    onHide={[Function]}
    renderBackdrop={[Function]}
    restoreFocus={true}
    show={false}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="Close"
    >
      <ModalTitle
        bsClass="modal-title"
        componentClass="h4"
      >
         (
        )
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <table
        className="table"
      >
        <thead>
          <tr>
            <th>
              Debug ID
            </th>
            <th>
              Object
            </th>
            <th>
              Type
            </th>
            <th>
              Uploaded
            </th>
            <th>
              Size
            </th>
          </tr>
        </thead>
        <tbody />
      </table>
    </ModalBody>
  </Modal>
</div>
`;
