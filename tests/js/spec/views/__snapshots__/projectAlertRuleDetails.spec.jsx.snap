// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
<ProjectAlertRuleDetails
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
      "ruleId": "1",
    }
  }
  routes={
    Array [
      Object {
        "path": "/",
      },
      Object {
        "indexRoute": Object {},
        "name": "Settings",
        "newnew": true,
        "path": "/settings/",
      },
      Object {
        "name": "Organization",
        "path": ":orgId/",
      },
      Object {
        "name": "Project",
        "path": ":projectId/",
      },
      Object {},
      Object {
        "indexRoute": Object {
          "name": "General",
        },
      },
      Object {
        "indexRoute": Object {},
        "name": "Alerts",
        "path": "alerts/",
      },
      Object {
        "childRoutes": Array [
          Object {
            "name": "New",
            "path": "new/",
          },
          Object {
            "name": "Edit",
            "path": ":ruleId/",
          },
        ],
        "component": null,
        "indexRoute": Object {},
        "name": "Rules",
        "path": "rules/",
      },
      Object {
        "name": "Edit",
        "path": ":ruleId/",
      },
    ]
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <RuleEditor
        actions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.actions.notify1",
              "label": "Send a notification for all services",
            },
          ]
        }
        conditions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.conditions.1",
              "label": "An event is seen",
            },
          ]
        }
        organization={
          Object {
            "access": Array [
              "org:read",
              "org:write",
              "org:admin",
              "project:read",
              "project:write",
              "project:admin",
              "team:read",
              "team:write",
              "team:admin",
            ],
            "features": Array [],
            "id": "3",
            "name": "Organization Name",
            "onboardingTasks": Array [],
            "projects": Array [],
            "slug": "org-slug",
            "status": Object {
              "id": "active",
              "name": "active",
            },
            "teams": Array [],
          }
        }
        params={
          Object {
            "orgId": "org-slug",
            "projectId": "project-slug",
            "ruleId": "1",
          }
        }
        project={
          Object {
            "hasAccess": true,
            "id": "2",
            "isBookmarked": false,
            "isMember": true,
            "name": "Project Name",
            "slug": "project-slug",
            "teams": Array [],
          }
        }
        routes={
          Array [
            Object {
              "path": "/",
            },
            Object {
              "indexRoute": Object {},
              "name": "Settings",
              "newnew": true,
              "path": "/settings/",
            },
            Object {
              "name": "Organization",
              "path": ":orgId/",
            },
            Object {
              "name": "Project",
              "path": ":projectId/",
            },
            Object {},
            Object {
              "indexRoute": Object {
                "name": "General",
              },
            },
            Object {
              "indexRoute": Object {},
              "name": "Alerts",
              "path": "alerts/",
            },
            Object {
              "childRoutes": Array [
                Object {
                  "name": "New",
                  "path": "new/",
                },
                Object {
                  "name": "Edit",
                  "path": ":ruleId/",
                },
              ],
              "component": null,
              "indexRoute": Object {},
              "name": "Rules",
              "path": "rules/",
            },
            Object {
              "name": "Edit",
              "path": ":ruleId/",
            },
          ]
        }
      >
        <form
          onSubmit={[Function]}
        >
          <Panel
            className="rule-detail"
          >
            <StyledPanel
              className="rule-detail"
            >
              <div
                className="rule-detail css-wfa8ap-StyledPanel css-5bw71w0"
              >
                <PanelHeader>
                  <StyledPanelHeader>
                    <Component
                      className="css-kf498j-StyledPanelHeader css-1t1cqk30"
                    >
                      <Flex
                        align="center"
                        className="css-kf498j-StyledPanelHeader css-1t1cqk30"
                        justify="space-between"
                      >
                        <Base
                          align="center"
                          className="css-1t1cqk30 css-hj6snb"
                          justify="space-between"
                        >
                          <div
                            className="css-1t1cqk30 css-hj6snb"
                            is={null}
                          >
                            Edit Alert Rule
                          </div>
                        </Base>
                      </Flex>
                    </Component>
                  </StyledPanelHeader>
                </PanelHeader>
                <PanelBody
                  direction="column"
                  disablePadding={false}
                  flex={false}
                >
                  <div
                    className="css-1pugmsu-padding"
                  >
                    <h6>
                      Rule name
                      :
                    </h6>
                    <TextField
                      defaultValue="My alert rule"
                      disabled={false}
                      hideErrorMessage={false}
                      name="name"
                      onChange={[Function]}
                      placeholder="My Rule Name"
                      required={true}
                    >
                      <div
                        className="control-group required"
                      >
                        <div
                          className="controls"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="id-name"
                            name="name"
                            onChange={[Function]}
                            placeholder="My Rule Name"
                            required={true}
                            type="text"
                            value="My alert rule"
                          />
                        </div>
                      </div>
                    </TextField>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                      >
                        Every time 
                        <Select2Field
                          allowClear={false}
                          allowEmpty={false}
                          choices={
                            Array [
                              Array [
                                "all",
                                "all",
                              ],
                              Array [
                                "any",
                                "any",
                              ],
                              Array [
                                "none",
                                "none",
                              ],
                            ]
                          }
                          className=""
                          disabled={false}
                          escapeMarkup={true}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="actionMatch"
                          onChange={[Function]}
                          placeholder="--"
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 100,
                            }
                          }
                        >
                          <div
                            className="control-group required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 100,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <select
                                className="form-control"
                                disabled={false}
                                id="id-actionMatch"
                                multiple={false}
                                onChange={[Function]}
                                placeholder="--"
                                required={true}
                                value=""
                              >
                                <option
                                  key="all"
                                  value="all"
                                >
                                  all
                                </option>
                                <option
                                  key="any"
                                  value="any"
                                >
                                  any
                                </option>
                                <option
                                  key="none"
                                  value="none"
                                >
                                  none
                                </option>
                              </select>
                            </div>
                          </div>
                        </Select2Field>
                         of these conditions are met:
                      </h6>
                    </AlertRuleRow>
                    <RuleNodeList
                      className="rule-condition-list"
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={
                        Array [
                          Object {
                            "id": "sentry.rules.conditions.1",
                            "name": "An alert is first seen",
                          },
                        ]
                      }
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.conditions.1",
                            "label": "An event is seen",
                          },
                        ]
                      }
                    >
                      <div
                        className="rule-condition-list"
                      >
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                          >
                            <RuleNode
                              data={
                                Object {
                                  "id": "sentry.rules.conditions.1",
                                  "name": "An alert is first seen",
                                }
                              }
                              handleDelete={[Function]}
                              handlePropertyChange={[Function]}
                              key="0"
                              node={
                                Object {
                                  "enabled": true,
                                  "id": "sentry.rules.conditions.1",
                                  "label": "An event is seen",
                                }
                              }
                            >
                              <RuleNodeRow>
                                <div
                                  className="css-1poe0fr-RuleNodeRow css-1f92yv60"
                                >
                                  <RuleNodeForm>
                                    <div
                                      className="css-7h5qyd-RuleNodeForm css-1f92yv61"
                                    >
                                      <input
                                        name="id"
                                        type="hidden"
                                        value="sentry.rules.conditions.1"
                                      />
                                      An event is seen
                                    </div>
                                  </RuleNodeForm>
                                  <RuleNodeControls>
                                    <div
                                      className="css-1d10zz4-RuleNodeControls css-1f92yv62"
                                    >
                                      <Button
                                        disabled={false}
                                        onClick={[Function]}
                                        size="small"
                                        tabIndex="-1"
                                        type="button"
                                      >
                                        <button
                                          className="button button-default button-sm"
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex="-1"
                                          type="button"
                                        >
                                          <Flex
                                            align="center"
                                            className="button-label"
                                          >
                                            <Base
                                              align="center"
                                              className="button-label css-5ipae5"
                                            >
                                              <div
                                                className="button-label css-5ipae5"
                                                is={null}
                                              >
                                                <span
                                                  className="icon icon-trash"
                                                />
                                              </div>
                                            </Base>
                                          </Flex>
                                        </button>
                                      </Button>
                                    </div>
                                  </RuleNodeControls>
                                </div>
                              </RuleNodeRow>
                            </RuleNode>
                          </div>
                        </RuleNodes>
                        <fieldset>
                          <SelectInput
                            disabled={false}
                            multiple={false}
                            onChange={[Function]}
                            placeholder="Select an option..."
                            required={false}
                            showSearch={true}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                            value=""
                          >
                            <select
                              disabled={false}
                              multiple={false}
                              onChange={[Function]}
                              placeholder="Select an option..."
                              required={false}
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                              value=""
                            >
                              <option
                                key="blank"
                              />
                              <option
                                key="sentry.rules.conditions.1"
                                value="sentry.rules.conditions.1"
                              >
                                An event is seen
                              </option>
                            </select>
                          </SelectInput>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <h6>
                      In this environment
                      :
                    </h6>
                    <Select2Field
                      allowClear={false}
                      allowEmpty={false}
                      choices={
                        Array [
                          Array [
                            "__all_environments__",
                            "All Environments",
                          ],
                          Array [
                            "production",
                            "Production",
                          ],
                          Array [
                            "staging",
                            "Staging",
                          ],
                        ]
                      }
                      className=""
                      disabled={false}
                      escapeMarkup={true}
                      hideErrorMessage={false}
                      multiple={false}
                      name="environment"
                      onChange={[Function]}
                      placeholder="--"
                      required={true}
                      style={
                        Object {
                          "marginBottom": 0,
                          "marginLeft": 5,
                          "marginRight": 5,
                        }
                      }
                      value="staging"
                    >
                      <div
                        className="control-group required"
                        style={
                          Object {
                            "marginBottom": 0,
                            "marginLeft": 5,
                            "marginRight": 5,
                          }
                        }
                      >
                        <div
                          className="controls"
                        >
                          <select
                            className="form-control"
                            disabled={false}
                            id="id-environment"
                            multiple={false}
                            onChange={[Function]}
                            placeholder="--"
                            required={true}
                            value="staging"
                          >
                            <option
                              key="__all_environments__"
                              value="__all_environments__"
                            >
                              All Environments
                            </option>
                            <option
                              key="production"
                              value="production"
                            >
                              Production
                            </option>
                            <option
                              key="staging"
                              value="staging"
                            >
                              Staging
                            </option>
                          </select>
                        </div>
                      </div>
                    </Select2Field>
                    <hr />
                    <h6>
                      Take these actions:
                    </h6>
                    <RuleNodeList
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={
                        Array [
                          Object {
                            "id": "sentry.rules.actions.notify1",
                            "name": "Send a notification to all services",
                          },
                        ]
                      }
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.actions.notify1",
                            "label": "Send a notification for all services",
                          },
                        ]
                      }
                    >
                      <div>
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                          >
                            <RuleNode
                              data={
                                Object {
                                  "id": "sentry.rules.actions.notify1",
                                  "name": "Send a notification to all services",
                                }
                              }
                              handleDelete={[Function]}
                              handlePropertyChange={[Function]}
                              key="0"
                              node={
                                Object {
                                  "enabled": true,
                                  "id": "sentry.rules.actions.notify1",
                                  "label": "Send a notification for all services",
                                }
                              }
                            >
                              <RuleNodeRow>
                                <div
                                  className="css-1poe0fr-RuleNodeRow css-1f92yv60"
                                >
                                  <RuleNodeForm>
                                    <div
                                      className="css-7h5qyd-RuleNodeForm css-1f92yv61"
                                    >
                                      <input
                                        name="id"
                                        type="hidden"
                                        value="sentry.rules.actions.notify1"
                                      />
                                      Send a notification for all services
                                    </div>
                                  </RuleNodeForm>
                                  <RuleNodeControls>
                                    <div
                                      className="css-1d10zz4-RuleNodeControls css-1f92yv62"
                                    >
                                      <Button
                                        disabled={false}
                                        onClick={[Function]}
                                        size="small"
                                        tabIndex="-1"
                                        type="button"
                                      >
                                        <button
                                          className="button button-default button-sm"
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex="-1"
                                          type="button"
                                        >
                                          <Flex
                                            align="center"
                                            className="button-label"
                                          >
                                            <Base
                                              align="center"
                                              className="button-label css-5ipae5"
                                            >
                                              <div
                                                className="button-label css-5ipae5"
                                                is={null}
                                              >
                                                <span
                                                  className="icon icon-trash"
                                                />
                                              </div>
                                            </Base>
                                          </Flex>
                                        </button>
                                      </Button>
                                    </div>
                                  </RuleNodeControls>
                                </div>
                              </RuleNodeRow>
                            </RuleNode>
                          </div>
                        </RuleNodes>
                        <fieldset>
                          <SelectInput
                            disabled={false}
                            multiple={false}
                            onChange={[Function]}
                            placeholder="Select an option..."
                            required={false}
                            showSearch={true}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                            value=""
                          >
                            <select
                              disabled={false}
                              multiple={false}
                              onChange={[Function]}
                              placeholder="Select an option..."
                              required={false}
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                              value=""
                            >
                              <option
                                key="blank"
                              />
                              <option
                                key="sentry.rules.actions.notify1"
                                value="sentry.rules.actions.notify1"
                              >
                                Send a notification for all services
                              </option>
                            </select>
                          </SelectInput>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                      >
                        Perform these actions at most once every 
                        <Select2Field
                          allowClear={false}
                          allowEmpty={false}
                          choices={
                            Array [
                              Array [
                                "5",
                                "5 minutes",
                              ],
                              Array [
                                "10",
                                "10 minutes",
                              ],
                              Array [
                                "30",
                                "30 minutes",
                              ],
                              Array [
                                "60",
                                "60 minutes",
                              ],
                              Array [
                                "180",
                                "3 hours",
                              ],
                              Array [
                                "720",
                                "12 hours",
                              ],
                              Array [
                                "1440",
                                "24 hours",
                              ],
                              Array [
                                "10080",
                                "one week",
                              ],
                              Array [
                                "43200",
                                "30 days",
                              ],
                            ]
                          }
                          className=""
                          disabled={false}
                          escapeMarkup={true}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="frequency"
                          onChange={[Function]}
                          placeholder="--"
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 140,
                            }
                          }
                        >
                          <div
                            className="control-group required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 140,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <select
                                className="form-control"
                                disabled={false}
                                id="id-frequency"
                                multiple={false}
                                onChange={[Function]}
                                placeholder="--"
                                required={true}
                                value=""
                              >
                                <option
                                  key="5"
                                  value="5"
                                >
                                  5 minutes
                                </option>
                                <option
                                  key="10"
                                  value="10"
                                >
                                  10 minutes
                                </option>
                                <option
                                  key="30"
                                  value="30"
                                >
                                  30 minutes
                                </option>
                                <option
                                  key="60"
                                  value="60"
                                >
                                  60 minutes
                                </option>
                                <option
                                  key="180"
                                  value="180"
                                >
                                  3 hours
                                </option>
                                <option
                                  key="720"
                                  value="720"
                                >
                                  12 hours
                                </option>
                                <option
                                  key="1440"
                                  value="1440"
                                >
                                  24 hours
                                </option>
                                <option
                                  key="10080"
                                  value="10080"
                                >
                                  one week
                                </option>
                                <option
                                  key="43200"
                                  value="43200"
                                >
                                  30 days
                                </option>
                              </select>
                            </div>
                          </div>
                        </Select2Field>
                         for an issue.
                      </h6>
                    </AlertRuleRow>
                    <ActionBar>
                      <div
                        className="css-wq91e7-ActionBar css-1qt54042"
                      >
                        <CancelButton
                          to="/settings/org-slug/project-slug/alerts/rules/"
                        >
                          <Button
                            className="css-1yc33o1-CancelButton css-1qt54041"
                            disabled={false}
                            to="/settings/org-slug/project-slug/alerts/rules/"
                          >
                            <Link
                              className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
                              onClick={[Function]}
                              onlyActiveOnIndex={false}
                              role="button"
                              style={Object {}}
                              to="/settings/org-slug/project-slug/alerts/rules/"
                            >
                              <a
                                className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
                                onClick={[Function]}
                                role="button"
                                style={Object {}}
                              >
                                <Flex
                                  align="center"
                                  className="button-label"
                                >
                                  <Base
                                    align="center"
                                    className="button-label css-5ipae5"
                                  >
                                    <div
                                      className="button-label css-5ipae5"
                                      is={null}
                                    >
                                      Cancel
                                    </div>
                                  </Base>
                                </Flex>
                              </a>
                            </Link>
                          </Button>
                        </CancelButton>
                        <Button
                          disabled={false}
                          priority="primary"
                        >
                          <button
                            className="button button-primary"
                            onClick={[Function]}
                            role="button"
                          >
                            <Flex
                              align="center"
                              className="button-label"
                            >
                              <Base
                                align="center"
                                className="button-label css-5ipae5"
                              >
                                <div
                                  className="button-label css-5ipae5"
                                  is={null}
                                >
                                  Save Rule
                                </div>
                              </Base>
                            </Flex>
                          </button>
                        </Button>
                      </div>
                    </ActionBar>
                  </div>
                </PanelBody>
              </div>
            </StyledPanel>
          </Panel>
        </form>
      </RuleEditor>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectAlertRuleDetails>
`;

exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
<ProjectAlertRuleDetails
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={
    Array [
      Object {
        "path": "/",
      },
      Object {
        "indexRoute": Object {},
        "name": "Settings",
        "newnew": true,
        "path": "/settings/",
      },
      Object {
        "name": "Organization",
        "path": ":orgId/",
      },
      Object {
        "name": "Project",
        "path": ":projectId/",
      },
      Object {},
      Object {
        "indexRoute": Object {
          "name": "General",
        },
      },
      Object {
        "indexRoute": Object {},
        "name": "Alerts",
        "path": "alerts/",
      },
      Object {
        "childRoutes": Array [
          Object {
            "name": "New",
            "path": "new/",
          },
          Object {
            "name": "Edit",
            "path": ":ruleId/",
          },
        ],
        "component": null,
        "indexRoute": Object {},
        "name": "Rules",
        "path": "rules/",
      },
      Object {
        "name": "Edit",
        "path": ":ruleId/",
      },
    ]
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <RuleEditor
        actions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.actions.notify1",
              "label": "Send a notification for all services",
            },
          ]
        }
        conditions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.conditions.1",
              "label": "An event is seen",
            },
          ]
        }
        organization={
          Object {
            "access": Array [
              "org:read",
              "org:write",
              "org:admin",
              "project:read",
              "project:write",
              "project:admin",
              "team:read",
              "team:write",
              "team:admin",
            ],
            "features": Array [],
            "id": "3",
            "name": "Organization Name",
            "onboardingTasks": Array [],
            "projects": Array [],
            "slug": "org-slug",
            "status": Object {
              "id": "active",
              "name": "active",
            },
            "teams": Array [],
          }
        }
        params={
          Object {
            "orgId": "org-slug",
            "projectId": "project-slug",
          }
        }
        project={
          Object {
            "hasAccess": true,
            "id": "2",
            "isBookmarked": false,
            "isMember": true,
            "name": "Project Name",
            "slug": "project-slug",
            "teams": Array [],
          }
        }
        routes={
          Array [
            Object {
              "path": "/",
            },
            Object {
              "indexRoute": Object {},
              "name": "Settings",
              "newnew": true,
              "path": "/settings/",
            },
            Object {
              "name": "Organization",
              "path": ":orgId/",
            },
            Object {
              "name": "Project",
              "path": ":projectId/",
            },
            Object {},
            Object {
              "indexRoute": Object {
                "name": "General",
              },
            },
            Object {
              "indexRoute": Object {},
              "name": "Alerts",
              "path": "alerts/",
            },
            Object {
              "childRoutes": Array [
                Object {
                  "name": "New",
                  "path": "new/",
                },
                Object {
                  "name": "Edit",
                  "path": ":ruleId/",
                },
              ],
              "component": null,
              "indexRoute": Object {},
              "name": "Rules",
              "path": "rules/",
            },
            Object {
              "name": "Edit",
              "path": ":ruleId/",
            },
          ]
        }
      >
        <form
          onSubmit={[Function]}
        >
          <Panel
            className="rule-detail"
          >
            <StyledPanel
              className="rule-detail"
            >
              <div
                className="rule-detail css-wfa8ap-StyledPanel css-5bw71w0"
              >
                <PanelHeader>
                  <StyledPanelHeader>
                    <Component
                      className="css-kf498j-StyledPanelHeader css-1t1cqk30"
                    >
                      <Flex
                        align="center"
                        className="css-kf498j-StyledPanelHeader css-1t1cqk30"
                        justify="space-between"
                      >
                        <Base
                          align="center"
                          className="css-1t1cqk30 css-hj6snb"
                          justify="space-between"
                        >
                          <div
                            className="css-1t1cqk30 css-hj6snb"
                            is={null}
                          >
                            New Alert Rule
                          </div>
                        </Base>
                      </Flex>
                    </Component>
                  </StyledPanelHeader>
                </PanelHeader>
                <PanelBody
                  direction="column"
                  disablePadding={false}
                  flex={false}
                >
                  <div
                    className="css-1pugmsu-padding"
                  >
                    <h6>
                      Rule name
                      :
                    </h6>
                    <TextField
                      defaultValue=""
                      disabled={false}
                      hideErrorMessage={false}
                      name="name"
                      onChange={[Function]}
                      placeholder="My Rule Name"
                      required={true}
                    >
                      <div
                        className="control-group required"
                      >
                        <div
                          className="controls"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="id-name"
                            name="name"
                            onChange={[Function]}
                            placeholder="My Rule Name"
                            required={true}
                            type="text"
                            value=""
                          />
                        </div>
                      </div>
                    </TextField>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                      >
                        Every time 
                        <Select2Field
                          allowClear={false}
                          allowEmpty={false}
                          choices={
                            Array [
                              Array [
                                "all",
                                "all",
                              ],
                              Array [
                                "any",
                                "any",
                              ],
                              Array [
                                "none",
                                "none",
                              ],
                            ]
                          }
                          className=""
                          disabled={false}
                          escapeMarkup={true}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="actionMatch"
                          onChange={[Function]}
                          placeholder="--"
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 100,
                            }
                          }
                          value="all"
                        >
                          <div
                            className="control-group required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 100,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <select
                                className="form-control"
                                disabled={false}
                                id="id-actionMatch"
                                multiple={false}
                                onChange={[Function]}
                                placeholder="--"
                                required={true}
                                value="all"
                              >
                                <option
                                  key="all"
                                  value="all"
                                >
                                  all
                                </option>
                                <option
                                  key="any"
                                  value="any"
                                >
                                  any
                                </option>
                                <option
                                  key="none"
                                  value="none"
                                >
                                  none
                                </option>
                              </select>
                            </div>
                          </div>
                        </Select2Field>
                         of these conditions are met:
                      </h6>
                    </AlertRuleRow>
                    <RuleNodeList
                      className="rule-condition-list"
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={Array []}
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.conditions.1",
                            "label": "An event is seen",
                          },
                        ]
                      }
                    >
                      <div
                        className="rule-condition-list"
                      >
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                          />
                        </RuleNodes>
                        <fieldset>
                          <SelectInput
                            disabled={false}
                            multiple={false}
                            onChange={[Function]}
                            placeholder="Select an option..."
                            required={false}
                            showSearch={true}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                            value=""
                          >
                            <select
                              disabled={false}
                              multiple={false}
                              onChange={[Function]}
                              placeholder="Select an option..."
                              required={false}
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                              value=""
                            >
                              <option
                                key="blank"
                              />
                              <option
                                key="sentry.rules.conditions.1"
                                value="sentry.rules.conditions.1"
                              >
                                An event is seen
                              </option>
                            </select>
                          </SelectInput>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <h6>
                      In this environment
                      :
                    </h6>
                    <Select2Field
                      allowClear={false}
                      allowEmpty={false}
                      choices={
                        Array [
                          Array [
                            "__all_environments__",
                            "All Environments",
                          ],
                          Array [
                            "production",
                            "Production",
                          ],
                          Array [
                            "staging",
                            "Staging",
                          ],
                        ]
                      }
                      className=""
                      disabled={false}
                      escapeMarkup={true}
                      hideErrorMessage={false}
                      multiple={false}
                      name="environment"
                      onChange={[Function]}
                      placeholder="--"
                      required={true}
                      style={
                        Object {
                          "marginBottom": 0,
                          "marginLeft": 5,
                          "marginRight": 5,
                        }
                      }
                      value="__all_environments__"
                    >
                      <div
                        className="control-group required"
                        style={
                          Object {
                            "marginBottom": 0,
                            "marginLeft": 5,
                            "marginRight": 5,
                          }
                        }
                      >
                        <div
                          className="controls"
                        >
                          <select
                            className="form-control"
                            disabled={false}
                            id="id-environment"
                            multiple={false}
                            onChange={[Function]}
                            placeholder="--"
                            required={true}
                            value="__all_environments__"
                          >
                            <option
                              key="__all_environments__"
                              value="__all_environments__"
                            >
                              All Environments
                            </option>
                            <option
                              key="production"
                              value="production"
                            >
                              Production
                            </option>
                            <option
                              key="staging"
                              value="staging"
                            >
                              Staging
                            </option>
                          </select>
                        </div>
                      </div>
                    </Select2Field>
                    <hr />
                    <h6>
                      Take these actions:
                    </h6>
                    <RuleNodeList
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={Array []}
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.actions.notify1",
                            "label": "Send a notification for all services",
                          },
                        ]
                      }
                    >
                      <div>
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes css-e8p6eg0"
                          />
                        </RuleNodes>
                        <fieldset>
                          <SelectInput
                            disabled={false}
                            multiple={false}
                            onChange={[Function]}
                            placeholder="Select an option..."
                            required={false}
                            showSearch={true}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                            value=""
                          >
                            <select
                              disabled={false}
                              multiple={false}
                              onChange={[Function]}
                              placeholder="Select an option..."
                              required={false}
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                              value=""
                            >
                              <option
                                key="blank"
                              />
                              <option
                                key="sentry.rules.actions.notify1"
                                value="sentry.rules.actions.notify1"
                              >
                                Send a notification for all services
                              </option>
                            </select>
                          </SelectInput>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow css-1qt54040"
                      >
                        Perform these actions at most once every 
                        <Select2Field
                          allowClear={false}
                          allowEmpty={false}
                          choices={
                            Array [
                              Array [
                                "5",
                                "5 minutes",
                              ],
                              Array [
                                "10",
                                "10 minutes",
                              ],
                              Array [
                                "30",
                                "30 minutes",
                              ],
                              Array [
                                "60",
                                "60 minutes",
                              ],
                              Array [
                                "180",
                                "3 hours",
                              ],
                              Array [
                                "720",
                                "12 hours",
                              ],
                              Array [
                                "1440",
                                "24 hours",
                              ],
                              Array [
                                "10080",
                                "one week",
                              ],
                              Array [
                                "43200",
                                "30 days",
                              ],
                            ]
                          }
                          className=""
                          disabled={false}
                          escapeMarkup={true}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="frequency"
                          onChange={[Function]}
                          placeholder="--"
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 140,
                            }
                          }
                          value={30}
                        >
                          <div
                            className="control-group required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 140,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <select
                                className="form-control"
                                disabled={false}
                                id="id-frequency"
                                multiple={false}
                                onChange={[Function]}
                                placeholder="--"
                                required={true}
                                value={30}
                              >
                                <option
                                  key="5"
                                  value="5"
                                >
                                  5 minutes
                                </option>
                                <option
                                  key="10"
                                  value="10"
                                >
                                  10 minutes
                                </option>
                                <option
                                  key="30"
                                  value="30"
                                >
                                  30 minutes
                                </option>
                                <option
                                  key="60"
                                  value="60"
                                >
                                  60 minutes
                                </option>
                                <option
                                  key="180"
                                  value="180"
                                >
                                  3 hours
                                </option>
                                <option
                                  key="720"
                                  value="720"
                                >
                                  12 hours
                                </option>
                                <option
                                  key="1440"
                                  value="1440"
                                >
                                  24 hours
                                </option>
                                <option
                                  key="10080"
                                  value="10080"
                                >
                                  one week
                                </option>
                                <option
                                  key="43200"
                                  value="43200"
                                >
                                  30 days
                                </option>
                              </select>
                            </div>
                          </div>
                        </Select2Field>
                         for an issue.
                      </h6>
                    </AlertRuleRow>
                    <ActionBar>
                      <div
                        className="css-wq91e7-ActionBar css-1qt54042"
                      >
                        <CancelButton
                          to="/settings/org-slug/project-slug/alerts/rules/"
                        >
                          <Button
                            className="css-1yc33o1-CancelButton css-1qt54041"
                            disabled={false}
                            to="/settings/org-slug/project-slug/alerts/rules/"
                          >
                            <Link
                              className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
                              onClick={[Function]}
                              onlyActiveOnIndex={false}
                              role="button"
                              style={Object {}}
                              to="/settings/org-slug/project-slug/alerts/rules/"
                            >
                              <a
                                className="css-1yc33o1-CancelButton css-1qt54041 button button-default"
                                onClick={[Function]}
                                role="button"
                                style={Object {}}
                              >
                                <Flex
                                  align="center"
                                  className="button-label"
                                >
                                  <Base
                                    align="center"
                                    className="button-label css-5ipae5"
                                  >
                                    <div
                                      className="button-label css-5ipae5"
                                      is={null}
                                    >
                                      Cancel
                                    </div>
                                  </Base>
                                </Flex>
                              </a>
                            </Link>
                          </Button>
                        </CancelButton>
                        <Button
                          disabled={false}
                          priority="primary"
                        >
                          <button
                            className="button button-primary"
                            onClick={[Function]}
                            role="button"
                          >
                            <Flex
                              align="center"
                              className="button-label"
                            >
                              <Base
                                align="center"
                                className="button-label css-5ipae5"
                              >
                                <div
                                  className="button-label css-5ipae5"
                                  is={null}
                                >
                                  Save Rule
                                </div>
                              </Base>
                            </Flex>
                          </button>
                        </Button>
                      </div>
                    </ActionBar>
                  </div>
                </PanelBody>
              </div>
            </StyledPanel>
          </Panel>
        </form>
      </RuleEditor>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectAlertRuleDetails>
`;
