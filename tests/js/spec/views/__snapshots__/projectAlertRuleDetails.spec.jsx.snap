// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
<ProjectAlertRuleDetails
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
      "ruleId": "1",
    }
  }
  routes={
    Array [
      Object {
        "path": "/",
      },
      Object {
        "indexRoute": Object {},
        "name": "Settings",
        "path": "/settings/",
      },
      Object {
        "name": "Organization",
        "path": ":orgId/",
      },
      Object {
        "name": "Project",
        "path": ":projectId/",
      },
      Object {},
      Object {
        "indexRoute": Object {
          "name": "General",
        },
      },
      Object {
        "indexRoute": Object {},
        "name": "Alerts",
        "path": "alerts/",
      },
      Object {
        "childRoutes": Array [
          Object {
            "name": "New",
            "path": "new/",
          },
          Object {
            "name": "Edit",
            "path": ":ruleId/",
          },
        ],
        "component": null,
        "indexRoute": Object {},
        "name": "Rules",
        "path": "rules/",
      },
      Object {
        "name": "Edit",
        "path": ":ruleId/",
      },
    ]
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <RuleEditor
        actions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.actions.notify1",
              "label": "Send a notification for all services",
            },
          ]
        }
        conditions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.conditions.1",
              "label": "An event is seen",
            },
          ]
        }
        organization={
          Object {
            "access": Array [
              "org:read",
              "org:write",
              "org:admin",
              "project:read",
              "project:write",
              "project:admin",
              "team:read",
              "team:write",
              "team:admin",
            ],
            "features": Array [],
            "id": "3",
            "name": "Organization Name",
            "onboardingTasks": Array [],
            "projects": Array [],
            "scrapeJavaScript": true,
            "slug": "org-slug",
            "status": Object {
              "id": "active",
              "name": "active",
            },
            "teams": Array [],
          }
        }
        params={
          Object {
            "orgId": "org-slug",
            "projectId": "project-slug",
            "ruleId": "1",
          }
        }
        project={
          Object {
            "hasAccess": true,
            "id": "2",
            "isBookmarked": false,
            "isMember": true,
            "name": "Project Name",
            "slug": "project-slug",
            "teams": Array [],
          }
        }
        routes={
          Array [
            Object {
              "path": "/",
            },
            Object {
              "indexRoute": Object {},
              "name": "Settings",
              "path": "/settings/",
            },
            Object {
              "name": "Organization",
              "path": ":orgId/",
            },
            Object {
              "name": "Project",
              "path": ":projectId/",
            },
            Object {},
            Object {
              "indexRoute": Object {
                "name": "General",
              },
            },
            Object {
              "indexRoute": Object {},
              "name": "Alerts",
              "path": "alerts/",
            },
            Object {
              "childRoutes": Array [
                Object {
                  "name": "New",
                  "path": "new/",
                },
                Object {
                  "name": "Edit",
                  "path": ":ruleId/",
                },
              ],
              "component": null,
              "indexRoute": Object {},
              "name": "Rules",
              "path": "rules/",
            },
            Object {
              "name": "Edit",
              "path": ":ruleId/",
            },
          ]
        }
      >
        <form
          onSubmit={[Function]}
        >
          <Panel
            className="rule-detail"
          >
            <Component
              className="rule-detail css-yahxlu-Panel e1laxa7d0"
            >
              <div
                className="rule-detail css-yahxlu-Panel e1laxa7d0"
              >
                <PanelHeader>
                  <Component
                    className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                  >
                    <Flex
                      align="center"
                      className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                      justify="space-between"
                    >
                      <Base
                        align="center"
                        className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                        justify="space-between"
                      >
                        <div
                          className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                          is={null}
                        >
                          Edit Alert Rule
                        </div>
                      </Base>
                    </Flex>
                  </Component>
                </PanelHeader>
                <PanelBody
                  direction="column"
                  disablePadding={false}
                  flex={false}
                >
                  <div
                    className="css-zhfi4l-padding-textStyles"
                  >
                    <h6>
                      Rule name
                      :
                    </h6>
                    <TextField
                      defaultValue="My alert rule"
                      disabled={false}
                      hideErrorMessage={false}
                      name="name"
                      onChange={[Function]}
                      placeholder="My Rule Name"
                      required={true}
                    >
                      <div
                        className="control-group required"
                      >
                        <div
                          className="controls"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="id-name"
                            name="name"
                            onChange={[Function]}
                            placeholder="My Rule Name"
                            required={true}
                            type="text"
                            value="My alert rule"
                          />
                        </div>
                      </div>
                    </TextField>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow elb7f1e0"
                      >
                        Every time 
                        <SelectField
                          choices={
                            Array [
                              Array [
                                "all",
                                "all",
                              ],
                              Array [
                                "any",
                                "any",
                              ],
                              Array [
                                "none",
                                "none",
                              ],
                            ]
                          }
                          className=""
                          clearable={false}
                          disabled={false}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="actionMatch"
                          onChange={[Function]}
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 100,
                            }
                          }
                        >
                          <div
                            className="required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 100,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <StyledSelectControl
                                choices={
                                  Array [
                                    Array [
                                      "all",
                                      "all",
                                    ],
                                    Array [
                                      "any",
                                      "any",
                                    ],
                                    Array [
                                      "none",
                                      "none",
                                    ],
                                  ]
                                }
                                clearable={false}
                                disabled={false}
                                id="id-actionMatch"
                                multiple={false}
                                name="actionMatch"
                                onChange={[Function]}
                                required={true}
                                value=""
                              >
                                <SelectControl
                                  choices={
                                    Array [
                                      Array [
                                        "all",
                                        "all",
                                      ],
                                      Array [
                                        "any",
                                        "any",
                                      ],
                                      Array [
                                        "none",
                                        "none",
                                      ],
                                    ]
                                  }
                                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                  clearable={false}
                                  disabled={false}
                                  height={36}
                                  id="id-actionMatch"
                                  multiple={false}
                                  name="actionMatch"
                                  onChange={[Function]}
                                  required={true}
                                  value=""
                                >
                                  <StyledSelect
                                    arrowRenderer={[Function]}
                                    backspaceRemoves={false}
                                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                    clearable={false}
                                    deleteRemoves={false}
                                    disabled={false}
                                    height={36}
                                    id="id-actionMatch"
                                    multiple={false}
                                    name="actionMatch"
                                    onChange={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "all",
                                          "value": "all",
                                        },
                                        Object {
                                          "label": "any",
                                          "value": "any",
                                        },
                                        Object {
                                          "label": "none",
                                          "value": "none",
                                        },
                                      ]
                                    }
                                    required={true}
                                    value=""
                                  >
                                    <ForwardRef(SelectPicker)
                                      arrowRenderer={[Function]}
                                      backspaceRemoves={false}
                                      className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                      clearable={false}
                                      deleteRemoves={false}
                                      disabled={false}
                                      height={36}
                                      id="id-actionMatch"
                                      multiple={false}
                                      name="actionMatch"
                                      onChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "all",
                                            "value": "all",
                                          },
                                          Object {
                                            "label": "any",
                                            "value": "any",
                                          },
                                          Object {
                                            "label": "none",
                                            "value": "none",
                                          },
                                        ]
                                      }
                                      required={true}
                                      value=""
                                    >
                                      <SelectPicker
                                        arrowRenderer={[Function]}
                                        backspaceRemoves={false}
                                        className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                        clearable={false}
                                        deleteRemoves={false}
                                        disabled={false}
                                        forwardedRef={null}
                                        height={36}
                                        id="id-actionMatch"
                                        multiple={false}
                                        name="actionMatch"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "all",
                                              "value": "all",
                                            },
                                            Object {
                                              "label": "any",
                                              "value": "any",
                                            },
                                            Object {
                                              "label": "none",
                                              "value": "none",
                                            },
                                          ]
                                        }
                                        required={true}
                                        value=""
                                      >
                                        <Select
                                          arrowRenderer={[Function]}
                                          autosize={true}
                                          backspaceRemoves={false}
                                          backspaceToRemoveMessage="Press backspace to remove {label}"
                                          className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                          clearAllText="Clear all"
                                          clearRenderer={[Function]}
                                          clearValueText="Clear value"
                                          clearable={false}
                                          closeOnSelect={true}
                                          deleteRemoves={false}
                                          delimiter=","
                                          disabled={false}
                                          escapeClearsValue={true}
                                          filterOptions={[Function]}
                                          height={36}
                                          id="id-actionMatch"
                                          ignoreAccents={true}
                                          ignoreCase={true}
                                          inputProps={Object {}}
                                          isLoading={false}
                                          joinValues={false}
                                          labelKey="label"
                                          matchPos="any"
                                          matchProp="any"
                                          menuBuffer={0}
                                          menuRenderer={[Function]}
                                          multi={false}
                                          multiple={false}
                                          name="actionMatch"
                                          noResultsText="No results found"
                                          onBlurResetsInput={true}
                                          onChange={[Function]}
                                          onCloseResetsInput={true}
                                          onSelectResetsInput={true}
                                          openOnClick={true}
                                          optionComponent={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "all",
                                                "value": "all",
                                              },
                                              Object {
                                                "label": "any",
                                                "value": "any",
                                              },
                                              Object {
                                                "label": "none",
                                                "value": "none",
                                              },
                                            ]
                                          }
                                          pageSize={5}
                                          placeholder="Select..."
                                          removeSelected={true}
                                          required={true}
                                          rtl={false}
                                          scrollMenuIntoView={true}
                                          searchable={true}
                                          simpleValue={false}
                                          tabSelectsValue={true}
                                          trimFilter={true}
                                          value=""
                                          valueComponent={[Function]}
                                          valueKey="value"
                                        >
                                          <div
                                            className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 is-searchable Select--single"
                                          >
                                            <div
                                              className="Select-control"
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                            >
                                              <span
                                                className="Select-multi-value-wrapper"
                                                id="react-select-22--value"
                                              >
                                                <div
                                                  className="Select-placeholder"
                                                >
                                                  Select...
                                                </div>
                                                <AutosizeInput
                                                  aria-activedescendant="react-select-22--value"
                                                  aria-expanded="false"
                                                  aria-haspopup="false"
                                                  aria-owns=""
                                                  className="Select-input"
                                                  id="id-actionMatch"
                                                  injectStyles={true}
                                                  minWidth="5"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={true}
                                                  role="combobox"
                                                  value=""
                                                >
                                                  <div
                                                    className="Select-input"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                      }
                                                    }
                                                  >
                                                    <input
                                                      aria-activedescendant="react-select-22--value"
                                                      aria-expanded="false"
                                                      aria-haspopup="false"
                                                      aria-owns=""
                                                      id="id-actionMatch"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={true}
                                                      role="combobox"
                                                      style={
                                                        Object {
                                                          "boxSizing": "content-box",
                                                          "width": "5px",
                                                        }
                                                      }
                                                      value=""
                                                    />
                                                    <div
                                                      style={
                                                        Object {
                                                          "height": 0,
                                                          "left": 0,
                                                          "overflow": "scroll",
                                                          "position": "absolute",
                                                          "top": 0,
                                                          "visibility": "hidden",
                                                          "whiteSpace": "pre",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </AutosizeInput>
                                              </span>
                                              <span
                                                className="Select-arrow-zone"
                                                onMouseDown={[Function]}
                                              >
                                                <span
                                                  className="icon-arrow-down"
                                                />
                                              </span>
                                            </div>
                                          </div>
                                        </Select>
                                      </SelectPicker>
                                    </ForwardRef(SelectPicker)>
                                  </StyledSelect>
                                </SelectControl>
                              </StyledSelectControl>
                            </div>
                          </div>
                        </SelectField>
                         of these conditions are met:
                      </h6>
                    </AlertRuleRow>
                    <RuleNodeList
                      className="rule-condition-list"
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={
                        Array [
                          Object {
                            "id": "sentry.rules.conditions.1",
                            "name": "An alert is first seen",
                          },
                        ]
                      }
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.conditions.1",
                            "label": "An event is seen",
                          },
                        ]
                      }
                    >
                      <div
                        className="rule-condition-list"
                      >
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes e17yy09u0"
                          >
                            <RuleNode
                              data={
                                Object {
                                  "id": "sentry.rules.conditions.1",
                                  "name": "An alert is first seen",
                                }
                              }
                              handleDelete={[Function]}
                              handlePropertyChange={[Function]}
                              key="0"
                              node={
                                Object {
                                  "enabled": true,
                                  "id": "sentry.rules.conditions.1",
                                  "label": "An event is seen",
                                }
                              }
                            >
                              <RuleNodeRow>
                                <div
                                  className="css-5muuhy-RuleNodeRow e1qnqozx0"
                                >
                                  <RuleNodeForm>
                                    <div
                                      className="css-1by90re-RuleNodeForm e1qnqozx1"
                                    >
                                      <input
                                        name="id"
                                        type="hidden"
                                        value="sentry.rules.conditions.1"
                                      />
                                      An event is seen
                                    </div>
                                  </RuleNodeForm>
                                  <RuleNodeControls>
                                    <div
                                      className="css-1d10zz4-RuleNodeControls e1qnqozx2"
                                    >
                                      <Button
                                        disabled={false}
                                        icon="icon-trash"
                                        onClick={[Function]}
                                        size="small"
                                        tabIndex="-1"
                                        type="button"
                                      >
                                        <StyledButton
                                          disabled={false}
                                          onClick={[Function]}
                                          role="button"
                                          size="small"
                                          tabIndex="-1"
                                          type="button"
                                        >
                                          <Component
                                            className="css-dkprmi-StyledButton-getColors eqrebog0"
                                            disabled={false}
                                            onClick={[Function]}
                                            role="button"
                                            size="small"
                                            tabIndex="-1"
                                            type="button"
                                          >
                                            <button
                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="small"
                                              tabIndex="-1"
                                              type="button"
                                            >
                                              <ButtonLabel
                                                size="small"
                                              >
                                                <Component
                                                  className="css-7ui8bl-ButtonLabel eqrebog1"
                                                  size="small"
                                                >
                                                  <span
                                                    className="css-7ui8bl-ButtonLabel eqrebog1"
                                                  >
                                                    <Icon
                                                      hasChildren={false}
                                                      size="small"
                                                    >
                                                      <Component
                                                        className="css-ljhpxy-Icon eqrebog2"
                                                        hasChildren={false}
                                                        size="small"
                                                      >
                                                        <span
                                                          className="css-ljhpxy-Icon eqrebog2"
                                                          size="small"
                                                        >
                                                          <StyledInlineSvg
                                                            size="12px"
                                                            src="icon-trash"
                                                          >
                                                            <InlineSvg
                                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <StyledSvg
                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                height="12px"
                                                                viewBox={Object {}}
                                                                width="12px"
                                                              >
                                                                <svg
                                                                  className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                  height="12px"
                                                                  viewBox={Object {}}
                                                                  width="12px"
                                                                >
                                                                  <use
                                                                    href="#test"
                                                                    xlinkHref="#test"
                                                                  />
                                                                </svg>
                                                              </StyledSvg>
                                                            </InlineSvg>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </Component>
                                                    </Icon>
                                                  </span>
                                                </Component>
                                              </ButtonLabel>
                                            </button>
                                          </Component>
                                        </StyledButton>
                                      </Button>
                                    </div>
                                  </RuleNodeControls>
                                </div>
                              </RuleNodeRow>
                            </RuleNode>
                          </div>
                        </RuleNodes>
                        <fieldset>
                          <SelectControl
                            clearable={false}
                            height={36}
                            multiple={false}
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "An event is seen",
                                  "value": "sentry.rules.conditions.1",
                                },
                              ]
                            }
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <StyledSelect
                              arrowRenderer={[Function]}
                              backspaceRemoves={false}
                              clearable={false}
                              deleteRemoves={false}
                              height={36}
                              multiple={false}
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "label": "An event is seen",
                                    "value": "sentry.rules.conditions.1",
                                  },
                                ]
                              }
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <ForwardRef(SelectPicker)
                                arrowRenderer={[Function]}
                                backspaceRemoves={false}
                                className="css-6lbkok-StyledSelect eho28m20"
                                clearable={false}
                                deleteRemoves={false}
                                height={36}
                                multiple={false}
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "An event is seen",
                                      "value": "sentry.rules.conditions.1",
                                    },
                                  ]
                                }
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <SelectPicker
                                  arrowRenderer={[Function]}
                                  backspaceRemoves={false}
                                  className="css-6lbkok-StyledSelect eho28m20"
                                  clearable={false}
                                  deleteRemoves={false}
                                  forwardedRef={null}
                                  height={36}
                                  multiple={false}
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "An event is seen",
                                        "value": "sentry.rules.conditions.1",
                                      },
                                    ]
                                  }
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Select
                                    arrowRenderer={[Function]}
                                    autosize={true}
                                    backspaceRemoves={false}
                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                    className="css-6lbkok-StyledSelect eho28m20"
                                    clearAllText="Clear all"
                                    clearRenderer={[Function]}
                                    clearValueText="Clear value"
                                    clearable={false}
                                    closeOnSelect={true}
                                    deleteRemoves={false}
                                    delimiter=","
                                    disabled={false}
                                    escapeClearsValue={true}
                                    filterOptions={[Function]}
                                    height={36}
                                    ignoreAccents={true}
                                    ignoreCase={true}
                                    inputProps={Object {}}
                                    isLoading={false}
                                    joinValues={false}
                                    labelKey="label"
                                    matchPos="any"
                                    matchProp="any"
                                    menuBuffer={0}
                                    menuRenderer={[Function]}
                                    multi={false}
                                    multiple={false}
                                    noResultsText="No results found"
                                    onBlurResetsInput={true}
                                    onChange={[Function]}
                                    onCloseResetsInput={true}
                                    onSelectResetsInput={true}
                                    openOnClick={true}
                                    optionComponent={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "An event is seen",
                                          "value": "sentry.rules.conditions.1",
                                        },
                                      ]
                                    }
                                    pageSize={5}
                                    placeholder="Select..."
                                    removeSelected={true}
                                    required={false}
                                    rtl={false}
                                    scrollMenuIntoView={true}
                                    searchable={true}
                                    simpleValue={false}
                                    style={
                                      Object {
                                        "width": "100%",
                                      }
                                    }
                                    tabSelectsValue={true}
                                    trimFilter={true}
                                    valueComponent={[Function]}
                                    valueKey="value"
                                  >
                                    <div
                                      className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                                    >
                                      <div
                                        className="Select-control"
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <span
                                          className="Select-multi-value-wrapper"
                                          id="react-select-23--value"
                                        >
                                          <div
                                            className="Select-placeholder"
                                          >
                                            Select...
                                          </div>
                                          <AutosizeInput
                                            aria-activedescendant="react-select-23--value"
                                            aria-expanded="false"
                                            aria-haspopup="false"
                                            aria-owns=""
                                            className="Select-input"
                                            injectStyles={true}
                                            minWidth="5"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            role="combobox"
                                            value=""
                                          >
                                            <div
                                              className="Select-input"
                                              style={
                                                Object {
                                                  "display": "inline-block",
                                                }
                                              }
                                            >
                                              <input
                                                aria-activedescendant="react-select-23--value"
                                                aria-expanded="false"
                                                aria-haspopup="false"
                                                aria-owns=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                role="combobox"
                                                style={
                                                  Object {
                                                    "boxSizing": "content-box",
                                                    "width": "5px",
                                                  }
                                                }
                                                value=""
                                              />
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "left": 0,
                                                    "overflow": "scroll",
                                                    "position": "absolute",
                                                    "top": 0,
                                                    "visibility": "hidden",
                                                    "whiteSpace": "pre",
                                                  }
                                                }
                                              />
                                            </div>
                                          </AutosizeInput>
                                        </span>
                                        <span
                                          className="Select-arrow-zone"
                                          onMouseDown={[Function]}
                                        >
                                          <span
                                            className="icon-arrow-down"
                                          />
                                        </span>
                                      </div>
                                    </div>
                                  </Select>
                                </SelectPicker>
                              </ForwardRef(SelectPicker)>
                            </StyledSelect>
                          </SelectControl>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <h6>
                      In this environment
                      :
                    </h6>
                    <SelectField
                      choices={
                        Array [
                          Array [
                            "__all_environments__",
                            "All Environments",
                          ],
                          Array [
                            "production",
                            "Production",
                          ],
                          Array [
                            "staging",
                            "Staging",
                          ],
                        ]
                      }
                      className=""
                      clearable={false}
                      disabled={false}
                      hideErrorMessage={false}
                      multiple={false}
                      name="environment"
                      onChange={[Function]}
                      required={true}
                      style={
                        Object {
                          "marginBottom": 0,
                          "marginLeft": 5,
                          "marginRight": 5,
                        }
                      }
                      value="staging"
                    >
                      <div
                        className="required"
                        style={
                          Object {
                            "marginBottom": 0,
                            "marginLeft": 5,
                            "marginRight": 5,
                          }
                        }
                      >
                        <div
                          className="controls"
                        >
                          <StyledSelectControl
                            choices={
                              Array [
                                Array [
                                  "__all_environments__",
                                  "All Environments",
                                ],
                                Array [
                                  "production",
                                  "Production",
                                ],
                                Array [
                                  "staging",
                                  "Staging",
                                ],
                              ]
                            }
                            clearable={false}
                            disabled={false}
                            id="id-environment"
                            multiple={false}
                            name="environment"
                            onChange={[Function]}
                            required={true}
                            value="staging"
                          >
                            <SelectControl
                              choices={
                                Array [
                                  Array [
                                    "__all_environments__",
                                    "All Environments",
                                  ],
                                  Array [
                                    "production",
                                    "Production",
                                  ],
                                  Array [
                                    "staging",
                                    "Staging",
                                  ],
                                ]
                              }
                              className="css-j6zs66-StyledSelectControl e1qrhqd00"
                              clearable={false}
                              disabled={false}
                              height={36}
                              id="id-environment"
                              multiple={false}
                              name="environment"
                              onChange={[Function]}
                              required={true}
                              value="staging"
                            >
                              <StyledSelect
                                arrowRenderer={[Function]}
                                backspaceRemoves={false}
                                className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                clearable={false}
                                deleteRemoves={false}
                                disabled={false}
                                height={36}
                                id="id-environment"
                                multiple={false}
                                name="environment"
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "All Environments",
                                      "value": "__all_environments__",
                                    },
                                    Object {
                                      "label": "Production",
                                      "value": "production",
                                    },
                                    Object {
                                      "label": "Staging",
                                      "value": "staging",
                                    },
                                  ]
                                }
                                required={true}
                                value="staging"
                              >
                                <ForwardRef(SelectPicker)
                                  arrowRenderer={[Function]}
                                  backspaceRemoves={false}
                                  className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                  clearable={false}
                                  deleteRemoves={false}
                                  disabled={false}
                                  height={36}
                                  id="id-environment"
                                  multiple={false}
                                  name="environment"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "All Environments",
                                        "value": "__all_environments__",
                                      },
                                      Object {
                                        "label": "Production",
                                        "value": "production",
                                      },
                                      Object {
                                        "label": "Staging",
                                        "value": "staging",
                                      },
                                    ]
                                  }
                                  required={true}
                                  value="staging"
                                >
                                  <SelectPicker
                                    arrowRenderer={[Function]}
                                    backspaceRemoves={false}
                                    className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                    clearable={false}
                                    deleteRemoves={false}
                                    disabled={false}
                                    forwardedRef={null}
                                    height={36}
                                    id="id-environment"
                                    multiple={false}
                                    name="environment"
                                    onChange={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "All Environments",
                                          "value": "__all_environments__",
                                        },
                                        Object {
                                          "label": "Production",
                                          "value": "production",
                                        },
                                        Object {
                                          "label": "Staging",
                                          "value": "staging",
                                        },
                                      ]
                                    }
                                    required={true}
                                    value="staging"
                                  >
                                    <Select
                                      arrowRenderer={[Function]}
                                      autosize={true}
                                      backspaceRemoves={false}
                                      backspaceToRemoveMessage="Press backspace to remove {label}"
                                      className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                      clearAllText="Clear all"
                                      clearRenderer={[Function]}
                                      clearValueText="Clear value"
                                      clearable={false}
                                      closeOnSelect={true}
                                      deleteRemoves={false}
                                      delimiter=","
                                      disabled={false}
                                      escapeClearsValue={true}
                                      filterOptions={[Function]}
                                      height={36}
                                      id="id-environment"
                                      ignoreAccents={true}
                                      ignoreCase={true}
                                      inputProps={Object {}}
                                      isLoading={false}
                                      joinValues={false}
                                      labelKey="label"
                                      matchPos="any"
                                      matchProp="any"
                                      menuBuffer={0}
                                      menuRenderer={[Function]}
                                      multi={false}
                                      multiple={false}
                                      name="environment"
                                      noResultsText="No results found"
                                      onBlurResetsInput={true}
                                      onChange={[Function]}
                                      onCloseResetsInput={true}
                                      onSelectResetsInput={true}
                                      openOnClick={true}
                                      optionComponent={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "All Environments",
                                            "value": "__all_environments__",
                                          },
                                          Object {
                                            "label": "Production",
                                            "value": "production",
                                          },
                                          Object {
                                            "label": "Staging",
                                            "value": "staging",
                                          },
                                        ]
                                      }
                                      pageSize={5}
                                      placeholder="Select..."
                                      removeSelected={true}
                                      required={true}
                                      rtl={false}
                                      scrollMenuIntoView={true}
                                      searchable={true}
                                      simpleValue={false}
                                      tabSelectsValue={true}
                                      trimFilter={true}
                                      value="staging"
                                      valueComponent={[Function]}
                                      valueKey="value"
                                    >
                                      <div
                                        className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                      >
                                        <input
                                          disabled={false}
                                          key="hidden.0"
                                          name="environment"
                                          type="hidden"
                                          value="staging"
                                        />
                                        <div
                                          className="Select-control"
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                        >
                                          <span
                                            className="Select-multi-value-wrapper"
                                            id="react-select-24--value"
                                          >
                                            <Value
                                              disabled={false}
                                              id="react-select-24--value-item"
                                              instancePrefix="react-select-24-"
                                              onClick={null}
                                              placeholder="Select..."
                                              value={
                                                Object {
                                                  "label": "Staging",
                                                  "value": "staging",
                                                }
                                              }
                                            >
                                              <div
                                                className="Select-value"
                                              >
                                                <span
                                                  aria-selected="true"
                                                  className="Select-value-label"
                                                  id="react-select-24--value-item"
                                                  role="option"
                                                >
                                                  Staging
                                                </span>
                                              </div>
                                            </Value>
                                            <AutosizeInput
                                              aria-activedescendant="react-select-24--value"
                                              aria-expanded="false"
                                              aria-haspopup="false"
                                              aria-owns=""
                                              className="Select-input"
                                              id="id-environment"
                                              injectStyles={true}
                                              minWidth="5"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              role="combobox"
                                              value=""
                                            >
                                              <div
                                                className="Select-input"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                  }
                                                }
                                              >
                                                <input
                                                  aria-activedescendant="react-select-24--value"
                                                  aria-expanded="false"
                                                  aria-haspopup="false"
                                                  aria-owns=""
                                                  id="id-environment"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  role="combobox"
                                                  style={
                                                    Object {
                                                      "boxSizing": "content-box",
                                                      "width": "5px",
                                                    }
                                                  }
                                                  value=""
                                                />
                                                <div
                                                  style={
                                                    Object {
                                                      "height": 0,
                                                      "left": 0,
                                                      "overflow": "scroll",
                                                      "position": "absolute",
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "whiteSpace": "pre",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </AutosizeInput>
                                          </span>
                                          <span
                                            className="Select-arrow-zone"
                                            onMouseDown={[Function]}
                                          >
                                            <span
                                              className="icon-arrow-down"
                                            />
                                          </span>
                                        </div>
                                      </div>
                                    </Select>
                                  </SelectPicker>
                                </ForwardRef(SelectPicker)>
                              </StyledSelect>
                            </SelectControl>
                          </StyledSelectControl>
                        </div>
                      </div>
                    </SelectField>
                    <hr />
                    <h6>
                      Take these actions:
                    </h6>
                    <RuleNodeList
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={
                        Array [
                          Object {
                            "id": "sentry.rules.actions.notify1",
                            "name": "Send a notification to all services",
                          },
                        ]
                      }
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.actions.notify1",
                            "label": "Send a notification for all services",
                          },
                        ]
                      }
                    >
                      <div>
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes e17yy09u0"
                          >
                            <RuleNode
                              data={
                                Object {
                                  "id": "sentry.rules.actions.notify1",
                                  "name": "Send a notification to all services",
                                }
                              }
                              handleDelete={[Function]}
                              handlePropertyChange={[Function]}
                              key="0"
                              node={
                                Object {
                                  "enabled": true,
                                  "id": "sentry.rules.actions.notify1",
                                  "label": "Send a notification for all services",
                                }
                              }
                            >
                              <RuleNodeRow>
                                <div
                                  className="css-5muuhy-RuleNodeRow e1qnqozx0"
                                >
                                  <RuleNodeForm>
                                    <div
                                      className="css-1by90re-RuleNodeForm e1qnqozx1"
                                    >
                                      <input
                                        name="id"
                                        type="hidden"
                                        value="sentry.rules.actions.notify1"
                                      />
                                      Send a notification for all services
                                    </div>
                                  </RuleNodeForm>
                                  <RuleNodeControls>
                                    <div
                                      className="css-1d10zz4-RuleNodeControls e1qnqozx2"
                                    >
                                      <Button
                                        disabled={false}
                                        icon="icon-trash"
                                        onClick={[Function]}
                                        size="small"
                                        tabIndex="-1"
                                        type="button"
                                      >
                                        <StyledButton
                                          disabled={false}
                                          onClick={[Function]}
                                          role="button"
                                          size="small"
                                          tabIndex="-1"
                                          type="button"
                                        >
                                          <Component
                                            className="css-dkprmi-StyledButton-getColors eqrebog0"
                                            disabled={false}
                                            onClick={[Function]}
                                            role="button"
                                            size="small"
                                            tabIndex="-1"
                                            type="button"
                                          >
                                            <button
                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="small"
                                              tabIndex="-1"
                                              type="button"
                                            >
                                              <ButtonLabel
                                                size="small"
                                              >
                                                <Component
                                                  className="css-7ui8bl-ButtonLabel eqrebog1"
                                                  size="small"
                                                >
                                                  <span
                                                    className="css-7ui8bl-ButtonLabel eqrebog1"
                                                  >
                                                    <Icon
                                                      hasChildren={false}
                                                      size="small"
                                                    >
                                                      <Component
                                                        className="css-ljhpxy-Icon eqrebog2"
                                                        hasChildren={false}
                                                        size="small"
                                                      >
                                                        <span
                                                          className="css-ljhpxy-Icon eqrebog2"
                                                          size="small"
                                                        >
                                                          <StyledInlineSvg
                                                            size="12px"
                                                            src="icon-trash"
                                                          >
                                                            <InlineSvg
                                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <StyledSvg
                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                height="12px"
                                                                viewBox={Object {}}
                                                                width="12px"
                                                              >
                                                                <svg
                                                                  className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                  height="12px"
                                                                  viewBox={Object {}}
                                                                  width="12px"
                                                                >
                                                                  <use
                                                                    href="#test"
                                                                    xlinkHref="#test"
                                                                  />
                                                                </svg>
                                                              </StyledSvg>
                                                            </InlineSvg>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </Component>
                                                    </Icon>
                                                  </span>
                                                </Component>
                                              </ButtonLabel>
                                            </button>
                                          </Component>
                                        </StyledButton>
                                      </Button>
                                    </div>
                                  </RuleNodeControls>
                                </div>
                              </RuleNodeRow>
                            </RuleNode>
                          </div>
                        </RuleNodes>
                        <fieldset>
                          <SelectControl
                            clearable={false}
                            height={36}
                            multiple={false}
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Send a notification for all services",
                                  "value": "sentry.rules.actions.notify1",
                                },
                              ]
                            }
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <StyledSelect
                              arrowRenderer={[Function]}
                              backspaceRemoves={false}
                              clearable={false}
                              deleteRemoves={false}
                              height={36}
                              multiple={false}
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "label": "Send a notification for all services",
                                    "value": "sentry.rules.actions.notify1",
                                  },
                                ]
                              }
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <ForwardRef(SelectPicker)
                                arrowRenderer={[Function]}
                                backspaceRemoves={false}
                                className="css-6lbkok-StyledSelect eho28m20"
                                clearable={false}
                                deleteRemoves={false}
                                height={36}
                                multiple={false}
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "Send a notification for all services",
                                      "value": "sentry.rules.actions.notify1",
                                    },
                                  ]
                                }
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <SelectPicker
                                  arrowRenderer={[Function]}
                                  backspaceRemoves={false}
                                  className="css-6lbkok-StyledSelect eho28m20"
                                  clearable={false}
                                  deleteRemoves={false}
                                  forwardedRef={null}
                                  height={36}
                                  multiple={false}
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Send a notification for all services",
                                        "value": "sentry.rules.actions.notify1",
                                      },
                                    ]
                                  }
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Select
                                    arrowRenderer={[Function]}
                                    autosize={true}
                                    backspaceRemoves={false}
                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                    className="css-6lbkok-StyledSelect eho28m20"
                                    clearAllText="Clear all"
                                    clearRenderer={[Function]}
                                    clearValueText="Clear value"
                                    clearable={false}
                                    closeOnSelect={true}
                                    deleteRemoves={false}
                                    delimiter=","
                                    disabled={false}
                                    escapeClearsValue={true}
                                    filterOptions={[Function]}
                                    height={36}
                                    ignoreAccents={true}
                                    ignoreCase={true}
                                    inputProps={Object {}}
                                    isLoading={false}
                                    joinValues={false}
                                    labelKey="label"
                                    matchPos="any"
                                    matchProp="any"
                                    menuBuffer={0}
                                    menuRenderer={[Function]}
                                    multi={false}
                                    multiple={false}
                                    noResultsText="No results found"
                                    onBlurResetsInput={true}
                                    onChange={[Function]}
                                    onCloseResetsInput={true}
                                    onSelectResetsInput={true}
                                    openOnClick={true}
                                    optionComponent={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Send a notification for all services",
                                          "value": "sentry.rules.actions.notify1",
                                        },
                                      ]
                                    }
                                    pageSize={5}
                                    placeholder="Select..."
                                    removeSelected={true}
                                    required={false}
                                    rtl={false}
                                    scrollMenuIntoView={true}
                                    searchable={true}
                                    simpleValue={false}
                                    style={
                                      Object {
                                        "width": "100%",
                                      }
                                    }
                                    tabSelectsValue={true}
                                    trimFilter={true}
                                    valueComponent={[Function]}
                                    valueKey="value"
                                  >
                                    <div
                                      className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                                    >
                                      <div
                                        className="Select-control"
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <span
                                          className="Select-multi-value-wrapper"
                                          id="react-select-25--value"
                                        >
                                          <div
                                            className="Select-placeholder"
                                          >
                                            Select...
                                          </div>
                                          <AutosizeInput
                                            aria-activedescendant="react-select-25--value"
                                            aria-expanded="false"
                                            aria-haspopup="false"
                                            aria-owns=""
                                            className="Select-input"
                                            injectStyles={true}
                                            minWidth="5"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            role="combobox"
                                            value=""
                                          >
                                            <div
                                              className="Select-input"
                                              style={
                                                Object {
                                                  "display": "inline-block",
                                                }
                                              }
                                            >
                                              <input
                                                aria-activedescendant="react-select-25--value"
                                                aria-expanded="false"
                                                aria-haspopup="false"
                                                aria-owns=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                role="combobox"
                                                style={
                                                  Object {
                                                    "boxSizing": "content-box",
                                                    "width": "5px",
                                                  }
                                                }
                                                value=""
                                              />
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "left": 0,
                                                    "overflow": "scroll",
                                                    "position": "absolute",
                                                    "top": 0,
                                                    "visibility": "hidden",
                                                    "whiteSpace": "pre",
                                                  }
                                                }
                                              />
                                            </div>
                                          </AutosizeInput>
                                        </span>
                                        <span
                                          className="Select-arrow-zone"
                                          onMouseDown={[Function]}
                                        >
                                          <span
                                            className="icon-arrow-down"
                                          />
                                        </span>
                                      </div>
                                    </div>
                                  </Select>
                                </SelectPicker>
                              </ForwardRef(SelectPicker)>
                            </StyledSelect>
                          </SelectControl>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow elb7f1e0"
                      >
                        Perform these actions at most once every 
                        <SelectField
                          choices={
                            Array [
                              Array [
                                "5",
                                "5 minutes",
                              ],
                              Array [
                                "10",
                                "10 minutes",
                              ],
                              Array [
                                "30",
                                "30 minutes",
                              ],
                              Array [
                                "60",
                                "60 minutes",
                              ],
                              Array [
                                "180",
                                "3 hours",
                              ],
                              Array [
                                "720",
                                "12 hours",
                              ],
                              Array [
                                "1440",
                                "24 hours",
                              ],
                              Array [
                                "10080",
                                "one week",
                              ],
                              Array [
                                "43200",
                                "30 days",
                              ],
                            ]
                          }
                          className=""
                          clearable={false}
                          disabled={false}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="frequency"
                          onChange={[Function]}
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 140,
                            }
                          }
                        >
                          <div
                            className="required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 140,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <StyledSelectControl
                                choices={
                                  Array [
                                    Array [
                                      "5",
                                      "5 minutes",
                                    ],
                                    Array [
                                      "10",
                                      "10 minutes",
                                    ],
                                    Array [
                                      "30",
                                      "30 minutes",
                                    ],
                                    Array [
                                      "60",
                                      "60 minutes",
                                    ],
                                    Array [
                                      "180",
                                      "3 hours",
                                    ],
                                    Array [
                                      "720",
                                      "12 hours",
                                    ],
                                    Array [
                                      "1440",
                                      "24 hours",
                                    ],
                                    Array [
                                      "10080",
                                      "one week",
                                    ],
                                    Array [
                                      "43200",
                                      "30 days",
                                    ],
                                  ]
                                }
                                clearable={false}
                                disabled={false}
                                id="id-frequency"
                                multiple={false}
                                name="frequency"
                                onChange={[Function]}
                                required={true}
                                value=""
                              >
                                <SelectControl
                                  choices={
                                    Array [
                                      Array [
                                        "5",
                                        "5 minutes",
                                      ],
                                      Array [
                                        "10",
                                        "10 minutes",
                                      ],
                                      Array [
                                        "30",
                                        "30 minutes",
                                      ],
                                      Array [
                                        "60",
                                        "60 minutes",
                                      ],
                                      Array [
                                        "180",
                                        "3 hours",
                                      ],
                                      Array [
                                        "720",
                                        "12 hours",
                                      ],
                                      Array [
                                        "1440",
                                        "24 hours",
                                      ],
                                      Array [
                                        "10080",
                                        "one week",
                                      ],
                                      Array [
                                        "43200",
                                        "30 days",
                                      ],
                                    ]
                                  }
                                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                  clearable={false}
                                  disabled={false}
                                  height={36}
                                  id="id-frequency"
                                  multiple={false}
                                  name="frequency"
                                  onChange={[Function]}
                                  required={true}
                                  value=""
                                >
                                  <StyledSelect
                                    arrowRenderer={[Function]}
                                    backspaceRemoves={false}
                                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                    clearable={false}
                                    deleteRemoves={false}
                                    disabled={false}
                                    height={36}
                                    id="id-frequency"
                                    multiple={false}
                                    name="frequency"
                                    onChange={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "5 minutes",
                                          "value": "5",
                                        },
                                        Object {
                                          "label": "10 minutes",
                                          "value": "10",
                                        },
                                        Object {
                                          "label": "30 minutes",
                                          "value": "30",
                                        },
                                        Object {
                                          "label": "60 minutes",
                                          "value": "60",
                                        },
                                        Object {
                                          "label": "3 hours",
                                          "value": "180",
                                        },
                                        Object {
                                          "label": "12 hours",
                                          "value": "720",
                                        },
                                        Object {
                                          "label": "24 hours",
                                          "value": "1440",
                                        },
                                        Object {
                                          "label": "one week",
                                          "value": "10080",
                                        },
                                        Object {
                                          "label": "30 days",
                                          "value": "43200",
                                        },
                                      ]
                                    }
                                    required={true}
                                    value=""
                                  >
                                    <ForwardRef(SelectPicker)
                                      arrowRenderer={[Function]}
                                      backspaceRemoves={false}
                                      className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                      clearable={false}
                                      deleteRemoves={false}
                                      disabled={false}
                                      height={36}
                                      id="id-frequency"
                                      multiple={false}
                                      name="frequency"
                                      onChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "5 minutes",
                                            "value": "5",
                                          },
                                          Object {
                                            "label": "10 minutes",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "30 minutes",
                                            "value": "30",
                                          },
                                          Object {
                                            "label": "60 minutes",
                                            "value": "60",
                                          },
                                          Object {
                                            "label": "3 hours",
                                            "value": "180",
                                          },
                                          Object {
                                            "label": "12 hours",
                                            "value": "720",
                                          },
                                          Object {
                                            "label": "24 hours",
                                            "value": "1440",
                                          },
                                          Object {
                                            "label": "one week",
                                            "value": "10080",
                                          },
                                          Object {
                                            "label": "30 days",
                                            "value": "43200",
                                          },
                                        ]
                                      }
                                      required={true}
                                      value=""
                                    >
                                      <SelectPicker
                                        arrowRenderer={[Function]}
                                        backspaceRemoves={false}
                                        className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                        clearable={false}
                                        deleteRemoves={false}
                                        disabled={false}
                                        forwardedRef={null}
                                        height={36}
                                        id="id-frequency"
                                        multiple={false}
                                        name="frequency"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "5 minutes",
                                              "value": "5",
                                            },
                                            Object {
                                              "label": "10 minutes",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "30 minutes",
                                              "value": "30",
                                            },
                                            Object {
                                              "label": "60 minutes",
                                              "value": "60",
                                            },
                                            Object {
                                              "label": "3 hours",
                                              "value": "180",
                                            },
                                            Object {
                                              "label": "12 hours",
                                              "value": "720",
                                            },
                                            Object {
                                              "label": "24 hours",
                                              "value": "1440",
                                            },
                                            Object {
                                              "label": "one week",
                                              "value": "10080",
                                            },
                                            Object {
                                              "label": "30 days",
                                              "value": "43200",
                                            },
                                          ]
                                        }
                                        required={true}
                                        value=""
                                      >
                                        <Select
                                          arrowRenderer={[Function]}
                                          autosize={true}
                                          backspaceRemoves={false}
                                          backspaceToRemoveMessage="Press backspace to remove {label}"
                                          className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                          clearAllText="Clear all"
                                          clearRenderer={[Function]}
                                          clearValueText="Clear value"
                                          clearable={false}
                                          closeOnSelect={true}
                                          deleteRemoves={false}
                                          delimiter=","
                                          disabled={false}
                                          escapeClearsValue={true}
                                          filterOptions={[Function]}
                                          height={36}
                                          id="id-frequency"
                                          ignoreAccents={true}
                                          ignoreCase={true}
                                          inputProps={Object {}}
                                          isLoading={false}
                                          joinValues={false}
                                          labelKey="label"
                                          matchPos="any"
                                          matchProp="any"
                                          menuBuffer={0}
                                          menuRenderer={[Function]}
                                          multi={false}
                                          multiple={false}
                                          name="frequency"
                                          noResultsText="No results found"
                                          onBlurResetsInput={true}
                                          onChange={[Function]}
                                          onCloseResetsInput={true}
                                          onSelectResetsInput={true}
                                          openOnClick={true}
                                          optionComponent={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "5 minutes",
                                                "value": "5",
                                              },
                                              Object {
                                                "label": "10 minutes",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "30 minutes",
                                                "value": "30",
                                              },
                                              Object {
                                                "label": "60 minutes",
                                                "value": "60",
                                              },
                                              Object {
                                                "label": "3 hours",
                                                "value": "180",
                                              },
                                              Object {
                                                "label": "12 hours",
                                                "value": "720",
                                              },
                                              Object {
                                                "label": "24 hours",
                                                "value": "1440",
                                              },
                                              Object {
                                                "label": "one week",
                                                "value": "10080",
                                              },
                                              Object {
                                                "label": "30 days",
                                                "value": "43200",
                                              },
                                            ]
                                          }
                                          pageSize={5}
                                          placeholder="Select..."
                                          removeSelected={true}
                                          required={true}
                                          rtl={false}
                                          scrollMenuIntoView={true}
                                          searchable={true}
                                          simpleValue={false}
                                          tabSelectsValue={true}
                                          trimFilter={true}
                                          value=""
                                          valueComponent={[Function]}
                                          valueKey="value"
                                        >
                                          <div
                                            className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 is-searchable Select--single"
                                          >
                                            <div
                                              className="Select-control"
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                            >
                                              <span
                                                className="Select-multi-value-wrapper"
                                                id="react-select-26--value"
                                              >
                                                <div
                                                  className="Select-placeholder"
                                                >
                                                  Select...
                                                </div>
                                                <AutosizeInput
                                                  aria-activedescendant="react-select-26--value"
                                                  aria-expanded="false"
                                                  aria-haspopup="false"
                                                  aria-owns=""
                                                  className="Select-input"
                                                  id="id-frequency"
                                                  injectStyles={true}
                                                  minWidth="5"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={true}
                                                  role="combobox"
                                                  value=""
                                                >
                                                  <div
                                                    className="Select-input"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                      }
                                                    }
                                                  >
                                                    <input
                                                      aria-activedescendant="react-select-26--value"
                                                      aria-expanded="false"
                                                      aria-haspopup="false"
                                                      aria-owns=""
                                                      id="id-frequency"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={true}
                                                      role="combobox"
                                                      style={
                                                        Object {
                                                          "boxSizing": "content-box",
                                                          "width": "5px",
                                                        }
                                                      }
                                                      value=""
                                                    />
                                                    <div
                                                      style={
                                                        Object {
                                                          "height": 0,
                                                          "left": 0,
                                                          "overflow": "scroll",
                                                          "position": "absolute",
                                                          "top": 0,
                                                          "visibility": "hidden",
                                                          "whiteSpace": "pre",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </AutosizeInput>
                                              </span>
                                              <span
                                                className="Select-arrow-zone"
                                                onMouseDown={[Function]}
                                              >
                                                <span
                                                  className="icon-arrow-down"
                                                />
                                              </span>
                                            </div>
                                          </div>
                                        </Select>
                                      </SelectPicker>
                                    </ForwardRef(SelectPicker)>
                                  </StyledSelect>
                                </SelectControl>
                              </StyledSelectControl>
                            </div>
                          </div>
                        </SelectField>
                         for an issue.
                      </h6>
                    </AlertRuleRow>
                    <ActionBar>
                      <div
                        className="css-1nbij62-ActionBar elb7f1e2"
                      >
                        <CancelButton
                          to="/settings/org-slug/project-slug/alerts/rules/"
                        >
                          <Button
                            className="css-1yc33o1-CancelButton elb7f1e1"
                            disabled={false}
                            to="/settings/org-slug/project-slug/alerts/rules/"
                          >
                            <StyledButton
                              aria-label="Cancel"
                              className="css-1yc33o1-CancelButton elb7f1e1"
                              disabled={false}
                              onClick={[Function]}
                              role="button"
                              to="/settings/org-slug/project-slug/alerts/rules/"
                            >
                              <Component
                                aria-label="Cancel"
                                className="elb7f1e1 css-tzavck-StyledButton-getColors-CancelButton eqrebog0"
                                disabled={false}
                                onClick={[Function]}
                                role="button"
                                to="/settings/org-slug/project-slug/alerts/rules/"
                              >
                                <Link
                                  aria-label="Cancel"
                                  className="elb7f1e1 css-tzavck-StyledButton-getColors-CancelButton eqrebog0"
                                  disabled={false}
                                  onClick={[Function]}
                                  onlyActiveOnIndex={false}
                                  role="button"
                                  style={Object {}}
                                  to="/settings/org-slug/project-slug/alerts/rules/"
                                >
                                  <a
                                    aria-label="Cancel"
                                    className="elb7f1e1 css-tzavck-StyledButton-getColors-CancelButton eqrebog0"
                                    disabled={false}
                                    onClick={[Function]}
                                    role="button"
                                    style={Object {}}
                                  >
                                    <ButtonLabel>
                                      <Component
                                        className="css-ga4b18-ButtonLabel eqrebog1"
                                      >
                                        <span
                                          className="css-ga4b18-ButtonLabel eqrebog1"
                                        >
                                          Cancel
                                        </span>
                                      </Component>
                                    </ButtonLabel>
                                  </a>
                                </Link>
                              </Component>
                            </StyledButton>
                          </Button>
                        </CancelButton>
                        <Button
                          disabled={false}
                          priority="primary"
                        >
                          <StyledButton
                            aria-label="Save Rule"
                            disabled={false}
                            onClick={[Function]}
                            priority="primary"
                            role="button"
                          >
                            <Component
                              aria-label="Save Rule"
                              className="css-1msljz8-StyledButton-getColors eqrebog0"
                              disabled={false}
                              onClick={[Function]}
                              priority="primary"
                              role="button"
                            >
                              <button
                                aria-label="Save Rule"
                                className="css-1msljz8-StyledButton-getColors eqrebog0"
                                disabled={false}
                                onClick={[Function]}
                                priority="primary"
                                role="button"
                              >
                                <ButtonLabel
                                  priority="primary"
                                >
                                  <Component
                                    className="css-ga4b18-ButtonLabel eqrebog1"
                                    priority="primary"
                                  >
                                    <span
                                      className="css-ga4b18-ButtonLabel eqrebog1"
                                    >
                                      Save Rule
                                    </span>
                                  </Component>
                                </ButtonLabel>
                              </button>
                            </Component>
                          </StyledButton>
                        </Button>
                      </div>
                    </ActionBar>
                  </div>
                </PanelBody>
              </div>
            </Component>
          </Panel>
        </form>
      </RuleEditor>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectAlertRuleDetails>
`;

exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
<ProjectAlertRuleDetails
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={
    Array [
      Object {
        "path": "/",
      },
      Object {
        "indexRoute": Object {},
        "name": "Settings",
        "path": "/settings/",
      },
      Object {
        "name": "Organization",
        "path": ":orgId/",
      },
      Object {
        "name": "Project",
        "path": ":projectId/",
      },
      Object {},
      Object {
        "indexRoute": Object {
          "name": "General",
        },
      },
      Object {
        "indexRoute": Object {},
        "name": "Alerts",
        "path": "alerts/",
      },
      Object {
        "childRoutes": Array [
          Object {
            "name": "New",
            "path": "new/",
          },
          Object {
            "name": "Edit",
            "path": ":ruleId/",
          },
        ],
        "component": null,
        "indexRoute": Object {},
        "name": "Rules",
        "path": "rules/",
      },
      Object {
        "name": "Edit",
        "path": ":ruleId/",
      },
    ]
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <RuleEditor
        actions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.actions.notify1",
              "label": "Send a notification for all services",
            },
          ]
        }
        conditions={
          Array [
            Object {
              "enabled": true,
              "id": "sentry.rules.conditions.1",
              "label": "An event is seen",
            },
          ]
        }
        organization={
          Object {
            "access": Array [
              "org:read",
              "org:write",
              "org:admin",
              "project:read",
              "project:write",
              "project:admin",
              "team:read",
              "team:write",
              "team:admin",
            ],
            "features": Array [],
            "id": "3",
            "name": "Organization Name",
            "onboardingTasks": Array [],
            "projects": Array [],
            "scrapeJavaScript": true,
            "slug": "org-slug",
            "status": Object {
              "id": "active",
              "name": "active",
            },
            "teams": Array [],
          }
        }
        params={
          Object {
            "orgId": "org-slug",
            "projectId": "project-slug",
          }
        }
        project={
          Object {
            "hasAccess": true,
            "id": "2",
            "isBookmarked": false,
            "isMember": true,
            "name": "Project Name",
            "slug": "project-slug",
            "teams": Array [],
          }
        }
        routes={
          Array [
            Object {
              "path": "/",
            },
            Object {
              "indexRoute": Object {},
              "name": "Settings",
              "path": "/settings/",
            },
            Object {
              "name": "Organization",
              "path": ":orgId/",
            },
            Object {
              "name": "Project",
              "path": ":projectId/",
            },
            Object {},
            Object {
              "indexRoute": Object {
                "name": "General",
              },
            },
            Object {
              "indexRoute": Object {},
              "name": "Alerts",
              "path": "alerts/",
            },
            Object {
              "childRoutes": Array [
                Object {
                  "name": "New",
                  "path": "new/",
                },
                Object {
                  "name": "Edit",
                  "path": ":ruleId/",
                },
              ],
              "component": null,
              "indexRoute": Object {},
              "name": "Rules",
              "path": "rules/",
            },
            Object {
              "name": "Edit",
              "path": ":ruleId/",
            },
          ]
        }
      >
        <form
          onSubmit={[Function]}
        >
          <Panel
            className="rule-detail"
          >
            <Component
              className="rule-detail css-yahxlu-Panel e1laxa7d0"
            >
              <div
                className="rule-detail css-yahxlu-Panel e1laxa7d0"
              >
                <PanelHeader>
                  <Component
                    className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                  >
                    <Flex
                      align="center"
                      className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                      justify="space-between"
                    >
                      <Base
                        align="center"
                        className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                        justify="space-between"
                      >
                        <div
                          className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                          is={null}
                        >
                          New Alert Rule
                        </div>
                      </Base>
                    </Flex>
                  </Component>
                </PanelHeader>
                <PanelBody
                  direction="column"
                  disablePadding={false}
                  flex={false}
                >
                  <div
                    className="css-zhfi4l-padding-textStyles"
                  >
                    <h6>
                      Rule name
                      :
                    </h6>
                    <TextField
                      defaultValue=""
                      disabled={false}
                      hideErrorMessage={false}
                      name="name"
                      onChange={[Function]}
                      placeholder="My Rule Name"
                      required={true}
                    >
                      <div
                        className="control-group required"
                      >
                        <div
                          className="controls"
                        >
                          <input
                            className="form-control"
                            disabled={false}
                            id="id-name"
                            name="name"
                            onChange={[Function]}
                            placeholder="My Rule Name"
                            required={true}
                            type="text"
                            value=""
                          />
                        </div>
                      </div>
                    </TextField>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow elb7f1e0"
                      >
                        Every time 
                        <SelectField
                          choices={
                            Array [
                              Array [
                                "all",
                                "all",
                              ],
                              Array [
                                "any",
                                "any",
                              ],
                              Array [
                                "none",
                                "none",
                              ],
                            ]
                          }
                          className=""
                          clearable={false}
                          disabled={false}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="actionMatch"
                          onChange={[Function]}
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 100,
                            }
                          }
                          value="all"
                        >
                          <div
                            className="required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 100,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <StyledSelectControl
                                choices={
                                  Array [
                                    Array [
                                      "all",
                                      "all",
                                    ],
                                    Array [
                                      "any",
                                      "any",
                                    ],
                                    Array [
                                      "none",
                                      "none",
                                    ],
                                  ]
                                }
                                clearable={false}
                                disabled={false}
                                id="id-actionMatch"
                                multiple={false}
                                name="actionMatch"
                                onChange={[Function]}
                                required={true}
                                value="all"
                              >
                                <SelectControl
                                  choices={
                                    Array [
                                      Array [
                                        "all",
                                        "all",
                                      ],
                                      Array [
                                        "any",
                                        "any",
                                      ],
                                      Array [
                                        "none",
                                        "none",
                                      ],
                                    ]
                                  }
                                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                  clearable={false}
                                  disabled={false}
                                  height={36}
                                  id="id-actionMatch"
                                  multiple={false}
                                  name="actionMatch"
                                  onChange={[Function]}
                                  required={true}
                                  value="all"
                                >
                                  <StyledSelect
                                    arrowRenderer={[Function]}
                                    backspaceRemoves={false}
                                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                    clearable={false}
                                    deleteRemoves={false}
                                    disabled={false}
                                    height={36}
                                    id="id-actionMatch"
                                    multiple={false}
                                    name="actionMatch"
                                    onChange={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "all",
                                          "value": "all",
                                        },
                                        Object {
                                          "label": "any",
                                          "value": "any",
                                        },
                                        Object {
                                          "label": "none",
                                          "value": "none",
                                        },
                                      ]
                                    }
                                    required={true}
                                    value="all"
                                  >
                                    <ForwardRef(SelectPicker)
                                      arrowRenderer={[Function]}
                                      backspaceRemoves={false}
                                      className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                      clearable={false}
                                      deleteRemoves={false}
                                      disabled={false}
                                      height={36}
                                      id="id-actionMatch"
                                      multiple={false}
                                      name="actionMatch"
                                      onChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "all",
                                            "value": "all",
                                          },
                                          Object {
                                            "label": "any",
                                            "value": "any",
                                          },
                                          Object {
                                            "label": "none",
                                            "value": "none",
                                          },
                                        ]
                                      }
                                      required={true}
                                      value="all"
                                    >
                                      <SelectPicker
                                        arrowRenderer={[Function]}
                                        backspaceRemoves={false}
                                        className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                        clearable={false}
                                        deleteRemoves={false}
                                        disabled={false}
                                        forwardedRef={null}
                                        height={36}
                                        id="id-actionMatch"
                                        multiple={false}
                                        name="actionMatch"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "all",
                                              "value": "all",
                                            },
                                            Object {
                                              "label": "any",
                                              "value": "any",
                                            },
                                            Object {
                                              "label": "none",
                                              "value": "none",
                                            },
                                          ]
                                        }
                                        required={true}
                                        value="all"
                                      >
                                        <Select
                                          arrowRenderer={[Function]}
                                          autosize={true}
                                          backspaceRemoves={false}
                                          backspaceToRemoveMessage="Press backspace to remove {label}"
                                          className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                          clearAllText="Clear all"
                                          clearRenderer={[Function]}
                                          clearValueText="Clear value"
                                          clearable={false}
                                          closeOnSelect={true}
                                          deleteRemoves={false}
                                          delimiter=","
                                          disabled={false}
                                          escapeClearsValue={true}
                                          filterOptions={[Function]}
                                          height={36}
                                          id="id-actionMatch"
                                          ignoreAccents={true}
                                          ignoreCase={true}
                                          inputProps={Object {}}
                                          isLoading={false}
                                          joinValues={false}
                                          labelKey="label"
                                          matchPos="any"
                                          matchProp="any"
                                          menuBuffer={0}
                                          menuRenderer={[Function]}
                                          multi={false}
                                          multiple={false}
                                          name="actionMatch"
                                          noResultsText="No results found"
                                          onBlurResetsInput={true}
                                          onChange={[Function]}
                                          onCloseResetsInput={true}
                                          onSelectResetsInput={true}
                                          openOnClick={true}
                                          optionComponent={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "all",
                                                "value": "all",
                                              },
                                              Object {
                                                "label": "any",
                                                "value": "any",
                                              },
                                              Object {
                                                "label": "none",
                                                "value": "none",
                                              },
                                            ]
                                          }
                                          pageSize={5}
                                          placeholder="Select..."
                                          removeSelected={true}
                                          required={true}
                                          rtl={false}
                                          scrollMenuIntoView={true}
                                          searchable={true}
                                          simpleValue={false}
                                          tabSelectsValue={true}
                                          trimFilter={true}
                                          value="all"
                                          valueComponent={[Function]}
                                          valueKey="value"
                                        >
                                          <div
                                            className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                          >
                                            <input
                                              disabled={false}
                                              key="hidden.0"
                                              name="actionMatch"
                                              type="hidden"
                                              value="all"
                                            />
                                            <div
                                              className="Select-control"
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                            >
                                              <span
                                                className="Select-multi-value-wrapper"
                                                id="react-select-2--value"
                                              >
                                                <Value
                                                  disabled={false}
                                                  id="react-select-2--value-item"
                                                  instancePrefix="react-select-2-"
                                                  onClick={null}
                                                  placeholder="Select..."
                                                  value={
                                                    Object {
                                                      "label": "all",
                                                      "value": "all",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="Select-value"
                                                  >
                                                    <span
                                                      aria-selected="true"
                                                      className="Select-value-label"
                                                      id="react-select-2--value-item"
                                                      role="option"
                                                    >
                                                      all
                                                    </span>
                                                  </div>
                                                </Value>
                                                <AutosizeInput
                                                  aria-activedescendant="react-select-2--value"
                                                  aria-expanded="false"
                                                  aria-haspopup="false"
                                                  aria-owns=""
                                                  className="Select-input"
                                                  id="id-actionMatch"
                                                  injectStyles={true}
                                                  minWidth="5"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  role="combobox"
                                                  value=""
                                                >
                                                  <div
                                                    className="Select-input"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                      }
                                                    }
                                                  >
                                                    <input
                                                      aria-activedescendant="react-select-2--value"
                                                      aria-expanded="false"
                                                      aria-haspopup="false"
                                                      aria-owns=""
                                                      id="id-actionMatch"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={false}
                                                      role="combobox"
                                                      style={
                                                        Object {
                                                          "boxSizing": "content-box",
                                                          "width": "5px",
                                                        }
                                                      }
                                                      value=""
                                                    />
                                                    <div
                                                      style={
                                                        Object {
                                                          "height": 0,
                                                          "left": 0,
                                                          "overflow": "scroll",
                                                          "position": "absolute",
                                                          "top": 0,
                                                          "visibility": "hidden",
                                                          "whiteSpace": "pre",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </AutosizeInput>
                                              </span>
                                              <span
                                                className="Select-arrow-zone"
                                                onMouseDown={[Function]}
                                              >
                                                <span
                                                  className="icon-arrow-down"
                                                />
                                              </span>
                                            </div>
                                          </div>
                                        </Select>
                                      </SelectPicker>
                                    </ForwardRef(SelectPicker)>
                                  </StyledSelect>
                                </SelectControl>
                              </StyledSelectControl>
                            </div>
                          </div>
                        </SelectField>
                         of these conditions are met:
                      </h6>
                    </AlertRuleRow>
                    <RuleNodeList
                      className="rule-condition-list"
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={Array []}
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.conditions.1",
                            "label": "An event is seen",
                          },
                        ]
                      }
                    >
                      <div
                        className="rule-condition-list"
                      >
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes e17yy09u0"
                          />
                        </RuleNodes>
                        <fieldset>
                          <SelectControl
                            clearable={false}
                            height={36}
                            multiple={false}
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "An event is seen",
                                  "value": "sentry.rules.conditions.1",
                                },
                              ]
                            }
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <StyledSelect
                              arrowRenderer={[Function]}
                              backspaceRemoves={false}
                              clearable={false}
                              deleteRemoves={false}
                              height={36}
                              multiple={false}
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "label": "An event is seen",
                                    "value": "sentry.rules.conditions.1",
                                  },
                                ]
                              }
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <ForwardRef(SelectPicker)
                                arrowRenderer={[Function]}
                                backspaceRemoves={false}
                                className="css-6lbkok-StyledSelect eho28m20"
                                clearable={false}
                                deleteRemoves={false}
                                height={36}
                                multiple={false}
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "An event is seen",
                                      "value": "sentry.rules.conditions.1",
                                    },
                                  ]
                                }
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <SelectPicker
                                  arrowRenderer={[Function]}
                                  backspaceRemoves={false}
                                  className="css-6lbkok-StyledSelect eho28m20"
                                  clearable={false}
                                  deleteRemoves={false}
                                  forwardedRef={null}
                                  height={36}
                                  multiple={false}
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "An event is seen",
                                        "value": "sentry.rules.conditions.1",
                                      },
                                    ]
                                  }
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Select
                                    arrowRenderer={[Function]}
                                    autosize={true}
                                    backspaceRemoves={false}
                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                    className="css-6lbkok-StyledSelect eho28m20"
                                    clearAllText="Clear all"
                                    clearRenderer={[Function]}
                                    clearValueText="Clear value"
                                    clearable={false}
                                    closeOnSelect={true}
                                    deleteRemoves={false}
                                    delimiter=","
                                    disabled={false}
                                    escapeClearsValue={true}
                                    filterOptions={[Function]}
                                    height={36}
                                    ignoreAccents={true}
                                    ignoreCase={true}
                                    inputProps={Object {}}
                                    isLoading={false}
                                    joinValues={false}
                                    labelKey="label"
                                    matchPos="any"
                                    matchProp="any"
                                    menuBuffer={0}
                                    menuRenderer={[Function]}
                                    multi={false}
                                    multiple={false}
                                    noResultsText="No results found"
                                    onBlurResetsInput={true}
                                    onChange={[Function]}
                                    onCloseResetsInput={true}
                                    onSelectResetsInput={true}
                                    openOnClick={true}
                                    optionComponent={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "An event is seen",
                                          "value": "sentry.rules.conditions.1",
                                        },
                                      ]
                                    }
                                    pageSize={5}
                                    placeholder="Select..."
                                    removeSelected={true}
                                    required={false}
                                    rtl={false}
                                    scrollMenuIntoView={true}
                                    searchable={true}
                                    simpleValue={false}
                                    style={
                                      Object {
                                        "width": "100%",
                                      }
                                    }
                                    tabSelectsValue={true}
                                    trimFilter={true}
                                    valueComponent={[Function]}
                                    valueKey="value"
                                  >
                                    <div
                                      className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                                    >
                                      <div
                                        className="Select-control"
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <span
                                          className="Select-multi-value-wrapper"
                                          id="react-select-3--value"
                                        >
                                          <div
                                            className="Select-placeholder"
                                          >
                                            Select...
                                          </div>
                                          <AutosizeInput
                                            aria-activedescendant="react-select-3--value"
                                            aria-expanded="false"
                                            aria-haspopup="false"
                                            aria-owns=""
                                            className="Select-input"
                                            injectStyles={true}
                                            minWidth="5"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            role="combobox"
                                            value=""
                                          >
                                            <div
                                              className="Select-input"
                                              style={
                                                Object {
                                                  "display": "inline-block",
                                                }
                                              }
                                            >
                                              <input
                                                aria-activedescendant="react-select-3--value"
                                                aria-expanded="false"
                                                aria-haspopup="false"
                                                aria-owns=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                role="combobox"
                                                style={
                                                  Object {
                                                    "boxSizing": "content-box",
                                                    "width": "5px",
                                                  }
                                                }
                                                value=""
                                              />
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "left": 0,
                                                    "overflow": "scroll",
                                                    "position": "absolute",
                                                    "top": 0,
                                                    "visibility": "hidden",
                                                    "whiteSpace": "pre",
                                                  }
                                                }
                                              />
                                            </div>
                                          </AutosizeInput>
                                        </span>
                                        <span
                                          className="Select-arrow-zone"
                                          onMouseDown={[Function]}
                                        >
                                          <span
                                            className="icon-arrow-down"
                                          />
                                        </span>
                                      </div>
                                    </div>
                                  </Select>
                                </SelectPicker>
                              </ForwardRef(SelectPicker)>
                            </StyledSelect>
                          </SelectControl>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <h6>
                      In this environment
                      :
                    </h6>
                    <SelectField
                      choices={
                        Array [
                          Array [
                            "__all_environments__",
                            "All Environments",
                          ],
                          Array [
                            "production",
                            "Production",
                          ],
                          Array [
                            "staging",
                            "Staging",
                          ],
                        ]
                      }
                      className=""
                      clearable={false}
                      disabled={false}
                      hideErrorMessage={false}
                      multiple={false}
                      name="environment"
                      onChange={[Function]}
                      required={true}
                      style={
                        Object {
                          "marginBottom": 0,
                          "marginLeft": 5,
                          "marginRight": 5,
                        }
                      }
                      value="__all_environments__"
                    >
                      <div
                        className="required"
                        style={
                          Object {
                            "marginBottom": 0,
                            "marginLeft": 5,
                            "marginRight": 5,
                          }
                        }
                      >
                        <div
                          className="controls"
                        >
                          <StyledSelectControl
                            choices={
                              Array [
                                Array [
                                  "__all_environments__",
                                  "All Environments",
                                ],
                                Array [
                                  "production",
                                  "Production",
                                ],
                                Array [
                                  "staging",
                                  "Staging",
                                ],
                              ]
                            }
                            clearable={false}
                            disabled={false}
                            id="id-environment"
                            multiple={false}
                            name="environment"
                            onChange={[Function]}
                            required={true}
                            value="__all_environments__"
                          >
                            <SelectControl
                              choices={
                                Array [
                                  Array [
                                    "__all_environments__",
                                    "All Environments",
                                  ],
                                  Array [
                                    "production",
                                    "Production",
                                  ],
                                  Array [
                                    "staging",
                                    "Staging",
                                  ],
                                ]
                              }
                              className="css-j6zs66-StyledSelectControl e1qrhqd00"
                              clearable={false}
                              disabled={false}
                              height={36}
                              id="id-environment"
                              multiple={false}
                              name="environment"
                              onChange={[Function]}
                              required={true}
                              value="__all_environments__"
                            >
                              <StyledSelect
                                arrowRenderer={[Function]}
                                backspaceRemoves={false}
                                className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                clearable={false}
                                deleteRemoves={false}
                                disabled={false}
                                height={36}
                                id="id-environment"
                                multiple={false}
                                name="environment"
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "All Environments",
                                      "value": "__all_environments__",
                                    },
                                    Object {
                                      "label": "Production",
                                      "value": "production",
                                    },
                                    Object {
                                      "label": "Staging",
                                      "value": "staging",
                                    },
                                  ]
                                }
                                required={true}
                                value="__all_environments__"
                              >
                                <ForwardRef(SelectPicker)
                                  arrowRenderer={[Function]}
                                  backspaceRemoves={false}
                                  className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                  clearable={false}
                                  deleteRemoves={false}
                                  disabled={false}
                                  height={36}
                                  id="id-environment"
                                  multiple={false}
                                  name="environment"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "All Environments",
                                        "value": "__all_environments__",
                                      },
                                      Object {
                                        "label": "Production",
                                        "value": "production",
                                      },
                                      Object {
                                        "label": "Staging",
                                        "value": "staging",
                                      },
                                    ]
                                  }
                                  required={true}
                                  value="__all_environments__"
                                >
                                  <SelectPicker
                                    arrowRenderer={[Function]}
                                    backspaceRemoves={false}
                                    className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                    clearable={false}
                                    deleteRemoves={false}
                                    disabled={false}
                                    forwardedRef={null}
                                    height={36}
                                    id="id-environment"
                                    multiple={false}
                                    name="environment"
                                    onChange={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "All Environments",
                                          "value": "__all_environments__",
                                        },
                                        Object {
                                          "label": "Production",
                                          "value": "production",
                                        },
                                        Object {
                                          "label": "Staging",
                                          "value": "staging",
                                        },
                                      ]
                                    }
                                    required={true}
                                    value="__all_environments__"
                                  >
                                    <Select
                                      arrowRenderer={[Function]}
                                      autosize={true}
                                      backspaceRemoves={false}
                                      backspaceToRemoveMessage="Press backspace to remove {label}"
                                      className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                      clearAllText="Clear all"
                                      clearRenderer={[Function]}
                                      clearValueText="Clear value"
                                      clearable={false}
                                      closeOnSelect={true}
                                      deleteRemoves={false}
                                      delimiter=","
                                      disabled={false}
                                      escapeClearsValue={true}
                                      filterOptions={[Function]}
                                      height={36}
                                      id="id-environment"
                                      ignoreAccents={true}
                                      ignoreCase={true}
                                      inputProps={Object {}}
                                      isLoading={false}
                                      joinValues={false}
                                      labelKey="label"
                                      matchPos="any"
                                      matchProp="any"
                                      menuBuffer={0}
                                      menuRenderer={[Function]}
                                      multi={false}
                                      multiple={false}
                                      name="environment"
                                      noResultsText="No results found"
                                      onBlurResetsInput={true}
                                      onChange={[Function]}
                                      onCloseResetsInput={true}
                                      onSelectResetsInput={true}
                                      openOnClick={true}
                                      optionComponent={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "All Environments",
                                            "value": "__all_environments__",
                                          },
                                          Object {
                                            "label": "Production",
                                            "value": "production",
                                          },
                                          Object {
                                            "label": "Staging",
                                            "value": "staging",
                                          },
                                        ]
                                      }
                                      pageSize={5}
                                      placeholder="Select..."
                                      removeSelected={true}
                                      required={true}
                                      rtl={false}
                                      scrollMenuIntoView={true}
                                      searchable={true}
                                      simpleValue={false}
                                      tabSelectsValue={true}
                                      trimFilter={true}
                                      value="__all_environments__"
                                      valueComponent={[Function]}
                                      valueKey="value"
                                    >
                                      <div
                                        className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                      >
                                        <input
                                          disabled={false}
                                          key="hidden.0"
                                          name="environment"
                                          type="hidden"
                                          value="__all_environments__"
                                        />
                                        <div
                                          className="Select-control"
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                        >
                                          <span
                                            className="Select-multi-value-wrapper"
                                            id="react-select-4--value"
                                          >
                                            <Value
                                              disabled={false}
                                              id="react-select-4--value-item"
                                              instancePrefix="react-select-4-"
                                              onClick={null}
                                              placeholder="Select..."
                                              value={
                                                Object {
                                                  "label": "All Environments",
                                                  "value": "__all_environments__",
                                                }
                                              }
                                            >
                                              <div
                                                className="Select-value"
                                              >
                                                <span
                                                  aria-selected="true"
                                                  className="Select-value-label"
                                                  id="react-select-4--value-item"
                                                  role="option"
                                                >
                                                  All Environments
                                                </span>
                                              </div>
                                            </Value>
                                            <AutosizeInput
                                              aria-activedescendant="react-select-4--value"
                                              aria-expanded="false"
                                              aria-haspopup="false"
                                              aria-owns=""
                                              className="Select-input"
                                              id="id-environment"
                                              injectStyles={true}
                                              minWidth="5"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              role="combobox"
                                              value=""
                                            >
                                              <div
                                                className="Select-input"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                  }
                                                }
                                              >
                                                <input
                                                  aria-activedescendant="react-select-4--value"
                                                  aria-expanded="false"
                                                  aria-haspopup="false"
                                                  aria-owns=""
                                                  id="id-environment"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  role="combobox"
                                                  style={
                                                    Object {
                                                      "boxSizing": "content-box",
                                                      "width": "5px",
                                                    }
                                                  }
                                                  value=""
                                                />
                                                <div
                                                  style={
                                                    Object {
                                                      "height": 0,
                                                      "left": 0,
                                                      "overflow": "scroll",
                                                      "position": "absolute",
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "whiteSpace": "pre",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </AutosizeInput>
                                          </span>
                                          <span
                                            className="Select-arrow-zone"
                                            onMouseDown={[Function]}
                                          >
                                            <span
                                              className="icon-arrow-down"
                                            />
                                          </span>
                                        </div>
                                      </div>
                                    </Select>
                                  </SelectPicker>
                                </ForwardRef(SelectPicker)>
                              </StyledSelect>
                            </SelectControl>
                          </StyledSelectControl>
                        </div>
                      </div>
                    </SelectField>
                    <hr />
                    <h6>
                      Take these actions:
                    </h6>
                    <RuleNodeList
                      handleAddRow={[Function]}
                      handleDeleteRow={[Function]}
                      handlePropertyChange={[Function]}
                      items={Array []}
                      nodes={
                        Array [
                          Object {
                            "enabled": true,
                            "id": "sentry.rules.actions.notify1",
                            "label": "Send a notification for all services",
                          },
                        ]
                      }
                    >
                      <div>
                        <RuleNodes>
                          <div
                            className="css-wlwbnk-RuleNodes e17yy09u0"
                          />
                        </RuleNodes>
                        <fieldset>
                          <SelectControl
                            clearable={false}
                            height={36}
                            multiple={false}
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Send a notification for all services",
                                  "value": "sentry.rules.actions.notify1",
                                },
                              ]
                            }
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <StyledSelect
                              arrowRenderer={[Function]}
                              backspaceRemoves={false}
                              clearable={false}
                              deleteRemoves={false}
                              height={36}
                              multiple={false}
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "label": "Send a notification for all services",
                                    "value": "sentry.rules.actions.notify1",
                                  },
                                ]
                              }
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <ForwardRef(SelectPicker)
                                arrowRenderer={[Function]}
                                backspaceRemoves={false}
                                className="css-6lbkok-StyledSelect eho28m20"
                                clearable={false}
                                deleteRemoves={false}
                                height={36}
                                multiple={false}
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "Send a notification for all services",
                                      "value": "sentry.rules.actions.notify1",
                                    },
                                  ]
                                }
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <SelectPicker
                                  arrowRenderer={[Function]}
                                  backspaceRemoves={false}
                                  className="css-6lbkok-StyledSelect eho28m20"
                                  clearable={false}
                                  deleteRemoves={false}
                                  forwardedRef={null}
                                  height={36}
                                  multiple={false}
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Send a notification for all services",
                                        "value": "sentry.rules.actions.notify1",
                                      },
                                    ]
                                  }
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Select
                                    arrowRenderer={[Function]}
                                    autosize={true}
                                    backspaceRemoves={false}
                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                    className="css-6lbkok-StyledSelect eho28m20"
                                    clearAllText="Clear all"
                                    clearRenderer={[Function]}
                                    clearValueText="Clear value"
                                    clearable={false}
                                    closeOnSelect={true}
                                    deleteRemoves={false}
                                    delimiter=","
                                    disabled={false}
                                    escapeClearsValue={true}
                                    filterOptions={[Function]}
                                    height={36}
                                    ignoreAccents={true}
                                    ignoreCase={true}
                                    inputProps={Object {}}
                                    isLoading={false}
                                    joinValues={false}
                                    labelKey="label"
                                    matchPos="any"
                                    matchProp="any"
                                    menuBuffer={0}
                                    menuRenderer={[Function]}
                                    multi={false}
                                    multiple={false}
                                    noResultsText="No results found"
                                    onBlurResetsInput={true}
                                    onChange={[Function]}
                                    onCloseResetsInput={true}
                                    onSelectResetsInput={true}
                                    openOnClick={true}
                                    optionComponent={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Send a notification for all services",
                                          "value": "sentry.rules.actions.notify1",
                                        },
                                      ]
                                    }
                                    pageSize={5}
                                    placeholder="Select..."
                                    removeSelected={true}
                                    required={false}
                                    rtl={false}
                                    scrollMenuIntoView={true}
                                    searchable={true}
                                    simpleValue={false}
                                    style={
                                      Object {
                                        "width": "100%",
                                      }
                                    }
                                    tabSelectsValue={true}
                                    trimFilter={true}
                                    valueComponent={[Function]}
                                    valueKey="value"
                                  >
                                    <div
                                      className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                                    >
                                      <div
                                        className="Select-control"
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <span
                                          className="Select-multi-value-wrapper"
                                          id="react-select-5--value"
                                        >
                                          <div
                                            className="Select-placeholder"
                                          >
                                            Select...
                                          </div>
                                          <AutosizeInput
                                            aria-activedescendant="react-select-5--value"
                                            aria-expanded="false"
                                            aria-haspopup="false"
                                            aria-owns=""
                                            className="Select-input"
                                            injectStyles={true}
                                            minWidth="5"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            role="combobox"
                                            value=""
                                          >
                                            <div
                                              className="Select-input"
                                              style={
                                                Object {
                                                  "display": "inline-block",
                                                }
                                              }
                                            >
                                              <input
                                                aria-activedescendant="react-select-5--value"
                                                aria-expanded="false"
                                                aria-haspopup="false"
                                                aria-owns=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                role="combobox"
                                                style={
                                                  Object {
                                                    "boxSizing": "content-box",
                                                    "width": "5px",
                                                  }
                                                }
                                                value=""
                                              />
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "left": 0,
                                                    "overflow": "scroll",
                                                    "position": "absolute",
                                                    "top": 0,
                                                    "visibility": "hidden",
                                                    "whiteSpace": "pre",
                                                  }
                                                }
                                              />
                                            </div>
                                          </AutosizeInput>
                                        </span>
                                        <span
                                          className="Select-arrow-zone"
                                          onMouseDown={[Function]}
                                        >
                                          <span
                                            className="icon-arrow-down"
                                          />
                                        </span>
                                      </div>
                                    </div>
                                  </Select>
                                </SelectPicker>
                              </ForwardRef(SelectPicker)>
                            </StyledSelect>
                          </SelectControl>
                        </fieldset>
                      </div>
                    </RuleNodeList>
                    <hr />
                    <AlertRuleRow>
                      <h6
                        className="css-1pc4igl-AlertRuleRow elb7f1e0"
                      >
                        Perform these actions at most once every 
                        <SelectField
                          choices={
                            Array [
                              Array [
                                "5",
                                "5 minutes",
                              ],
                              Array [
                                "10",
                                "10 minutes",
                              ],
                              Array [
                                "30",
                                "30 minutes",
                              ],
                              Array [
                                "60",
                                "60 minutes",
                              ],
                              Array [
                                "180",
                                "3 hours",
                              ],
                              Array [
                                "720",
                                "12 hours",
                              ],
                              Array [
                                "1440",
                                "24 hours",
                              ],
                              Array [
                                "10080",
                                "one week",
                              ],
                              Array [
                                "43200",
                                "30 days",
                              ],
                            ]
                          }
                          className=""
                          clearable={false}
                          disabled={false}
                          hideErrorMessage={false}
                          key="1"
                          multiple={false}
                          name="frequency"
                          onChange={[Function]}
                          required={true}
                          style={
                            Object {
                              "marginBottom": 0,
                              "marginLeft": 5,
                              "marginRight": 5,
                              "width": 140,
                            }
                          }
                          value={30}
                        >
                          <div
                            className="required"
                            style={
                              Object {
                                "marginBottom": 0,
                                "marginLeft": 5,
                                "marginRight": 5,
                                "width": 140,
                              }
                            }
                          >
                            <div
                              className="controls"
                            >
                              <StyledSelectControl
                                choices={
                                  Array [
                                    Array [
                                      "5",
                                      "5 minutes",
                                    ],
                                    Array [
                                      "10",
                                      "10 minutes",
                                    ],
                                    Array [
                                      "30",
                                      "30 minutes",
                                    ],
                                    Array [
                                      "60",
                                      "60 minutes",
                                    ],
                                    Array [
                                      "180",
                                      "3 hours",
                                    ],
                                    Array [
                                      "720",
                                      "12 hours",
                                    ],
                                    Array [
                                      "1440",
                                      "24 hours",
                                    ],
                                    Array [
                                      "10080",
                                      "one week",
                                    ],
                                    Array [
                                      "43200",
                                      "30 days",
                                    ],
                                  ]
                                }
                                clearable={false}
                                disabled={false}
                                id="id-frequency"
                                multiple={false}
                                name="frequency"
                                onChange={[Function]}
                                required={true}
                                value={30}
                              >
                                <SelectControl
                                  choices={
                                    Array [
                                      Array [
                                        "5",
                                        "5 minutes",
                                      ],
                                      Array [
                                        "10",
                                        "10 minutes",
                                      ],
                                      Array [
                                        "30",
                                        "30 minutes",
                                      ],
                                      Array [
                                        "60",
                                        "60 minutes",
                                      ],
                                      Array [
                                        "180",
                                        "3 hours",
                                      ],
                                      Array [
                                        "720",
                                        "12 hours",
                                      ],
                                      Array [
                                        "1440",
                                        "24 hours",
                                      ],
                                      Array [
                                        "10080",
                                        "one week",
                                      ],
                                      Array [
                                        "43200",
                                        "30 days",
                                      ],
                                    ]
                                  }
                                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                  clearable={false}
                                  disabled={false}
                                  height={36}
                                  id="id-frequency"
                                  multiple={false}
                                  name="frequency"
                                  onChange={[Function]}
                                  required={true}
                                  value={30}
                                >
                                  <StyledSelect
                                    arrowRenderer={[Function]}
                                    backspaceRemoves={false}
                                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
                                    clearable={false}
                                    deleteRemoves={false}
                                    disabled={false}
                                    height={36}
                                    id="id-frequency"
                                    multiple={false}
                                    name="frequency"
                                    onChange={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "5 minutes",
                                          "value": "5",
                                        },
                                        Object {
                                          "label": "10 minutes",
                                          "value": "10",
                                        },
                                        Object {
                                          "label": "30 minutes",
                                          "value": "30",
                                        },
                                        Object {
                                          "label": "60 minutes",
                                          "value": "60",
                                        },
                                        Object {
                                          "label": "3 hours",
                                          "value": "180",
                                        },
                                        Object {
                                          "label": "12 hours",
                                          "value": "720",
                                        },
                                        Object {
                                          "label": "24 hours",
                                          "value": "1440",
                                        },
                                        Object {
                                          "label": "one week",
                                          "value": "10080",
                                        },
                                        Object {
                                          "label": "30 days",
                                          "value": "43200",
                                        },
                                      ]
                                    }
                                    required={true}
                                    value={30}
                                  >
                                    <ForwardRef(SelectPicker)
                                      arrowRenderer={[Function]}
                                      backspaceRemoves={false}
                                      className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                      clearable={false}
                                      deleteRemoves={false}
                                      disabled={false}
                                      height={36}
                                      id="id-frequency"
                                      multiple={false}
                                      name="frequency"
                                      onChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "label": "5 minutes",
                                            "value": "5",
                                          },
                                          Object {
                                            "label": "10 minutes",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "30 minutes",
                                            "value": "30",
                                          },
                                          Object {
                                            "label": "60 minutes",
                                            "value": "60",
                                          },
                                          Object {
                                            "label": "3 hours",
                                            "value": "180",
                                          },
                                          Object {
                                            "label": "12 hours",
                                            "value": "720",
                                          },
                                          Object {
                                            "label": "24 hours",
                                            "value": "1440",
                                          },
                                          Object {
                                            "label": "one week",
                                            "value": "10080",
                                          },
                                          Object {
                                            "label": "30 days",
                                            "value": "43200",
                                          },
                                        ]
                                      }
                                      required={true}
                                      value={30}
                                    >
                                      <SelectPicker
                                        arrowRenderer={[Function]}
                                        backspaceRemoves={false}
                                        className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                        clearable={false}
                                        deleteRemoves={false}
                                        disabled={false}
                                        forwardedRef={null}
                                        height={36}
                                        id="id-frequency"
                                        multiple={false}
                                        name="frequency"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "label": "5 minutes",
                                              "value": "5",
                                            },
                                            Object {
                                              "label": "10 minutes",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "30 minutes",
                                              "value": "30",
                                            },
                                            Object {
                                              "label": "60 minutes",
                                              "value": "60",
                                            },
                                            Object {
                                              "label": "3 hours",
                                              "value": "180",
                                            },
                                            Object {
                                              "label": "12 hours",
                                              "value": "720",
                                            },
                                            Object {
                                              "label": "24 hours",
                                              "value": "1440",
                                            },
                                            Object {
                                              "label": "one week",
                                              "value": "10080",
                                            },
                                            Object {
                                              "label": "30 days",
                                              "value": "43200",
                                            },
                                          ]
                                        }
                                        required={true}
                                        value={30}
                                      >
                                        <Select
                                          arrowRenderer={[Function]}
                                          autosize={true}
                                          backspaceRemoves={false}
                                          backspaceToRemoveMessage="Press backspace to remove {label}"
                                          className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
                                          clearAllText="Clear all"
                                          clearRenderer={[Function]}
                                          clearValueText="Clear value"
                                          clearable={false}
                                          closeOnSelect={true}
                                          deleteRemoves={false}
                                          delimiter=","
                                          disabled={false}
                                          escapeClearsValue={true}
                                          filterOptions={[Function]}
                                          height={36}
                                          id="id-frequency"
                                          ignoreAccents={true}
                                          ignoreCase={true}
                                          inputProps={Object {}}
                                          isLoading={false}
                                          joinValues={false}
                                          labelKey="label"
                                          matchPos="any"
                                          matchProp="any"
                                          menuBuffer={0}
                                          menuRenderer={[Function]}
                                          multi={false}
                                          multiple={false}
                                          name="frequency"
                                          noResultsText="No results found"
                                          onBlurResetsInput={true}
                                          onChange={[Function]}
                                          onCloseResetsInput={true}
                                          onSelectResetsInput={true}
                                          openOnClick={true}
                                          optionComponent={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "label": "5 minutes",
                                                "value": "5",
                                              },
                                              Object {
                                                "label": "10 minutes",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "30 minutes",
                                                "value": "30",
                                              },
                                              Object {
                                                "label": "60 minutes",
                                                "value": "60",
                                              },
                                              Object {
                                                "label": "3 hours",
                                                "value": "180",
                                              },
                                              Object {
                                                "label": "12 hours",
                                                "value": "720",
                                              },
                                              Object {
                                                "label": "24 hours",
                                                "value": "1440",
                                              },
                                              Object {
                                                "label": "one week",
                                                "value": "10080",
                                              },
                                              Object {
                                                "label": "30 days",
                                                "value": "43200",
                                              },
                                            ]
                                          }
                                          pageSize={5}
                                          placeholder="Select..."
                                          removeSelected={true}
                                          required={true}
                                          rtl={false}
                                          scrollMenuIntoView={true}
                                          searchable={true}
                                          simpleValue={false}
                                          tabSelectsValue={true}
                                          trimFilter={true}
                                          value={30}
                                          valueComponent={[Function]}
                                          valueKey="value"
                                        >
                                          <div
                                            className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                          >
                                            <input
                                              disabled={false}
                                              key="hidden.0"
                                              name="frequency"
                                              type="hidden"
                                              value="30"
                                            />
                                            <div
                                              className="Select-control"
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                            >
                                              <span
                                                className="Select-multi-value-wrapper"
                                                id="react-select-6--value"
                                              >
                                                <Value
                                                  disabled={false}
                                                  id="react-select-6--value-item"
                                                  instancePrefix="react-select-6-"
                                                  onClick={null}
                                                  placeholder="Select..."
                                                  value={
                                                    Object {
                                                      "label": "30 minutes",
                                                      "value": "30",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="Select-value"
                                                  >
                                                    <span
                                                      aria-selected="true"
                                                      className="Select-value-label"
                                                      id="react-select-6--value-item"
                                                      role="option"
                                                    >
                                                      30 minutes
                                                    </span>
                                                  </div>
                                                </Value>
                                                <AutosizeInput
                                                  aria-activedescendant="react-select-6--value"
                                                  aria-expanded="false"
                                                  aria-haspopup="false"
                                                  aria-owns=""
                                                  className="Select-input"
                                                  id="id-frequency"
                                                  injectStyles={true}
                                                  minWidth="5"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  role="combobox"
                                                  value=""
                                                >
                                                  <div
                                                    className="Select-input"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                      }
                                                    }
                                                  >
                                                    <input
                                                      aria-activedescendant="react-select-6--value"
                                                      aria-expanded="false"
                                                      aria-haspopup="false"
                                                      aria-owns=""
                                                      id="id-frequency"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={false}
                                                      role="combobox"
                                                      style={
                                                        Object {
                                                          "boxSizing": "content-box",
                                                          "width": "5px",
                                                        }
                                                      }
                                                      value=""
                                                    />
                                                    <div
                                                      style={
                                                        Object {
                                                          "height": 0,
                                                          "left": 0,
                                                          "overflow": "scroll",
                                                          "position": "absolute",
                                                          "top": 0,
                                                          "visibility": "hidden",
                                                          "whiteSpace": "pre",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </AutosizeInput>
                                              </span>
                                              <span
                                                className="Select-arrow-zone"
                                                onMouseDown={[Function]}
                                              >
                                                <span
                                                  className="icon-arrow-down"
                                                />
                                              </span>
                                            </div>
                                          </div>
                                        </Select>
                                      </SelectPicker>
                                    </ForwardRef(SelectPicker)>
                                  </StyledSelect>
                                </SelectControl>
                              </StyledSelectControl>
                            </div>
                          </div>
                        </SelectField>
                         for an issue.
                      </h6>
                    </AlertRuleRow>
                    <ActionBar>
                      <div
                        className="css-1nbij62-ActionBar elb7f1e2"
                      >
                        <CancelButton
                          to="/settings/org-slug/project-slug/alerts/rules/"
                        >
                          <Button
                            className="css-1yc33o1-CancelButton elb7f1e1"
                            disabled={false}
                            to="/settings/org-slug/project-slug/alerts/rules/"
                          >
                            <StyledButton
                              aria-label="Cancel"
                              className="css-1yc33o1-CancelButton elb7f1e1"
                              disabled={false}
                              onClick={[Function]}
                              role="button"
                              to="/settings/org-slug/project-slug/alerts/rules/"
                            >
                              <Component
                                aria-label="Cancel"
                                className="elb7f1e1 css-tzavck-StyledButton-getColors-CancelButton eqrebog0"
                                disabled={false}
                                onClick={[Function]}
                                role="button"
                                to="/settings/org-slug/project-slug/alerts/rules/"
                              >
                                <Link
                                  aria-label="Cancel"
                                  className="elb7f1e1 css-tzavck-StyledButton-getColors-CancelButton eqrebog0"
                                  disabled={false}
                                  onClick={[Function]}
                                  onlyActiveOnIndex={false}
                                  role="button"
                                  style={Object {}}
                                  to="/settings/org-slug/project-slug/alerts/rules/"
                                >
                                  <a
                                    aria-label="Cancel"
                                    className="elb7f1e1 css-tzavck-StyledButton-getColors-CancelButton eqrebog0"
                                    disabled={false}
                                    onClick={[Function]}
                                    role="button"
                                    style={Object {}}
                                  >
                                    <ButtonLabel>
                                      <Component
                                        className="css-ga4b18-ButtonLabel eqrebog1"
                                      >
                                        <span
                                          className="css-ga4b18-ButtonLabel eqrebog1"
                                        >
                                          Cancel
                                        </span>
                                      </Component>
                                    </ButtonLabel>
                                  </a>
                                </Link>
                              </Component>
                            </StyledButton>
                          </Button>
                        </CancelButton>
                        <Button
                          disabled={false}
                          priority="primary"
                        >
                          <StyledButton
                            aria-label="Save Rule"
                            disabled={false}
                            onClick={[Function]}
                            priority="primary"
                            role="button"
                          >
                            <Component
                              aria-label="Save Rule"
                              className="css-1msljz8-StyledButton-getColors eqrebog0"
                              disabled={false}
                              onClick={[Function]}
                              priority="primary"
                              role="button"
                            >
                              <button
                                aria-label="Save Rule"
                                className="css-1msljz8-StyledButton-getColors eqrebog0"
                                disabled={false}
                                onClick={[Function]}
                                priority="primary"
                                role="button"
                              >
                                <ButtonLabel
                                  priority="primary"
                                >
                                  <Component
                                    className="css-ga4b18-ButtonLabel eqrebog1"
                                    priority="primary"
                                  >
                                    <span
                                      className="css-ga4b18-ButtonLabel eqrebog1"
                                    >
                                      Save Rule
                                    </span>
                                  </Component>
                                </ButtonLabel>
                              </button>
                            </Component>
                          </StyledButton>
                        </Button>
                      </div>
                    </ActionBar>
                  </div>
                </PanelBody>
              </div>
            </Component>
          </Panel>
        </form>
      </RuleEditor>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectAlertRuleDetails>
`;
