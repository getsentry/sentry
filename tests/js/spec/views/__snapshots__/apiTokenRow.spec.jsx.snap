// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApiTokenRow renders 1`] = `
<ApiTokenRow
  onRemove={[Function]}
  token={
    Object {
      "dateCreated": 2018-01-12T02:01:41.000Z,
      "scopes": Array [
        "scope1",
        "scope2",
      ],
      "token": "apitoken123",
    }
  }
>
  <StyledPanelItem
    p={2}
  >
    <div
      className="css-4mexqr-PanelItem-StyledPanelItem egigtit0"
    >
      <Controls>
        <div
          className="css-1yb85im-Controls egigtit1"
        >
          <InputWrapper>
            <div
              className="css-edtfi-InputWrapper egigtit2"
            >
              <TextCopyInput
                onCopy={[Function]}
              >
                <Wrapper>
                  <div
                    className="css-1xoh4hm-Wrapper e1usehz70"
                  >
                    <OverflowContainer>
                      <div
                        className="css-1xzrfg-OverflowContainer e1usehz72"
                      >
                        <StyledInput
                          onClick={[Function]}
                          readOnly={true}
                          value="apitoken123"
                        >
                          <input
                            className="css-1g3knvk-StyledInput e1usehz71"
                            onClick={[Function]}
                            readOnly={true}
                            value="apitoken123"
                          />
                        </StyledInput>
                      </div>
                    </OverflowContainer>
                    <Clipboard
                      errorMessage="Error copying to clipboard"
                      hideMessages={false}
                      hideUnsupported={true}
                      onClick={[Function]}
                      successMessage="Copied to clipboard"
                      value="apitoken123"
                    />
                  </div>
                </Wrapper>
              </TextCopyInput>
            </div>
          </InputWrapper>
          <forwardRef<Button>
            icon={
              <ForwardRef(IconSubtract)
                isCircled={true}
                size="xs"
              />
            }
            onClick={[Function]}
            size="small"
          >
            <Button
              align="center"
              disabled={false}
              forwardRef={null}
              icon={
                <ForwardRef(IconSubtract)
                  isCircled={true}
                  size="xs"
                />
              }
              onClick={[Function]}
              size="small"
            >
              <StyledButton
                aria-disabled={false}
                aria-label="Remove"
                disabled={false}
                forwardRef={null}
                onClick={[Function]}
                role="button"
                size="small"
              >
                <Component
                  aria-disabled={false}
                  aria-label="Remove"
                  className="css-8od3q1-StyledButton edwq9my0"
                  forwardRef={null}
                  onClick={[Function]}
                  role="button"
                  size="small"
                >
                  <button
                    aria-disabled={false}
                    aria-label="Remove"
                    className="css-8od3q1-StyledButton edwq9my0"
                    onClick={[Function]}
                    role="button"
                    size="small"
                  >
                    <ButtonLabel
                      align="center"
                      size="small"
                    >
                      <span
                        className="css-n7mdnv-ButtonLabel edwq9my1"
                      >
                        <Icon
                          hasChildren={true}
                          size="small"
                        >
                          <span
                            className="css-1hbuack-Icon edwq9my2"
                            size="small"
                          >
                            <IconSubtract
                              isCircled={true}
                              size="xs"
                            >
                              <ForwardRef(SvgIcon)
                                data-test-id="icon-subtract"
                                size="xs"
                              >
                                <svg
                                  data-test-id="icon-subtract"
                                  fill="currentColor"
                                  height="12px"
                                  viewBox="0 0 16 16"
                                  width="12px"
                                >
                                  <path
                                    d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                  />
                                  <path
                                    d="M11.28,8.75H4.72a.75.75,0,1,1,0-1.5h6.56a.75.75,0,1,1,0,1.5Z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </IconSubtract>
                          </span>
                        </Icon>
                        Remove
                      </span>
                    </ButtonLabel>
                  </button>
                </Component>
              </StyledButton>
            </Button>
          </forwardRef<Button>>
        </div>
      </Controls>
      <Details>
        <div
          className="css-7fc9vz-Details egigtit3"
        >
          <ScopesWrapper>
            <div
              className="css-znkina-ScopesWrapper egigtit4"
            >
              <Heading>
                <div
                  className="css-yw8764-Heading egigtit7"
                >
                  Scopes
                </div>
              </Heading>
              <ScopeList>
                <div
                  className="css-1un1hpp-ScopeList egigtit5"
                >
                  scope1, scope2
                </div>
              </ScopeList>
            </div>
          </ScopesWrapper>
          <div>
            <Heading>
              <div
                className="css-yw8764-Heading egigtit7"
              >
                Created
              </div>
            </Heading>
            <Time>
              <time
                className="css-12gsgyi-Time egigtit6"
              >
                <DateTime
                  date={2018-01-12T02:01:41.000Z}
                  seconds={true}
                >
                  <time>
                    Jan 12, 2018 2:01:41 AM UTC
                  </time>
                </DateTime>
              </time>
            </Time>
          </div>
        </div>
      </Details>
    </div>
  </StyledPanelItem>
</ApiTokenRow>
`;
