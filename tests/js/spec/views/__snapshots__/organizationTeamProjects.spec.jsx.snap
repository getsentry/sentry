// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationTeamProjects Should render 1`] = `
<TeamProjects
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "experiments": Object {},
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "teamId": "team-slug",
    }
  }
>
  <Panel>
    <Component
      className="css-ietoyz-Panel e119nu470"
    >
      <div
        className="css-ietoyz-Panel e119nu470"
      >
        <PanelHeader
          hasButtons={true}
        >
          <div
            className="css-13it3e1-PanelHeader en8g1d30"
          >
            <div>
              Projects
            </div>
            <div
              style={
                Object {
                  "textTransform": "none",
                }
              }
            >
              <DropdownAutoComplete
                alignMenu="right"
                emptyMessage="No projects"
                items={
                  Array [
                    Object {
                      "label": <ForwardRef(render)>
                        project-slug
                      </ForwardRef(render)>,
                      "searchKey": "project-slug",
                      "value": "2",
                    },
                    Object {
                      "label": <ForwardRef(render)>
                        project-slug-2
                      </ForwardRef(render)>,
                      "searchKey": "project-slug-2",
                      "value": "3",
                    },
                  ]
                }
                onChange={[Function]}
                onSelect={[Function]}
              >
                <DropdownAutoCompleteMenu
                  alignMenu="right"
                  blendCorner={true}
                  emptyMessage="No projects"
                  items={
                    Array [
                      Object {
                        "label": <ForwardRef(render)>
                          project-slug
                        </ForwardRef(render)>,
                        "searchKey": "project-slug",
                        "value": "2",
                      },
                      Object {
                        "label": <ForwardRef(render)>
                          project-slug-2
                        </ForwardRef(render)>,
                        "searchKey": "project-slug-2",
                        "value": "3",
                      },
                    ]
                  }
                  maxHeight={300}
                  onChange={[Function]}
                  onSelect={[Function]}
                  searchPlaceholder="Filter search"
                >
                  <AutoComplete
                    closeOnSelect={true}
                    disabled={false}
                    inputIsActor={false}
                    itemToString={[Function]}
                    onSelect={[Function]}
                    resetInputOnClose={true}
                    shouldSelectWithEnter={true}
                    shouldSelectWithTab={false}
                  >
                    <DropdownMenu
                      closeOnEscape={true}
                      isOpen={false}
                      keepMenuOpen={false}
                      onClickOutside={[Function]}
                    >
                      <AutoCompleteRoot>
                        <Component
                          className="css-j1qymt-AutoCompleteRoot ejumqxq0"
                        >
                          <div
                            className="css-j1qymt-AutoCompleteRoot ejumqxq0"
                          >
                            <Actor
                              isOpen={false}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              role="button"
                              style={
                                Object {
                                  "outline": "none",
                                }
                              }
                              tabIndex="0"
                            >
                              <div
                                className="css-1vv9ctx-Actor e53us8t0"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "outline": "none",
                                  }
                                }
                                tabIndex="0"
                              >
                                <ForwardRef
                                  isOpen={false}
                                  size="xsmall"
                                >
                                  <DropdownButton
                                    forwardedRef={null}
                                    isOpen={false}
                                    showChevron={true}
                                    size="xsmall"
                                  >
                                    <StyledButton
                                      hideBottomBorder={true}
                                      isOpen={false}
                                      size="xsmall"
                                      type="button"
                                    >
                                      <forwardRef<Button>
                                        className="css-16vj1dy-StyledButton eenpoef1"
                                        hideBottomBorder={true}
                                        isOpen={false}
                                        size="xsmall"
                                        type="button"
                                      >
                                        <Button
                                          align="center"
                                          className="css-16vj1dy-StyledButton eenpoef1"
                                          disabled={false}
                                          forwardRef={null}
                                          hideBottomBorder={true}
                                          isOpen={false}
                                          size="xsmall"
                                          type="button"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            className="css-16vj1dy-StyledButton eenpoef1"
                                            disabled={false}
                                            forwardRef={null}
                                            hideBottomBorder={true}
                                            isOpen={false}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                            type="button"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              className="eenpoef1 css-uuhsec-StyledButton-StyledButton edwq9my0"
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                              type="button"
                                            >
                                              <button
                                                aria-disabled={false}
                                                className="eenpoef1 css-uuhsec-StyledButton-StyledButton edwq9my0"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                                type="button"
                                              >
                                                <ButtonLabel
                                                  align="center"
                                                  size="xsmall"
                                                >
                                                  <span
                                                    className="css-1dw46ju-ButtonLabel edwq9my1"
                                                  >
                                                    Add Project
                                                    <StyledChevron
                                                      direction="down"
                                                      size="10px"
                                                    >
                                                      <IconChevron
                                                        className="css-17f1s2z-StyledChevron eenpoef0"
                                                        direction="down"
                                                        size="10px"
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "color": [Function],
                                                                "size": [Function],
                                                                "viewBox": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          className="css-17f1s2z-StyledChevron eenpoef0"
                                                          css={
                                                            Object {
                                                              "map": undefined,
                                                              "name": "7chgxg-IconChevron",
                                                              "next": undefined,
                                                              "styles": "transform:rotate(180deg);;label:IconChevron;",
                                                              "toString": [Function],
                                                            }
                                                          }
                                                          size="10px"
                                                        >
                                                          <ForwardRef(SvgIcon)
                                                            className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
                                                            size="10px"
                                                          >
                                                            <svg
                                                              className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
                                                              fill="currentColor"
                                                              height="10px"
                                                              viewBox="0 0 16 16"
                                                              width="10px"
                                                            >
                                                              <path
                                                                d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </EmotionCssPropInternal>
                                                      </IconChevron>
                                                    </StyledChevron>
                                                  </span>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </forwardRef<Button>>
                                    </StyledButton>
                                  </DropdownButton>
                                </ForwardRef>
                              </div>
                            </Actor>
                          </div>
                        </Component>
                      </AutoCompleteRoot>
                    </DropdownMenu>
                  </AutoComplete>
                </DropdownAutoCompleteMenu>
              </DropdownAutoComplete>
            </div>
          </div>
        </PanelHeader>
        <PanelBody
          flexible={false}
          withPadding={false}
        >
          <FlexBox
            withPadding={false}
          >
            <div
              className="css-1nto0rx-FlexBox e1vnwt6f0"
            >
              <StyledPanelItem
                key="2"
                p={2}
              >
                <div
                  className="css-rp7iak-PanelItem-StyledPanelItem eqsa6vb1"
                >
                  <ProjectItem
                    organization={
                      Object {
                        "access": Array [
                          "org:read",
                          "org:write",
                          "org:admin",
                          "org:integrations",
                          "project:read",
                          "project:write",
                          "project:admin",
                          "team:read",
                          "team:write",
                          "team:admin",
                        ],
                        "experiments": Object {},
                        "features": Array [],
                        "id": "3",
                        "name": "Organization Name",
                        "onboardingTasks": Array [],
                        "projects": Array [],
                        "scrapeJavaScript": true,
                        "slug": "org-slug",
                        "status": Object {
                          "id": "active",
                          "name": "active",
                        },
                        "teams": Array [],
                      }
                    }
                    project={
                      Object {
                        "environments": Array [],
                        "hasAccess": true,
                        "id": "2",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Project Name",
                        "slug": "project-slug",
                        "teams": Array [
                          undefined,
                        ],
                      }
                    }
                  >
                    <Container
                      key="2"
                    >
                      <div
                        className="css-vtga8x-Container enngb6z0"
                      >
                        <BookmarkLink
                          isBookmarked={false}
                          onToggle={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "experiments": Object {},
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          project={
                            Object {
                              "environments": Array [],
                              "hasAccess": true,
                              "id": "2",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name",
                              "slug": "project-slug",
                              "teams": Array [
                                undefined,
                              ],
                            }
                          }
                        >
                          <withApi(BookmarkStar)
                            className="css-1qavcxg-BookmarkLink enngb6z1"
                            isBookmarked={false}
                            onToggle={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "experiments": Object {},
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            project={
                              Object {
                                "environments": Array [],
                                "hasAccess": true,
                                "id": "2",
                                "isBookmarked": false,
                                "isMember": true,
                                "name": "Project Name",
                                "slug": "project-slug",
                                "teams": Array [
                                  undefined,
                                ],
                              }
                            }
                          >
                            <BookmarkStar
                              api={
                                Client {
                                  "_chain": [Function],
                                  "_wrapRequest": [Function],
                                  "bulkUpdate": [Function],
                                  "handleRequestError": [Function],
                                  "hasProjectBeenRenamed": [Function],
                                }
                              }
                              className="css-1qavcxg-BookmarkLink enngb6z1"
                              isBookmarked={false}
                              onToggle={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              project={
                                Object {
                                  "environments": Array [],
                                  "hasAccess": true,
                                  "id": "2",
                                  "isBookmarked": false,
                                  "isMember": true,
                                  "name": "Project Name",
                                  "slug": "project-slug",
                                  "teams": Array [
                                    undefined,
                                  ],
                                }
                              }
                            >
                              <Star
                                className="css-1qavcxg-BookmarkLink enngb6z1"
                                isBookmarked={false}
                                onClick={[Function]}
                                src="icon-star-small-filled"
                              >
                                <ForwardRef
                                  className="enngb6z1 css-wprtkf-InlineSvg-Star-BookmarkLink ez1a7zv0"
                                  isBookmarked={false}
                                  onClick={[Function]}
                                  src="icon-star-small-filled"
                                >
                                  <svg
                                    className="enngb6z1 css-wprtkf-InlineSvg-Star-BookmarkLink ez1a7zv0"
                                    height="1em"
                                    onClick={[Function]}
                                    viewBox={Object {}}
                                    width="1em"
                                  >
                                    <use
                                      href="#test"
                                      xlinkHref="#test"
                                    />
                                  </svg>
                                </ForwardRef>
                              </Star>
                            </BookmarkStar>
                          </withApi(BookmarkStar)>
                        </BookmarkLink>
                        <Link
                          to="/settings/org-slug/projects/project-slug/"
                        >
                          <Link
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/settings/org-slug/projects/project-slug/"
                          >
                            <a
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ProjectLabel
                                project={
                                  Object {
                                    "environments": Array [],
                                    "hasAccess": true,
                                    "id": "2",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Project Name",
                                    "slug": "project-slug",
                                    "teams": Array [
                                      undefined,
                                    ],
                                  }
                                }
                              >
                                <span
                                  className="project-label"
                                >
                                  <span
                                    className="project-name"
                                  >
                                    project-slug
                                  </span>
                                </span>
                              </ProjectLabel>
                            </a>
                          </Link>
                        </Link>
                      </div>
                    </Container>
                  </ProjectItem>
                  <Tooltip
                    containerDisplayMode="inline-block"
                    disabled={true}
                    position="top"
                    title="You do not have enough permission to change project association."
                  >
                    <forwardRef<Button>
                      disabled={false}
                      onClick={[Function]}
                      size="small"
                    >
                      <Button
                        align="center"
                        disabled={false}
                        forwardRef={null}
                        onClick={[Function]}
                        size="small"
                      >
                        <StyledButton
                          aria-disabled={false}
                          disabled={false}
                          forwardRef={null}
                          onClick={[Function]}
                          role="button"
                          size="small"
                        >
                          <Component
                            aria-disabled={false}
                            className="css-8od3q1-StyledButton edwq9my0"
                            forwardRef={null}
                            onClick={[Function]}
                            role="button"
                            size="small"
                          >
                            <button
                              aria-disabled={false}
                              className="css-8od3q1-StyledButton edwq9my0"
                              onClick={[Function]}
                              role="button"
                              size="small"
                            >
                              <ButtonLabel
                                align="center"
                                size="small"
                              >
                                <span
                                  className="css-n7mdnv-ButtonLabel edwq9my1"
                                >
                                  <RemoveIcon>
                                    <Component
                                      className="css-1d2szfl-RemoveIcon eqsa6vb0"
                                    >
                                      <InlineSvg
                                        className="css-1d2szfl-RemoveIcon eqsa6vb0"
                                        src="icon-circle-subtract"
                                      >
                                        <ForwardRef
                                          className="eqsa6vb0 css-hoycps-InlineSvg-RemoveIcon enyz4ql0"
                                          src="icon-circle-subtract"
                                        >
                                          <svg
                                            className="eqsa6vb0 css-hoycps-InlineSvg-RemoveIcon enyz4ql0"
                                            height="1em"
                                            viewBox={Object {}}
                                            width="1em"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </ForwardRef>
                                      </InlineSvg>
                                    </Component>
                                  </RemoveIcon>
                                   
                                  Remove
                                </span>
                              </ButtonLabel>
                            </button>
                          </Component>
                        </StyledButton>
                      </Button>
                    </forwardRef<Button>>
                  </Tooltip>
                </div>
              </StyledPanelItem>
              <StyledPanelItem
                key="3"
                p={2}
              >
                <div
                  className="css-rp7iak-PanelItem-StyledPanelItem eqsa6vb1"
                >
                  <ProjectItem
                    organization={
                      Object {
                        "access": Array [
                          "org:read",
                          "org:write",
                          "org:admin",
                          "org:integrations",
                          "project:read",
                          "project:write",
                          "project:admin",
                          "team:read",
                          "team:write",
                          "team:admin",
                        ],
                        "experiments": Object {},
                        "features": Array [],
                        "id": "3",
                        "name": "Organization Name",
                        "onboardingTasks": Array [],
                        "projects": Array [],
                        "scrapeJavaScript": true,
                        "slug": "org-slug",
                        "status": Object {
                          "id": "active",
                          "name": "active",
                        },
                        "teams": Array [],
                      }
                    }
                    project={
                      Object {
                        "environments": Array [],
                        "hasAccess": true,
                        "id": "3",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Project Name 2",
                        "slug": "project-slug-2",
                        "teams": Array [],
                      }
                    }
                  >
                    <Container
                      key="3"
                    >
                      <div
                        className="css-vtga8x-Container enngb6z0"
                      >
                        <BookmarkLink
                          isBookmarked={false}
                          onToggle={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "experiments": Object {},
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          project={
                            Object {
                              "environments": Array [],
                              "hasAccess": true,
                              "id": "3",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name 2",
                              "slug": "project-slug-2",
                              "teams": Array [],
                            }
                          }
                        >
                          <withApi(BookmarkStar)
                            className="css-1qavcxg-BookmarkLink enngb6z1"
                            isBookmarked={false}
                            onToggle={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "experiments": Object {},
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            project={
                              Object {
                                "environments": Array [],
                                "hasAccess": true,
                                "id": "3",
                                "isBookmarked": false,
                                "isMember": true,
                                "name": "Project Name 2",
                                "slug": "project-slug-2",
                                "teams": Array [],
                              }
                            }
                          >
                            <BookmarkStar
                              api={
                                Client {
                                  "_chain": [Function],
                                  "_wrapRequest": [Function],
                                  "bulkUpdate": [Function],
                                  "handleRequestError": [Function],
                                  "hasProjectBeenRenamed": [Function],
                                }
                              }
                              className="css-1qavcxg-BookmarkLink enngb6z1"
                              isBookmarked={false}
                              onToggle={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              project={
                                Object {
                                  "environments": Array [],
                                  "hasAccess": true,
                                  "id": "3",
                                  "isBookmarked": false,
                                  "isMember": true,
                                  "name": "Project Name 2",
                                  "slug": "project-slug-2",
                                  "teams": Array [],
                                }
                              }
                            >
                              <Star
                                className="css-1qavcxg-BookmarkLink enngb6z1"
                                isBookmarked={false}
                                onClick={[Function]}
                                src="icon-star-small-filled"
                              >
                                <ForwardRef
                                  className="enngb6z1 css-wprtkf-InlineSvg-Star-BookmarkLink ez1a7zv0"
                                  isBookmarked={false}
                                  onClick={[Function]}
                                  src="icon-star-small-filled"
                                >
                                  <svg
                                    className="enngb6z1 css-wprtkf-InlineSvg-Star-BookmarkLink ez1a7zv0"
                                    height="1em"
                                    onClick={[Function]}
                                    viewBox={Object {}}
                                    width="1em"
                                  >
                                    <use
                                      href="#test"
                                      xlinkHref="#test"
                                    />
                                  </svg>
                                </ForwardRef>
                              </Star>
                            </BookmarkStar>
                          </withApi(BookmarkStar)>
                        </BookmarkLink>
                        <Link
                          to="/settings/org-slug/projects/project-slug-2/"
                        >
                          <Link
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/settings/org-slug/projects/project-slug-2/"
                          >
                            <a
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ProjectLabel
                                project={
                                  Object {
                                    "environments": Array [],
                                    "hasAccess": true,
                                    "id": "3",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Project Name 2",
                                    "slug": "project-slug-2",
                                    "teams": Array [],
                                  }
                                }
                              >
                                <span
                                  className="project-label"
                                >
                                  <span
                                    className="project-name"
                                  >
                                    project-slug-2
                                  </span>
                                </span>
                              </ProjectLabel>
                            </a>
                          </Link>
                        </Link>
                      </div>
                    </Container>
                  </ProjectItem>
                  <Tooltip
                    containerDisplayMode="inline-block"
                    disabled={true}
                    position="top"
                    title="You do not have enough permission to change project association."
                  >
                    <forwardRef<Button>
                      disabled={false}
                      onClick={[Function]}
                      size="small"
                    >
                      <Button
                        align="center"
                        disabled={false}
                        forwardRef={null}
                        onClick={[Function]}
                        size="small"
                      >
                        <StyledButton
                          aria-disabled={false}
                          disabled={false}
                          forwardRef={null}
                          onClick={[Function]}
                          role="button"
                          size="small"
                        >
                          <Component
                            aria-disabled={false}
                            className="css-8od3q1-StyledButton edwq9my0"
                            forwardRef={null}
                            onClick={[Function]}
                            role="button"
                            size="small"
                          >
                            <button
                              aria-disabled={false}
                              className="css-8od3q1-StyledButton edwq9my0"
                              onClick={[Function]}
                              role="button"
                              size="small"
                            >
                              <ButtonLabel
                                align="center"
                                size="small"
                              >
                                <span
                                  className="css-n7mdnv-ButtonLabel edwq9my1"
                                >
                                  <RemoveIcon>
                                    <Component
                                      className="css-1d2szfl-RemoveIcon eqsa6vb0"
                                    >
                                      <InlineSvg
                                        className="css-1d2szfl-RemoveIcon eqsa6vb0"
                                        src="icon-circle-subtract"
                                      >
                                        <ForwardRef
                                          className="eqsa6vb0 css-hoycps-InlineSvg-RemoveIcon enyz4ql0"
                                          src="icon-circle-subtract"
                                        >
                                          <svg
                                            className="eqsa6vb0 css-hoycps-InlineSvg-RemoveIcon enyz4ql0"
                                            height="1em"
                                            viewBox={Object {}}
                                            width="1em"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </ForwardRef>
                                      </InlineSvg>
                                    </Component>
                                  </RemoveIcon>
                                   
                                  Remove
                                </span>
                              </ButtonLabel>
                            </button>
                          </Component>
                        </StyledButton>
                      </Button>
                    </forwardRef<Button>>
                  </Tooltip>
                </div>
              </StyledPanelItem>
            </div>
          </FlexBox>
        </PanelBody>
      </div>
    </Component>
  </Panel>
  <Styled(Pagination)
    api={
      Client {
        "_chain": [Function],
        "_wrapRequest": [Function],
        "bulkUpdate": [Function],
        "handleRequestError": [Function],
        "hasProjectBeenRenamed": [Function],
      }
    }
    location={
      Object {
        "query": Object {},
      }
    }
    onCursor={[Function]}
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "org:integrations",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "experiments": Object {},
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    params={
      Object {
        "orgId": "org-slug",
        "teamId": "team-slug",
      }
    }
  >
    <Pagination
      api={
        Client {
          "_chain": [Function],
          "_wrapRequest": [Function],
          "bulkUpdate": [Function],
          "handleRequestError": [Function],
          "hasProjectBeenRenamed": [Function],
        }
      }
      className="css-1vzq2o e1vkspke0"
      location={
        Object {
          "query": Object {},
        }
      }
      onCursor={[Function]}
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
      params={
        Object {
          "orgId": "org-slug",
          "teamId": "team-slug",
        }
      }
    />
  </Styled(Pagination)>
</TeamProjects>
`;
