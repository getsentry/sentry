// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationApiKeysView renders 1`] = `
<OrganizationApiKeysView
  params={
    Object {
      "orgId": "org-slug",
    }
  }
>
  <DocumentTitle
    title="Organization Name API Keys"
  >
    <div>
      <SpreadLayout
        center={true}
        className="page-header"
        responsive={false}
      >
        <div
          className="spread-layout page-header center"
        >
          <h3>
            Api Keys
          </h3>
          <Button
            disabled={false}
            onClick={[Function]}
            priority="primary"
            type="button"
          >
            <button
              className="button button-primary"
              disabled={false}
              onClick={[Function]}
              role="button"
              type="button"
            >
              <FlowLayout
                truncate={false}
              >
                <div
                  className="flow-layout"
                >
                  <span
                    className="button-label"
                  >
                    New API Key
                  </span>
                </div>
              </FlowLayout>
            </button>
          </Button>
        </div>
      </SpreadLayout>
      <p>
        API keys grant access to the
         
        <a
          href="https://docs.sentry.io/hosted/api/"
          rel="nofollow"
          target="_blank"
        >
          developer web API
        </a>
        . If you're looking to configure a Sentry client, you'll need a client key which is available in your project settings.
      </p>
      <div
        className="alert alert-block alert-info"
      >
        psst. Until Sentry supports OAuth, you might want to switch to using
         
        <Link
          to="/api/"
        >
          <Link
            onlyActiveOnIndex={false}
            style={Object {}}
            to="/api/"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Auth Tokens
            </a>
          </Link>
        </Link>
         
        instead.
      </div>
      <table
        className="table api-key-list"
      >
        <colgroup>
          <col
            style={
              Object {
                "width": "40%",
              }
            }
          />
          <col
            style={
              Object {
                "width": "40%",
              }
            }
          />
          <col
            style={
              Object {
                "width": "20%",
              }
            }
          />
        </colgroup>
        <tbody>
          <tr>
            <td>
              <h5>
                <Link
                  to="/organizations/org-slug/api-keys/1"
                >
                  <Link
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to="/organizations/org-slug/api-keys/1"
                  >
                    <a
                      onClick={[Function]}
                      style={Object {}}
                    >
                      Default
                    </a>
                  </Link>
                </Link>
              </h5>
            </td>
            <td>
              <div
                className="form-control disabled auto-select"
              >
                aa624bcc12024702a202cd90be5feda0
              </div>
            </td>
            <td
              className="align-right"
            >
              <Link
                className="btn btn-default btn-sm"
                style={
                  Object {
                    "marginRight": 4,
                  }
                }
                to="/organizations/org-slug/api-keys/1"
              >
                <Link
                  className="btn btn-default btn-sm"
                  onlyActiveOnIndex={false}
                  style={
                    Object {
                      "marginRight": 4,
                    }
                  }
                  to="/organizations/org-slug/api-keys/1"
                >
                  <a
                    className="btn btn-default btn-sm"
                    onClick={[Function]}
                    style={
                      Object {
                        "marginRight": 4,
                      }
                    }
                  >
                    Edit Key
                  </a>
                </Link>
              </Link>
              <LinkWithConfirmation
                className="btn btn-default btn-sm"
                message="Are you sure you want to remove this API key?"
                onConfirm={[Function]}
                title="Remove API Key?"
              >
                <Confirm
                  cancelText="Cancel"
                  confirmText="Confirm"
                  message="Are you sure you want to remove this API key?"
                  onConfirm={[Function]}
                  priority="primary"
                >
                  <span>
                    <a
                      className="btn btn-default btn-sm"
                      onClick={[Function]}
                      title="Remove API Key?"
                    >
                      <span
                        className="icon-trash"
                      />
                    </a>
                    <Modal
                      animation={false}
                      autoFocus={true}
                      backdrop={true}
                      bsClass="modal"
                      dialogComponentClass={[Function]}
                      enforceFocus={true}
                      keyboard={true}
                      manager={
                        ModalManager {
                          "containers": Array [],
                          "data": Array [],
                          "handleContainerOverflow": true,
                          "hideSiblingNodes": true,
                          "modals": Array [],
                        }
                      }
                      onHide={[Function]}
                      renderBackdrop={[Function]}
                      restoreFocus={true}
                      show={false}
                    >
                      <Modal
                        autoFocus={true}
                        backdrop={true}
                        backdropClassName="modal-backdrop"
                        backdropTransitionTimeout={150}
                        containerClassName="modal-open"
                        dialogTransitionTimeout={300}
                        enforceFocus={true}
                        keyboard={true}
                        manager={
                          ModalManager {
                            "containers": Array [],
                            "data": Array [],
                            "handleContainerOverflow": true,
                            "hideSiblingNodes": true,
                            "modals": Array [],
                          }
                        }
                        onEntering={[Function]}
                        onExited={[Function]}
                        onHide={[Function]}
                        renderBackdrop={[Function]}
                        restoreFocus={true}
                        show={false}
                      />
                    </Modal>
                  </span>
                </Confirm>
              </LinkWithConfirmation>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </DocumentTitle>
</OrganizationApiKeysView>
`;
