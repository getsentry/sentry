// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTeams renders 1`] = `
<ProjectTeams
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "experiments": Object {},
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Project Teams - project-slug - Sentry"
  >
    <DocumentTitle
      title="Project Teams - project-slug - Sentry"
    >
      <div>
        <StyledSettingsPageHeading
          noTitleStyles={false}
          title="project-slug Teams"
        >
          <SettingsPageHeading
            className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
            noTitleStyles={false}
            title="project-slug Teams"
          >
            <div
              className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
            >
              <TitleAndActions>
                <div
                  className="css-ifzfc5-TitleAndActions e1uay4fd0"
                >
                  <Title
                    styled={false}
                  >
                    <div
                      className="css-u2ls9d-Title e1uay4fd1"
                    >
                      <HeaderTitle>
                        <h4
                          className="css-1bosio6-HeaderTitle eqkydle2"
                        >
                          project-slug Teams
                        </h4>
                      </HeaderTitle>
                    </div>
                  </Title>
                </div>
              </TitleAndActions>
            </div>
          </SettingsPageHeading>
        </StyledSettingsPageHeading>
        <withApi(TeamSelect)
          confirmLastTeamRemoveMessage="This is the last team with access to this project. Removing it will mean only organization owners and managers will be able to access the project pages. Are you sure you want to remove this team from the project project-slug?"
          disabled={false}
          menuHeader={
            <ForwardRef(render)>
              Teams
              <Tooltip
                containerDisplayMode="inline-block"
                disabled={true}
                position="top"
                title="You must be a project admin to create teams"
              >
                <ForwardRef(render)
                  disabled={false}
                  onClick={[Function]}
                  to=""
                >
                  Create Team
                </ForwardRef(render)>
              </Tooltip>
            </ForwardRef(render)>
          }
          onAddTeam={[Function]}
          onRemoveTeam={[Function]}
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "experiments": Object {},
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
          selectedTeams={
            Array [
              "team-slug",
            ]
          }
        >
          <TeamSelect
            api={
              Client {
                "_chain": [Function],
                "_wrapRequest": [Function],
                "bulkUpdate": [Function],
                "handleRequestError": [Function],
                "hasProjectBeenRenamed": [Function],
              }
            }
            confirmLastTeamRemoveMessage="This is the last team with access to this project. Removing it will mean only organization owners and managers will be able to access the project pages. Are you sure you want to remove this team from the project project-slug?"
            disabled={false}
            menuHeader={
              <ForwardRef(render)>
                Teams
                <Tooltip
                  containerDisplayMode="inline-block"
                  disabled={true}
                  position="top"
                  title="You must be a project admin to create teams"
                >
                  <ForwardRef(render)
                    disabled={false}
                    onClick={[Function]}
                    to=""
                  >
                    Create Team
                  </ForwardRef(render)>
                </Tooltip>
              </ForwardRef(render)>
            }
            onAddTeam={[Function]}
            onRemoveTeam={[Function]}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "experiments": Object {},
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            selectedTeams={
              Array [
                "team-slug",
              ]
            }
          >
            <Panel>
              <Component
                className="css-ietoyz-Panel e119nu470"
              >
                <div
                  className="css-ietoyz-Panel e119nu470"
                >
                  <PanelHeader
                    hasButtons={true}
                  >
                    <div
                      className="css-13it3e1-PanelHeader en8g1d30"
                    >
                      Team
                      <DropdownAutoComplete
                        alignMenu="right"
                        busyItemsStillVisible={true}
                        disabled={false}
                        emptyMessage="No teams"
                        items={Array []}
                        menuHeader={
                          <ForwardRef(render)>
                            Teams
                            <Tooltip
                              containerDisplayMode="inline-block"
                              disabled={true}
                              position="top"
                              title="You must be a project admin to create teams"
                            >
                              <ForwardRef(render)
                                disabled={false}
                                onClick={[Function]}
                                to=""
                              >
                                Create Team
                              </ForwardRef(render)>
                            </Tooltip>
                          </ForwardRef(render)>
                        }
                        onChange={[Function]}
                        onSelect={[Function]}
                      >
                        <DropdownAutoCompleteMenu
                          alignMenu="right"
                          blendCorner={true}
                          busyItemsStillVisible={true}
                          disabled={false}
                          emptyMessage="No teams"
                          items={Array []}
                          maxHeight={300}
                          menuHeader={
                            <ForwardRef(render)>
                              Teams
                              <Tooltip
                                containerDisplayMode="inline-block"
                                disabled={true}
                                position="top"
                                title="You must be a project admin to create teams"
                              >
                                <ForwardRef(render)
                                  disabled={false}
                                  onClick={[Function]}
                                  to=""
                                >
                                  Create Team
                                </ForwardRef(render)>
                              </Tooltip>
                            </ForwardRef(render)>
                          }
                          onChange={[Function]}
                          onSelect={[Function]}
                          searchPlaceholder="Filter search"
                        >
                          <AutoComplete
                            closeOnSelect={true}
                            disabled={false}
                            inputIsActor={false}
                            itemToString={[Function]}
                            onSelect={[Function]}
                            resetInputOnClose={true}
                            shouldSelectWithEnter={true}
                            shouldSelectWithTab={false}
                          >
                            <DropdownMenu
                              closeOnEscape={true}
                              isOpen={false}
                              keepMenuOpen={false}
                              onClickOutside={[Function]}
                            >
                              <AutoCompleteRoot>
                                <Component
                                  className="css-j1qymt-AutoCompleteRoot ejumqxq0"
                                >
                                  <div
                                    className="css-j1qymt-AutoCompleteRoot ejumqxq0"
                                  >
                                    <Actor
                                      isOpen={false}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "outline": "none",
                                        }
                                      }
                                      tabIndex="0"
                                    >
                                      <div
                                        className="css-1vv9ctx-Actor e53us8t0"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        role="button"
                                        style={
                                          Object {
                                            "outline": "none",
                                          }
                                        }
                                        tabIndex="0"
                                      >
                                        <ForwardRef
                                          aria-label="Add Team"
                                          disabled={false}
                                          isOpen={false}
                                          size="xsmall"
                                        >
                                          <DropdownButton
                                            aria-label="Add Team"
                                            disabled={false}
                                            forwardedRef={null}
                                            isOpen={false}
                                            showChevron={true}
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              aria-label="Add Team"
                                              disabled={false}
                                              hideBottomBorder={true}
                                              isOpen={false}
                                              size="xsmall"
                                              type="button"
                                            >
                                              <forwardRef<Button>
                                                aria-label="Add Team"
                                                className="css-16vj1dy-StyledButton eenpoef1"
                                                disabled={false}
                                                hideBottomBorder={true}
                                                isOpen={false}
                                                size="xsmall"
                                                type="button"
                                              >
                                                <Button
                                                  align="center"
                                                  aria-label="Add Team"
                                                  className="css-16vj1dy-StyledButton eenpoef1"
                                                  disabled={false}
                                                  forwardRef={null}
                                                  hideBottomBorder={true}
                                                  isOpen={false}
                                                  size="xsmall"
                                                  type="button"
                                                >
                                                  <StyledButton
                                                    aria-disabled={false}
                                                    aria-label="Add Team"
                                                    className="css-16vj1dy-StyledButton eenpoef1"
                                                    disabled={false}
                                                    forwardRef={null}
                                                    hideBottomBorder={true}
                                                    isOpen={false}
                                                    onClick={[Function]}
                                                    role="button"
                                                    size="xsmall"
                                                    type="button"
                                                  >
                                                    <Component
                                                      aria-disabled={false}
                                                      aria-label="Add Team"
                                                      className="eenpoef1 css-uuhsec-StyledButton-StyledButton edwq9my0"
                                                      forwardRef={null}
                                                      onClick={[Function]}
                                                      role="button"
                                                      size="xsmall"
                                                      type="button"
                                                    >
                                                      <button
                                                        aria-disabled={false}
                                                        aria-label="Add Team"
                                                        className="eenpoef1 css-uuhsec-StyledButton-StyledButton edwq9my0"
                                                        onClick={[Function]}
                                                        role="button"
                                                        size="xsmall"
                                                        type="button"
                                                      >
                                                        <ButtonLabel
                                                          align="center"
                                                          size="xsmall"
                                                        >
                                                          <span
                                                            className="css-1dw46ju-ButtonLabel edwq9my1"
                                                          >
                                                            Add Team
                                                            <StyledChevron
                                                              direction="down"
                                                              size="10px"
                                                            >
                                                              <IconChevron
                                                                className="css-17f1s2z-StyledChevron eenpoef0"
                                                                direction="down"
                                                                size="10px"
                                                              >
                                                                <EmotionCssPropInternal
                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "color": [Function],
                                                                        "size": [Function],
                                                                        "viewBox": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  className="css-17f1s2z-StyledChevron eenpoef0"
                                                                  css={
                                                                    Object {
                                                                      "map": undefined,
                                                                      "name": "7chgxg-IconChevron",
                                                                      "next": undefined,
                                                                      "styles": "transform:rotate(180deg);;label:IconChevron;",
                                                                      "toString": [Function],
                                                                    }
                                                                  }
                                                                  size="10px"
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
                                                                    size="10px"
                                                                  >
                                                                    <svg
                                                                      className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
                                                                      fill="currentColor"
                                                                      height="10px"
                                                                      viewBox="0 0 16 16"
                                                                      width="10px"
                                                                    >
                                                                      <path
                                                                        d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </EmotionCssPropInternal>
                                                              </IconChevron>
                                                            </StyledChevron>
                                                          </span>
                                                        </ButtonLabel>
                                                      </button>
                                                    </Component>
                                                  </StyledButton>
                                                </Button>
                                              </forwardRef<Button>>
                                            </StyledButton>
                                          </DropdownButton>
                                        </ForwardRef>
                                      </div>
                                    </Actor>
                                  </div>
                                </Component>
                              </AutoCompleteRoot>
                            </DropdownMenu>
                          </AutoComplete>
                        </DropdownAutoCompleteMenu>
                      </DropdownAutoComplete>
                    </div>
                  </PanelHeader>
                  <PanelBody
                    flexible={false}
                    withPadding={false}
                  >
                    <FlexBox
                      withPadding={false}
                    >
                      <div
                        className="css-1nto0rx-FlexBox e1vnwt6f0"
                      >
                        <TeamRow
                          confirmMessage="This is the last team with access to this project. Removing it will mean only organization owners and managers will be able to access the project pages. Are you sure you want to remove this team from the project project-slug?"
                          disabled={false}
                          key="team-slug"
                          onRemove={[Function]}
                          orgId="org-slug"
                          team="team-slug"
                        >
                          <TeamPanelItem
                            p={2}
                          >
                            <div
                              className="css-of7nds-PanelItem-TeamPanelItem e2fk6ws1"
                            >
                              <StyledLink
                                to="/settings/org-slug/teams/team-slug/"
                              >
                                <Link
                                  className="css-lhfbz9-StyledLink e2fk6ws2"
                                  to="/settings/org-slug/teams/team-slug/"
                                >
                                  <Link
                                    className="css-lhfbz9-StyledLink e2fk6ws2"
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/settings/org-slug/teams/team-slug/"
                                  >
                                    <a
                                      className="css-lhfbz9-StyledLink e2fk6ws2"
                                      onClick={[Function]}
                                      style={Object {}}
                                    >
                                      #team-slug
                                    </a>
                                  </Link>
                                </Link>
                              </StyledLink>
                              <Confirm
                                bypass={false}
                                cancelText="Cancel"
                                confirmText="Confirm"
                                disableConfirmButton={false}
                                disabled={false}
                                message="This is the last team with access to this project. Removing it will mean only organization owners and managers will be able to access the project pages. Are you sure you want to remove this team from the project project-slug?"
                                onConfirm={[Function]}
                                priority="primary"
                                stopPropagation={false}
                              >
                                <forwardRef<Button>
                                  disabled={false}
                                  icon={
                                    <ForwardRef(IconSubtract)
                                      isCircled={true}
                                      size="xs"
                                    />
                                  }
                                  onClick={[Function]}
                                  size="xsmall"
                                >
                                  <Button
                                    align="center"
                                    disabled={false}
                                    forwardRef={null}
                                    icon={
                                      <ForwardRef(IconSubtract)
                                        isCircled={true}
                                        size="xs"
                                      />
                                    }
                                    onClick={[Function]}
                                    size="xsmall"
                                  >
                                    <StyledButton
                                      aria-disabled={false}
                                      aria-label="Remove"
                                      disabled={false}
                                      forwardRef={null}
                                      onClick={[Function]}
                                      role="button"
                                      size="xsmall"
                                    >
                                      <Component
                                        aria-disabled={false}
                                        aria-label="Remove"
                                        className="css-8od3q1-StyledButton edwq9my0"
                                        forwardRef={null}
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <button
                                          aria-disabled={false}
                                          aria-label="Remove"
                                          className="css-8od3q1-StyledButton edwq9my0"
                                          onClick={[Function]}
                                          role="button"
                                          size="xsmall"
                                        >
                                          <ButtonLabel
                                            align="center"
                                            size="xsmall"
                                          >
                                            <span
                                              className="css-1dw46ju-ButtonLabel edwq9my1"
                                            >
                                              <Icon
                                                hasChildren={true}
                                                size="xsmall"
                                              >
                                                <span
                                                  className="css-1hbuack-Icon edwq9my2"
                                                  size="xsmall"
                                                >
                                                  <IconSubtract
                                                    isCircled={true}
                                                    size="xs"
                                                  >
                                                    <ForwardRef(SvgIcon)
                                                      data-test-id="icon-subtract"
                                                      size="xs"
                                                    >
                                                      <svg
                                                        data-test-id="icon-subtract"
                                                        fill="currentColor"
                                                        height="12px"
                                                        viewBox="0 0 16 16"
                                                        width="12px"
                                                      >
                                                        <path
                                                          d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                                        />
                                                        <path
                                                          d="M11.28,8.75H4.72a.75.75,0,1,1,0-1.5h6.56a.75.75,0,1,1,0,1.5Z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </IconSubtract>
                                                </span>
                                              </Icon>
                                              Remove
                                            </span>
                                          </ButtonLabel>
                                        </button>
                                      </Component>
                                    </StyledButton>
                                  </Button>
                                </forwardRef<Button>>
                                <Modal
                                  animation={false}
                                  autoFocus={true}
                                  backdrop={true}
                                  bsClass="modal"
                                  dialogComponentClass={[Function]}
                                  enforceFocus={true}
                                  keyboard={true}
                                  manager={
                                    ModalManager {
                                      "add": [Function],
                                      "containers": Array [],
                                      "data": Array [],
                                      "handleContainerOverflow": true,
                                      "hideSiblingNodes": true,
                                      "isTopModal": [Function],
                                      "modals": Array [],
                                      "remove": [Function],
                                    }
                                  }
                                  onHide={[Function]}
                                  renderBackdrop={[Function]}
                                  restoreFocus={true}
                                  show={false}
                                >
                                  <Modal
                                    autoFocus={true}
                                    backdrop={true}
                                    backdropClassName="modal-backdrop"
                                    containerClassName="modal-open"
                                    enforceFocus={true}
                                    keyboard={true}
                                    manager={
                                      ModalManager {
                                        "add": [Function],
                                        "containers": Array [],
                                        "data": Array [],
                                        "handleContainerOverflow": true,
                                        "hideSiblingNodes": true,
                                        "isTopModal": [Function],
                                        "modals": Array [],
                                        "remove": [Function],
                                      }
                                    }
                                    onEntering={[Function]}
                                    onExited={[Function]}
                                    onHide={[Function]}
                                    renderBackdrop={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  />
                                </Modal>
                              </Confirm>
                            </div>
                          </TeamPanelItem>
                        </TeamRow>
                      </div>
                    </FlexBox>
                  </PanelBody>
                </div>
              </Component>
            </Panel>
          </TeamSelect>
        </withApi(TeamSelect)>
      </div>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTeams>
`;
