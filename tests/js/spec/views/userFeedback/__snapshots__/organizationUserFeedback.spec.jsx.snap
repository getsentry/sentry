// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationUserFeedback renders 1`] = `
<OrganizationUserFeedback
  location={
    Object {
      "query": Object {},
      "search": "",
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [
        "sentry10",
      ],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="User Feedback - org-slug - Sentry"
  >
    <DocumentTitle
      title="User Feedback - org-slug - Sentry"
    >
      <FeatureContainer
        features={
          Array [
            "organizations:sentry10",
          ]
        }
        organization={
          Object {
            "access": Array [
              "org:read",
              "org:write",
              "org:admin",
              "project:read",
              "project:write",
              "project:admin",
              "team:read",
              "team:write",
              "team:admin",
            ],
            "features": Array [
              "sentry10",
            ],
            "id": "3",
            "name": "Organization Name",
            "onboardingTasks": Array [],
            "projects": Array [],
            "scrapeJavaScript": true,
            "slug": "org-slug",
            "status": Object {
              "id": "active",
              "name": "active",
            },
            "teams": Array [],
          }
        }
        renderDisabled={[Function]}
      >
        <Feature
          configFeatures={Array []}
          features={
            Array [
              "organizations:sentry10",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "features": Array [
                "sentry10",
              ],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
          project={
            Object {
              "hasAccess": true,
              "id": "2",
              "isBookmarked": false,
              "isMember": true,
              "name": "Project Name",
              "slug": "project-slug",
              "teams": Array [],
            }
          }
          renderDisabled={[Function]}
          requireAll={true}
        >
          <withRouter(withGlobalSelection(GlobalSelectionHeader))
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [
                  "sentry10",
                ],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
          >
            <withGlobalSelection(GlobalSelectionHeader)
              location={
                Object {
                  "query": Object {},
                }
              }
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [
                    "sentry10",
                  ],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              router={
                Object {
                  "createHref": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "pathname": undefined,
                          "query": Object {},
                        },
                      ],
                      Array [
                        Object {
                          "pathname": undefined,
                          "query": Object {
                            "status": "",
                          },
                        },
                      ],
                      Array [
                        "/org-slug/project-slug/issues/1/",
                      ],
                      Array [
                        "/org-slug/project-slug/",
                      ],
                      Array [
                        "/org-slug/project-slug/issues/1/activity/",
                      ],
                      Array [
                        "/org-slug/project-slug/issues/1/events/1",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "go": [MockFunction],
                  "goBack": [MockFunction],
                  "goForward": [MockFunction],
                  "isActive": [MockFunction],
                  "listen": [MockFunction],
                  "location": Object {
                    "query": Object {},
                  },
                  "push": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "pathname": undefined,
                          "query": Object {
                            "environment": Array [],
                            "project": Array [],
                            "statsPeriod": "14d",
                            "utc": "true",
                          },
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "replace": [MockFunction],
                  "setRouteLeaveHook": [MockFunction],
                }
              }
            >
              <GlobalSelectionHeader
                hasCustomRouting={false}
                location={
                  Object {
                    "query": Object {},
                  }
                }
                organization={
                  Object {
                    "access": Array [
                      "org:read",
                      "org:write",
                      "org:admin",
                      "project:read",
                      "project:write",
                      "project:admin",
                      "team:read",
                      "team:write",
                      "team:admin",
                    ],
                    "features": Array [
                      "sentry10",
                    ],
                    "id": "3",
                    "name": "Organization Name",
                    "onboardingTasks": Array [],
                    "projects": Array [],
                    "scrapeJavaScript": true,
                    "slug": "org-slug",
                    "status": Object {
                      "id": "active",
                      "name": "active",
                    },
                    "teams": Array [],
                  }
                }
                resetParamsOnChange={Array []}
                router={
                  Object {
                    "createHref": [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "pathname": undefined,
                            "query": Object {},
                          },
                        ],
                        Array [
                          Object {
                            "pathname": undefined,
                            "query": Object {
                              "status": "",
                            },
                          },
                        ],
                        Array [
                          "/org-slug/project-slug/issues/1/",
                        ],
                        Array [
                          "/org-slug/project-slug/",
                        ],
                        Array [
                          "/org-slug/project-slug/issues/1/activity/",
                        ],
                        Array [
                          "/org-slug/project-slug/issues/1/events/1",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "go": [MockFunction],
                    "goBack": [MockFunction],
                    "goForward": [MockFunction],
                    "isActive": [MockFunction],
                    "listen": [MockFunction],
                    "location": Object {
                      "query": Object {},
                    },
                    "push": [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "pathname": undefined,
                            "query": Object {
                              "environment": Array [],
                              "project": Array [],
                              "statsPeriod": "14d",
                              "utc": "true",
                            },
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "replace": [MockFunction],
                    "setRouteLeaveHook": [MockFunction],
                  }
                }
                selection={
                  Object {
                    "datetime": Object {
                      "end": null,
                      "period": "14d",
                      "start": null,
                      "utc": true,
                    },
                    "environments": Array [],
                    "projects": Array [],
                  }
                }
                showEnvironmentSelector={true}
              >
                <Header>
                  <Base
                    className="css-14hw0r3-Header e10yv9i90"
                  >
                    <div
                      className="css-14hw0r3-Header e10yv9i90"
                      is={null}
                    >
                      <HeaderItemPosition>
                        <div
                          className="css-5udiwc-HeaderItemPosition e165b9e40"
                        >
                          <MultipleProjectSelector
                            onChange={[Function]}
                            onUpdate={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [
                                  "sentry10",
                                ],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            projects={Array []}
                            value={Array []}
                          >
                            <StyledProjectSelector
                              multi={false}
                              onChange={[Function]}
                              onClose={[Function]}
                              onMultiSelect={[Function]}
                              onSelect={[Function]}
                              onUpdate={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "features": Array [
                                    "sentry10",
                                  ],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              projects={Array []}
                              rootClassName="css-h5t9nh-rootContainerStyles"
                              selectedProjects={Array []}
                              value={Array []}
                            >
                              <ProjectSelector
                                className="css-iw79rr-StyledProjectSelector ewlipse0"
                                multi={false}
                                onChange={[Function]}
                                onClose={[Function]}
                                onMultiSelect={[Function]}
                                onSelect={[Function]}
                                onUpdate={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "features": Array [
                                      "sentry10",
                                    ],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                projectId={null}
                                projects={Array []}
                                rootClassName="css-h5t9nh-rootContainerStyles"
                                selectedProjects={Array []}
                                value={Array []}
                              >
                                <DropdownAutoComplete
                                  alignMenu="left"
                                  blendCorner={false}
                                  className="ewlipse0 css-11ijjr3-StyledProjectSelector"
                                  closeOnSelect={true}
                                  emptyHidesInput={true}
                                  emptyMessage="You have no projects"
                                  inputProps={
                                    Object {
                                      "style": Object {
                                        "padding": 8,
                                        "paddingLeft": 14,
                                      },
                                    }
                                  }
                                  items={Array []}
                                  maxHeight={500}
                                  menuFooter={[Function]}
                                  noResultsMessage="No projects found"
                                  onClose={[Function]}
                                  onSelect={[Function]}
                                  rootClassName="css-h5t9nh-rootContainerStyles"
                                  searchPlaceholder="Filter projects"
                                  virtualizedHeight={40}
                                  zIndex={1001}
                                >
                                  <DropdownAutoCompleteMenu
                                    alignMenu="left"
                                    blendCorner={false}
                                    className="ewlipse0 css-11ijjr3-StyledProjectSelector"
                                    closeOnSelect={true}
                                    emptyHidesInput={true}
                                    emptyMessage="You have no projects"
                                    inputProps={
                                      Object {
                                        "style": Object {
                                          "padding": 8,
                                          "paddingLeft": 14,
                                        },
                                      }
                                    }
                                    items={Array []}
                                    maxHeight={500}
                                    menuFooter={[Function]}
                                    noResultsMessage="No projects found"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    rootClassName="css-h5t9nh-rootContainerStyles"
                                    searchPlaceholder="Filter projects"
                                    virtualizedHeight={40}
                                    zIndex={1001}
                                  >
                                    <AutoComplete
                                      closeOnSelect={true}
                                      disabled={false}
                                      inputIsActor={false}
                                      itemToString={[Function]}
                                      onClose={[Function]}
                                      onSelect={[Function]}
                                      resetInputOnClose={true}
                                      shouldSelectWithEnter={true}
                                      shouldSelectWithTab={false}
                                      virtualizedHeight={40}
                                      zIndex={1001}
                                    >
                                      <DropdownMenu
                                        closeOnEscape={true}
                                        isOpen={false}
                                        keepMenuOpen={false}
                                        onClickOutside={[Function]}
                                      >
                                        <AutoCompleteRoot
                                          className="css-h5t9nh-rootContainerStyles"
                                        >
                                          <Component
                                            className="css-1ppsre-AutoCompleteRoot-rootContainerStyles ejumqxq0"
                                          >
                                            <div
                                              className="css-1ppsre-AutoCompleteRoot-rootContainerStyles ejumqxq0"
                                            >
                                              <Actor
                                                innerRef={[Function]}
                                                isOpen={false}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                role="button"
                                                style={
                                                  Object {
                                                    "outline": "none",
                                                  }
                                                }
                                                tabIndex={-1}
                                              >
                                                <div
                                                  className="css-17fe80j-Actor e53us8t0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "outline": "none",
                                                    }
                                                  }
                                                  tabIndex={-1}
                                                >
                                                  <StyledHeaderItem
                                                    active={false}
                                                    hasChanges={false}
                                                    hasSelected={false}
                                                    icon={
                                                      <StyledInlineSvg
                                                        src="icon-project"
                                                      />
                                                    }
                                                    isOpen={false}
                                                    onClear={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onSubmit={[Function]}
                                                    style={
                                                      Object {
                                                        "outline": "none",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef
                                                      active={false}
                                                      className="css-22y332-StyledHeaderItem ewlipse1"
                                                      hasChanges={false}
                                                      hasSelected={false}
                                                      icon={
                                                        <StyledInlineSvg
                                                          src="icon-project"
                                                        />
                                                      }
                                                      isOpen={false}
                                                      onClear={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onSubmit={[Function]}
                                                      style={
                                                        Object {
                                                          "outline": "none",
                                                        }
                                                      }
                                                      tabIndex={-1}
                                                    >
                                                      <HeaderItem
                                                        active={false}
                                                        allowClear={true}
                                                        className="css-22y332-StyledHeaderItem ewlipse1"
                                                        hasChanges={false}
                                                        hasSelected={false}
                                                        icon={
                                                          <StyledInlineSvg
                                                            src="icon-project"
                                                          />
                                                        }
                                                        innerRef={null}
                                                        isOpen={false}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onSubmit={[Function]}
                                                        style={
                                                          Object {
                                                            "outline": "none",
                                                          }
                                                        }
                                                        tabIndex={-1}
                                                      >
                                                        <StyledHeaderItem
                                                          active={false}
                                                          className="css-22y332-StyledHeaderItem ewlipse1"
                                                          hasSelected={false}
                                                          innerRef={null}
                                                          isOpen={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          style={
                                                            Object {
                                                              "outline": "none",
                                                            }
                                                          }
                                                          tabIndex={-1}
                                                        >
                                                          <div
                                                            className="ewlipse1 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            style={
                                                              Object {
                                                                "outline": "none",
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                          >
                                                            <IconContainer
                                                              hasSelected={false}
                                                            >
                                                              <span
                                                                className="css-1af7peg-IconContainer enk2k7v2"
                                                              >
                                                                <StyledInlineSvg
                                                                  src="icon-project"
                                                                >
                                                                  <InlineSvg
                                                                    className="css-1ibtmti-StyledInlineSvg ewlipse2"
                                                                    src="icon-project"
                                                                  >
                                                                    <StyledSvg
                                                                      className="css-1ibtmti-StyledInlineSvg ewlipse2"
                                                                      height="1em"
                                                                      viewBox={Object {}}
                                                                      width="1em"
                                                                    >
                                                                      <svg
                                                                        className="ewlipse2 css-1ux8cow-StyledSvg-StyledInlineSvg e2idor0"
                                                                        height="1em"
                                                                        viewBox={Object {}}
                                                                        width="1em"
                                                                      >
                                                                        <use
                                                                          href="#test"
                                                                          xlinkHref="#test"
                                                                        />
                                                                      </svg>
                                                                    </StyledSvg>
                                                                  </InlineSvg>
                                                                </StyledInlineSvg>
                                                              </span>
                                                            </IconContainer>
                                                            <Content>
                                                              <div
                                                                className="css-1yquznf-Content enk2k7v1"
                                                              >
                                                                All Projects
                                                              </div>
                                                            </Content>
                                                            <StyledChevron
                                                              hasChanges={false}
                                                              isOpen={false}
                                                              onClick={[Function]}
                                                            >
                                                              <div
                                                                className="css-ft4nwy-StyledChevron enk2k7v4"
                                                                onClick={[Function]}
                                                              >
                                                                <InlineSvg
                                                                  src="icon-chevron-down"
                                                                >
                                                                  <StyledSvg
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <svg
                                                                      className="css-ryh69w-StyledSvg e2idor0"
                                                                      height="1em"
                                                                      viewBox={Object {}}
                                                                      width="1em"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </div>
                                                            </StyledChevron>
                                                          </div>
                                                        </StyledHeaderItem>
                                                      </HeaderItem>
                                                    </ForwardRef>
                                                  </StyledHeaderItem>
                                                </div>
                                              </Actor>
                                            </div>
                                          </Component>
                                        </AutoCompleteRoot>
                                      </DropdownMenu>
                                    </AutoComplete>
                                  </DropdownAutoCompleteMenu>
                                </DropdownAutoComplete>
                              </ProjectSelector>
                            </StyledProjectSelector>
                          </MultipleProjectSelector>
                        </div>
                      </HeaderItemPosition>
                      <HeaderSeparator>
                        <Base
                          className="css-zkrb0n-HeaderSeparator elp5f3l0"
                        >
                          <div
                            className="css-zkrb0n-HeaderSeparator elp5f3l0"
                            is={null}
                          />
                        </Base>
                      </HeaderSeparator>
                      <HeaderItemPosition>
                        <div
                          className="css-5udiwc-HeaderItemPosition e165b9e40"
                        >
                          <withApi(MultipleEnvironmentSelector)
                            onChange={[Function]}
                            onUpdate={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [
                                  "sentry10",
                                ],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            value={Array []}
                          >
                            <MultipleEnvironmentSelector
                              api={Client {}}
                              onChange={[Function]}
                              onUpdate={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "features": Array [
                                    "sentry10",
                                  ],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              value={Array []}
                            >
                              <withApi(FetchOrganizationEnvironments)
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "features": Array [
                                      "sentry10",
                                    ],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                              >
                                <FetchOrganizationEnvironments
                                  api={Client {}}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [
                                        "sentry10",
                                      ],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                >
                                  <StyledDropdownAutoComplete
                                    alignMenu="left"
                                    blendCorner={false}
                                    closeOnSelect={true}
                                    emptyHidesInput={true}
                                    emptyMessage={<LoadingIndicator />}
                                    inputProps={
                                      Object {
                                        "style": Object {
                                          "padding": 8,
                                          "paddingLeft": 14,
                                        },
                                      }
                                    }
                                    items={Array []}
                                    maxHeight={500}
                                    menuProps={
                                      Object {
                                        "style": Object {
                                          "position": "relative",
                                        },
                                      }
                                    }
                                    noResultsMessage="No environments found"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    rootClassName="css-1utm1zz-rootClassName"
                                    searchPlaceholder="Filter environments"
                                    virtualizedHeight={40}
                                    zIndex={1001}
                                  >
                                    <DropdownAutoComplete
                                      alignMenu="left"
                                      blendCorner={false}
                                      className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
                                      closeOnSelect={true}
                                      emptyHidesInput={true}
                                      emptyMessage={<LoadingIndicator />}
                                      inputProps={
                                        Object {
                                          "style": Object {
                                            "padding": 8,
                                            "paddingLeft": 14,
                                          },
                                        }
                                      }
                                      items={Array []}
                                      maxHeight={500}
                                      menuProps={
                                        Object {
                                          "style": Object {
                                            "position": "relative",
                                          },
                                        }
                                      }
                                      noResultsMessage="No environments found"
                                      onClose={[Function]}
                                      onSelect={[Function]}
                                      rootClassName="css-1utm1zz-rootClassName"
                                      searchPlaceholder="Filter environments"
                                      virtualizedHeight={40}
                                      zIndex={1001}
                                    >
                                      <DropdownAutoCompleteMenu
                                        alignMenu="left"
                                        blendCorner={false}
                                        className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
                                        closeOnSelect={true}
                                        emptyHidesInput={true}
                                        emptyMessage={<LoadingIndicator />}
                                        inputProps={
                                          Object {
                                            "style": Object {
                                              "padding": 8,
                                              "paddingLeft": 14,
                                            },
                                          }
                                        }
                                        items={Array []}
                                        maxHeight={500}
                                        menuProps={
                                          Object {
                                            "style": Object {
                                              "position": "relative",
                                            },
                                          }
                                        }
                                        noResultsMessage="No environments found"
                                        onClose={[Function]}
                                        onSelect={[Function]}
                                        rootClassName="css-1utm1zz-rootClassName"
                                        searchPlaceholder="Filter environments"
                                        virtualizedHeight={40}
                                        zIndex={1001}
                                      >
                                        <AutoComplete
                                          closeOnSelect={true}
                                          disabled={false}
                                          inputIsActor={false}
                                          itemToString={[Function]}
                                          onClose={[Function]}
                                          onSelect={[Function]}
                                          resetInputOnClose={true}
                                          shouldSelectWithEnter={true}
                                          shouldSelectWithTab={false}
                                          virtualizedHeight={40}
                                          zIndex={1001}
                                        >
                                          <DropdownMenu
                                            closeOnEscape={true}
                                            isOpen={false}
                                            keepMenuOpen={false}
                                            onClickOutside={[Function]}
                                          >
                                            <AutoCompleteRoot
                                              className="css-1utm1zz-rootClassName"
                                            >
                                              <Component
                                                className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
                                              >
                                                <div
                                                  className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
                                                >
                                                  <Actor
                                                    innerRef={[Function]}
                                                    isOpen={false}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "outline": "none",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <div
                                                      className="css-17fe80j-Actor e53us8t0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "outline": "none",
                                                        }
                                                      }
                                                      tabIndex={-1}
                                                    >
                                                      <StyledHeaderItem
                                                        hasChanges={false}
                                                        hasSelected={false}
                                                        icon={
                                                          <StyledInlineSvg
                                                            src="icon-window"
                                                          />
                                                        }
                                                        innerRef={[Function]}
                                                        isOpen={false}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onSubmit={[Function]}
                                                        style={
                                                          Object {
                                                            "outline": "none",
                                                          }
                                                        }
                                                        tabIndex={-1}
                                                      >
                                                        <ForwardRef
                                                          className="css-22y332-StyledHeaderItem e1gsuvme0"
                                                          hasChanges={false}
                                                          hasSelected={false}
                                                          icon={
                                                            <StyledInlineSvg
                                                              src="icon-window"
                                                            />
                                                          }
                                                          isOpen={false}
                                                          onClear={[Function]}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onSubmit={[Function]}
                                                          style={
                                                            Object {
                                                              "outline": "none",
                                                            }
                                                          }
                                                          tabIndex={-1}
                                                        >
                                                          <HeaderItem
                                                            allowClear={true}
                                                            className="css-22y332-StyledHeaderItem e1gsuvme0"
                                                            hasChanges={false}
                                                            hasSelected={false}
                                                            icon={
                                                              <StyledInlineSvg
                                                                src="icon-window"
                                                              />
                                                            }
                                                            innerRef={[Function]}
                                                            isOpen={false}
                                                            onClear={[Function]}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onSubmit={[Function]}
                                                            style={
                                                              Object {
                                                                "outline": "none",
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                          >
                                                            <StyledHeaderItem
                                                              className="css-22y332-StyledHeaderItem e1gsuvme0"
                                                              hasSelected={false}
                                                              innerRef={[Function]}
                                                              isOpen={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                              style={
                                                                Object {
                                                                  "outline": "none",
                                                                }
                                                              }
                                                              tabIndex={-1}
                                                            >
                                                              <div
                                                                className="e1gsuvme0 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                style={
                                                                  Object {
                                                                    "outline": "none",
                                                                  }
                                                                }
                                                                tabIndex={-1}
                                                              >
                                                                <IconContainer
                                                                  hasSelected={false}
                                                                >
                                                                  <span
                                                                    className="css-1af7peg-IconContainer enk2k7v2"
                                                                  >
                                                                    <StyledInlineSvg
                                                                      src="icon-window"
                                                                    >
                                                                      <InlineSvg
                                                                        className="css-1ctth4-StyledInlineSvg e1gsuvme1"
                                                                        src="icon-window"
                                                                      >
                                                                        <StyledSvg
                                                                          className="css-1ctth4-StyledInlineSvg e1gsuvme1"
                                                                          height="1em"
                                                                          viewBox={Object {}}
                                                                          width="1em"
                                                                        >
                                                                          <svg
                                                                            className="e1gsuvme1 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
                                                                            height="1em"
                                                                            viewBox={Object {}}
                                                                            width="1em"
                                                                          >
                                                                            <use
                                                                              href="#test"
                                                                              xlinkHref="#test"
                                                                            />
                                                                          </svg>
                                                                        </StyledSvg>
                                                                      </InlineSvg>
                                                                    </StyledInlineSvg>
                                                                  </span>
                                                                </IconContainer>
                                                                <Content>
                                                                  <div
                                                                    className="css-1yquznf-Content enk2k7v1"
                                                                  >
                                                                    All Environments
                                                                  </div>
                                                                </Content>
                                                                <StyledChevron
                                                                  hasChanges={false}
                                                                  isOpen={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <div
                                                                    className="css-ft4nwy-StyledChevron enk2k7v4"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <InlineSvg
                                                                      src="icon-chevron-down"
                                                                    >
                                                                      <StyledSvg
                                                                        height="1em"
                                                                        viewBox={Object {}}
                                                                        width="1em"
                                                                      >
                                                                        <svg
                                                                          className="css-ryh69w-StyledSvg e2idor0"
                                                                          height="1em"
                                                                          viewBox={Object {}}
                                                                          width="1em"
                                                                        >
                                                                          <use
                                                                            href="#test"
                                                                            xlinkHref="#test"
                                                                          />
                                                                        </svg>
                                                                      </StyledSvg>
                                                                    </InlineSvg>
                                                                  </div>
                                                                </StyledChevron>
                                                              </div>
                                                            </StyledHeaderItem>
                                                          </HeaderItem>
                                                        </ForwardRef>
                                                      </StyledHeaderItem>
                                                    </div>
                                                  </Actor>
                                                </div>
                                              </Component>
                                            </AutoCompleteRoot>
                                          </DropdownMenu>
                                        </AutoComplete>
                                      </DropdownAutoCompleteMenu>
                                    </DropdownAutoComplete>
                                  </StyledDropdownAutoComplete>
                                </FetchOrganizationEnvironments>
                              </withApi(FetchOrganizationEnvironments)>
                            </MultipleEnvironmentSelector>
                          </withApi(MultipleEnvironmentSelector)>
                        </div>
                      </HeaderItemPosition>
                      <HeaderSeparator>
                        <Base
                          className="css-zkrb0n-HeaderSeparator elp5f3l0"
                        >
                          <div
                            className="css-zkrb0n-HeaderSeparator elp5f3l0"
                            is={null}
                          />
                        </Base>
                      </HeaderSeparator>
                      <HeaderItemPosition>
                        <div
                          className="css-5udiwc-HeaderItemPosition e165b9e40"
                        >
                          <TimeRangeSelector
                            end={null}
                            key="period:14d-start:null-end:null-utc:true"
                            onChange={[Function]}
                            onUpdate={[Function]}
                            relative="14d"
                            showAbsolute={true}
                            showRelative={true}
                            start={null}
                            utc={true}
                          >
                            <DropdownMenu
                              closeOnEscape={true}
                              isOpen={false}
                              keepMenuOpen={true}
                              onClose={[Function]}
                              onOpen={[Function]}
                            >
                              <TimeRangeRoot>
                                <div
                                  className="css-1lz3nth-TimeRangeRoot e1u8612l0"
                                >
                                  <StyledHeaderItem
                                    allowClear={false}
                                    hasChanges={false}
                                    hasSelected={true}
                                    icon={
                                      <StyledInlineSvg
                                        src="icon-calendar"
                                      />
                                    }
                                    innerRef={[Function]}
                                    isOpen={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onSubmit={[Function]}
                                    style={
                                      Object {
                                        "outline": "none",
                                      }
                                    }
                                    tabIndex={-1}
                                  >
                                    <ForwardRef
                                      allowClear={false}
                                      className="css-22y332-StyledHeaderItem e1u8612l1"
                                      hasChanges={false}
                                      hasSelected={true}
                                      icon={
                                        <StyledInlineSvg
                                          src="icon-calendar"
                                        />
                                      }
                                      isOpen={false}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      onSubmit={[Function]}
                                      style={
                                        Object {
                                          "outline": "none",
                                        }
                                      }
                                      tabIndex={-1}
                                    >
                                      <HeaderItem
                                        allowClear={false}
                                        className="css-22y332-StyledHeaderItem e1u8612l1"
                                        hasChanges={false}
                                        hasSelected={true}
                                        icon={
                                          <StyledInlineSvg
                                            src="icon-calendar"
                                          />
                                        }
                                        innerRef={[Function]}
                                        isOpen={false}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        onSubmit={[Function]}
                                        style={
                                          Object {
                                            "outline": "none",
                                          }
                                        }
                                        tabIndex={-1}
                                      >
                                        <StyledHeaderItem
                                          className="css-22y332-StyledHeaderItem e1u8612l1"
                                          hasSelected={true}
                                          innerRef={[Function]}
                                          isOpen={false}
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          style={
                                            Object {
                                              "outline": "none",
                                            }
                                          }
                                          tabIndex={-1}
                                        >
                                          <div
                                            className="e1u8612l1 css-xvcre7-StyledHeaderItem-StyledHeaderItem enk2k7v0"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            style={
                                              Object {
                                                "outline": "none",
                                              }
                                            }
                                            tabIndex={-1}
                                          >
                                            <IconContainer
                                              hasSelected={true}
                                            >
                                              <span
                                                className="css-mzutvw-IconContainer enk2k7v2"
                                              >
                                                <StyledInlineSvg
                                                  src="icon-calendar"
                                                >
                                                  <InlineSvg
                                                    className="css-1ctth4-StyledInlineSvg e1u8612l2"
                                                    src="icon-calendar"
                                                  >
                                                    <StyledSvg
                                                      className="css-1ctth4-StyledInlineSvg e1u8612l2"
                                                      height="1em"
                                                      viewBox={Object {}}
                                                      width="1em"
                                                    >
                                                      <svg
                                                        className="e1u8612l2 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
                                                        height="1em"
                                                        viewBox={Object {}}
                                                        width="1em"
                                                      >
                                                        <use
                                                          href="#test"
                                                          xlinkHref="#test"
                                                        />
                                                      </svg>
                                                    </StyledSvg>
                                                  </InlineSvg>
                                                </StyledInlineSvg>
                                              </span>
                                            </IconContainer>
                                            <Content>
                                              <div
                                                className="css-1yquznf-Content enk2k7v1"
                                              >
                                                Last 14 days
                                              </div>
                                            </Content>
                                            <StyledChevron
                                              hasChanges={false}
                                              isOpen={false}
                                              onClick={[Function]}
                                            >
                                              <div
                                                className="css-ft4nwy-StyledChevron enk2k7v4"
                                                onClick={[Function]}
                                              >
                                                <InlineSvg
                                                  src="icon-chevron-down"
                                                >
                                                  <StyledSvg
                                                    height="1em"
                                                    viewBox={Object {}}
                                                    width="1em"
                                                  >
                                                    <svg
                                                      className="css-ryh69w-StyledSvg e2idor0"
                                                      height="1em"
                                                      viewBox={Object {}}
                                                      width="1em"
                                                    >
                                                      <use
                                                        href="#test"
                                                        xlinkHref="#test"
                                                      />
                                                    </svg>
                                                  </StyledSvg>
                                                </InlineSvg>
                                              </div>
                                            </StyledChevron>
                                          </div>
                                        </StyledHeaderItem>
                                      </HeaderItem>
                                    </ForwardRef>
                                  </StyledHeaderItem>
                                </div>
                              </TimeRangeRoot>
                            </DropdownMenu>
                          </TimeRangeSelector>
                        </div>
                      </HeaderItemPosition>
                    </div>
                  </Base>
                </Header>
              </GlobalSelectionHeader>
            </withGlobalSelection(GlobalSelectionHeader)>
          </withRouter(withGlobalSelection(GlobalSelectionHeader))>
          <PageContent>
            <div
              className="css-rejmra-PageContent e6lvex70"
            >
              <UserFeedbackContainer
                location={
                  Object {
                    "query": Object {},
                    "search": "",
                  }
                }
                pageLinks="<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"0:0:1\\", <https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"0:100:0\\""
                params={
                  Object {
                    "orgId": "org-slug",
                  }
                }
                status="unresolved"
              >
                <div>
                  <div
                    className="row"
                  >
                    <div
                      className="col-sm-9"
                      style={
                        Object {
                          "marginBottom": "5px",
                        }
                      }
                    >
                      <PageHeading
                        withMargins={true}
                      >
                        <Wrapper
                          withMargins={true}
                        >
                          <h1
                            className="css-13ev48w-Wrapper e1f8hk460"
                          >
                            User Feedback
                          </h1>
                        </Wrapper>
                      </PageHeading>
                    </div>
                    <div
                      className="col-sm-3"
                      style={
                        Object {
                          "marginTop": "4px",
                          "textAlign": "right",
                        }
                      }
                    >
                      <div
                        className="btn-group"
                      >
                        <Link
                          className="btn btn-sm btn-default active"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to={
                            Object {
                              "pathname": undefined,
                              "query": Object {},
                            }
                          }
                        >
                          <a
                            className="btn btn-sm btn-default active"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            Unresolved
                          </a>
                        </Link>
                        <Link
                          className="btn btn-sm btn-default"
                          onlyActiveOnIndex={false}
                          style={Object {}}
                          to={
                            Object {
                              "pathname": undefined,
                              "query": Object {
                                "status": "",
                              },
                            }
                          }
                        >
                          <a
                            className="btn btn-sm btn-default"
                            onClick={[Function]}
                            style={Object {}}
                          >
                            All Issues
                          </a>
                        </Link>
                      </div>
                    </div>
                  </div>
                  <Panel>
                    <Component
                      className="css-yahxlu-Panel e1laxa7d0"
                    >
                      <div
                        className="css-yahxlu-Panel e1laxa7d0"
                      >
                        <PanelBody
                          className="issue-list"
                          direction="column"
                          disablePadding={true}
                          flex={false}
                        >
                          <div
                            className="css-9vq8an-textStyles issue-list"
                          >
                            <CompactIssue
                              data={
                                Object {
                                  "assignedTo": null,
                                  "id": "1",
                                  "project": Object {
                                    "id": "2",
                                    "slug": "project-slug",
                                  },
                                  "stats": Object {
                                    "24h": Array [
                                      Array [
                                        1517281200,
                                        2,
                                      ],
                                      Array [
                                        1517310000,
                                        1,
                                      ],
                                    ],
                                    "30d": Array [
                                      Array [
                                        1514764800,
                                        1,
                                      ],
                                      Array [
                                        1515024000,
                                        122,
                                      ],
                                    ],
                                  },
                                  "tags": Array [],
                                }
                              }
                              id="1"
                              key="123"
                              orgId="org-slug"
                              projectId="project-slug"
                            >
                              <PanelItem
                                className="issue level-undefined"
                                direction="column"
                                p={2}
                                style={
                                  Object {
                                    "paddingBottom": "6px",
                                    "paddingTop": "12px",
                                  }
                                }
                              >
                                <Base
                                  className="issue level-undefined css-1cf8lr1-PanelItem eo8n7lk0"
                                  direction="column"
                                  p={2}
                                  style={
                                    Object {
                                      "paddingBottom": "6px",
                                      "paddingTop": "12px",
                                    }
                                  }
                                >
                                  <div
                                    className="issue level-undefined css-1cf8lr1-PanelItem eo8n7lk0"
                                    is={null}
                                    style={
                                      Object {
                                        "paddingBottom": "6px",
                                        "paddingTop": "12px",
                                      }
                                    }
                                  >
                                    <CompactIssueHeader
                                      data={
                                        Object {
                                          "assignedTo": null,
                                          "id": "1",
                                          "project": Object {
                                            "id": "2",
                                            "slug": "project-slug",
                                          },
                                          "stats": Object {
                                            "24h": Array [
                                              Array [
                                                1517281200,
                                                2,
                                              ],
                                              Array [
                                                1517310000,
                                                1,
                                              ],
                                            ],
                                            "30d": Array [
                                              Array [
                                                1514764800,
                                                1,
                                              ],
                                              Array [
                                                1515024000,
                                                122,
                                              ],
                                            ],
                                          },
                                          "tags": Array [],
                                        }
                                      }
                                      orgId="org-slug"
                                      projectId="project-slug"
                                    >
                                      <Flex
                                        align="center"
                                      >
                                        <Base
                                          align="center"
                                          className="css-5ipae5"
                                        >
                                          <div
                                            className="css-5ipae5"
                                            is={null}
                                          >
                                            <Box
                                              mr={1}
                                            >
                                              <Base
                                                className="css-xgysgc"
                                                mr={1}
                                              >
                                                <div
                                                  className="css-xgysgc"
                                                  is={null}
                                                >
                                                  <span
                                                    className="error-level truncate"
                                                  />
                                                </div>
                                              </Base>
                                            </Box>
                                            <h3
                                              className="truncate"
                                            >
                                              <ProjectLink
                                                to="/org-slug/project-slug/issues/1/"
                                              >
                                                <Link
                                                  onlyActiveOnIndex={false}
                                                  style={Object {}}
                                                  to="/org-slug/project-slug/issues/1/"
                                                >
                                                  <a
                                                    onClick={[Function]}
                                                    style={Object {}}
                                                  >
                                                    <span
                                                      className="icon icon-soundoff"
                                                    />
                                                    <span
                                                      className="icon icon-star-solid"
                                                    />
                                                    <span />
                                                  </a>
                                                </Link>
                                              </ProjectLink>
                                            </h3>
                                          </div>
                                        </Base>
                                      </Flex>
                                      <div
                                        className="event-extra"
                                      >
                                        <span
                                          className="project-name"
                                        >
                                          <ProjectLink
                                            to="/org-slug/project-slug/"
                                          >
                                            <Link
                                              onlyActiveOnIndex={false}
                                              style={Object {}}
                                              to="/org-slug/project-slug/"
                                            >
                                              <a
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                project-slug
                                              </a>
                                            </Link>
                                          </ProjectLink>
                                        </span>
                                        <span>
                                          <Link
                                            className="comments"
                                            to="/org-slug/project-slug/issues/1/activity/"
                                          >
                                            <Link
                                              className="comments"
                                              onlyActiveOnIndex={false}
                                              style={Object {}}
                                              to="/org-slug/project-slug/issues/1/activity/"
                                            >
                                              <a
                                                className="comments"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="icon icon-comments"
                                                  style={Object {}}
                                                />
                                                <span
                                                  className="tag-count"
                                                />
                                              </a>
                                            </Link>
                                          </Link>
                                        </span>
                                        <span
                                          className="culprit"
                                        />
                                      </div>
                                    </CompactIssueHeader>
                                    <EventUserFeedback
                                      issueId="1"
                                      orgId="org-slug"
                                      projectId="project-slug"
                                      report={
                                        Object {
                                          "comments": "Something bad happened",
                                          "dateCreated": "2018-12-20T00:00:00.000Z",
                                          "email": "lyn@sentry.io",
                                          "event": Object {
                                            "eventID": "12345678901234567890123456789012",
                                            "groupID": "1",
                                            "id": "1",
                                            "message": "ApiException",
                                          },
                                          "id": "123",
                                          "issue": Object {
                                            "assignedTo": null,
                                            "id": "1",
                                            "project": Object {
                                              "id": "2",
                                              "slug": "project-slug",
                                            },
                                            "stats": Object {
                                              "24h": Array [
                                                Array [
                                                  1517281200,
                                                  2,
                                                ],
                                                Array [
                                                  1517310000,
                                                  1,
                                                ],
                                              ],
                                              "30d": Array [
                                                Array [
                                                  1514764800,
                                                  1,
                                                ],
                                                Array [
                                                  1515024000,
                                                  122,
                                                ],
                                              ],
                                            },
                                            "tags": Array [],
                                          },
                                          "name": "Lyn",
                                        }
                                      }
                                    >
                                      <div
                                        className="user-report"
                                      >
                                        <div
                                          className="activity-container"
                                        >
                                          <ul
                                            className="activity"
                                          >
                                            <li
                                              className="activity-note"
                                            >
                                              <Avatar
                                                className="avatar"
                                                hasTooltip={false}
                                                size={38}
                                                user={
                                                  Object {
                                                    "comments": "Something bad happened",
                                                    "dateCreated": "2018-12-20T00:00:00.000Z",
                                                    "email": "lyn@sentry.io",
                                                    "event": Object {
                                                      "eventID": "12345678901234567890123456789012",
                                                      "groupID": "1",
                                                      "id": "1",
                                                      "message": "ApiException",
                                                    },
                                                    "id": "123",
                                                    "issue": Object {
                                                      "assignedTo": null,
                                                      "id": "1",
                                                      "project": Object {
                                                        "id": "2",
                                                        "slug": "project-slug",
                                                      },
                                                      "stats": Object {
                                                        "24h": Array [
                                                          Array [
                                                            1517281200,
                                                            2,
                                                          ],
                                                          Array [
                                                            1517310000,
                                                            1,
                                                          ],
                                                        ],
                                                        "30d": Array [
                                                          Array [
                                                            1514764800,
                                                            1,
                                                          ],
                                                          Array [
                                                            1515024000,
                                                            122,
                                                          ],
                                                        ],
                                                      },
                                                      "tags": Array [],
                                                    },
                                                    "name": "Lyn",
                                                  }
                                                }
                                              >
                                                <UserAvatar
                                                  className="avatar"
                                                  gravatar={false}
                                                  hasTooltip={false}
                                                  size={38}
                                                  user={
                                                    Object {
                                                      "comments": "Something bad happened",
                                                      "dateCreated": "2018-12-20T00:00:00.000Z",
                                                      "email": "lyn@sentry.io",
                                                      "event": Object {
                                                        "eventID": "12345678901234567890123456789012",
                                                        "groupID": "1",
                                                        "id": "1",
                                                        "message": "ApiException",
                                                      },
                                                      "id": "123",
                                                      "issue": Object {
                                                        "assignedTo": null,
                                                        "id": "1",
                                                        "project": Object {
                                                          "id": "2",
                                                          "slug": "project-slug",
                                                        },
                                                        "stats": Object {
                                                          "24h": Array [
                                                            Array [
                                                              1517281200,
                                                              2,
                                                            ],
                                                            Array [
                                                              1517310000,
                                                              1,
                                                            ],
                                                          ],
                                                          "30d": Array [
                                                            Array [
                                                              1514764800,
                                                              1,
                                                            ],
                                                            Array [
                                                              1515024000,
                                                              122,
                                                            ],
                                                          ],
                                                        },
                                                        "tags": Array [],
                                                      },
                                                      "name": "Lyn",
                                                    }
                                                  }
                                                >
                                                  <BaseAvatar
                                                    className="avatar"
                                                    gravatarId="lyn@sentry.io"
                                                    hasTooltip={false}
                                                    letterId="lyn@sentry.io"
                                                    round={true}
                                                    size={38}
                                                    style={Object {}}
                                                    title="Lyn"
                                                    tooltip="Lyn (lyn@sentry.io)"
                                                    type="letter_avatar"
                                                    uploadPath="avatar"
                                                  >
                                                    <Tooltip
                                                      disabled={true}
                                                      title="Lyn (lyn@sentry.io)"
                                                    >
                                                      <StyledBaseAvatar
                                                        className="avatar avatar"
                                                        loaded={true}
                                                        round={true}
                                                        style={
                                                          Object {
                                                            "height": "38px",
                                                            "width": "38px",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="avatar avatar css-3f9bmx-StyledBaseAvatar e1z0ohzl0"
                                                          style={
                                                            Object {
                                                              "height": "38px",
                                                              "width": "38px",
                                                            }
                                                          }
                                                        >
                                                          <LetterAvatar
                                                            displayName="Lyn"
                                                            identifier="lyn@sentry.io"
                                                            round={true}
                                                          >
                                                            <Svg
                                                              round={true}
                                                              viewBox="0 0 120 120"
                                                            >
                                                              <svg
                                                                className="css-1r4mnb9-Svg e1knxa8x0"
                                                                viewBox="0 0 120 120"
                                                              >
                                                                <rect
                                                                  fill="#57b1be"
                                                                  height="120"
                                                                  rx="15"
                                                                  ry="15"
                                                                  width="120"
                                                                  x="0"
                                                                  y="0"
                                                                />
                                                                <text
                                                                  fill="#FFFFFF"
                                                                  fontSize="65"
                                                                  style={
                                                                    Object {
                                                                      "dominantBaseline": "central",
                                                                    }
                                                                  }
                                                                  textAnchor="middle"
                                                                  x="50%"
                                                                  y="50%"
                                                                >
                                                                  L
                                                                </text>
                                                              </svg>
                                                            </Svg>
                                                          </LetterAvatar>
                                                        </span>
                                                      </StyledBaseAvatar>
                                                    </Tooltip>
                                                  </BaseAvatar>
                                                </UserAvatar>
                                              </Avatar>
                                              <div
                                                className="activity-bubble"
                                              >
                                                <div>
                                                  <TimeSince
                                                    date="2018-12-20T00:00:00.000Z"
                                                    suffix="ago"
                                                  >
                                                    <time
                                                      dateTime="2018-12-20T00:00:00.000Z"
                                                      title="December 20, 2018 12:00 AM UTC"
                                                    >
                                                      in a year
                                                    </time>
                                                  </TimeSince>
                                                  <div
                                                    className="activity-author"
                                                  >
                                                    Lyn
                                                    <small>
                                                      lyn@sentry.io
                                                    </small>
                                                    <small>
                                                      <Link
                                                        to="/org-slug/project-slug/issues/1/events/1"
                                                      >
                                                        <Link
                                                          onlyActiveOnIndex={false}
                                                          style={Object {}}
                                                          to="/org-slug/project-slug/issues/1/events/1"
                                                        >
                                                          <a
                                                            onClick={[Function]}
                                                            style={Object {}}
                                                          >
                                                            View event
                                                          </a>
                                                        </Link>
                                                      </Link>
                                                    </small>
                                                  </div>
                                                  <p
                                                    dangerouslySetInnerHTML={
                                                      Object {
                                                        "__html": "Something bad happened",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </div>
                                            </li>
                                          </ul>
                                        </div>
                                      </div>
                                    </EventUserFeedback>
                                  </div>
                                </Base>
                              </PanelItem>
                            </CompactIssue>
                          </div>
                        </PanelBody>
                      </div>
                    </Component>
                  </Panel>
                  <Pagination
                    className="stream-pagination"
                    onCursor={[Function]}
                    pageLinks="<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"0:0:1\\", <https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"0:100:0\\""
                  >
                    <div
                      className="clearfix stream-pagination"
                    >
                      <div
                        className="btn-group pull-right"
                      >
                        <a
                          className="btn btn-default btn-lg prev disabled"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <span
                            className="icon-arrow-left"
                            title="Previous"
                          />
                        </a>
                        <a
                          className="btn btn-default btn-lg next"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <span
                            className="icon-arrow-right"
                            title="Next"
                          />
                        </a>
                      </div>
                    </div>
                  </Pagination>
                </div>
              </UserFeedbackContainer>
            </div>
          </PageContent>
        </Feature>
      </FeatureContainer>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</OrganizationUserFeedback>
`;
