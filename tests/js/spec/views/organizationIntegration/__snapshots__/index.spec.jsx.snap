// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationIntegration render() with one integration renders 1`] = `
<OrganizationIntegration
  params={
    Object {
      "orgId": "org-slug",
      "providerKey": "github",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="GitHub Integration - Sentry"
  >
    <DocumentTitle
      title="GitHub Integration - Sentry"
    >
      <SettingsPageHeading
        icon={
          <PluginIcon
            pluginId="github"
            size={28}
          />
        }
        title="GitHub"
      >
        <Wrapper>
          <div
            className="css-1pnrn3o-Wrapper e1kblvez0"
          >
            <Flex
              align="center"
            >
              <Base
                align="center"
                className="css-5ipae5"
              >
                <div
                  className="css-5ipae5"
                  is={null}
                >
                  <Box
                    pr={1}
                  >
                    <Base
                      className="css-ioegso"
                      pr={1}
                    >
                      <div
                        className="css-ioegso"
                        is={null}
                      >
                        <PluginIcon
                          pluginId="github"
                          size={28}
                        >
                          <IntegrationIcon
                            image={Object {}}
                            size={28}
                          >
                            <div
                              className="css-1g0dosy-IntegrationIcon e1bhjds90"
                              size={28}
                            />
                          </IntegrationIcon>
                        </PluginIcon>
                      </div>
                    </Base>
                  </Box>
                  <Title>
                    <div
                      className="css-zmdcxu-Title e1kblvez1"
                    >
                      GitHub
                    </div>
                  </Title>
                </div>
              </Base>
            </Flex>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <Panel>
        <StyledPanel>
          <div
            className="css-17lswg2-StyledPanel e1laxa7d0"
          >
            <PanelHeader
              disablePadding={true}
              hasButtons={true}
            >
              <StyledPanelHeader
                disablePadding={true}
                hasButtons={true}
              >
                <Component
                  className="css-72tw6l-StyledPanelHeader-getPadding e1p8v8nv0"
                  disablePadding={true}
                  hasButtons={true}
                >
                  <Flex
                    align="center"
                    className="css-72tw6l-StyledPanelHeader-getPadding e1p8v8nv0"
                    justify="space-between"
                  >
                    <Base
                      align="center"
                      className="e1p8v8nv0 css-ce5pxn-StyledPanelHeader-getPadding"
                      justify="space-between"
                    >
                      <div
                        className="e1p8v8nv0 css-ce5pxn-StyledPanelHeader-getPadding"
                        is={null}
                      >
                        <Box
                          px={2}
                        >
                          <Base
                            className="css-17pfgr6"
                            px={2}
                          >
                            <div
                              className="css-17pfgr6"
                              is={null}
                            >
                              Installation
                            </div>
                          </Base>
                        </Box>
                        <Box
                          mr={1}
                        >
                          <Base
                            className="css-xgysgc"
                            mr={1}
                          >
                            <div
                              className="css-xgysgc"
                              is={null}
                            >
                              <Button
                                disabled={false}
                                onClick={[Function]}
                                size="xsmall"
                              >
                                <StyledButton
                                  disabled={false}
                                  onClick={[Function]}
                                  role="button"
                                  size="xsmall"
                                >
                                  <Component
                                    className="css-dkprmi-StyledButton-getColors e17811v30"
                                    disabled={false}
                                    onClick={[Function]}
                                    role="button"
                                    size="xsmall"
                                  >
                                    <button
                                      className="css-dkprmi-StyledButton-getColors e17811v30"
                                      disabled={false}
                                      onClick={[Function]}
                                      role="button"
                                      size="xsmall"
                                    >
                                      <ButtonLabel
                                        size="xsmall"
                                      >
                                        <Component
                                          className="css-9vplug-ButtonLabel e17811v31"
                                          size="xsmall"
                                        >
                                          <Flex
                                            align="center"
                                            className="css-9vplug-ButtonLabel e17811v31"
                                            size="xsmall"
                                          >
                                            <Base
                                              align="center"
                                              className="e17811v31 css-esdzbq-ButtonLabel"
                                              size="xsmall"
                                            >
                                              <div
                                                className="e17811v31 css-esdzbq-ButtonLabel"
                                                is={null}
                                                size="xsmall"
                                              >
                                                <span
                                                  className="icon icon-add"
                                                />
                                                 
                                                Add Installation
                                              </div>
                                            </Base>
                                          </Flex>
                                        </Component>
                                      </ButtonLabel>
                                    </button>
                                  </Component>
                                </StyledButton>
                              </Button>
                            </div>
                          </Base>
                        </Box>
                      </div>
                    </Base>
                  </Flex>
                </Component>
              </StyledPanelHeader>
            </PanelHeader>
            <PanelBody
              direction="column"
              disablePadding={true}
              flex={false}
            >
              <div
                className="css-9vq8an-textStyles"
              >
                <InstalledIntegration
                  integration={
                    Object {
                      "domain_name": "gtithub.com/test-integration",
                      "icon": "http://example.com/integration_icon.png",
                      "id": "1",
                      "name": "Test Integration",
                      "provider": Object {
                        "key": "github",
                        "name": "GitHub",
                      },
                    }
                  }
                  key="1"
                  onRemove={[Function]}
                  provider={
                    Object {
                      "canAdd": true,
                      "config": Array [],
                      "key": "github",
                      "metadata": Object {
                        "aspects": Object {
                          "alert_link": Object {
                            "link": "/url/with/params/{orgId}/",
                            "text": "This is a *alert link* with markdown formatting",
                          },
                        },
                        "author": "Morty",
                        "description": "*markdown* formatted _description_",
                        "issue_url": "http://example.com/integration_issue_url",
                        "noun": "Installation",
                        "source_url": "http://example.com/integration_source_url",
                      },
                      "name": "GitHub",
                      "setupDialog": Object {
                        "height": 100,
                        "url": "/github-integration-setup-uri/",
                        "width": 100,
                      },
                    }
                  }
                >
                  <PanelItem
                    key="1"
                    p={0}
                    py={2}
                  >
                    <StyledPanelItem
                      p={0}
                      py={2}
                    >
                      <Base
                        className="css-1uon4oe-StyledPanelItem eo8n7lk0"
                        p={0}
                        py={2}
                      >
                        <div
                          className="css-1uon4oe-StyledPanelItem eo8n7lk0"
                          is={null}
                        >
                          <Box
                            pl={2}
                          >
                            <Base
                              className="css-wwmrss"
                              pl={2}
                            >
                              <div
                                className="css-wwmrss"
                                is={null}
                              >
                                <IntegrationIcon
                                  src="http://example.com/integration_icon.png"
                                >
                                  <img
                                    className="css-lx37iq-IntegrationIcon e13u596k0"
                                    src="http://example.com/integration_icon.png"
                                  />
                                </IntegrationIcon>
                              </div>
                            </Base>
                          </Box>
                          <Box
                            flex={1}
                            px={2}
                          >
                            <Base
                              className="css-pcjga5"
                              flex={1}
                              px={2}
                            >
                              <div
                                className="css-pcjga5"
                                is={null}
                              >
                                <IntegrationName>
                                  <div
                                    className="css-1daz7ru-IntegrationName e13u596k1"
                                  >
                                    Test Integration
                                  </div>
                                </IntegrationName>
                                <DomainName>
                                  <div
                                    className="css-1ay0cji-DomainName e13u596k2"
                                  >
                                    gtithub.com/test-integration
                                  </div>
                                </DomainName>
                              </div>
                            </Base>
                          </Box>
                          <Box
                            mr={1}
                            pr={2}
                          >
                            <Base
                              className="css-3n6m02"
                              mr={1}
                              pr={2}
                            >
                              <div
                                className="css-3n6m02"
                                is={null}
                              >
                                <Confirm
                                  cancelText="Cancel"
                                  confirmText="Confirm"
                                  message="Removing this inegration will disable the integration for all projects. Are you sure you want to remove this integration?"
                                  onConfirm={[Function]}
                                  priority="primary"
                                >
                                  <Button
                                    disabled={false}
                                    onClick={[Function]}
                                    size="small"
                                  >
                                    <StyledButton
                                      disabled={false}
                                      onClick={[Function]}
                                      role="button"
                                      size="small"
                                    >
                                      <Component
                                        className="css-dkprmi-StyledButton-getColors e17811v30"
                                        disabled={false}
                                        onClick={[Function]}
                                        role="button"
                                        size="small"
                                      >
                                        <button
                                          className="css-dkprmi-StyledButton-getColors e17811v30"
                                          disabled={false}
                                          onClick={[Function]}
                                          role="button"
                                          size="small"
                                        >
                                          <ButtonLabel
                                            size="small"
                                          >
                                            <Component
                                              className="css-179w01k-ButtonLabel e17811v31"
                                              size="small"
                                            >
                                              <Flex
                                                align="center"
                                                className="css-179w01k-ButtonLabel e17811v31"
                                                size="small"
                                              >
                                                <Base
                                                  align="center"
                                                  className="e17811v31 css-8mahft-ButtonLabel"
                                                  size="small"
                                                >
                                                  <div
                                                    className="e17811v31 css-8mahft-ButtonLabel"
                                                    is={null}
                                                    size="small"
                                                  >
                                                    <span
                                                      className="icon icon-trash"
                                                      style={
                                                        Object {
                                                          "margin": 0,
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Base>
                                              </Flex>
                                            </Component>
                                          </ButtonLabel>
                                        </button>
                                      </Component>
                                    </StyledButton>
                                  </Button>
                                  <Modal
                                    animation={false}
                                    autoFocus={true}
                                    backdrop={true}
                                    bsClass="modal"
                                    dialogComponentClass={[Function]}
                                    enforceFocus={true}
                                    keyboard={true}
                                    manager={
                                      ModalManager {
                                        "add": [Function],
                                        "containers": Array [],
                                        "data": Array [],
                                        "handleContainerOverflow": true,
                                        "hideSiblingNodes": true,
                                        "isTopModal": [Function],
                                        "modals": Array [],
                                        "remove": [Function],
                                      }
                                    }
                                    onHide={[Function]}
                                    renderBackdrop={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  >
                                    <Modal
                                      autoFocus={true}
                                      backdrop={true}
                                      backdropClassName="modal-backdrop"
                                      containerClassName="modal-open"
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onEntering={[Function]}
                                      onExited={[Function]}
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    />
                                  </Modal>
                                </Confirm>
                              </div>
                            </Base>
                          </Box>
                        </div>
                      </Base>
                    </StyledPanelItem>
                  </PanelItem>
                </InstalledIntegration>
              </div>
            </PanelBody>
          </div>
        </StyledPanel>
      </Panel>
      <AlertLink
        to="/url/with/params/org-slug/"
      >
        <Component
          className="css-bvjbpd-AlertLink e1fthm6j2"
          to="/url/with/params/org-slug/"
        >
          <Link
            className="css-bvjbpd-AlertLink e1fthm6j2"
            to="/url/with/params/org-slug/"
          >
            <Link
              className="css-bvjbpd-AlertLink e1fthm6j2"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/url/with/params/org-slug/"
            >
              <a
                className="css-bvjbpd-AlertLink e1fthm6j2"
                onClick={[Function]}
                style={Object {}}
              >
                <AlertLinkText>
                  <div
                    className="css-19z7wog-AlertLinkText e1fthm6j0"
                  >
                    <span
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "This is a <em>alert link</em> with markdown formatting",
                        }
                      }
                    />
                  </div>
                </AlertLinkText>
                <InlineSvg
                  size="1em"
                  src="icon-chevron-right"
                >
                  <StyledSvg
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <svg
                      className="css-ryh69w-StyledSvg e2idor0"
                      height="1em"
                      viewBox={Object {}}
                      width="1em"
                    >
                      <use
                        href="#test"
                        xlinkHref="#test"
                      />
                    </svg>
                  </StyledSvg>
                </InlineSvg>
              </a>
            </Link>
          </Link>
        </Component>
      </AlertLink>
      <hr />
      <h5>
        GitHub Integration
      </h5>
      <IntegrationDetails
        author="Morty"
        links={
          Array [
            Object {
              "href": "http://example.com/integration_issue_url",
              "title": "Report an Issue",
            },
            Object {
              "href": "http://example.com/integration_source_url",
              "title": "View Source",
            },
          ]
        }
        markdownDescription="*markdown* formatted _description_"
      >
        <Details>
          <Base
            className="css-16wp28j-Details e58h7zp0"
          >
            <div
              className="css-16wp28j-Details e58h7zp0"
              is={null}
            >
              <Box
                width={0.625}
              >
                <Base
                  className="css-dydpyx"
                  width={0.625}
                >
                  <div
                    className="css-dydpyx"
                    is={null}
                  >
                    <Description
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<p><em>markdown</em> formatted <em>description</em></p>
",
                        }
                      }
                    >
                      <div
                        className="css-i2iqfw-Description e58h7zp1"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<p><em>markdown</em> formatted <em>description</em></p>
",
                          }
                        }
                      />
                    </Description>
                    <AuthorName>
                      <div
                        className="css-agaydm-AuthorName e58h7zp2"
                      >
                        By Morty
                      </div>
                    </AuthorName>
                  </div>
                </Base>
              </Box>
              <Box
                ml={60}
              >
                <Base
                  className="css-vgctkd"
                  ml={60}
                >
                  <div
                    className="css-vgctkd"
                    is={null}
                  >
                    <MetadataLink
                      href="http://example.com/integration_issue_url"
                      key="http://example.com/integration_issue_url"
                    >
                      <a
                        className="css-5qmaie-MetadataLink e58h7zp3"
                        href="http://example.com/integration_issue_url"
                      >
                        Report an Issue
                      </a>
                    </MetadataLink>
                    <MetadataLink
                      href="http://example.com/integration_source_url"
                      key="http://example.com/integration_source_url"
                    >
                      <a
                        className="css-5qmaie-MetadataLink e58h7zp3"
                        href="http://example.com/integration_source_url"
                      >
                        View Source
                      </a>
                    </MetadataLink>
                  </div>
                </Base>
              </Box>
            </div>
          </Base>
        </Details>
      </IntegrationDetails>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</OrganizationIntegration>
`;

exports[`OrganizationIntegration render() without any integrations Displays an error for an invalid provider key 1`] = `
<SideEffect(DocumentTitle)
  title="Global Integrations - Sentry"
>
  <LoadingError
    message="Invalid integration provider"
  />
</SideEffect(DocumentTitle)>
`;
