// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectPlugins renders 1`] = `
<ProjectPlugins
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  plugins={
    Array [
      Object {
        "assets": Array [],
        "author": Object {
          "name": "Sentry Team",
          "url": "https://github.com/getsentry/sentry",
        },
        "canDisable": true,
        "enabled": false,
        "hasConfiguration": true,
        "id": "amazon-sqs",
        "isHidden": false,
        "name": "Amazon SQS",
        "slug": "amazon-sqs",
        "version": "8.23.0.dev0",
      },
      Object {
        "assets": Array [],
        "author": Object {
          "name": "Sentry Team",
          "url": "https://github.com/getsentry/sentry",
        },
        "canDisable": false,
        "enabled": true,
        "hasConfiguration": false,
        "id": "github",
        "isHidden": false,
        "name": "GitHub",
        "slug": "github",
        "version": "8.23.0.dev0",
      },
      Object {
        "assets": Array [],
        "author": Object {
          "name": "Sentry Team",
          "url": "https://github.com/getsentry/sentry",
        },
        "canDisable": true,
        "enabled": false,
        "hasConfiguration": true,
        "id": "hidden-plugin",
        "isHidden": true,
        "name": "Hidden Plugin",
        "slug": "hidden-plugin",
        "version": "8.23.0.dev0",
      },
    ]
  }
>
  <Panel>
    <Component
      className="css-ietoyz-Panel e119nu470"
    >
      <div
        className="css-ietoyz-Panel e119nu470"
      >
        <PanelHeader>
          <div
            className="css-pi486d-PanelHeader en8g1d30"
          >
            <div>
              Legacy Integration
            </div>
            <div>
              Enabled
            </div>
          </div>
        </PanelHeader>
        <PanelBody
          flexible={false}
          withPadding={false}
        >
          <FlexBox
            withPadding={false}
          >
            <div
              className="css-1nto0rx-FlexBox e1vnwt6f0"
            >
              <PanelAlert
                type="warning"
              >
                <Component
                  className="css-148v945-PanelAlert e1cszazt0"
                  type="warning"
                >
                  <Alert
                    className="css-148v945-PanelAlert e1cszazt0"
                    icon={
                      <ForwardRef(IconFlag)
                        size="md"
                      />
                    }
                    system={true}
                    type="warning"
                  >
                    <Component
                      className="e1cszazt0 css-1vyifcv-Alert-PanelAlert ejthpj82"
                      icon={
                        <ForwardRef(IconFlag)
                          size="md"
                        />
                      }
                      system={true}
                      type="warning"
                    >
                      <div
                        className="ref-warning e1cszazt0 css-1vyifcv-Alert-PanelAlert ejthpj82"
                      >
                        <IconWrapper>
                          <span
                            className="css-1vsw7fz-IconWrapper ejthpj80"
                          >
                            <IconFlag
                              size="md"
                            >
                              <ForwardRef(SvgIcon)
                                size="md"
                              >
                                <svg
                                  fill="currentColor"
                                  height="20px"
                                  viewBox="0 0 16 16"
                                  width="20px"
                                >
                                  <path
                                    d="M1.69,8.43V2.22H13.53l-2,2.65a.78.78,0,0,0,0,.92l2,2.64Zm0-7.7A.74.74,0,0,0,.94.09.75.75,0,0,0,.19.84V15.16a.75.75,0,0,0,1.5,0V9.93H15.06a.75.75,0,0,0,.59-1.21L13,5.33l2.62-3.4a.73.73,0,0,0,.08-.79.75.75,0,0,0-.67-.42H1.69"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </IconFlag>
                          </span>
                        </IconWrapper>
                        <StyledTextBlock>
                          <span
                            className="css-6y2q80-StyledTextBlock ejthpj81"
                          >
                            <WithOrganizationMockWrapper
                              access={
                                Array [
                                  "org:integrations",
                                ]
                              }
                            >
                              <withConfig(Access)
                                access={
                                  Array [
                                    "org:integrations",
                                  ]
                                }
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                              >
                                <Access
                                  access={
                                    Array [
                                      "org:integrations",
                                    ]
                                  }
                                  config={
                                    Object {
                                      "features": Set {},
                                      "messages": Array [],
                                      "user": Object {
                                        "email": "foo@example.com",
                                        "flags": Object {
                                          "newsletter_consent_prompt": false,
                                        },
                                        "hasPasswordAuth": true,
                                        "id": "1",
                                        "isAuthenticated": true,
                                        "name": "Foo Bar",
                                        "options": Object {
                                          "timezone": "UTC",
                                        },
                                        "permissions": Set {},
                                        "username": "foo@example.com",
                                      },
                                    }
                                  }
                                  isSuperuser={false}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "experiments": Object {},
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  renderNoAccessMessage={false}
                                  requireAll={true}
                                >
                                  <span
                                    key="5"
                                  >
                                    <span
                                      key="0"
                                    >
                                      Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available. Visit the 
                                    </span>
                                    <Link
                                      key="2"
                                      to="/settings/org-slug/integrations"
                                    >
                                      <Link
                                        onlyActiveOnIndex={false}
                                        style={Object {}}
                                        to="/settings/org-slug/integrations"
                                      >
                                        <a
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <span
                                            key="1"
                                          >
                                            organization integrations
                                          </span>
                                        </a>
                                      </Link>
                                    </Link>
                                    <span
                                      key="3"
                                    >
                                       settings to manage them.
                                    </span>
                                  </span>
                                </Access>
                              </withConfig(Access)>
                            </WithOrganizationMockWrapper>
                          </span>
                        </StyledTextBlock>
                      </div>
                    </Component>
                  </Alert>
                </Component>
              </PanelAlert>
              <PanelItem
                key="amazon-sqs"
                p={2}
              >
                <div
                  className="css-hd0iky-PanelItem ej5ox20"
                >
                  <WithOrganizationMockWrapper
                    assets={Array []}
                    author={
                      Object {
                        "name": "Sentry Team",
                        "url": "https://github.com/getsentry/sentry",
                      }
                    }
                    canDisable={true}
                    enabled={false}
                    hasConfiguration={true}
                    id="amazon-sqs"
                    isHidden={false}
                    name="Amazon SQS"
                    params={
                      Object {
                        "orgId": "org-slug",
                        "projectId": "project-slug",
                      }
                    }
                    slug="amazon-sqs"
                    version="8.23.0.dev0"
                  >
                    <withProject(ProjectPluginRow)
                      assets={Array []}
                      author={
                        Object {
                          "name": "Sentry Team",
                          "url": "https://github.com/getsentry/sentry",
                        }
                      }
                      canDisable={true}
                      enabled={false}
                      hasConfiguration={true}
                      id="amazon-sqs"
                      isHidden={false}
                      name="Amazon SQS"
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "org:integrations",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "experiments": Object {},
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "active",
                            "name": "active",
                          },
                          "teams": Array [],
                        }
                      }
                      params={
                        Object {
                          "orgId": "org-slug",
                          "projectId": "project-slug",
                        }
                      }
                      slug="amazon-sqs"
                      version="8.23.0.dev0"
                    >
                      <ProjectPluginRow
                        assets={Array []}
                        author={
                          Object {
                            "name": "Sentry Team",
                            "url": "https://github.com/getsentry/sentry",
                          }
                        }
                        canDisable={true}
                        enabled={false}
                        hasConfiguration={true}
                        id="amazon-sqs"
                        isHidden={false}
                        name="Amazon SQS"
                        organization={
                          Object {
                            "access": Array [
                              "org:read",
                              "org:write",
                              "org:admin",
                              "org:integrations",
                              "project:read",
                              "project:write",
                              "project:admin",
                              "team:read",
                              "team:write",
                              "team:admin",
                            ],
                            "experiments": Object {},
                            "features": Array [],
                            "id": "3",
                            "name": "Organization Name",
                            "onboardingTasks": Array [],
                            "projects": Array [],
                            "scrapeJavaScript": true,
                            "slug": "org-slug",
                            "status": Object {
                              "id": "active",
                              "name": "active",
                            },
                            "teams": Array [],
                          }
                        }
                        params={
                          Object {
                            "orgId": "org-slug",
                            "projectId": "project-slug",
                          }
                        }
                        project={
                          Object {
                            "environments": Array [],
                            "hasAccess": true,
                            "id": "2",
                            "isBookmarked": false,
                            "isMember": true,
                            "name": "Project Name",
                            "slug": "project-slug",
                            "teams": Array [],
                          }
                        }
                        slug="amazon-sqs"
                        version="8.23.0.dev0"
                      >
                        <WithOrganizationMockWrapper
                          access={
                            Array [
                              "project:write",
                            ]
                          }
                        >
                          <withConfig(Access)
                            access={
                              Array [
                                "project:write",
                              ]
                            }
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "experiments": Object {},
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                          >
                            <Access
                              access={
                                Array [
                                  "project:write",
                                ]
                              }
                              config={
                                Object {
                                  "features": Set {},
                                  "messages": Array [],
                                  "user": Object {
                                    "email": "foo@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Foo Bar",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "permissions": Set {},
                                    "username": "foo@example.com",
                                  },
                                }
                              }
                              isSuperuser={false}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              renderNoAccessMessage={false}
                              requireAll={true}
                            >
                              <PluginItem
                                className="amazon-sqs"
                                key="amazon-sqs"
                              >
                                <div
                                  className="amazon-sqs css-efgwqc-PluginItem e1y7j6vq0"
                                >
                                  <PluginInfo>
                                    <div
                                      className="css-1jrzgda-PluginInfo e1y7j6vq2"
                                    >
                                      <StyledPluginIcon
                                        pluginId="amazon-sqs"
                                        size={48}
                                      >
                                        <div
                                          className="css-v1ot6-PluginIcon-StyledPluginIcon e1y7j6vq4"
                                          size={48}
                                        />
                                      </StyledPluginIcon>
                                      <PluginDescription>
                                        <div
                                          className="css-1rlsayk-PluginDescription e1y7j6vq1"
                                        >
                                          <PluginName>
                                            <div
                                              className="css-1rrljgj-PluginName e1y7j6vq3"
                                            >
                                              Amazon SQS 
                                              <Version>
                                                <span
                                                  className="css-1czymow-Version e1y7j6vq5"
                                                >
                                                  v8.23.0.dev0
                                                </span>
                                              </Version>
                                            </div>
                                          </PluginName>
                                          <div>
                                            <EmotionCssPropInternal
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "openInNewTab": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              css={
                                                Object {
                                                  "name": "1nx57m5-grayText",
                                                  "styles": "color:#979ba0;;label:grayText;",
                                                }
                                              }
                                              href="https://github.com/getsentry/sentry"
                                            >
                                              <ForwardRef(ExternalLink)
                                                className="css-1nx57m5-grayText"
                                                href="https://github.com/getsentry/sentry"
                                              >
                                                <a
                                                  className="css-1nx57m5-grayText"
                                                  href="https://github.com/getsentry/sentry"
                                                  rel="noreferrer noopener"
                                                  target="_blank"
                                                >
                                                  Sentry Team
                                                </a>
                                              </ForwardRef(ExternalLink)>
                                            </EmotionCssPropInternal>
                                            <span>
                                               
                                              ·
                                               
                                              <EmotionCssPropInternal
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
                                                css={
                                                  Object {
                                                    "name": "1nx57m5-grayText",
                                                    "styles": "color:#979ba0;;label:grayText;",
                                                  }
                                                }
                                                to="amazon-sqs"
                                              >
                                                <Link
                                                  className="css-1nx57m5-grayText"
                                                  onlyActiveOnIndex={false}
                                                  style={Object {}}
                                                  to="amazon-sqs"
                                                >
                                                  <a
                                                    className="css-1nx57m5-grayText"
                                                    onClick={[Function]}
                                                    style={Object {}}
                                                  >
                                                    Configure plugin
                                                  </a>
                                                </Link>
                                              </EmotionCssPropInternal>
                                            </span>
                                          </div>
                                        </div>
                                      </PluginDescription>
                                    </div>
                                  </PluginInfo>
                                  <ForwardRef
                                    isActive={false}
                                    isDisabled={false}
                                    size="lg"
                                    toggle={[Function]}
                                  >
                                    <Switch
                                      forwardRef={null}
                                      isActive={false}
                                      isDisabled={false}
                                      size="lg"
                                      toggle={[Function]}
                                    >
                                      <SwitchButton
                                        aria-checked={false}
                                        data-test-id="switch"
                                        isActive={false}
                                        isDisabled={false}
                                        onClick={[Function]}
                                        role="checkbox"
                                        size="lg"
                                        type="button"
                                      >
                                        <button
                                          aria-checked={false}
                                          className="css-18mwse8-SwitchButton ezmyi9u0"
                                          data-test-id="switch"
                                          onClick={[Function]}
                                          role="checkbox"
                                          size="lg"
                                          type="button"
                                        >
                                          <Toggle
                                            isActive={false}
                                            isDisabled={false}
                                            size="lg"
                                          >
                                            <span
                                              className="css-1wbwbmn-Toggle ezmyi9u1"
                                              size="lg"
                                            />
                                          </Toggle>
                                        </button>
                                      </SwitchButton>
                                    </Switch>
                                  </ForwardRef>
                                </div>
                              </PluginItem>
                            </Access>
                          </withConfig(Access)>
                        </WithOrganizationMockWrapper>
                      </ProjectPluginRow>
                    </withProject(ProjectPluginRow)>
                  </WithOrganizationMockWrapper>
                </div>
              </PanelItem>
              <PanelItem
                key="github"
                p={2}
              >
                <div
                  className="css-hd0iky-PanelItem ej5ox20"
                >
                  <WithOrganizationMockWrapper
                    assets={Array []}
                    author={
                      Object {
                        "name": "Sentry Team",
                        "url": "https://github.com/getsentry/sentry",
                      }
                    }
                    canDisable={false}
                    enabled={true}
                    hasConfiguration={false}
                    id="github"
                    isHidden={false}
                    name="GitHub"
                    params={
                      Object {
                        "orgId": "org-slug",
                        "projectId": "project-slug",
                      }
                    }
                    slug="github"
                    version="8.23.0.dev0"
                  >
                    <withProject(ProjectPluginRow)
                      assets={Array []}
                      author={
                        Object {
                          "name": "Sentry Team",
                          "url": "https://github.com/getsentry/sentry",
                        }
                      }
                      canDisable={false}
                      enabled={true}
                      hasConfiguration={false}
                      id="github"
                      isHidden={false}
                      name="GitHub"
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "org:integrations",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "experiments": Object {},
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "active",
                            "name": "active",
                          },
                          "teams": Array [],
                        }
                      }
                      params={
                        Object {
                          "orgId": "org-slug",
                          "projectId": "project-slug",
                        }
                      }
                      slug="github"
                      version="8.23.0.dev0"
                    >
                      <ProjectPluginRow
                        assets={Array []}
                        author={
                          Object {
                            "name": "Sentry Team",
                            "url": "https://github.com/getsentry/sentry",
                          }
                        }
                        canDisable={false}
                        enabled={true}
                        hasConfiguration={false}
                        id="github"
                        isHidden={false}
                        name="GitHub"
                        organization={
                          Object {
                            "access": Array [
                              "org:read",
                              "org:write",
                              "org:admin",
                              "org:integrations",
                              "project:read",
                              "project:write",
                              "project:admin",
                              "team:read",
                              "team:write",
                              "team:admin",
                            ],
                            "experiments": Object {},
                            "features": Array [],
                            "id": "3",
                            "name": "Organization Name",
                            "onboardingTasks": Array [],
                            "projects": Array [],
                            "scrapeJavaScript": true,
                            "slug": "org-slug",
                            "status": Object {
                              "id": "active",
                              "name": "active",
                            },
                            "teams": Array [],
                          }
                        }
                        params={
                          Object {
                            "orgId": "org-slug",
                            "projectId": "project-slug",
                          }
                        }
                        project={
                          Object {
                            "environments": Array [],
                            "hasAccess": true,
                            "id": "2",
                            "isBookmarked": false,
                            "isMember": true,
                            "name": "Project Name",
                            "slug": "project-slug",
                            "teams": Array [],
                          }
                        }
                        slug="github"
                        version="8.23.0.dev0"
                      >
                        <WithOrganizationMockWrapper
                          access={
                            Array [
                              "project:write",
                            ]
                          }
                        >
                          <withConfig(Access)
                            access={
                              Array [
                                "project:write",
                              ]
                            }
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "experiments": Object {},
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                          >
                            <Access
                              access={
                                Array [
                                  "project:write",
                                ]
                              }
                              config={
                                Object {
                                  "features": Set {},
                                  "messages": Array [],
                                  "user": Object {
                                    "email": "foo@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Foo Bar",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "permissions": Set {},
                                    "username": "foo@example.com",
                                  },
                                }
                              }
                              isSuperuser={false}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              renderNoAccessMessage={false}
                              requireAll={true}
                            >
                              <PluginItem
                                className="github"
                                key="github"
                              >
                                <div
                                  className="github css-efgwqc-PluginItem e1y7j6vq0"
                                >
                                  <PluginInfo>
                                    <div
                                      className="css-1jrzgda-PluginInfo e1y7j6vq2"
                                    >
                                      <StyledPluginIcon
                                        pluginId="github"
                                        size={48}
                                      >
                                        <div
                                          className="css-v1ot6-PluginIcon-StyledPluginIcon e1y7j6vq4"
                                          size={48}
                                        />
                                      </StyledPluginIcon>
                                      <PluginDescription>
                                        <div
                                          className="css-1rlsayk-PluginDescription e1y7j6vq1"
                                        >
                                          <PluginName>
                                            <div
                                              className="css-1rrljgj-PluginName e1y7j6vq3"
                                            >
                                              GitHub 
                                              <Version>
                                                <span
                                                  className="css-1czymow-Version e1y7j6vq5"
                                                >
                                                  v8.23.0.dev0
                                                </span>
                                              </Version>
                                            </div>
                                          </PluginName>
                                          <div>
                                            <EmotionCssPropInternal
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "openInNewTab": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              css={
                                                Object {
                                                  "name": "1nx57m5-grayText",
                                                  "styles": "color:#979ba0;;label:grayText;",
                                                }
                                              }
                                              href="https://github.com/getsentry/sentry"
                                            >
                                              <ForwardRef(ExternalLink)
                                                className="css-1nx57m5-grayText"
                                                href="https://github.com/getsentry/sentry"
                                              >
                                                <a
                                                  className="css-1nx57m5-grayText"
                                                  href="https://github.com/getsentry/sentry"
                                                  rel="noreferrer noopener"
                                                  target="_blank"
                                                >
                                                  Sentry Team
                                                </a>
                                              </ForwardRef(ExternalLink)>
                                            </EmotionCssPropInternal>
                                          </div>
                                        </div>
                                      </PluginDescription>
                                    </div>
                                  </PluginInfo>
                                  <ForwardRef
                                    isActive={true}
                                    isDisabled={true}
                                    size="lg"
                                    toggle={[Function]}
                                  >
                                    <Switch
                                      forwardRef={null}
                                      isActive={true}
                                      isDisabled={true}
                                      size="lg"
                                      toggle={[Function]}
                                    >
                                      <SwitchButton
                                        aria-checked={true}
                                        data-test-id="switch"
                                        isActive={true}
                                        isDisabled={true}
                                        role="checkbox"
                                        size="lg"
                                        type="button"
                                      >
                                        <button
                                          aria-checked={true}
                                          className="css-9o71x4-SwitchButton ezmyi9u0"
                                          data-test-id="switch"
                                          role="checkbox"
                                          size="lg"
                                          type="button"
                                        >
                                          <Toggle
                                            isActive={true}
                                            isDisabled={true}
                                            size="lg"
                                          >
                                            <span
                                              className="css-1twp7ot-Toggle ezmyi9u1"
                                              size="lg"
                                            />
                                          </Toggle>
                                        </button>
                                      </SwitchButton>
                                    </Switch>
                                  </ForwardRef>
                                </div>
                              </PluginItem>
                            </Access>
                          </withConfig(Access)>
                        </WithOrganizationMockWrapper>
                      </ProjectPluginRow>
                    </withProject(ProjectPluginRow)>
                  </WithOrganizationMockWrapper>
                </div>
              </PanelItem>
            </div>
          </FlexBox>
        </PanelBody>
      </div>
    </Component>
  </Panel>
</ProjectPlugins>
`;
