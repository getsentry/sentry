// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectPluginRow renders 1`] = `
<WithOrganizationMockWrapper
  assets={Array []}
  author={
    Object {
      "name": "Sentry Team",
      "url": "https://github.com/getsentry/sentry",
    }
  }
  canDisable={true}
  enabled={false}
  hasConfiguration={true}
  id="amazon-sqs"
  isHidden={false}
  name="Amazon SQS"
  orgId="org-slug"
  projectId="project-slug"
  slug="amazon-sqs"
  version="8.23.0.dev0"
>
  <withProject(ProjectPluginRow)
    assets={Array []}
    author={
      Object {
        "name": "Sentry Team",
        "url": "https://github.com/getsentry/sentry",
      }
    }
    canDisable={true}
    enabled={false}
    hasConfiguration={true}
    id="amazon-sqs"
    isHidden={false}
    name="Amazon SQS"
    orgId="org-slug"
    organization={
      Object {
        "access": Array [
          "project:write",
        ],
        "experiments": Object {},
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    projectId="project-slug"
    slug="amazon-sqs"
    version="8.23.0.dev0"
  >
    <ProjectPluginRow
      assets={Array []}
      author={
        Object {
          "name": "Sentry Team",
          "url": "https://github.com/getsentry/sentry",
        }
      }
      canDisable={true}
      enabled={false}
      hasConfiguration={true}
      id="amazon-sqs"
      isHidden={false}
      name="Amazon SQS"
      orgId="org-slug"
      organization={
        Object {
          "access": Array [
            "project:write",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
      project={
        Object {
          "environments": Array [],
          "hasAccess": true,
          "id": "2",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "project-slug",
          "teams": Array [],
        }
      }
      projectId="project-slug"
      slug="amazon-sqs"
      version="8.23.0.dev0"
    >
      <WithOrganizationMockWrapper
        access={
          Array [
            "project:write",
          ]
        }
      >
        <withConfig(Access)
          access={
            Array [
              "project:write",
            ]
          }
          organization={
            Object {
              "access": Array [
                "project:write",
              ],
              "experiments": Object {},
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            isSuperuser={false}
            organization={
              Object {
                "access": Array [
                  "project:write",
                ],
                "experiments": Object {},
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          >
            <PluginItem
              className="amazon-sqs"
              key="amazon-sqs"
            >
              <div
                className="amazon-sqs css-efgwqc-PluginItem e1y7j6vq0"
              >
                <PluginInfo>
                  <div
                    className="css-1jrzgda-PluginInfo e1y7j6vq2"
                  >
                    <StyledPluginIcon
                      pluginId="amazon-sqs"
                      size={48}
                    >
                      <div
                        className="css-v1ot6-PluginIcon-StyledPluginIcon e1y7j6vq4"
                        size={48}
                      />
                    </StyledPluginIcon>
                    <PluginDescription>
                      <div
                        className="css-1rlsayk-PluginDescription e1y7j6vq1"
                      >
                        <PluginName>
                          <div
                            className="css-1rrljgj-PluginName e1y7j6vq3"
                          >
                            Amazon SQS 
                            <Version>
                              <span
                                className="css-1czymow-Version e1y7j6vq5"
                              >
                                v8.23.0.dev0
                              </span>
                            </Version>
                          </div>
                        </PluginName>
                        <div>
                          <EmotionCssPropInternal
                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "openInNewTab": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            css={
                              Object {
                                "name": "1nx57m5-grayText",
                                "styles": "color:#979ba0;;label:grayText;",
                              }
                            }
                            href="https://github.com/getsentry/sentry"
                          >
                            <ForwardRef(ExternalLink)
                              className="css-1nx57m5-grayText"
                              href="https://github.com/getsentry/sentry"
                            >
                              <a
                                className="css-1nx57m5-grayText"
                                href="https://github.com/getsentry/sentry"
                                rel="noreferrer noopener"
                                target="_blank"
                              >
                                Sentry Team
                              </a>
                            </ForwardRef(ExternalLink)>
                          </EmotionCssPropInternal>
                          <span>
                             
                            Â·
                             
                            <EmotionCssPropInternal
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
                              css={
                                Object {
                                  "name": "1nx57m5-grayText",
                                  "styles": "color:#979ba0;;label:grayText;",
                                }
                              }
                              to="amazon-sqs"
                            >
                              <Link
                                className="css-1nx57m5-grayText"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="amazon-sqs"
                              >
                                <a
                                  className="css-1nx57m5-grayText"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Configure plugin
                                </a>
                              </Link>
                            </EmotionCssPropInternal>
                          </span>
                        </div>
                      </div>
                    </PluginDescription>
                  </div>
                </PluginInfo>
                <ForwardRef
                  isActive={false}
                  isDisabled={false}
                  size="lg"
                  toggle={[Function]}
                >
                  <Switch
                    forwardRef={null}
                    isActive={false}
                    isDisabled={false}
                    size="lg"
                    toggle={[Function]}
                  >
                    <SwitchButton
                      aria-checked={false}
                      data-test-id="switch"
                      isActive={false}
                      isDisabled={false}
                      onClick={[Function]}
                      role="checkbox"
                      size="lg"
                      type="button"
                    >
                      <button
                        aria-checked={false}
                        className="css-1dy0xgk-SwitchButton ezmyi9u0"
                        data-test-id="switch"
                        onClick={[Function]}
                        role="checkbox"
                        size="lg"
                        type="button"
                      >
                        <Toggle
                          isActive={false}
                          isDisabled={false}
                          size="lg"
                        >
                          <span
                            className="css-1oum9in-Toggle ezmyi9u1"
                            size="lg"
                          />
                        </Toggle>
                      </button>
                    </SwitchButton>
                  </Switch>
                </ForwardRef>
              </div>
            </PluginItem>
          </Access>
        </withConfig(Access)>
      </WithOrganizationMockWrapper>
    </ProjectPluginRow>
  </withProject(ProjectPluginRow)>
</WithOrganizationMockWrapper>
`;
