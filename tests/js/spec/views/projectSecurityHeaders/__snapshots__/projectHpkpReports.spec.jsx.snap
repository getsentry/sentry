// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectHpkpReports renders 1`] = `
<SideEffect(DocumentTitle)
  title="HTTP Public Key Pinning (HPKP) - project-slug - Sentry"
>
  <div>
    <StyledSettingsPageHeading
      noTitleStyles={false}
      title="HTTP Public Key Pinning"
    />
    <PreviewFeature />
    <ReportUri
      keyList={Array []}
      params={
        Object {
          "orgId": "org-slug",
          "projectId": "project-slug",
        }
      }
    />
    <Panel>
      <PanelHeader>
        About
      </PanelHeader>
      <PanelBody
        flexible={false}
        withPadding={true}
      >
        <p>
          <span
            key="4"
          >
            <ForwardRef(ExternalLink)
              href="https://en.wikipedia.org/wiki/HTTP_Public_Key_Pinning"
              key="1"
            >
              <span
                key="0"
              >
                HTTP Public Key Pinning
              </span>
            </ForwardRef(ExternalLink)>
            <span
              key="2"
            >
              
              (HPKP) is a security feature that tells a web client to associate a specific
              cryptographic public key with a certain web server to decrease the risk of MITM
              attacks with forged certificates. It's enforced by browser vendors, and Sentry
              supports capturing violations using the standard reporting hooks.
            </span>
          </span>
        </p>
        <p>
          To configure HPKP reports
              in Sentry, you'll need to send a header from your server describing your
              policy, as well specifying the authenticated Sentry endpoint.
        </p>
        <p>
          For example, in Python you might achieve this via a simple web middleware
        </p>
        <pre>
          def middleware(request, response):
    response['Public-Key-Pins'] = \\
        'pin-sha256="cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs="; ' \\
        'pin-sha256="M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE="; ' \\
        'max-age=5184000; includeSubDomains; ' \\
        'report-uri="https://sentry.example.com/api/security-report/"' 
    return response

        </pre>
        <p>
          Alternatively you can setup HPKP reports to simply send reports rather than
              actually enforcing the policy
        </p>
        <pre>
          def middleware(request, response):
    response['Public-Key-Pins-Report-Only'] = \\
        'pin-sha256="cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs="; ' \\
        'pin-sha256="M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE="; ' \\
        'max-age=5184000; includeSubDomains; ' \\
        'report-uri="https://sentry.example.com/api/security-report/"' 
    return response

        </pre>
        <p>
          <span
            key="5"
          >
            <span
              key="0"
            >
              We recommend setting this up to only run on a percentage of requests, as
              otherwise you may find that you've quickly exhausted your quota. For more
              information, take a look at 
            </span>
            <a
              href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning"
              key="2"
            >
              <span
                key="1"
              >
                the documentation on MDN
              </span>
            </a>
            <span
              key="3"
            >
              .
            </span>
          </span>
        </p>
      </PanelBody>
    </Panel>
  </div>
</SideEffect(DocumentTitle)>
`;
