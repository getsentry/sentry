// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateProject should render loading 1`] = `
<div>
  <SettingsPageHeading
    title="Add Member to Organization"
  />
  <TextBlock>
    Invite a member to join this organization via their email address. If they do not already have an account, they will first be asked to create one. Multiple emails delimited by commas.
  </TextBlock>
  <LoadingIndicator />
</div>
`;

exports[`CreateProject should render roles when available and allowed, and handle submitting 1`] = `
<InviteMember
  location={
    Object {
      "query": Object {},
    }
  }
  params={
    Object {
      "orgId": "testOrg",
    }
  }
>
  <div>
    <SettingsPageHeading
      title="Add Member to Organization"
    >
      <Wrapper>
        <div
          className="css-1pnrn3o-Wrapper e1kblvez1"
        >
          <Flex
            align="center"
          >
            <Base
              align="center"
              className="css-5ipae5"
            >
              <div
                className="css-5ipae5"
                is={null}
              >
                <Title>
                  <Base
                    className="css-1mqcea-Title e1kblvez0"
                  >
                    <div
                      className="css-1mqcea-Title e1kblvez0"
                      is={null}
                    >
                      Add Member to Organization
                    </div>
                  </Base>
                </Title>
              </div>
            </Base>
          </Flex>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <TextBlock>
      <Component
        className="css-1geyb25-TextBlock ec8ep340"
      >
        <div
          className="css-1geyb25-TextBlock ec8ep340"
        >
          Invite a member to join this organization via their email address. If they do not already have an account, they will first be asked to create one. Multiple emails delimited by commas.
        </div>
      </Component>
    </TextBlock>
    <div>
      <div
        className=""
      >
        <TextField
          disabled={false}
          hideErrorMessage={false}
          label="Email(s)"
          name="email"
          onChange={[Function]}
          placeholder="e.g. teammate@example.com"
          required={false}
          spellCheck="false"
        >
          <div
            className="control-group"
          >
            <div
              className="controls"
            >
              <label
                className="control-label"
                htmlFor="id-email"
              >
                Email(s)
              </label>
              <input
                className="form-control"
                disabled={false}
                id="id-email"
                name="email"
                onChange={[Function]}
                placeholder="e.g. teammate@example.com"
                required={false}
                spellCheck="false"
                type="text"
                value=""
              />
            </div>
          </div>
        </TextField>
      </div>
      <RoleSelect
        enforceAllowed={true}
        roleList={
          Array [
            Object {
              "allowed": true,
              "desc": "a normal member",
              "id": "1",
              "name": "member",
            },
            Object {
              "allowed": true,
              "desc": "another role",
              "id": "2",
              "name": "bar",
            },
          ]
        }
        selectedRole="member"
        setRole={[Function]}
      >
        <Panel
          className="new-invite-team"
        >
          <Component
            className="new-invite-team css-yahxlu-Panel e1laxa7d0"
          >
            <div
              className="new-invite-team css-yahxlu-Panel e1laxa7d0"
            >
              <PanelHeader>
                <Component
                  className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                >
                  <Flex
                    align="center"
                    className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                    justify="space-between"
                  >
                    <Base
                      align="center"
                      className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                      justify="space-between"
                    >
                      <div
                        className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                        is={null}
                      >
                        Role
                      </div>
                    </Base>
                  </Flex>
                </Component>
              </PanelHeader>
              <PanelBody
                direction="column"
                disablePadding={true}
                flex={false}
              >
                <div
                  className="css-9vq8an-textStyles"
                >
                  <PanelItem
                    className="css-0"
                    key="1"
                    onClick={[Function]}
                    p={2}
                  >
                    <Base
                      className="css-125s2dx-PanelItem eo8n7lk0"
                      onClick={[Function]}
                      p={2}
                    >
                      <div
                        className="css-125s2dx-PanelItem eo8n7lk0"
                        is={null}
                        onClick={[Function]}
                      >
                        <Label>
                          <label
                            className="css-r8kahz-Label e1y9x5r70"
                          >
                            <Radio
                              checked={false}
                              id="1"
                              readOnly={true}
                              style={
                                Object {
                                  "margin": 0,
                                }
                              }
                              value="member"
                            >
                              <input
                                checked={false}
                                className="radio-select"
                                id="1"
                                readOnly={true}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                                type="radio"
                                value="member"
                              />
                            </Radio>
                            <div
                              style={
                                Object {
                                  "flex": 1,
                                  "padding": "0 16px",
                                }
                              }
                            >
                              member
                              <TextBlock
                                className="css-gx0lhm"
                              >
                                <Component
                                  className="css-1ai2po6-TextBlock ec8ep340"
                                >
                                  <div
                                    className="css-1ai2po6-TextBlock ec8ep340"
                                  >
                                    <div
                                      className="help-block"
                                    >
                                      a normal member
                                    </div>
                                  </div>
                                </Component>
                              </TextBlock>
                            </div>
                          </label>
                        </Label>
                      </div>
                    </Base>
                  </PanelItem>
                  <PanelItem
                    className="css-0"
                    key="2"
                    onClick={[Function]}
                    p={2}
                  >
                    <Base
                      className="css-125s2dx-PanelItem eo8n7lk0"
                      onClick={[Function]}
                      p={2}
                    >
                      <div
                        className="css-125s2dx-PanelItem eo8n7lk0"
                        is={null}
                        onClick={[Function]}
                      >
                        <Label>
                          <label
                            className="css-r8kahz-Label e1y9x5r70"
                          >
                            <Radio
                              checked={false}
                              id="2"
                              readOnly={true}
                              style={
                                Object {
                                  "margin": 0,
                                }
                              }
                              value="bar"
                            >
                              <input
                                checked={false}
                                className="radio-select"
                                id="2"
                                readOnly={true}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                                type="radio"
                                value="bar"
                              />
                            </Radio>
                            <div
                              style={
                                Object {
                                  "flex": 1,
                                  "padding": "0 16px",
                                }
                              }
                            >
                              bar
                              <TextBlock
                                className="css-gx0lhm"
                              >
                                <Component
                                  className="css-1ai2po6-TextBlock ec8ep340"
                                >
                                  <div
                                    className="css-1ai2po6-TextBlock ec8ep340"
                                  >
                                    <div
                                      className="help-block"
                                    >
                                      another role
                                    </div>
                                  </div>
                                </Component>
                              </TextBlock>
                            </div>
                          </label>
                        </Label>
                      </div>
                    </Base>
                  </PanelItem>
                </div>
              </PanelBody>
            </div>
          </Component>
        </Panel>
      </RoleSelect>
      <TeamSelect
        allSelected={[Function]}
        onSelectAll={[Function]}
        selectedTeams={
          Set {
            "bar",
          }
        }
        teams={
          Array [
            Object {
              "hasAccess": true,
              "id": "1",
              "name": "bar",
              "slug": "bar",
            },
            Object {
              "hasAccess": false,
              "id": "2",
              "name": "foo",
              "slug": "foo",
            },
          ]
        }
        toggleTeam={[Function]}
      >
        <Panel
          className="new-invite-team"
        >
          <Component
            className="new-invite-team css-yahxlu-Panel e1laxa7d0"
          >
            <div
              className="new-invite-team css-yahxlu-Panel e1laxa7d0"
            >
              <PanelHeader
                hasButtons={true}
              >
                <Component
                  className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
                  hasButtons={true}
                >
                  <Flex
                    align="center"
                    className="css-jmvceg-PanelHeader-getPadding e1p8v8nv0"
                    justify="space-between"
                  >
                    <Base
                      align="center"
                      className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
                      justify="space-between"
                    >
                      <div
                        className="e1p8v8nv0 css-19i62qd-PanelHeader-getPadding"
                        is={null}
                      >
                        Team
                        <Button
                          data-test-id="select-all"
                          disabled={false}
                          onClick={[Function]}
                          size="small"
                        >
                          <StyledButton
                            data-test-id="select-all"
                            disabled={false}
                            onClick={[Function]}
                            role="button"
                            size="small"
                          >
                            <Component
                              className="css-dkprmi-StyledButton-getColors eqrebog0"
                              data-test-id="select-all"
                              disabled={false}
                              onClick={[Function]}
                              role="button"
                              size="small"
                            >
                              <button
                                className="css-dkprmi-StyledButton-getColors eqrebog0"
                                data-test-id="select-all"
                                disabled={false}
                                onClick={[Function]}
                                role="button"
                                size="small"
                              >
                                <ButtonLabel
                                  size="small"
                                >
                                  <Component
                                    className="css-7ui8bl-ButtonLabel eqrebog1"
                                    size="small"
                                  >
                                    <span
                                      className="css-7ui8bl-ButtonLabel eqrebog1"
                                    >
                                      <SelectAll>
                                        <span
                                          className="css-7qfmdl-SelectAll e1tbg1m41"
                                        >
                                          Select All
                                        </span>
                                      </SelectAll>
                                    </span>
                                  </Component>
                                </ButtonLabel>
                              </button>
                            </Component>
                          </StyledButton>
                        </Button>
                      </div>
                    </Base>
                  </Flex>
                </Component>
              </PanelHeader>
              <PanelBody
                className="grouping-controls team-choices"
                direction="column"
                disablePadding={true}
                flex={false}
              >
                <div
                  className="css-9vq8an-textStyles grouping-controls team-choices"
                >
                  <PanelItem
                    className="css-1jkp9i7"
                    p={2}
                  >
                    <Base
                      className="css-15ezwr8-PanelItem eo8n7lk0"
                      p={2}
                    >
                      <div
                        className="css-15ezwr8-PanelItem eo8n7lk0"
                        is={null}
                      >
                        <TeamItem
                          key="bar"
                        >
                          <div
                            className="css-16v1fbz-TeamItem e1tbg1m40"
                          >
                            <label
                              className="checkbox"
                            >
                              <Checkbox
                                checked={false}
                                id="bar"
                                onChange={[Function]}
                                style={
                                  Object {
                                    "verticalAlign": "middle",
                                  }
                                }
                              >
                                <input
                                  checked={false}
                                  className="chk-select"
                                  id="bar"
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "verticalAlign": "middle",
                                    }
                                  }
                                  type="checkbox"
                                />
                              </Checkbox>
                              <IdBadge
                                hideAvatar={true}
                                team={
                                  Object {
                                    "hasAccess": true,
                                    "id": "1",
                                    "name": "bar",
                                    "slug": "bar",
                                  }
                                }
                              >
                                <InlineErrorBoundary
                                  mini={true}
                                >
                                  <ErrorBoundary
                                    className="css-otlbo1-InlineErrorBoundary e83vi020"
                                    mini={true}
                                  >
                                    <TeamBadgeContainer
                                      hideAvatar={true}
                                      team={
                                        Object {
                                          "hasAccess": true,
                                          "id": "1",
                                          "name": "bar",
                                          "slug": "bar",
                                        }
                                      }
                                    >
                                      <TeamBadge
                                        avatarSize={24}
                                        hideAvatar={true}
                                        hideOverflow={true}
                                        team={
                                          Object {
                                            "hasAccess": true,
                                            "id": "1",
                                            "name": "bar",
                                            "slug": "bar",
                                          }
                                        }
                                      >
                                        <BaseBadge
                                          avatarProps={Object {}}
                                          avatarSize={24}
                                          displayName={
                                            <BadgeDisplayName
                                              hideOverflow={true}
                                            >
                                              #
                                              bar
                                            </BadgeDisplayName>
                                          }
                                          hideAvatar={true}
                                          team={
                                            Object {
                                              "hasAccess": true,
                                              "id": "1",
                                              "name": "bar",
                                              "slug": "bar",
                                            }
                                          }
                                        >
                                          <Flex
                                            align="center"
                                          >
                                            <Base
                                              align="center"
                                              className="css-5ipae5"
                                            >
                                              <div
                                                className="css-5ipae5"
                                                is={null}
                                              >
                                                <DisplayNameAndDescription>
                                                  <Base
                                                    className="css-1h9j57p-DisplayNameAndDescription e165dl3i1"
                                                  >
                                                    <div
                                                      className="css-1h9j57p-DisplayNameAndDescription e165dl3i1"
                                                      is={null}
                                                    >
                                                      <DisplayName
                                                        data-test-id="badge-display-name"
                                                      >
                                                        <span
                                                          className="css-d0rtl9-DisplayName e165dl3i2"
                                                          data-test-id="badge-display-name"
                                                        >
                                                          <BadgeDisplayName
                                                            hideOverflow={true}
                                                          >
                                                            <Component
                                                              className="css-1boiawc-BadgeDisplayName eeoia0v0"
                                                              hideOverflow={true}
                                                            >
                                                              <span
                                                                className="css-1boiawc-BadgeDisplayName eeoia0v0"
                                                              >
                                                                #
                                                                bar
                                                              </span>
                                                            </Component>
                                                          </BadgeDisplayName>
                                                        </span>
                                                      </DisplayName>
                                                    </div>
                                                  </Base>
                                                </DisplayNameAndDescription>
                                              </div>
                                            </Base>
                                          </Flex>
                                        </BaseBadge>
                                      </TeamBadge>
                                    </TeamBadgeContainer>
                                  </ErrorBoundary>
                                </InlineErrorBoundary>
                              </IdBadge>
                            </label>
                          </div>
                        </TeamItem>
                        <TeamItem
                          key="foo"
                        >
                          <div
                            className="css-16v1fbz-TeamItem e1tbg1m40"
                          >
                            <label
                              className="checkbox"
                            >
                              <Checkbox
                                checked={false}
                                id="foo"
                                onChange={[Function]}
                                style={
                                  Object {
                                    "verticalAlign": "middle",
                                  }
                                }
                              >
                                <input
                                  checked={false}
                                  className="chk-select"
                                  id="foo"
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "verticalAlign": "middle",
                                    }
                                  }
                                  type="checkbox"
                                />
                              </Checkbox>
                              <IdBadge
                                hideAvatar={true}
                                team={
                                  Object {
                                    "hasAccess": false,
                                    "id": "2",
                                    "name": "foo",
                                    "slug": "foo",
                                  }
                                }
                              >
                                <InlineErrorBoundary
                                  mini={true}
                                >
                                  <ErrorBoundary
                                    className="css-otlbo1-InlineErrorBoundary e83vi020"
                                    mini={true}
                                  >
                                    <TeamBadgeContainer
                                      hideAvatar={true}
                                      team={
                                        Object {
                                          "hasAccess": false,
                                          "id": "2",
                                          "name": "foo",
                                          "slug": "foo",
                                        }
                                      }
                                    >
                                      <TeamBadge
                                        avatarSize={24}
                                        hideAvatar={true}
                                        hideOverflow={true}
                                        team={
                                          Object {
                                            "hasAccess": false,
                                            "id": "2",
                                            "name": "foo",
                                            "slug": "foo",
                                          }
                                        }
                                      >
                                        <BaseBadge
                                          avatarProps={Object {}}
                                          avatarSize={24}
                                          displayName={
                                            <BadgeDisplayName
                                              hideOverflow={true}
                                            >
                                              #
                                              foo
                                            </BadgeDisplayName>
                                          }
                                          hideAvatar={true}
                                          team={
                                            Object {
                                              "hasAccess": false,
                                              "id": "2",
                                              "name": "foo",
                                              "slug": "foo",
                                            }
                                          }
                                        >
                                          <Flex
                                            align="center"
                                          >
                                            <Base
                                              align="center"
                                              className="css-5ipae5"
                                            >
                                              <div
                                                className="css-5ipae5"
                                                is={null}
                                              >
                                                <DisplayNameAndDescription>
                                                  <Base
                                                    className="css-1h9j57p-DisplayNameAndDescription e165dl3i1"
                                                  >
                                                    <div
                                                      className="css-1h9j57p-DisplayNameAndDescription e165dl3i1"
                                                      is={null}
                                                    >
                                                      <DisplayName
                                                        data-test-id="badge-display-name"
                                                      >
                                                        <span
                                                          className="css-d0rtl9-DisplayName e165dl3i2"
                                                          data-test-id="badge-display-name"
                                                        >
                                                          <BadgeDisplayName
                                                            hideOverflow={true}
                                                          >
                                                            <Component
                                                              className="css-1boiawc-BadgeDisplayName eeoia0v0"
                                                              hideOverflow={true}
                                                            >
                                                              <span
                                                                className="css-1boiawc-BadgeDisplayName eeoia0v0"
                                                              >
                                                                #
                                                                foo
                                                              </span>
                                                            </Component>
                                                          </BadgeDisplayName>
                                                        </span>
                                                      </DisplayName>
                                                    </div>
                                                  </Base>
                                                </DisplayNameAndDescription>
                                              </div>
                                            </Base>
                                          </Flex>
                                        </BaseBadge>
                                      </TeamBadge>
                                    </TeamBadgeContainer>
                                  </ErrorBoundary>
                                </InlineErrorBoundary>
                              </IdBadge>
                            </label>
                          </div>
                        </TeamItem>
                      </div>
                    </Base>
                  </PanelItem>
                </div>
              </PanelBody>
            </div>
          </Component>
        </Panel>
      </TeamSelect>
      <Button
        busy={false}
        className="invite-member-submit"
        disabled={false}
        onClick={[Function]}
        priority="primary"
      >
        <StyledButton
          aria-label="Add Member"
          busy={false}
          className="invite-member-submit"
          disabled={false}
          onClick={[Function]}
          priority="primary"
          role="button"
        >
          <Component
            aria-label="Add Member"
            busy={false}
            className="invite-member-submit css-1msljz8-StyledButton-getColors eqrebog0"
            disabled={false}
            onClick={[Function]}
            priority="primary"
            role="button"
          >
            <button
              aria-label="Add Member"
              className="invite-member-submit css-1msljz8-StyledButton-getColors eqrebog0"
              disabled={false}
              onClick={[Function]}
              priority="primary"
              role="button"
            >
              <ButtonLabel
                priority="primary"
              >
                <Component
                  className="css-ga4b18-ButtonLabel eqrebog1"
                  priority="primary"
                >
                  <span
                    className="css-ga4b18-ButtonLabel eqrebog1"
                  >
                    Add Member
                  </span>
                </Component>
              </ButtonLabel>
            </button>
          </Component>
        </StyledButton>
      </Button>
    </div>
  </div>
</InviteMember>
`;

exports[`CreateProject should use invite/add language based on config 1`] = `
<TextBlock>
  You may add a user by their username if they already have an account. Multiple inputs delimited by commas.
</TextBlock>
`;
