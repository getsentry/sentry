// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InviteMember should render loading 1`] = `
<div>
  <StyledSettingsPageHeading
    noTitleStyles={false}
    title="Add Member to Organization"
  />
  <TextBlock>
    Invite a member to join this organization via their email address. If they do not already have an account, they will first be asked to create one. Multiple emails delimited by commas.
  </TextBlock>
  <profiler(LoadingIndicator) />
</div>
`;

exports[`InviteMember should render roles when available and allowed, and handle submitting 1`] = `
<InviteMember
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "experiments": Object {},
      "features": Array [],
      "id": "1",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "testOrg",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [
        Object {
          "hasAccess": true,
          "id": "1",
          "name": "bar",
          "slug": "bar",
        },
        Object {
          "hasAccess": false,
          "id": "2",
          "name": "foo",
          "slug": "foo",
        },
      ],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
    }
  }
>
  <div>
    <StyledSettingsPageHeading
      noTitleStyles={false}
      title="Add Member to Organization"
    >
      <SettingsPageHeading
        className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        noTitleStyles={false}
        title="Add Member to Organization"
      >
        <div
          className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        >
          <TitleAndActions>
            <div
              className="css-ifzfc5-TitleAndActions e1uay4fd0"
            >
              <Title
                styled={false}
              >
                <div
                  className="css-120v9s3-Title e1uay4fd1"
                >
                  <HeaderTitle>
                    <h4
                      className="css-1bosio6-HeaderTitle eqkydle2"
                    >
                      Add Member to Organization
                    </h4>
                  </HeaderTitle>
                </div>
              </Title>
            </div>
          </TitleAndActions>
        </div>
      </SettingsPageHeading>
    </StyledSettingsPageHeading>
    <TextBlock>
      <div
        className="css-1j3tvli-TextBlock e1x1lar10"
      >
        Invite a member to join this organization via their email address. If they do not already have an account, they will first be asked to create one. Multiple emails delimited by commas.
      </div>
    </TextBlock>
    <div>
      <div
        className=""
      >
        <TextField
          disabled={false}
          hideErrorMessage={false}
          label="Email(s)"
          name="email"
          onChange={[Function]}
          placeholder="e.g. teammate@example.com"
          required={false}
          spellCheck="false"
        >
          <div
            className="control-group"
          >
            <div
              className="controls"
            >
              <label
                className="control-label"
                htmlFor="id-email"
              >
                Email(s)
              </label>
              <input
                className="form-control"
                disabled={false}
                id="id-email"
                name="email"
                onChange={[Function]}
                placeholder="e.g. teammate@example.com"
                required={false}
                type="text"
                value=""
              />
            </div>
          </div>
        </TextField>
      </div>
      <RoleSelect
        enforceAllowed={true}
        roleList={
          Array [
            Object {
              "allowed": true,
              "desc": "a normal member",
              "id": "1",
              "name": "member",
            },
            Object {
              "allowed": true,
              "desc": "another role",
              "id": "2",
              "name": "bar",
            },
          ]
        }
        selectedRole="member"
        setRole={[Function]}
      >
        <Panel>
          <Component
            className="css-15hwgrz-Panel e119nu470"
          >
            <div
              className="css-15hwgrz-Panel e119nu470"
            >
              <PanelHeader>
                <div
                  className="css-1es1m70-PanelHeader en8g1d30"
                >
                  Role
                </div>
              </PanelHeader>
              <PanelBody
                flexible={false}
                withPadding={false}
              >
                <FlexBox
                  withPadding={false}
                >
                  <div
                    className="css-1ehogmz-FlexBox e1vnwt6f0"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "div",
                          "__emotion_forwardProp": [Function],
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            Object {
                              "boxSizing": "border-box",
                              "margin": 0,
                              "minWidth": 0,
                            },
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            Object {
                              "display": "flex",
                            },
                            "label:PanelItem;",
                            "border-bottom:1px solid ",
                            [Function],
                            ";&:last-child{border:0;}",
                          ],
                          "defaultProps": Object {
                            "p": 2,
                          },
                          "displayName": "PanelItem",
                          "propTypes": Object {
                            "p": [Function],
                          },
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      css={Object {}}
                      key="1"
                      onClick={[Function]}
                    >
                      <PanelItem
                        className="css-0"
                        onClick={[Function]}
                        p={2}
                      >
                        <div
                          className="css-ylaqrk-PanelItem ej5ox20"
                          onClick={[Function]}
                        >
                          <Label>
                            <label
                              className="css-1k85637-Label e1noblkb0"
                            >
                              <Radio
                                checked={false}
                                id="1"
                                readOnly={true}
                                value="member"
                              >
                                <input
                                  checked={false}
                                  className="radio-select"
                                  id="1"
                                  readOnly={true}
                                  type="radio"
                                  value="member"
                                />
                              </Radio>
                              <div
                                style={
                                  Object {
                                    "flex": 1,
                                    "padding": "0 16px",
                                  }
                                }
                              >
                                member
                                <TextBlock
                                  noMargin={true}
                                >
                                  <div
                                    className="css-1liehie-TextBlock e1x1lar10"
                                  >
                                    <div
                                      className="help-block"
                                    >
                                      a normal member
                                    </div>
                                  </div>
                                </TextBlock>
                              </div>
                            </label>
                          </Label>
                        </div>
                      </PanelItem>
                    </EmotionCssPropInternal>
                    <EmotionCssPropInternal
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "div",
                          "__emotion_forwardProp": [Function],
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            Object {
                              "boxSizing": "border-box",
                              "margin": 0,
                              "minWidth": 0,
                            },
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            Object {
                              "display": "flex",
                            },
                            "label:PanelItem;",
                            "border-bottom:1px solid ",
                            [Function],
                            ";&:last-child{border:0;}",
                          ],
                          "defaultProps": Object {
                            "p": 2,
                          },
                          "displayName": "PanelItem",
                          "propTypes": Object {
                            "p": [Function],
                          },
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      css={Object {}}
                      key="2"
                      onClick={[Function]}
                    >
                      <PanelItem
                        className="css-0"
                        onClick={[Function]}
                        p={2}
                      >
                        <div
                          className="css-ylaqrk-PanelItem ej5ox20"
                          onClick={[Function]}
                        >
                          <Label>
                            <label
                              className="css-1k85637-Label e1noblkb0"
                            >
                              <Radio
                                checked={false}
                                id="2"
                                readOnly={true}
                                value="bar"
                              >
                                <input
                                  checked={false}
                                  className="radio-select"
                                  id="2"
                                  readOnly={true}
                                  type="radio"
                                  value="bar"
                                />
                              </Radio>
                              <div
                                style={
                                  Object {
                                    "flex": 1,
                                    "padding": "0 16px",
                                  }
                                }
                              >
                                bar
                                <TextBlock
                                  noMargin={true}
                                >
                                  <div
                                    className="css-1liehie-TextBlock e1x1lar10"
                                  >
                                    <div
                                      className="help-block"
                                    >
                                      another role
                                    </div>
                                  </div>
                                </TextBlock>
                              </div>
                            </label>
                          </Label>
                        </div>
                      </PanelItem>
                    </EmotionCssPropInternal>
                  </div>
                </FlexBox>
              </PanelBody>
            </div>
          </Component>
        </Panel>
      </RoleSelect>
      <withApi(TeamSelect)
        onAddTeam={[Function]}
        onRemoveTeam={[Function]}
        organization={
          Object {
            "access": Array [
              "org:read",
              "org:write",
              "org:admin",
              "org:integrations",
              "project:read",
              "project:write",
              "project:admin",
              "team:read",
              "team:write",
              "team:admin",
            ],
            "experiments": Object {},
            "features": Array [],
            "id": "1",
            "name": "Organization Name",
            "onboardingTasks": Array [],
            "projects": Array [],
            "scrapeJavaScript": true,
            "slug": "testOrg",
            "status": Object {
              "id": "active",
              "name": "active",
            },
            "teams": Array [
              Object {
                "hasAccess": true,
                "id": "1",
                "name": "bar",
                "slug": "bar",
              },
              Object {
                "hasAccess": false,
                "id": "2",
                "name": "foo",
                "slug": "foo",
              },
            ],
          }
        }
        selectedTeams={Array []}
      >
        <TeamSelect
          api={
            Client {
              "_chain": [Function],
              "_wrapRequest": [Function],
              "bulkUpdate": [Function],
              "handleRequestError": [Function],
              "hasProjectBeenRenamed": [Function],
            }
          }
          onAddTeam={[Function]}
          onRemoveTeam={[Function]}
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "experiments": Object {},
              "features": Array [],
              "id": "1",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "testOrg",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [
                Object {
                  "hasAccess": true,
                  "id": "1",
                  "name": "bar",
                  "slug": "bar",
                },
                Object {
                  "hasAccess": false,
                  "id": "2",
                  "name": "foo",
                  "slug": "foo",
                },
              ],
            }
          }
          selectedTeams={Array []}
        >
          <Panel>
            <Component
              className="css-15hwgrz-Panel e119nu470"
            >
              <div
                className="css-15hwgrz-Panel e119nu470"
              >
                <PanelHeader
                  hasButtons={true}
                >
                  <div
                    className="css-yhsu7n-PanelHeader en8g1d30"
                  >
                    Team
                    <DropdownAutoComplete
                      alignMenu="right"
                      disabled={true}
                      emptyMessage="No teams"
                      items={Array []}
                      onChange={[Function]}
                      onSelect={[Function]}
                    >
                      <DropdownAutoCompleteMenu
                        alignMenu="right"
                        blendCorner={true}
                        disabled={true}
                        emptyMessage="No teams"
                        items={Array []}
                        maxHeight={300}
                        onChange={[Function]}
                        onSelect={[Function]}
                        searchPlaceholder="Filter search"
                      >
                        <AutoComplete
                          closeOnSelect={true}
                          disabled={true}
                          inputIsActor={false}
                          itemToString={[Function]}
                          onSelect={[Function]}
                          resetInputOnClose={true}
                          shouldSelectWithEnter={true}
                          shouldSelectWithTab={false}
                        >
                          <DropdownMenu
                            closeOnEscape={true}
                            isOpen={false}
                            keepMenuOpen={false}
                            onClickOutside={[Function]}
                          >
                            <AutoCompleteRoot>
                              <Component
                                className="css-j1qymt-AutoCompleteRoot ejumqxq0"
                              >
                                <div
                                  className="css-j1qymt-AutoCompleteRoot ejumqxq0"
                                >
                                  <Actor
                                    isOpen={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    style={
                                      Object {
                                        "outline": "none",
                                      }
                                    }
                                    tabIndex="0"
                                  >
                                    <div
                                      className="css-1vv9ctx-Actor e53us8t0"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "outline": "none",
                                        }
                                      }
                                      tabIndex="0"
                                    >
                                      <ForwardRef
                                        aria-label="Add Team"
                                        disabled={true}
                                        isOpen={false}
                                        size="xsmall"
                                      >
                                        <DropdownButton
                                          aria-label="Add Team"
                                          disabled={true}
                                          forwardedRef={null}
                                          isOpen={false}
                                          showChevron={true}
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-label="Add Team"
                                            disabled={true}
                                            isOpen={false}
                                            size="xsmall"
                                            type="button"
                                          >
                                            <forwardRef<Button>
                                              aria-label="Add Team"
                                              className="css-k164fp-StyledButton eenpoef1"
                                              disabled={true}
                                              isOpen={false}
                                              size="xsmall"
                                              type="button"
                                            >
                                              <Button
                                                align="center"
                                                aria-label="Add Team"
                                                className="css-k164fp-StyledButton eenpoef1"
                                                disabled={true}
                                                forwardRef={null}
                                                isOpen={false}
                                                size="xsmall"
                                                type="button"
                                              >
                                                <StyledButton
                                                  aria-disabled={true}
                                                  aria-label="Add Team"
                                                  className="css-k164fp-StyledButton eenpoef1"
                                                  disabled={true}
                                                  forwardRef={null}
                                                  isOpen={false}
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                  type="button"
                                                >
                                                  <Component
                                                    aria-disabled={true}
                                                    aria-label="Add Team"
                                                    className="eenpoef1 css-jk8rcx-StyledButton-StyledButton edwq9my0"
                                                    forwardRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                    size="xsmall"
                                                    type="button"
                                                  >
                                                    <button
                                                      aria-disabled={true}
                                                      aria-label="Add Team"
                                                      className="eenpoef1 css-jk8rcx-StyledButton-StyledButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                      size="xsmall"
                                                      type="button"
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        size="xsmall"
                                                      >
                                                        <span
                                                          className="css-cmi7y3-ButtonLabel edwq9my1"
                                                        >
                                                          Add Team
                                                          <StyledChevronDown>
                                                            <Component
                                                              className="css-1jdzfs8-StyledChevronDown eenpoef0"
                                                            >
                                                              <InlineSvg
                                                                className="css-1jdzfs8-StyledChevronDown eenpoef0"
                                                                src="icon-chevron-down"
                                                              >
                                                                <ForwardRef
                                                                  className="eenpoef0 css-eqsg9h-InlineSvg-StyledChevronDown enyz4ql0"
                                                                  src="icon-chevron-down"
                                                                >
                                                                  <svg
                                                                    className="eenpoef0 css-eqsg9h-InlineSvg-StyledChevronDown enyz4ql0"
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef>
                                                              </InlineSvg>
                                                            </Component>
                                                          </StyledChevronDown>
                                                        </span>
                                                      </ButtonLabel>
                                                    </button>
                                                  </Component>
                                                </StyledButton>
                                              </Button>
                                            </forwardRef<Button>>
                                          </StyledButton>
                                        </DropdownButton>
                                      </ForwardRef>
                                    </div>
                                  </Actor>
                                </div>
                              </Component>
                            </AutoCompleteRoot>
                          </DropdownMenu>
                        </AutoComplete>
                      </DropdownAutoCompleteMenu>
                    </DropdownAutoComplete>
                  </div>
                </PanelHeader>
                <PanelBody
                  flexible={false}
                  withPadding={false}
                >
                  <FlexBox
                    withPadding={false}
                  >
                    <div
                      className="css-1ehogmz-FlexBox e1vnwt6f0"
                    >
                      <EmptyMessage>
                        <Component
                          className="css-1scmenn-EmptyMessage e1h3yfdx0"
                        >
                          <div
                            className="css-1scmenn-EmptyMessage e1h3yfdx0"
                            data-test-id="empty-message"
                          >
                            <Description
                              noMargin={true}
                            >
                              <div
                                className="css-iex7sn-TextBlock-Description e1h3yfdx3"
                              >
                                No Teams assigned
                              </div>
                            </Description>
                          </div>
                        </Component>
                      </EmptyMessage>
                    </div>
                  </FlexBox>
                </PanelBody>
              </div>
            </Component>
          </Panel>
        </TeamSelect>
      </withApi(TeamSelect)>
      <forwardRef<Button>
        busy={false}
        className="invite-member-submit"
        onClick={[Function]}
        priority="primary"
      >
        <Button
          align="center"
          busy={false}
          className="invite-member-submit"
          disabled={false}
          forwardRef={null}
          onClick={[Function]}
          priority="primary"
        >
          <StyledButton
            aria-disabled={false}
            aria-label="Add Member"
            busy={false}
            className="invite-member-submit"
            disabled={false}
            forwardRef={null}
            onClick={[Function]}
            priority="primary"
            role="button"
          >
            <Component
              aria-disabled={false}
              aria-label="Add Member"
              className="invite-member-submit css-1e05jtd-StyledButton edwq9my0"
              forwardRef={null}
              onClick={[Function]}
              role="button"
            >
              <button
                aria-disabled={false}
                aria-label="Add Member"
                className="invite-member-submit css-1e05jtd-StyledButton edwq9my0"
                onClick={[Function]}
                role="button"
              >
                <ButtonLabel
                  align="center"
                  priority="primary"
                >
                  <span
                    className="css-zmpclt-ButtonLabel edwq9my1"
                  >
                    Add Member
                  </span>
                </ButtonLabel>
              </button>
            </Component>
          </StyledButton>
        </Button>
      </forwardRef<Button>>
    </div>
  </div>
</InviteMember>
`;

exports[`InviteMember should use invite/add language based on config 1`] = `
<TextBlock>
  You may add a user by their username if they already have an account. Multiple inputs delimited by commas.
</TextBlock>
`;
