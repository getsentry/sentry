// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateProject should block if you have access to no teams 1`] = `
<Fragment>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      Create a new Project
    </PageHeading>
    <HelpText>
      Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
    </HelpText>
    <PlatformPicker
      platform=""
      setPlatform={[Function]}
      showOther={true}
    />
    <StickyWrapper>
      <CreateProjectForm
        onSubmit={[Function]}
      >
        <div>
          <FormLabel>
            Give your project a name
          </FormLabel>
          <ProjectNameInput>
            <ProjectPlatformIcon
              monoTone={true}
              platform=""
            />
            <input
              autoComplete="off"
              label="Project Name"
              name="name"
              onChange={[Function]}
              placeholder="Project name"
              type="text"
              value=""
            />
          </ProjectNameInput>
        </div>
        <div>
          <FormLabel>
            Assign a Team
          </FormLabel>
          <TeamSelectInput>
            <ForwardRef(RefForwardedSelectControl)
              clearable={false}
              deprecatedSelectControl={true}
              name="select-team"
              onChange={[Function]}
              options={Array []}
              placeholder="Select a Team"
              value={0}
            />
            <Tooltip
              containerDisplayMode="inline-block"
              position="top"
              title="Create a team"
            >
              <forwardRef<Button>
                borderless={true}
                data-test-id="create-team"
                icon={
                  <ForwardRef(IconAdd)
                    circle={true}
                  />
                }
                onClick={[Function]}
                type="button"
              />
            </Tooltip>
          </TeamSelectInput>
        </div>
        <div>
          <forwardRef<Button>
            data-test-id="create-project"
            disabled={true}
            priority="primary"
          >
            Create Project
          </forwardRef<Button>>
        </div>
      </CreateProjectForm>
    </StickyWrapper>
  </div>
</Fragment>
`;

exports[`CreateProject should deal with incorrect platform name if its provided by url 1`] = `
<CreateProject
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "experiments": Object {},
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <h1
        className="css-uisydj-PageHeading e1bz0f4q0"
      >
        Create a new Project
      </h1>
    </PageHeading>
    <HelpText>
      <p
        className="css-zphuw0-HelpText e19kiapg5"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform=""
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-17aiwa2-NavContainer exv4dm80"
        >
          <CategoryNav>
            <NavTabs
              className="css-85pn0y-CategoryNav exv4dm82"
            >
              <ul
                className="nav nav-tabs css-85pn0y-CategoryNav exv4dm82"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-11q7t03-SearchBar exv4dm81"
            >
              <InlineSvg
                src="icon-search"
              >
                <ForwardRef
                  className="css-tbsmsq-InlineSvg enyz4ql0"
                  src="icon-search"
                >
                  <svg
                    className="css-tbsmsq-InlineSvg enyz4ql0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </ForwardRef>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value=""
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-15dkf0-PlatformList exv4dm83"
        >
          <PlatformCard
            data-test-id="platform-csharp"
            key="csharp"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "csharp",
                "language": "csharp",
                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                "name": "C#",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-csharp"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "csharp",
                  "language": "csharp",
                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                  "name": "C#",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-csharp"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="csharp"
                >
                  <div
                    className="css-1heo4sb-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  C#
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-elixir"
            key="elixir"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "elixir",
                "language": "elixir",
                "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                "name": "Elixir",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-elixir"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "elixir",
                  "language": "elixir",
                  "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                  "name": "Elixir",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-elixir"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="elixir"
                >
                  <div
                    className="css-mji5rm-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Elixir
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-java"
            key="java"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "java",
                "language": "java",
                "link": "https://docs.getsentry.com/hosted/clients/java/",
                "name": "Java",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-java"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "java",
                  "language": "java",
                  "link": "https://docs.getsentry.com/hosted/clients/java/",
                  "name": "Java",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-java"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="java"
                >
                  <div
                    className="css-uf2iyw-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Java
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-angular"
            key="javascript-angular"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-angular",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                "name": "Angular",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-javascript-angular"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-angular",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                  "name": "Angular",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-javascript-angular"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-angular"
                >
                  <div
                    className="css-voyw3w-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Angular
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript"
            key="javascript"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                "name": "JavaScript",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-javascript"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                  "name": "JavaScript",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-javascript"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript"
                >
                  <div
                    className="css-gr4mty-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  JavaScript
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-react"
            key="javascript-react"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-react",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                "name": "React",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-javascript-react"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-react",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                  "name": "React",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-javascript-react"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-react"
                >
                  <div
                    className="css-wu8hm1-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node-express"
            key="node-express"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node-express",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                "name": "Express",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-node-express"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node-express",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                  "name": "Express",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-node-express"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node-express"
                >
                  <div
                    className="css-matmgu-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Express
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node"
            key="node"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/",
                "name": "Node.js",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-node"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/",
                  "name": "Node.js",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-node"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node"
                >
                  <div
                    className="css-matmgu-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Node.js
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-laravel"
            key="php-laravel"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-laravel",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                "name": "Laravel",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-php-laravel"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-laravel",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                  "name": "Laravel",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-php-laravel"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-laravel"
                >
                  <div
                    className="css-36oori-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Laravel
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php"
            key="php"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/",
                "name": "PHP",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-php"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/",
                  "name": "PHP",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-php"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php"
                >
                  <div
                    className="css-1sozbkb-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  PHP
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-symfony2"
            key="php-symfony2"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-symfony2",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                "name": "Symfony2",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-php-symfony2"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-symfony2",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                  "name": "Symfony2",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-php-symfony2"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-symfony2"
                >
                  <div
                    className="css-1sozbkb-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Symfony2
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-django"
            key="python-django"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-django",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                "name": "Django",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-python-django"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-django",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                  "name": "Django",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-python-django"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-django"
                >
                  <div
                    className="css-1yf97yq-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Django
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-flask"
            key="python-flask"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-flask",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                "name": "Flask",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-python-flask"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-flask",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                  "name": "Flask",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-python-flask"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-flask"
                >
                  <div
                    className="css-167pad6-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Flask
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python"
            key="python"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/",
                "name": "Python",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-python"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/",
                  "name": "Python",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-python"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python"
                >
                  <div
                    className="css-n1y9pa-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Python
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-react-native"
            key="react-native"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "react-native",
                "language": "react-native",
                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                "name": "React-Native",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-react-native"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "react-native",
                  "language": "react-native",
                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                  "name": "React-Native",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-react-native"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="react-native"
                >
                  <div
                    className="css-7oad8m-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React-Native
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby-rails"
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rails"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rails"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rails"
                >
                  <div
                    className="css-4fvugx-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby"
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-ruby"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-ruby"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby"
                >
                  <div
                    className="css-zduvp1-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Ruby
                </h3>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <StickyWrapper>
      <div
        className="css-1n1wv6u-StickyWrapper e19kiapg6"
      >
        <CreateProjectForm
          onSubmit={[Function]}
        >
          <form
            className="css-1dq1lt0-CreateProjectForm e19kiapg0"
            onSubmit={[Function]}
          >
            <div>
              <FormLabel>
                <div
                  className="css-1ynor6-FormLabel e19kiapg1"
                >
                  Give your project a name
                </div>
              </FormLabel>
              <ProjectNameInput>
                <div
                  className="css-9ctizw-ProjectNameInput e19kiapg3"
                >
                  <ProjectPlatformIcon
                    monoTone={true}
                    platform=""
                  >
                    <div
                      className="css-12loq7n-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
                    />
                  </ProjectPlatformIcon>
                  <input
                    autoComplete="off"
                    label="Project Name"
                    name="name"
                    onChange={[Function]}
                    placeholder="Project name"
                    type="text"
                    value=""
                  />
                </div>
              </ProjectNameInput>
            </div>
            <div>
              <FormLabel>
                <div
                  className="css-1ynor6-FormLabel e19kiapg1"
                >
                  Assign a Team
                </div>
              </FormLabel>
              <TeamSelectInput>
                <div
                  className="css-15lxetg-TeamSelectInput e19kiapg4"
                >
                  <ForwardRef(RefForwardedSelectControl)
                    clearable={false}
                    deprecatedSelectControl={true}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectControl
                      clearable={false}
                      deprecatedSelectControl={true}
                      forwardedRef={null}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <SelectControlLegacy
                        clearable={false}
                        forwardedRef={null}
                        height={36}
                        multiple={false}
                        name="select-team"
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Select a Team"
                        value={0}
                      >
                        <StyledSelect
                          arrowRenderer={[Function]}
                          backspaceRemoves={false}
                          clearable={false}
                          deleteRemoves={false}
                          forwardedRef={null}
                          height={36}
                          multiple={false}
                          name="select-team"
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select a Team"
                          value={0}
                        >
                          <SelectPicker
                            arrowRenderer={[Function]}
                            backspaceRemoves={false}
                            className="css-140v9or-StyledSelect e1ynsgsr0"
                            clearable={false}
                            deleteRemoves={false}
                            forwardedRef={null}
                            height={36}
                            multiple={false}
                            name="select-team"
                            onChange={[Function]}
                            options={Array []}
                            placeholder="Select a Team"
                            value={0}
                          >
                            <Select
                              arrowRenderer={[Function]}
                              autosize={true}
                              backspaceRemoves={false}
                              backspaceToRemoveMessage="Press backspace to remove {label}"
                              className="css-140v9or-StyledSelect e1ynsgsr0"
                              clearAllText="Clear all"
                              clearRenderer={[Function]}
                              clearValueText="Clear value"
                              clearable={false}
                              closeOnSelect={true}
                              deleteRemoves={false}
                              delimiter=","
                              disabled={false}
                              escapeClearsValue={true}
                              filterOptions={[Function]}
                              height={36}
                              ignoreAccents={true}
                              ignoreCase={true}
                              inputProps={Object {}}
                              isLoading={false}
                              joinValues={false}
                              labelKey="label"
                              matchPos="any"
                              matchProp="any"
                              menuBuffer={0}
                              menuRenderer={[Function]}
                              multi={false}
                              multiple={false}
                              name="select-team"
                              noResultsText="No results found"
                              onBlurResetsInput={true}
                              onChange={[Function]}
                              onCloseResetsInput={true}
                              onSelectResetsInput={true}
                              openOnClick={true}
                              optionComponent={[Function]}
                              options={Array []}
                              pageSize={5}
                              placeholder="Select a Team"
                              removeSelected={true}
                              required={false}
                              rtl={false}
                              scrollMenuIntoView={true}
                              searchable={true}
                              simpleValue={false}
                              tabSelectsValue={true}
                              trimFilter={true}
                              value={0}
                              valueComponent={[Function]}
                              valueKey="value"
                            >
                              <div
                                className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                              >
                                <div
                                  className="Select-control"
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <div
                                    className="Select-multi-value-wrapper"
                                    id="react-select-5--value"
                                  >
                                    <div
                                      className="Select-placeholder"
                                    >
                                      Select a Team
                                    </div>
                                    <AutosizeInput
                                      aria-activedescendant="react-select-5--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns=""
                                      className="Select-input"
                                      injectStyles={true}
                                      minWidth="5"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      value=""
                                    >
                                      <div
                                        className="Select-input"
                                        style={
                                          Object {
                                            "display": "inline-block",
                                          }
                                        }
                                      >
                                        <input
                                          aria-activedescendant="react-select-5--value"
                                          aria-expanded="false"
                                          aria-haspopup="false"
                                          aria-owns=""
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          required={false}
                                          role="combobox"
                                          style={
                                            Object {
                                              "boxSizing": "content-box",
                                              "width": "5px",
                                            }
                                          }
                                          value=""
                                        />
                                        <div
                                          style={
                                            Object {
                                              "height": 0,
                                              "left": 0,
                                              "overflow": "scroll",
                                              "position": "absolute",
                                              "top": 0,
                                              "visibility": "hidden",
                                              "whiteSpace": "pre",
                                            }
                                          }
                                        />
                                      </div>
                                    </AutosizeInput>
                                  </div>
                                  <span
                                    className="Select-arrow-zone"
                                    onMouseDown={[Function]}
                                  >
                                    <span
                                      className="icon-arrow-down"
                                    />
                                  </span>
                                </div>
                              </div>
                            </Select>
                          </SelectPicker>
                        </StyledSelect>
                      </SelectControlLegacy>
                    </SelectControl>
                  </ForwardRef(RefForwardedSelectControl)>
                  <Tooltip
                    containerDisplayMode="inline-block"
                    position="top"
                    title="Create a team"
                  >
                    <Manager>
                      <Reference>
                        <InnerReference
                          setReferenceNode={[Function]}
                        >
                          <Container
                            aria-describedby="tooltip-123456"
                            containerDisplayMode="inline-block"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            <span
                              aria-describedby="tooltip-123456"
                              className="css-b1dot5-Container eowlwvy0"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <forwardRef<Button>
                                borderless={true}
                                data-test-id="create-team"
                                icon={
                                  <ForwardRef(IconAdd)
                                    circle={true}
                                  />
                                }
                                onClick={[Function]}
                                type="button"
                              >
                                <Button
                                  align="center"
                                  borderless={true}
                                  data-test-id="create-team"
                                  disabled={false}
                                  forwardRef={null}
                                  icon={
                                    <ForwardRef(IconAdd)
                                      circle={true}
                                    />
                                  }
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <StyledButton
                                    aria-disabled={false}
                                    borderless={true}
                                    data-test-id="create-team"
                                    disabled={false}
                                    forwardRef={null}
                                    onClick={[Function]}
                                    role="button"
                                    type="button"
                                  >
                                    <Component
                                      aria-disabled={false}
                                      className="css-e1k74m-StyledButton edwq9my0"
                                      data-test-id="create-team"
                                      forwardRef={null}
                                      onClick={[Function]}
                                      role="button"
                                      type="button"
                                    >
                                      <button
                                        aria-disabled={false}
                                        className="css-e1k74m-StyledButton edwq9my0"
                                        data-test-id="create-team"
                                        onClick={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <ButtonLabel
                                          align="center"
                                          borderless={true}
                                        >
                                          <span
                                            className="css-zmpclt-ButtonLabel edwq9my1"
                                          >
                                            <Icon
                                              hasChildren={false}
                                            >
                                              <span
                                                className="css-1a0nfqj-Icon edwq9my2"
                                              >
                                                <ForwardRef(IconAdd)
                                                  circle={true}
                                                >
                                                  <svg
                                                    fill="currentColor"
                                                    height="16px"
                                                    viewBox="0 0 16 16"
                                                    width="16px"
                                                  >
                                                    <g>
                                                      <path
                                                        d="M11.28,8.75H4.72a.75.75,0,1,1,0-1.5h6.56a.75.75,0,1,1,0,1.5Z"
                                                      />
                                                      <path
                                                        d="M8,12a.76.76,0,0,1-.75-.75V4.72a.75.75,0,0,1,1.5,0v6.56A.76.76,0,0,1,8,12Z"
                                                      />
                                                      <path
                                                        d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                                      />
                                                    </g>
                                                  </svg>
                                                </ForwardRef(IconAdd)>
                                              </span>
                                            </Icon>
                                          </span>
                                        </ButtonLabel>
                                      </button>
                                    </Component>
                                  </StyledButton>
                                </Button>
                              </forwardRef<Button>>
                            </span>
                          </Container>
                        </InnerReference>
                      </Reference>
                    </Manager>
                  </Tooltip>
                </div>
              </TeamSelectInput>
            </div>
            <div>
              <forwardRef<Button>
                data-test-id="create-project"
                disabled={true}
                priority="primary"
              >
                <Button
                  align="center"
                  data-test-id="create-project"
                  disabled={true}
                  forwardRef={null}
                  priority="primary"
                >
                  <StyledButton
                    aria-disabled={true}
                    aria-label="Create Project"
                    data-test-id="create-project"
                    disabled={true}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="primary"
                    role="button"
                  >
                    <Component
                      aria-disabled={true}
                      aria-label="Create Project"
                      className="css-1e3hcbu-StyledButton edwq9my0"
                      data-test-id="create-project"
                      forwardRef={null}
                      onClick={[Function]}
                      role="button"
                    >
                      <button
                        aria-disabled={true}
                        aria-label="Create Project"
                        className="css-1e3hcbu-StyledButton edwq9my0"
                        data-test-id="create-project"
                        onClick={[Function]}
                        role="button"
                      >
                        <ButtonLabel
                          align="center"
                          priority="primary"
                        >
                          <span
                            className="css-zmpclt-ButtonLabel edwq9my1"
                          >
                            Create Project
                          </span>
                        </ButtonLabel>
                      </button>
                    </Component>
                  </StyledButton>
                </Button>
              </forwardRef<Button>>
            </div>
          </form>
        </CreateProjectForm>
      </div>
    </StickyWrapper>
  </div>
</CreateProject>
`;

exports[`CreateProject should fill in platform name if its provided by url 1`] = `
<CreateProject
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "experiments": Object {},
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <h1
        className="css-uisydj-PageHeading e1bz0f4q0"
      >
        Create a new Project
      </h1>
    </PageHeading>
    <HelpText>
      <p
        className="css-zphuw0-HelpText e19kiapg5"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform="ruby"
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-17aiwa2-NavContainer exv4dm80"
        >
          <CategoryNav>
            <NavTabs
              className="css-85pn0y-CategoryNav exv4dm82"
            >
              <ul
                className="nav nav-tabs css-85pn0y-CategoryNav exv4dm82"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-11q7t03-SearchBar exv4dm81"
            >
              <InlineSvg
                src="icon-search"
              >
                <ForwardRef
                  className="css-tbsmsq-InlineSvg enyz4ql0"
                  src="icon-search"
                >
                  <svg
                    className="css-tbsmsq-InlineSvg enyz4ql0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </ForwardRef>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value="ruby"
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-15dkf0-PlatformList exv4dm83"
        >
          <PlatformCard
            data-test-id="platform-ruby-rack"
            key="ruby-rack"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rack",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
                "name": "Rack",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rack"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rack",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
                  "name": "Rack",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rack"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rack"
                >
                  <div
                    className="css-zduvp1-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rack
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby-rails"
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rails"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rails"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rails"
                >
                  <div
                    className="css-4fvugx-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby"
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={true}
          >
            <Component
              className="css-1iik28w-PlatformCard exv4dm86"
              data-test-id="platform-ruby"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={true}
            >
              <div
                className="css-1iik28w-PlatformCard exv4dm86"
                data-test-id="platform-ruby"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby"
                >
                  <div
                    className="css-zduvp1-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Ruby
                </h3>
                <ClearButton
                  onClick={[Function]}
                >
                  <Component
                    className="css-rqv9pd-ClearButton exv4dm85"
                    onClick={[Function]}
                  >
                    <forwardRef<Button>
                      borderless={true}
                      className="css-rqv9pd-ClearButton exv4dm85"
                      icon={
                        <ForwardRef(IconClose)
                          circle={true}
                          size="xs"
                        />
                      }
                      onClick={[Function]}
                      size="xsmall"
                    >
                      <Button
                        align="center"
                        borderless={true}
                        className="css-rqv9pd-ClearButton exv4dm85"
                        disabled={false}
                        forwardRef={null}
                        icon={
                          <ForwardRef(IconClose)
                            circle={true}
                            size="xs"
                          />
                        }
                        onClick={[Function]}
                        size="xsmall"
                      >
                        <StyledButton
                          aria-disabled={false}
                          borderless={true}
                          className="css-rqv9pd-ClearButton exv4dm85"
                          disabled={false}
                          forwardRef={null}
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <Component
                            aria-disabled={false}
                            className="exv4dm85 css-4y1t77-StyledButton-ClearButton edwq9my0"
                            forwardRef={null}
                            onClick={[Function]}
                            role="button"
                            size="xsmall"
                          >
                            <button
                              aria-disabled={false}
                              className="exv4dm85 css-4y1t77-StyledButton-ClearButton edwq9my0"
                              onClick={[Function]}
                              role="button"
                              size="xsmall"
                            >
                              <ButtonLabel
                                align="center"
                                borderless={true}
                                size="xsmall"
                              >
                                <span
                                  className="css-1dw46ju-ButtonLabel edwq9my1"
                                >
                                  <Icon
                                    hasChildren={false}
                                    size="xsmall"
                                  >
                                    <span
                                      className="css-dm7gfi-Icon edwq9my2"
                                      size="xsmall"
                                    >
                                      <ForwardRef(IconClose)
                                        circle={true}
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <g>
                                            <path
                                              d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                            />
                                            <path
                                              d="M5.34,11.41a.71.71,0,0,1-.53-.22.74.74,0,0,1,0-1.06l5.32-5.32a.75.75,0,0,1,1.06,1.06L5.87,11.19A.74.74,0,0,1,5.34,11.41Z"
                                            />
                                            <path
                                              d="M10.66,11.41a.74.74,0,0,1-.53-.22L4.81,5.87A.75.75,0,0,1,5.87,4.81l5.32,5.32a.74.74,0,0,1,0,1.06A.71.71,0,0,1,10.66,11.41Z"
                                            />
                                          </g>
                                        </svg>
                                      </ForwardRef(IconClose)>
                                    </span>
                                  </Icon>
                                </span>
                              </ButtonLabel>
                            </button>
                          </Component>
                        </StyledButton>
                      </Button>
                    </forwardRef<Button>>
                  </Component>
                </ClearButton>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <StickyWrapper>
      <div
        className="css-1n1wv6u-StickyWrapper e19kiapg6"
      >
        <CreateProjectForm
          onSubmit={[Function]}
        >
          <form
            className="css-1dq1lt0-CreateProjectForm e19kiapg0"
            onSubmit={[Function]}
          >
            <div>
              <FormLabel>
                <div
                  className="css-1ynor6-FormLabel e19kiapg1"
                >
                  Give your project a name
                </div>
              </FormLabel>
              <ProjectNameInput>
                <div
                  className="css-9ctizw-ProjectNameInput e19kiapg3"
                >
                  <ProjectPlatformIcon
                    monoTone={true}
                    platform="ruby"
                  >
                    <div
                      className="css-17k22u3-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
                    />
                  </ProjectPlatformIcon>
                  <input
                    autoComplete="off"
                    label="Project Name"
                    name="name"
                    onChange={[Function]}
                    placeholder="Project name"
                    type="text"
                    value="Ruby"
                  />
                </div>
              </ProjectNameInput>
            </div>
            <div>
              <FormLabel>
                <div
                  className="css-1ynor6-FormLabel e19kiapg1"
                >
                  Assign a Team
                </div>
              </FormLabel>
              <TeamSelectInput>
                <div
                  className="css-15lxetg-TeamSelectInput e19kiapg4"
                >
                  <ForwardRef(RefForwardedSelectControl)
                    clearable={false}
                    deprecatedSelectControl={true}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectControl
                      clearable={false}
                      deprecatedSelectControl={true}
                      forwardedRef={null}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <SelectControlLegacy
                        clearable={false}
                        forwardedRef={null}
                        height={36}
                        multiple={false}
                        name="select-team"
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Select a Team"
                        value={0}
                      >
                        <StyledSelect
                          arrowRenderer={[Function]}
                          backspaceRemoves={false}
                          clearable={false}
                          deleteRemoves={false}
                          forwardedRef={null}
                          height={36}
                          multiple={false}
                          name="select-team"
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select a Team"
                          value={0}
                        >
                          <SelectPicker
                            arrowRenderer={[Function]}
                            backspaceRemoves={false}
                            className="css-140v9or-StyledSelect e1ynsgsr0"
                            clearable={false}
                            deleteRemoves={false}
                            forwardedRef={null}
                            height={36}
                            multiple={false}
                            name="select-team"
                            onChange={[Function]}
                            options={Array []}
                            placeholder="Select a Team"
                            value={0}
                          >
                            <Select
                              arrowRenderer={[Function]}
                              autosize={true}
                              backspaceRemoves={false}
                              backspaceToRemoveMessage="Press backspace to remove {label}"
                              className="css-140v9or-StyledSelect e1ynsgsr0"
                              clearAllText="Clear all"
                              clearRenderer={[Function]}
                              clearValueText="Clear value"
                              clearable={false}
                              closeOnSelect={true}
                              deleteRemoves={false}
                              delimiter=","
                              disabled={false}
                              escapeClearsValue={true}
                              filterOptions={[Function]}
                              height={36}
                              ignoreAccents={true}
                              ignoreCase={true}
                              inputProps={Object {}}
                              isLoading={false}
                              joinValues={false}
                              labelKey="label"
                              matchPos="any"
                              matchProp="any"
                              menuBuffer={0}
                              menuRenderer={[Function]}
                              multi={false}
                              multiple={false}
                              name="select-team"
                              noResultsText="No results found"
                              onBlurResetsInput={true}
                              onChange={[Function]}
                              onCloseResetsInput={true}
                              onSelectResetsInput={true}
                              openOnClick={true}
                              optionComponent={[Function]}
                              options={Array []}
                              pageSize={5}
                              placeholder="Select a Team"
                              removeSelected={true}
                              required={false}
                              rtl={false}
                              scrollMenuIntoView={true}
                              searchable={true}
                              simpleValue={false}
                              tabSelectsValue={true}
                              trimFilter={true}
                              value={0}
                              valueComponent={[Function]}
                              valueKey="value"
                            >
                              <div
                                className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                              >
                                <div
                                  className="Select-control"
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <div
                                    className="Select-multi-value-wrapper"
                                    id="react-select-4--value"
                                  >
                                    <div
                                      className="Select-placeholder"
                                    >
                                      Select a Team
                                    </div>
                                    <AutosizeInput
                                      aria-activedescendant="react-select-4--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns=""
                                      className="Select-input"
                                      injectStyles={true}
                                      minWidth="5"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      value=""
                                    >
                                      <div
                                        className="Select-input"
                                        style={
                                          Object {
                                            "display": "inline-block",
                                          }
                                        }
                                      >
                                        <input
                                          aria-activedescendant="react-select-4--value"
                                          aria-expanded="false"
                                          aria-haspopup="false"
                                          aria-owns=""
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          required={false}
                                          role="combobox"
                                          style={
                                            Object {
                                              "boxSizing": "content-box",
                                              "width": "5px",
                                            }
                                          }
                                          value=""
                                        />
                                        <div
                                          style={
                                            Object {
                                              "height": 0,
                                              "left": 0,
                                              "overflow": "scroll",
                                              "position": "absolute",
                                              "top": 0,
                                              "visibility": "hidden",
                                              "whiteSpace": "pre",
                                            }
                                          }
                                        />
                                      </div>
                                    </AutosizeInput>
                                  </div>
                                  <span
                                    className="Select-arrow-zone"
                                    onMouseDown={[Function]}
                                  >
                                    <span
                                      className="icon-arrow-down"
                                    />
                                  </span>
                                </div>
                              </div>
                            </Select>
                          </SelectPicker>
                        </StyledSelect>
                      </SelectControlLegacy>
                    </SelectControl>
                  </ForwardRef(RefForwardedSelectControl)>
                  <Tooltip
                    containerDisplayMode="inline-block"
                    position="top"
                    title="Create a team"
                  >
                    <Manager>
                      <Reference>
                        <InnerReference
                          setReferenceNode={[Function]}
                        >
                          <Container
                            aria-describedby="tooltip-123456"
                            containerDisplayMode="inline-block"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            <span
                              aria-describedby="tooltip-123456"
                              className="css-b1dot5-Container eowlwvy0"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <forwardRef<Button>
                                borderless={true}
                                data-test-id="create-team"
                                icon={
                                  <ForwardRef(IconAdd)
                                    circle={true}
                                  />
                                }
                                onClick={[Function]}
                                type="button"
                              >
                                <Button
                                  align="center"
                                  borderless={true}
                                  data-test-id="create-team"
                                  disabled={false}
                                  forwardRef={null}
                                  icon={
                                    <ForwardRef(IconAdd)
                                      circle={true}
                                    />
                                  }
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <StyledButton
                                    aria-disabled={false}
                                    borderless={true}
                                    data-test-id="create-team"
                                    disabled={false}
                                    forwardRef={null}
                                    onClick={[Function]}
                                    role="button"
                                    type="button"
                                  >
                                    <Component
                                      aria-disabled={false}
                                      className="css-e1k74m-StyledButton edwq9my0"
                                      data-test-id="create-team"
                                      forwardRef={null}
                                      onClick={[Function]}
                                      role="button"
                                      type="button"
                                    >
                                      <button
                                        aria-disabled={false}
                                        className="css-e1k74m-StyledButton edwq9my0"
                                        data-test-id="create-team"
                                        onClick={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <ButtonLabel
                                          align="center"
                                          borderless={true}
                                        >
                                          <span
                                            className="css-zmpclt-ButtonLabel edwq9my1"
                                          >
                                            <Icon
                                              hasChildren={false}
                                            >
                                              <span
                                                className="css-1a0nfqj-Icon edwq9my2"
                                              >
                                                <ForwardRef(IconAdd)
                                                  circle={true}
                                                >
                                                  <svg
                                                    fill="currentColor"
                                                    height="16px"
                                                    viewBox="0 0 16 16"
                                                    width="16px"
                                                  >
                                                    <g>
                                                      <path
                                                        d="M11.28,8.75H4.72a.75.75,0,1,1,0-1.5h6.56a.75.75,0,1,1,0,1.5Z"
                                                      />
                                                      <path
                                                        d="M8,12a.76.76,0,0,1-.75-.75V4.72a.75.75,0,0,1,1.5,0v6.56A.76.76,0,0,1,8,12Z"
                                                      />
                                                      <path
                                                        d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                                      />
                                                    </g>
                                                  </svg>
                                                </ForwardRef(IconAdd)>
                                              </span>
                                            </Icon>
                                          </span>
                                        </ButtonLabel>
                                      </button>
                                    </Component>
                                  </StyledButton>
                                </Button>
                              </forwardRef<Button>>
                            </span>
                          </Container>
                        </InnerReference>
                      </Reference>
                    </Manager>
                  </Tooltip>
                </div>
              </TeamSelectInput>
            </div>
            <div>
              <forwardRef<Button>
                data-test-id="create-project"
                disabled={true}
                priority="primary"
              >
                <Button
                  align="center"
                  data-test-id="create-project"
                  disabled={true}
                  forwardRef={null}
                  priority="primary"
                >
                  <StyledButton
                    aria-disabled={true}
                    aria-label="Create Project"
                    data-test-id="create-project"
                    disabled={true}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="primary"
                    role="button"
                  >
                    <Component
                      aria-disabled={true}
                      aria-label="Create Project"
                      className="css-1e3hcbu-StyledButton edwq9my0"
                      data-test-id="create-project"
                      forwardRef={null}
                      onClick={[Function]}
                      role="button"
                    >
                      <button
                        aria-disabled={true}
                        aria-label="Create Project"
                        className="css-1e3hcbu-StyledButton edwq9my0"
                        data-test-id="create-project"
                        onClick={[Function]}
                        role="button"
                      >
                        <ButtonLabel
                          align="center"
                          priority="primary"
                        >
                          <span
                            className="css-zmpclt-ButtonLabel edwq9my1"
                          >
                            Create Project
                          </span>
                        </ButtonLabel>
                      </button>
                    </Component>
                  </StyledButton>
                </Button>
              </forwardRef<Button>>
            </div>
          </form>
        </CreateProjectForm>
      </div>
    </StickyWrapper>
  </div>
</CreateProject>
`;

exports[`CreateProject should fill in project name if its empty when platform is chosen 1`] = `
<CreateProject
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "experiments": Object {},
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <h1
        className="css-uisydj-PageHeading e1bz0f4q0"
      >
        Create a new Project
      </h1>
    </PageHeading>
    <HelpText>
      <p
        className="css-zphuw0-HelpText e19kiapg5"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform="csharp"
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-17aiwa2-NavContainer exv4dm80"
        >
          <CategoryNav>
            <NavTabs
              className="css-85pn0y-CategoryNav exv4dm82"
            >
              <ul
                className="nav nav-tabs css-85pn0y-CategoryNav exv4dm82"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-11q7t03-SearchBar exv4dm81"
            >
              <InlineSvg
                src="icon-search"
              >
                <ForwardRef
                  className="css-tbsmsq-InlineSvg enyz4ql0"
                  src="icon-search"
                >
                  <svg
                    className="css-tbsmsq-InlineSvg enyz4ql0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </ForwardRef>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value=""
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-15dkf0-PlatformList exv4dm83"
        >
          <PlatformCard
            data-test-id="platform-csharp"
            key="csharp"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "csharp",
                "language": "csharp",
                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                "name": "C#",
                "type": "language",
              }
            }
            selected={true}
          >
            <Component
              className="css-1iik28w-PlatformCard exv4dm86"
              data-test-id="platform-csharp"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "csharp",
                  "language": "csharp",
                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                  "name": "C#",
                  "type": "language",
                }
              }
              selected={true}
            >
              <div
                className="css-1iik28w-PlatformCard exv4dm86"
                data-test-id="platform-csharp"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="csharp"
                >
                  <div
                    className="css-1heo4sb-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  C#
                </h3>
                <ClearButton
                  onClick={[Function]}
                >
                  <Component
                    className="css-rqv9pd-ClearButton exv4dm85"
                    onClick={[Function]}
                  >
                    <forwardRef<Button>
                      borderless={true}
                      className="css-rqv9pd-ClearButton exv4dm85"
                      icon={
                        <ForwardRef(IconClose)
                          circle={true}
                          size="xs"
                        />
                      }
                      onClick={[Function]}
                      size="xsmall"
                    >
                      <Button
                        align="center"
                        borderless={true}
                        className="css-rqv9pd-ClearButton exv4dm85"
                        disabled={false}
                        forwardRef={null}
                        icon={
                          <ForwardRef(IconClose)
                            circle={true}
                            size="xs"
                          />
                        }
                        onClick={[Function]}
                        size="xsmall"
                      >
                        <StyledButton
                          aria-disabled={false}
                          borderless={true}
                          className="css-rqv9pd-ClearButton exv4dm85"
                          disabled={false}
                          forwardRef={null}
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <Component
                            aria-disabled={false}
                            className="exv4dm85 css-4y1t77-StyledButton-ClearButton edwq9my0"
                            forwardRef={null}
                            onClick={[Function]}
                            role="button"
                            size="xsmall"
                          >
                            <button
                              aria-disabled={false}
                              className="exv4dm85 css-4y1t77-StyledButton-ClearButton edwq9my0"
                              onClick={[Function]}
                              role="button"
                              size="xsmall"
                            >
                              <ButtonLabel
                                align="center"
                                borderless={true}
                                size="xsmall"
                              >
                                <span
                                  className="css-1dw46ju-ButtonLabel edwq9my1"
                                >
                                  <Icon
                                    hasChildren={false}
                                    size="xsmall"
                                  >
                                    <span
                                      className="css-dm7gfi-Icon edwq9my2"
                                      size="xsmall"
                                    >
                                      <ForwardRef(IconClose)
                                        circle={true}
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <g>
                                            <path
                                              d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                            />
                                            <path
                                              d="M5.34,11.41a.71.71,0,0,1-.53-.22.74.74,0,0,1,0-1.06l5.32-5.32a.75.75,0,0,1,1.06,1.06L5.87,11.19A.74.74,0,0,1,5.34,11.41Z"
                                            />
                                            <path
                                              d="M10.66,11.41a.74.74,0,0,1-.53-.22L4.81,5.87A.75.75,0,0,1,5.87,4.81l5.32,5.32a.74.74,0,0,1,0,1.06A.71.71,0,0,1,10.66,11.41Z"
                                            />
                                          </g>
                                        </svg>
                                      </ForwardRef(IconClose)>
                                    </span>
                                  </Icon>
                                </span>
                              </ButtonLabel>
                            </button>
                          </Component>
                        </StyledButton>
                      </Button>
                    </forwardRef<Button>>
                  </Component>
                </ClearButton>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-elixir"
            key="elixir"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "elixir",
                "language": "elixir",
                "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                "name": "Elixir",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-elixir"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "elixir",
                  "language": "elixir",
                  "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                  "name": "Elixir",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-elixir"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="elixir"
                >
                  <div
                    className="css-mji5rm-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Elixir
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-java"
            key="java"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "java",
                "language": "java",
                "link": "https://docs.getsentry.com/hosted/clients/java/",
                "name": "Java",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-java"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "java",
                  "language": "java",
                  "link": "https://docs.getsentry.com/hosted/clients/java/",
                  "name": "Java",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-java"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="java"
                >
                  <div
                    className="css-uf2iyw-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Java
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-angular"
            key="javascript-angular"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-angular",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                "name": "Angular",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-javascript-angular"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-angular",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                  "name": "Angular",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-javascript-angular"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-angular"
                >
                  <div
                    className="css-voyw3w-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Angular
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript"
            key="javascript"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                "name": "JavaScript",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-javascript"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                  "name": "JavaScript",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-javascript"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript"
                >
                  <div
                    className="css-gr4mty-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  JavaScript
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-react"
            key="javascript-react"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-react",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                "name": "React",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-javascript-react"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-react",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                  "name": "React",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-javascript-react"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-react"
                >
                  <div
                    className="css-wu8hm1-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node-express"
            key="node-express"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node-express",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                "name": "Express",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-node-express"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node-express",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                  "name": "Express",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-node-express"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node-express"
                >
                  <div
                    className="css-matmgu-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Express
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node"
            key="node"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/",
                "name": "Node.js",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-node"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/",
                  "name": "Node.js",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-node"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node"
                >
                  <div
                    className="css-matmgu-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Node.js
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-laravel"
            key="php-laravel"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-laravel",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                "name": "Laravel",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-php-laravel"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-laravel",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                  "name": "Laravel",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-php-laravel"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-laravel"
                >
                  <div
                    className="css-36oori-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Laravel
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php"
            key="php"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/",
                "name": "PHP",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-php"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/",
                  "name": "PHP",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-php"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php"
                >
                  <div
                    className="css-1sozbkb-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  PHP
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-symfony2"
            key="php-symfony2"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-symfony2",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                "name": "Symfony2",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-php-symfony2"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-symfony2",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                  "name": "Symfony2",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-php-symfony2"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-symfony2"
                >
                  <div
                    className="css-1sozbkb-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Symfony2
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-django"
            key="python-django"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-django",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                "name": "Django",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-python-django"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-django",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                  "name": "Django",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-python-django"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-django"
                >
                  <div
                    className="css-1yf97yq-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Django
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-flask"
            key="python-flask"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-flask",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                "name": "Flask",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-python-flask"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-flask",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                  "name": "Flask",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-python-flask"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-flask"
                >
                  <div
                    className="css-167pad6-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Flask
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python"
            key="python"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/",
                "name": "Python",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-python"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/",
                  "name": "Python",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-python"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python"
                >
                  <div
                    className="css-n1y9pa-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Python
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-react-native"
            key="react-native"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "react-native",
                "language": "react-native",
                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                "name": "React-Native",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-react-native"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "react-native",
                  "language": "react-native",
                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                  "name": "React-Native",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-react-native"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="react-native"
                >
                  <div
                    className="css-7oad8m-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React-Native
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby-rails"
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rails"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rails"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rails"
                >
                  <div
                    className="css-4fvugx-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby"
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1h8d9w3-PlatformCard exv4dm86"
              data-test-id="platform-ruby"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1h8d9w3-PlatformCard exv4dm86"
                data-test-id="platform-ruby"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby"
                >
                  <div
                    className="css-zduvp1-PlatformIconTile-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Ruby
                </h3>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <StickyWrapper>
      <div
        className="css-1n1wv6u-StickyWrapper e19kiapg6"
      >
        <CreateProjectForm
          onSubmit={[Function]}
        >
          <form
            className="css-1dq1lt0-CreateProjectForm e19kiapg0"
            onSubmit={[Function]}
          >
            <div>
              <FormLabel>
                <div
                  className="css-1ynor6-FormLabel e19kiapg1"
                >
                  Give your project a name
                </div>
              </FormLabel>
              <ProjectNameInput>
                <div
                  className="css-9ctizw-ProjectNameInput e19kiapg3"
                >
                  <ProjectPlatformIcon
                    monoTone={true}
                    platform="csharp"
                  >
                    <div
                      className="css-nwocbk-PlatformIconTile-ProjectPlatformIcon e19kiapg2"
                    />
                  </ProjectPlatformIcon>
                  <input
                    autoComplete="off"
                    label="Project Name"
                    name="name"
                    onChange={[Function]}
                    placeholder="Project name"
                    type="text"
                    value="another"
                  />
                </div>
              </ProjectNameInput>
            </div>
            <div>
              <FormLabel>
                <div
                  className="css-1ynor6-FormLabel e19kiapg1"
                >
                  Assign a Team
                </div>
              </FormLabel>
              <TeamSelectInput>
                <div
                  className="css-15lxetg-TeamSelectInput e19kiapg4"
                >
                  <ForwardRef(RefForwardedSelectControl)
                    clearable={false}
                    deprecatedSelectControl={true}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectControl
                      clearable={false}
                      deprecatedSelectControl={true}
                      forwardedRef={null}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <SelectControlLegacy
                        clearable={false}
                        forwardedRef={null}
                        height={36}
                        multiple={false}
                        name="select-team"
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Select a Team"
                        value={0}
                      >
                        <StyledSelect
                          arrowRenderer={[Function]}
                          backspaceRemoves={false}
                          clearable={false}
                          deleteRemoves={false}
                          forwardedRef={null}
                          height={36}
                          multiple={false}
                          name="select-team"
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select a Team"
                          value={0}
                        >
                          <SelectPicker
                            arrowRenderer={[Function]}
                            backspaceRemoves={false}
                            className="css-140v9or-StyledSelect e1ynsgsr0"
                            clearable={false}
                            deleteRemoves={false}
                            forwardedRef={null}
                            height={36}
                            multiple={false}
                            name="select-team"
                            onChange={[Function]}
                            options={Array []}
                            placeholder="Select a Team"
                            value={0}
                          >
                            <Select
                              arrowRenderer={[Function]}
                              autosize={true}
                              backspaceRemoves={false}
                              backspaceToRemoveMessage="Press backspace to remove {label}"
                              className="css-140v9or-StyledSelect e1ynsgsr0"
                              clearAllText="Clear all"
                              clearRenderer={[Function]}
                              clearValueText="Clear value"
                              clearable={false}
                              closeOnSelect={true}
                              deleteRemoves={false}
                              delimiter=","
                              disabled={false}
                              escapeClearsValue={true}
                              filterOptions={[Function]}
                              height={36}
                              ignoreAccents={true}
                              ignoreCase={true}
                              inputProps={Object {}}
                              isLoading={false}
                              joinValues={false}
                              labelKey="label"
                              matchPos="any"
                              matchProp="any"
                              menuBuffer={0}
                              menuRenderer={[Function]}
                              multi={false}
                              multiple={false}
                              name="select-team"
                              noResultsText="No results found"
                              onBlurResetsInput={true}
                              onChange={[Function]}
                              onCloseResetsInput={true}
                              onSelectResetsInput={true}
                              openOnClick={true}
                              optionComponent={[Function]}
                              options={Array []}
                              pageSize={5}
                              placeholder="Select a Team"
                              removeSelected={true}
                              required={false}
                              rtl={false}
                              scrollMenuIntoView={true}
                              searchable={true}
                              simpleValue={false}
                              tabSelectsValue={true}
                              trimFilter={true}
                              value={0}
                              valueComponent={[Function]}
                              valueKey="value"
                            >
                              <div
                                className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                              >
                                <div
                                  className="Select-control"
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <div
                                    className="Select-multi-value-wrapper"
                                    id="react-select-3--value"
                                  >
                                    <div
                                      className="Select-placeholder"
                                    >
                                      Select a Team
                                    </div>
                                    <AutosizeInput
                                      aria-activedescendant="react-select-3--value"
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      aria-owns=""
                                      className="Select-input"
                                      injectStyles={true}
                                      minWidth="5"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      role="combobox"
                                      value=""
                                    >
                                      <div
                                        className="Select-input"
                                        style={
                                          Object {
                                            "display": "inline-block",
                                          }
                                        }
                                      >
                                        <input
                                          aria-activedescendant="react-select-3--value"
                                          aria-expanded="false"
                                          aria-haspopup="false"
                                          aria-owns=""
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          required={false}
                                          role="combobox"
                                          style={
                                            Object {
                                              "boxSizing": "content-box",
                                              "width": "5px",
                                            }
                                          }
                                          value=""
                                        />
                                        <div
                                          style={
                                            Object {
                                              "height": 0,
                                              "left": 0,
                                              "overflow": "scroll",
                                              "position": "absolute",
                                              "top": 0,
                                              "visibility": "hidden",
                                              "whiteSpace": "pre",
                                            }
                                          }
                                        />
                                      </div>
                                    </AutosizeInput>
                                  </div>
                                  <span
                                    className="Select-arrow-zone"
                                    onMouseDown={[Function]}
                                  >
                                    <span
                                      className="icon-arrow-down"
                                    />
                                  </span>
                                </div>
                              </div>
                            </Select>
                          </SelectPicker>
                        </StyledSelect>
                      </SelectControlLegacy>
                    </SelectControl>
                  </ForwardRef(RefForwardedSelectControl)>
                  <Tooltip
                    containerDisplayMode="inline-block"
                    position="top"
                    title="Create a team"
                  >
                    <Manager>
                      <Reference>
                        <InnerReference
                          setReferenceNode={[Function]}
                        >
                          <Container
                            aria-describedby="tooltip-123456"
                            containerDisplayMode="inline-block"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            <span
                              aria-describedby="tooltip-123456"
                              className="css-b1dot5-Container eowlwvy0"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            >
                              <forwardRef<Button>
                                borderless={true}
                                data-test-id="create-team"
                                icon={
                                  <ForwardRef(IconAdd)
                                    circle={true}
                                  />
                                }
                                onClick={[Function]}
                                type="button"
                              >
                                <Button
                                  align="center"
                                  borderless={true}
                                  data-test-id="create-team"
                                  disabled={false}
                                  forwardRef={null}
                                  icon={
                                    <ForwardRef(IconAdd)
                                      circle={true}
                                    />
                                  }
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <StyledButton
                                    aria-disabled={false}
                                    borderless={true}
                                    data-test-id="create-team"
                                    disabled={false}
                                    forwardRef={null}
                                    onClick={[Function]}
                                    role="button"
                                    type="button"
                                  >
                                    <Component
                                      aria-disabled={false}
                                      className="css-e1k74m-StyledButton edwq9my0"
                                      data-test-id="create-team"
                                      forwardRef={null}
                                      onClick={[Function]}
                                      role="button"
                                      type="button"
                                    >
                                      <button
                                        aria-disabled={false}
                                        className="css-e1k74m-StyledButton edwq9my0"
                                        data-test-id="create-team"
                                        onClick={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <ButtonLabel
                                          align="center"
                                          borderless={true}
                                        >
                                          <span
                                            className="css-zmpclt-ButtonLabel edwq9my1"
                                          >
                                            <Icon
                                              hasChildren={false}
                                            >
                                              <span
                                                className="css-1a0nfqj-Icon edwq9my2"
                                              >
                                                <ForwardRef(IconAdd)
                                                  circle={true}
                                                >
                                                  <svg
                                                    fill="currentColor"
                                                    height="16px"
                                                    viewBox="0 0 16 16"
                                                    width="16px"
                                                  >
                                                    <g>
                                                      <path
                                                        d="M11.28,8.75H4.72a.75.75,0,1,1,0-1.5h6.56a.75.75,0,1,1,0,1.5Z"
                                                      />
                                                      <path
                                                        d="M8,12a.76.76,0,0,1-.75-.75V4.72a.75.75,0,0,1,1.5,0v6.56A.76.76,0,0,1,8,12Z"
                                                      />
                                                      <path
                                                        d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                                      />
                                                    </g>
                                                  </svg>
                                                </ForwardRef(IconAdd)>
                                              </span>
                                            </Icon>
                                          </span>
                                        </ButtonLabel>
                                      </button>
                                    </Component>
                                  </StyledButton>
                                </Button>
                              </forwardRef<Button>>
                            </span>
                          </Container>
                        </InnerReference>
                      </Reference>
                    </Manager>
                  </Tooltip>
                </div>
              </TeamSelectInput>
            </div>
            <div>
              <forwardRef<Button>
                data-test-id="create-project"
                disabled={true}
                priority="primary"
              >
                <Button
                  align="center"
                  data-test-id="create-project"
                  disabled={true}
                  forwardRef={null}
                  priority="primary"
                >
                  <StyledButton
                    aria-disabled={true}
                    aria-label="Create Project"
                    data-test-id="create-project"
                    disabled={true}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="primary"
                    role="button"
                  >
                    <Component
                      aria-disabled={true}
                      aria-label="Create Project"
                      className="css-1e3hcbu-StyledButton edwq9my0"
                      data-test-id="create-project"
                      forwardRef={null}
                      onClick={[Function]}
                      role="button"
                    >
                      <button
                        aria-disabled={true}
                        aria-label="Create Project"
                        className="css-1e3hcbu-StyledButton edwq9my0"
                        data-test-id="create-project"
                        onClick={[Function]}
                        role="button"
                      >
                        <ButtonLabel
                          align="center"
                          priority="primary"
                        >
                          <span
                            className="css-zmpclt-ButtonLabel edwq9my1"
                          >
                            Create Project
                          </span>
                        </ButtonLabel>
                      </button>
                    </Component>
                  </StyledButton>
                </Button>
              </forwardRef<Button>>
            </div>
          </form>
        </CreateProjectForm>
      </div>
    </StickyWrapper>
  </div>
</CreateProject>
`;
