// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Configure should render correctly render() should render platform docs 1`] = `
<WithOrganizationMockWrapper
  api={Client {}}
  next={[Function]}
  params={
    Object {
      "orgId": "testOrg",
      "platform": "node",
      "projectId": "project-slug",
    }
  }
>
  <Configure
    api={Client {}}
    next={[Function]}
    organization={
      Object {
        "id": "1337",
        "projects": Array [
          Object {
            "hasAccess": true,
            "id": "testProject",
            "isBookmarked": false,
            "isMember": true,
            "name": "Test Project",
            "slug": "project-slug",
            "teams": Array [
              Object {
                "hasAccess": true,
                "id": "coolteam",
                "slug": "coolteam",
              },
            ],
          },
        ],
        "slug": "testOrg",
        "teams": Array [
          Object {
            "hasAccess": true,
            "id": "coolteam",
            "projects": Array [
              Object {
                "id": "testProject",
                "name": "Test Project",
                "slug": "project-slug",
              },
            ],
            "slug": "coolteam",
          },
        ],
      }
    }
    params={
      Object {
        "orgId": "testOrg",
        "platform": "node",
        "projectId": "project-slug",
      }
    }
  >
    <div>
      <div
        className="onboarding-Configure"
      >
        <h2
          style={
            Object {
              "marginBottom": 30,
            }
          }
        >
          Configure your application
          <div
            className="pull-right"
          >
            <withApi(WithOrganizationMockWrapper)
              project={
                Object {
                  "hasAccess": true,
                  "id": "testProject",
                  "isBookmarked": false,
                  "isMember": true,
                  "name": "Test Project",
                  "slug": "project-slug",
                  "teams": Array [
                    Object {
                      "hasAccess": true,
                      "id": "coolteam",
                      "slug": "coolteam",
                    },
                  ],
                }
              }
              source="header"
            >
              <WithOrganizationMockWrapper
                api={Client {}}
                project={
                  Object {
                    "hasAccess": true,
                    "id": "testProject",
                    "isBookmarked": false,
                    "isMember": true,
                    "name": "Test Project",
                    "slug": "project-slug",
                    "teams": Array [
                      Object {
                        "hasAccess": true,
                        "id": "coolteam",
                        "slug": "coolteam",
                      },
                    ],
                  }
                }
                source="header"
              >
                <CreateSampleEventButton
                  api={Client {}}
                  organization={
                    Object {
                      "id": "1337",
                      "projects": Array [
                        Object {
                          "hasAccess": true,
                          "id": "testProject",
                          "isBookmarked": false,
                          "isMember": true,
                          "name": "Test Project",
                          "slug": "project-slug",
                          "teams": Array [
                            Object {
                              "hasAccess": true,
                              "id": "coolteam",
                              "slug": "coolteam",
                            },
                          ],
                        },
                      ],
                      "slug": "testOrg",
                      "teams": Array [
                        Object {
                          "hasAccess": true,
                          "id": "coolteam",
                          "projects": Array [
                            Object {
                              "id": "testProject",
                              "name": "Test Project",
                              "slug": "project-slug",
                            },
                          ],
                          "slug": "coolteam",
                        },
                      ],
                    }
                  }
                  project={
                    Object {
                      "hasAccess": true,
                      "id": "testProject",
                      "isBookmarked": false,
                      "isMember": true,
                      "name": "Test Project",
                      "slug": "project-slug",
                      "teams": Array [
                        Object {
                          "hasAccess": true,
                          "id": "coolteam",
                          "slug": "coolteam",
                        },
                      ],
                    }
                  }
                  source="header"
                >
                  <Button
                    disabled={false}
                    onClick={[Function]}
                  >
                    <StyledButton
                      aria-disabled={false}
                      aria-label="Or Create a Sample Event"
                      disabled={false}
                      onClick={[Function]}
                      role="button"
                    >
                      <ForwardRef
                        aria-disabled={false}
                        aria-label="Or Create a Sample Event"
                        className="css-1i9cddn-StyledButton-getColors e12ma6z0"
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="Or Create a Sample Event"
                          className="css-1i9cddn-StyledButton-getColors e12ma6z0"
                          onClick={[Function]}
                          role="button"
                        >
                          <ButtonLabel>
                            <Component
                              className="css-ga4b18-ButtonLabel e12ma6z1"
                            >
                              <span
                                className="css-ga4b18-ButtonLabel e12ma6z1"
                              >
                                Or Create a Sample Event
                              </span>
                            </Component>
                          </ButtonLabel>
                        </button>
                      </ForwardRef>
                    </StyledButton>
                  </Button>
                </CreateSampleEventButton>
              </WithOrganizationMockWrapper>
            </withApi(WithOrganizationMockWrapper)>
          </div>
        </h2>
        <withApi(WithOrganizationMockWrapper)
          orgId="testOrg"
          projectId="project-slug"
          style={
            Object {
              "marginBottom": 30,
            }
          }
        >
          <WithOrganizationMockWrapper
            api={Client {}}
            orgId="testOrg"
            projectId="project-slug"
            style={
              Object {
                "marginBottom": 30,
              }
            }
          >
            <withProjects(withRouter(ProjectContext))
              api={Client {}}
              orgId="testOrg"
              organization={
                Object {
                  "id": "1337",
                  "projects": Array [
                    Object {
                      "hasAccess": true,
                      "id": "testProject",
                      "isBookmarked": false,
                      "isMember": true,
                      "name": "Test Project",
                      "slug": "project-slug",
                      "teams": Array [
                        Object {
                          "hasAccess": true,
                          "id": "coolteam",
                          "slug": "coolteam",
                        },
                      ],
                    },
                  ],
                  "slug": "testOrg",
                  "teams": Array [
                    Object {
                      "hasAccess": true,
                      "id": "coolteam",
                      "projects": Array [
                        Object {
                          "id": "testProject",
                          "name": "Test Project",
                          "slug": "project-slug",
                        },
                      ],
                      "slug": "coolteam",
                    },
                  ],
                }
              }
              projectId="project-slug"
              style={
                Object {
                  "marginBottom": 30,
                }
              }
            >
              <withRouter(ProjectContext)
                api={Client {}}
                orgId="testOrg"
                organization={
                  Object {
                    "id": "1337",
                    "projects": Array [
                      Object {
                        "hasAccess": true,
                        "id": "testProject",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Test Project",
                        "slug": "project-slug",
                        "teams": Array [
                          Object {
                            "hasAccess": true,
                            "id": "coolteam",
                            "slug": "coolteam",
                          },
                        ],
                      },
                    ],
                    "slug": "testOrg",
                    "teams": Array [
                      Object {
                        "hasAccess": true,
                        "id": "coolteam",
                        "projects": Array [
                          Object {
                            "id": "testProject",
                            "name": "Test Project",
                            "slug": "project-slug",
                          },
                        ],
                        "slug": "coolteam",
                      },
                    ],
                  }
                }
                projectId="project-slug"
                projects={
                  Array [
                    Object {
                      "hasAccess": true,
                      "id": "testProject",
                      "isBookmarked": false,
                      "isMember": true,
                      "name": "Test Project",
                      "slug": "project-slug",
                      "teams": Array [
                        Object {
                          "hasAccess": true,
                          "id": "coolid",
                          "slug": "coolteam",
                        },
                      ],
                    },
                  ]
                }
                style={
                  Object {
                    "marginBottom": 30,
                  }
                }
              >
                <ProjectContext
                  api={Client {}}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  orgId="testOrg"
                  organization={
                    Object {
                      "id": "1337",
                      "projects": Array [
                        Object {
                          "hasAccess": true,
                          "id": "testProject",
                          "isBookmarked": false,
                          "isMember": true,
                          "name": "Test Project",
                          "slug": "project-slug",
                          "teams": Array [
                            Object {
                              "hasAccess": true,
                              "id": "coolteam",
                              "slug": "coolteam",
                            },
                          ],
                        },
                      ],
                      "slug": "testOrg",
                      "teams": Array [
                        Object {
                          "hasAccess": true,
                          "id": "coolteam",
                          "projects": Array [
                            Object {
                              "id": "testProject",
                              "name": "Test Project",
                              "slug": "project-slug",
                            },
                          ],
                          "slug": "coolteam",
                        },
                      ],
                    }
                  }
                  projectId="project-slug"
                  projects={
                    Array [
                      Object {
                        "hasAccess": true,
                        "id": "testProject",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Test Project",
                        "slug": "project-slug",
                        "teams": Array [
                          Object {
                            "hasAccess": true,
                            "id": "coolid",
                            "slug": "coolteam",
                          },
                        ],
                      },
                    ]
                  }
                  router={
                    Object {
                      "createHref": [MockFunction],
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  style={
                    Object {
                      "marginBottom": 30,
                    }
                  }
                >
                  <SideEffect(DocumentTitle)
                    title="project-slug"
                  >
                    <DocumentTitle
                      title="project-slug"
                    >
                      <withApi(WithOrganizationMockWrapper)
                        params={
                          Object {
                            "orgId": "testOrg",
                            "platform": "node",
                            "projectId": "project-slug",
                          }
                        }
                      >
                        <WithOrganizationMockWrapper
                          api={Client {}}
                          params={
                            Object {
                              "orgId": "testOrg",
                              "platform": "node",
                              "projectId": "project-slug",
                            }
                          }
                        >
                          <withProject(ProjectInstallPlatform)
                            api={Client {}}
                            organization={
                              Object {
                                "id": "1337",
                                "projects": Array [
                                  Object {
                                    "hasAccess": true,
                                    "id": "testProject",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Test Project",
                                    "slug": "project-slug",
                                    "teams": Array [
                                      Object {
                                        "hasAccess": true,
                                        "id": "coolteam",
                                        "slug": "coolteam",
                                      },
                                    ],
                                  },
                                ],
                                "slug": "testOrg",
                                "teams": Array [
                                  Object {
                                    "hasAccess": true,
                                    "id": "coolteam",
                                    "projects": Array [
                                      Object {
                                        "id": "testProject",
                                        "name": "Test Project",
                                        "slug": "project-slug",
                                      },
                                    ],
                                    "slug": "coolteam",
                                  },
                                ],
                              }
                            }
                            params={
                              Object {
                                "orgId": "testOrg",
                                "platform": "node",
                                "projectId": "project-slug",
                              }
                            }
                          >
                            <ProjectInstallPlatform
                              api={Client {}}
                              organization={
                                Object {
                                  "id": "1337",
                                  "projects": Array [
                                    Object {
                                      "hasAccess": true,
                                      "id": "testProject",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Test Project",
                                      "slug": "project-slug",
                                      "teams": Array [
                                        Object {
                                          "hasAccess": true,
                                          "id": "coolteam",
                                          "slug": "coolteam",
                                        },
                                      ],
                                    },
                                  ],
                                  "slug": "testOrg",
                                  "teams": Array [
                                    Object {
                                      "hasAccess": true,
                                      "id": "coolteam",
                                      "projects": Array [
                                        Object {
                                          "id": "testProject",
                                          "name": "Test Project",
                                          "slug": "project-slug",
                                        },
                                      ],
                                      "slug": "coolteam",
                                    },
                                  ],
                                }
                              }
                              params={
                                Object {
                                  "orgId": "testOrg",
                                  "platform": "node",
                                  "projectId": "project-slug",
                                }
                              }
                              project={
                                Object {
                                  "environments": Array [],
                                  "hasAccess": true,
                                  "id": "2",
                                  "isBookmarked": false,
                                  "isMember": true,
                                  "name": "Project Name",
                                  "slug": "project-slug",
                                  "teams": Array [],
                                }
                              }
                            >
                              <Panel>
                                <Component
                                  className="css-10qfvek-Panel e1laxa7d0"
                                >
                                  <div
                                    className="css-10qfvek-Panel e1laxa7d0"
                                  >
                                    <PanelHeader
                                      hasButtons={true}
                                    >
                                      <Component
                                        className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
                                        hasButtons={true}
                                      >
                                        <Flex
                                          align="center"
                                          className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
                                          justify="space-between"
                                        >
                                          <Base
                                            align="center"
                                            className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
                                            justify="space-between"
                                          >
                                            <div
                                              className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
                                              is={null}
                                            >
                                              Configure Node.js
                                              <Flex>
                                                <Base
                                                  className="css-sncxrr"
                                                >
                                                  <div
                                                    className="css-sncxrr"
                                                    is={null}
                                                  >
                                                    <Box
                                                      ml={1}
                                                    >
                                                      <Base
                                                        className="css-re0chm"
                                                        ml={1}
                                                      >
                                                        <div
                                                          className="css-re0chm"
                                                          is={null}
                                                        >
                                                          <Button
                                                            disabled={false}
                                                            href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                            size="small"
                                                          >
                                                            <StyledButton
                                                              aria-disabled={false}
                                                              aria-label="< Back"
                                                              disabled={false}
                                                              href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                              onClick={[Function]}
                                                              role="button"
                                                              size="small"
                                                            >
                                                              <ForwardRef
                                                                aria-disabled={false}
                                                                aria-label="< Back"
                                                                className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                                                                disabled={false}
                                                                href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                                onClick={[Function]}
                                                                role="button"
                                                                size="small"
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  aria-label="< Back"
                                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                                                                  href="/organizations/testOrg/projects/project-slug/getting-started/"
                                                                  onClick={[Function]}
                                                                  role="button"
                                                                  size="small"
                                                                >
                                                                  <ButtonLabel
                                                                    size="small"
                                                                  >
                                                                    <Component
                                                                      className="css-7ui8bl-ButtonLabel e12ma6z1"
                                                                      size="small"
                                                                    >
                                                                      <span
                                                                        className="css-7ui8bl-ButtonLabel e12ma6z1"
                                                                      >
                                                                        &lt; Back
                                                                      </span>
                                                                    </Component>
                                                                  </ButtonLabel>
                                                                </a>
                                                              </ForwardRef>
                                                            </StyledButton>
                                                          </Button>
                                                        </div>
                                                      </Base>
                                                    </Box>
                                                    <Box
                                                      ml={1}
                                                    >
                                                      <Base
                                                        className="css-re0chm"
                                                        ml={1}
                                                      >
                                                        <div
                                                          className="css-re0chm"
                                                          is={null}
                                                        >
                                                          <Button
                                                            disabled={false}
                                                            external={true}
                                                            href="https://docs.getsentry.com/hosted/clients/node/"
                                                            size="small"
                                                          >
                                                            <StyledButton
                                                              aria-disabled={false}
                                                              aria-label="Full Documentation"
                                                              disabled={false}
                                                              external={true}
                                                              href="https://docs.getsentry.com/hosted/clients/node/"
                                                              onClick={[Function]}
                                                              role="button"
                                                              size="small"
                                                            >
                                                              <ForwardRef
                                                                aria-disabled={false}
                                                                aria-label="Full Documentation"
                                                                className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                                                                disabled={false}
                                                                external={true}
                                                                href="https://docs.getsentry.com/hosted/clients/node/"
                                                                onClick={[Function]}
                                                                role="button"
                                                                size="small"
                                                              >
                                                                <ForwardRef
                                                                  aria-disabled={false}
                                                                  aria-label="Full Documentation"
                                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                                                                  href="https://docs.getsentry.com/hosted/clients/node/"
                                                                  onClick={[Function]}
                                                                  rel="noreferrer noopener"
                                                                  role="button"
                                                                  size="small"
                                                                  target="_blank"
                                                                >
                                                                  <a
                                                                    aria-disabled={false}
                                                                    aria-label="Full Documentation"
                                                                    className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                                                                    href="https://docs.getsentry.com/hosted/clients/node/"
                                                                    onClick={[Function]}
                                                                    rel="noreferrer noopener"
                                                                    role="button"
                                                                    size="small"
                                                                    target="_blank"
                                                                  >
                                                                    <ButtonLabel
                                                                      size="small"
                                                                    >
                                                                      <Component
                                                                        className="css-7ui8bl-ButtonLabel e12ma6z1"
                                                                        size="small"
                                                                      >
                                                                        <span
                                                                          className="css-7ui8bl-ButtonLabel e12ma6z1"
                                                                        >
                                                                          Full Documentation
                                                                        </span>
                                                                      </Component>
                                                                    </ButtonLabel>
                                                                  </a>
                                                                </ForwardRef>
                                                              </ForwardRef>
                                                            </StyledButton>
                                                          </Button>
                                                        </div>
                                                      </Base>
                                                    </Box>
                                                  </div>
                                                </Base>
                                              </Flex>
                                            </div>
                                          </Base>
                                        </Flex>
                                      </Component>
                                    </PanelHeader>
                                    <PanelAlert
                                      type="info"
                                    >
                                      <Component
                                        className="css-e1otmf-PanelAlert e1wrupv90"
                                        type="info"
                                      >
                                        <Alert
                                          className="css-e1otmf-PanelAlert e1wrupv90"
                                          icon="icon-circle-info"
                                          iconSize="24px"
                                          system={true}
                                          type="info"
                                        >
                                          <AlertWrapper
                                            className="ref-info css-e1otmf-PanelAlert e1wrupv90"
                                            system={true}
                                            type="info"
                                          >
                                            <div
                                              className="ref-info e1wrupv90 css-1yek4dg-AlertWrapper-alertStyles-PanelAlert e1xb5l7j1"
                                              type="info"
                                            >
                                              <StyledInlineSvg
                                                size="24px"
                                                src="icon-circle-info"
                                              >
                                                <InlineSvg
                                                  className="css-1e3iblq-StyledInlineSvg e1xb5l7j0"
                                                  size="24px"
                                                  src="icon-circle-info"
                                                >
                                                  <StyledSvg
                                                    className="css-1e3iblq-StyledInlineSvg e1xb5l7j0"
                                                    height="24px"
                                                    viewBox={Object {}}
                                                    width="24px"
                                                  >
                                                    <svg
                                                      className="e1xb5l7j0 css-lbx2sj-StyledSvg-StyledInlineSvg e2idor0"
                                                      height="24px"
                                                      viewBox={Object {}}
                                                      width="24px"
                                                    >
                                                      <use
                                                        href="#test"
                                                        xlinkHref="#test"
                                                      />
                                                    </svg>
                                                  </StyledSvg>
                                                </InlineSvg>
                                              </StyledInlineSvg>
                                              <StyledTextBlock>
                                                <Component
                                                  className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
                                                >
                                                  <div
                                                    className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
                                                  >
                                                    <span
                                                      key="8"
                                                    >
                                                      <span
                                                        key="0"
                                                      >
                                                        
             This is a quick getting started guide. For in-depth instructions
             on integrating Sentry with 
                                                      </span>
                                                      <span
                                                        key="2"
                                                      >
                                                        Node.js
                                                      </span>
                                                      <span
                                                        key="3"
                                                      >
                                                        , view
             
                                                      </span>
                                                      <a
                                                        href="https://docs.getsentry.com/hosted/clients/node/"
                                                        key="5"
                                                      >
                                                        <span
                                                          key="4"
                                                        >
                                                          our complete documentation
                                                        </span>
                                                      </a>
                                                      <span
                                                        key="6"
                                                      >
                                                        .
            
                                                      </span>
                                                    </span>
                                                  </div>
                                                </Component>
                                              </StyledTextBlock>
                                            </div>
                                          </AlertWrapper>
                                        </Alert>
                                      </Component>
                                    </PanelAlert>
                                    <PanelBody
                                      direction="column"
                                      disablePadding={false}
                                      flex={false}
                                    >
                                      <div
                                        className="css-8qprok-padding-textStyles"
                                      >
                                        <DocumentationWrapper
                                          dangerouslySetInnerHTML={
                                            Object {
                                              "__html": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="css-1y7l4t-DocumentationWrapper e1w9lqpk0"
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": undefined,
                                              }
                                            }
                                          />
                                        </DocumentationWrapper>
                                      </div>
                                    </PanelBody>
                                  </div>
                                </Component>
                              </Panel>
                            </ProjectInstallPlatform>
                          </withProject(ProjectInstallPlatform)>
                        </WithOrganizationMockWrapper>
                      </withApi(WithOrganizationMockWrapper)>
                    </DocumentTitle>
                  </SideEffect(DocumentTitle)>
                </ProjectContext>
              </withRouter(ProjectContext)>
            </withProjects(withRouter(ProjectContext))>
          </WithOrganizationMockWrapper>
        </withApi(WithOrganizationMockWrapper)>
        <DoneButton>
          <div
            className="css-5mss3k-DoneButton e1f5fl7e0"
          >
            <Button
              data-test-id="configure-done"
              disabled={false}
              onClick={[Function]}
              priority="primary"
            >
              <StyledButton
                aria-disabled={false}
                aria-label="All done!"
                data-test-id="configure-done"
                disabled={false}
                onClick={[Function]}
                priority="primary"
                role="button"
              >
                <ForwardRef
                  aria-disabled={false}
                  aria-label="All done!"
                  className="css-1qchtmp-StyledButton-getColors e12ma6z0"
                  data-test-id="configure-done"
                  disabled={false}
                  onClick={[Function]}
                  priority="primary"
                  role="button"
                >
                  <button
                    aria-disabled={false}
                    aria-label="All done!"
                    className="css-1qchtmp-StyledButton-getColors e12ma6z0"
                    data-test-id="configure-done"
                    onClick={[Function]}
                    role="button"
                  >
                    <ButtonLabel
                      priority="primary"
                    >
                      <Component
                        className="css-ga4b18-ButtonLabel e12ma6z1"
                        priority="primary"
                      >
                        <span
                          className="css-ga4b18-ButtonLabel e12ma6z1"
                        >
                          All done!
                        </span>
                      </Component>
                    </ButtonLabel>
                  </button>
                </ForwardRef>
              </StyledButton>
            </Button>
          </div>
        </DoneButton>
      </div>
    </div>
  </Configure>
</WithOrganizationMockWrapper>
`;
