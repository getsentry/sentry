// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Project render() should render NotFound if no matching organization 1`] = `
<div
  className="onboarding-info"
>
  <PageHeading
    withMargins={true}
  >
    Choose a language or framework:
  </PageHeading>
  <PlatformPicker
    location={
      Object {
        "query": Object {},
      }
    }
    name=""
    next={[MockFunction]}
    params={
      Object {
        "orgId": "my-cool-org",
      }
    }
    platform=""
    setName={[MockFunction]}
    setPlatform={[MockFunction]}
    setTeam={[Function]}
    showOther={true}
    team=""
    teams={Array []}
  />
  <div
    className="create-project-form"
  >
    <div
      className="new-project-name client-platform"
    >
      <PageHeading
        withMargins={true}
      >
        Give your project a name:
      </PageHeading>
      <div
        className="project-name-wrapper"
      >
        <PlatformiconTile
          platform=""
        />
        <input
          autoComplete="off"
          label="Project Name"
          name="name"
          onChange={[Function]}
          placeholder="Project name"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="new-project-team"
    >
      <PageHeading
        withMargins={true}
      >
        Team:
      </PageHeading>
      <div>
        <SelectField
          clearable={false}
          disabled={false}
          hideErrorMessage={false}
          multiple={false}
          name="select-team"
          onChange={[Function]}
          options={Array []}
          required={false}
          style={
            Object {
              "marginBottom": 0,
              "width": 180,
            }
          }
          value=""
        />
      </div>
    </div>
    <div>
      <button
        className="btn btn-primary new-project-submit"
        onClick={[Function]}
      >
        Create Project
      </button>
    </div>
    <p>
      Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
    </p>
  </div>
</div>
`;

exports[`Project render() should set required class on empty submit 1`] = `
<OnboardingProject
  location={
    Object {
      "query": Object {},
    }
  }
  name="bar"
  next={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  platform=""
  setName={[MockFunction]}
  setPlatform={[MockFunction]}
  setTeam={[Function]}
  team=""
  teams={Array []}
>
  <div
    className="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <Wrapper
        withMargins={true}
      >
        <h1
          className="css-wxef79-Wrapper e1f8hk460"
        >
          Choose a language or framework:
        </h1>
      </Wrapper>
    </PageHeading>
    <PlatformPicker
      location={
        Object {
          "query": Object {},
        }
      }
      name="bar"
      next={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      params={
        Object {
          "orgId": "testOrg",
          "projectId": "",
        }
      }
      platform=""
      setName={[MockFunction]}
      setPlatform={[MockFunction]}
      setTeam={[Function]}
      showOther={true}
      team=""
      teams={Array []}
    >
      <div
        className="platform-picker"
      >
        <NavTabs>
          <ul
            className="nav nav-tabs"
          >
            <li
              style={
                Object {
                  "float": "right",
                  "marginRight": 0,
                }
              }
            >
              <div
                className="platform-filter-container"
              >
                <span
                  className="icon icon-search"
                />
                <input
                  className="platform-filter"
                  label="Filter"
                  onChange={[Function]}
                  placeholder="Filter"
                  type="text"
                  value=""
                />
              </div>
            </li>
            <ListLink
              activeClassName="active"
              index={false}
              isActive={[Function]}
              key="popular"
              onClick={[Function]}
              to=""
            >
              <li
                className="active"
              >
                <Link
                  onClick={[Function]}
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to=""
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Popular
                  </a>
                </Link>
              </li>
            </ListLink>
            <ListLink
              activeClassName="active"
              index={false}
              isActive={[Function]}
              key="browser"
              onClick={[Function]}
              to=""
            >
              <li
                className=""
              >
                <Link
                  onClick={[Function]}
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to=""
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Browser
                  </a>
                </Link>
              </li>
            </ListLink>
            <ListLink
              activeClassName="active"
              index={false}
              isActive={[Function]}
              key="server"
              onClick={[Function]}
              to=""
            >
              <li
                className=""
              >
                <Link
                  onClick={[Function]}
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to=""
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Server
                  </a>
                </Link>
              </li>
            </ListLink>
            <ListLink
              activeClassName="active"
              index={false}
              isActive={[Function]}
              key="mobile"
              onClick={[Function]}
              to=""
            >
              <li
                className=""
              >
                <Link
                  onClick={[Function]}
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to=""
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Mobile
                  </a>
                </Link>
              </li>
            </ListLink>
            <ListLink
              activeClassName="active"
              index={false}
              isActive={[Function]}
              key="desktop"
              onClick={[Function]}
              to=""
            >
              <li
                className=""
              >
                <Link
                  onClick={[Function]}
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to=""
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Desktop
                  </a>
                </Link>
              </li>
            </ListLink>
            <ListLink
              activeClassName="active"
              index={false}
              isActive={[Function]}
              key="all"
              onClick={[Function]}
              to=""
            >
              <li
                className=""
              >
                <Link
                  onClick={[Function]}
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to=""
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    All
                  </a>
                </Link>
              </li>
            </ListLink>
          </ul>
        </NavTabs>
        <ul
          className="client-platform-list platform-tiles"
        >
          <PlatformCard
            className=""
            key="csharp"
            onClick={[Function]}
            platform="csharp"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="csharp"
              >
                <li
                  className="platform-tile list-unstyled csharp csharp "
                >
                  <span
                    className="platformicon platformicon-csharp"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                C#
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="java"
            onClick={[Function]}
            platform="java"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="java"
              >
                <li
                  className="platform-tile list-unstyled java java "
                >
                  <span
                    className="platformicon platformicon-java"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Java
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="javascript-angular"
            onClick={[Function]}
            platform="javascript-angular"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="javascript-angular"
              >
                <li
                  className="platform-tile list-unstyled javascript-angular javascript "
                >
                  <span
                    className="platformicon platformicon-javascript-angular"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Angular
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="javascript"
            onClick={[Function]}
            platform="javascript"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="javascript"
              >
                <li
                  className="platform-tile list-unstyled javascript javascript "
                >
                  <span
                    className="platformicon platformicon-javascript"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                JavaScript
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="javascript-react"
            onClick={[Function]}
            platform="javascript-react"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="javascript-react"
              >
                <li
                  className="platform-tile list-unstyled javascript-react javascript "
                >
                  <span
                    className="platformicon platformicon-javascript-react"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                React
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="node-express"
            onClick={[Function]}
            platform="node-express"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="node-express"
              >
                <li
                  className="platform-tile list-unstyled node-express node "
                >
                  <span
                    className="platformicon platformicon-node-express"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Express
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="node"
            onClick={[Function]}
            platform="node"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="node"
              >
                <li
                  className="platform-tile list-unstyled node node "
                >
                  <span
                    className="platformicon platformicon-node"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Node.js
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="php-laravel"
            onClick={[Function]}
            platform="php-laravel"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="php-laravel"
              >
                <li
                  className="platform-tile list-unstyled php-laravel php "
                >
                  <span
                    className="platformicon platformicon-php-laravel"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Laravel
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="php"
            onClick={[Function]}
            platform="php"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="php"
              >
                <li
                  className="platform-tile list-unstyled php php "
                >
                  <span
                    className="platformicon platformicon-php"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                PHP
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="php-symfony2"
            onClick={[Function]}
            platform="php-symfony2"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="php-symfony2"
              >
                <li
                  className="platform-tile list-unstyled php-symfony2 php "
                >
                  <span
                    className="platformicon platformicon-php-symfony2"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Symfony2
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="python-django"
            onClick={[Function]}
            platform="python-django"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="python-django"
              >
                <li
                  className="platform-tile list-unstyled python-django python "
                >
                  <span
                    className="platformicon platformicon-python-django"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Django
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="python-flask"
            onClick={[Function]}
            platform="python-flask"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="python-flask"
              >
                <li
                  className="platform-tile list-unstyled python-flask python "
                >
                  <span
                    className="platformicon platformicon-python-flask"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Flask
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="python"
            onClick={[Function]}
            platform="python"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="python"
              >
                <li
                  className="platform-tile list-unstyled python python "
                >
                  <span
                    className="platformicon platformicon-python"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Python
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="cocoa"
            onClick={[Function]}
            platform="cocoa"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="cocoa"
              >
                <li
                  className="platform-tile list-unstyled cocoa cocoa "
                >
                  <span
                    className="platformicon platformicon-cocoa"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                React-Native
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="ruby-rails"
            onClick={[Function]}
            platform="ruby-rails"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="ruby-rails"
              >
                <li
                  className="platform-tile list-unstyled ruby-rails ruby "
                >
                  <span
                    className="platformicon platformicon-ruby-rails"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Rails
                 
              </h5>
            </span>
          </PlatformCard>
          <PlatformCard
            className=""
            key="ruby"
            onClick={[Function]}
            platform="ruby"
          >
            <span
              className="platform-card"
              onClick={[Function]}
            >
              <PlatformiconTile
                className=""
                onClick={[Function]}
                platform="ruby"
              >
                <li
                  className="platform-tile list-unstyled ruby ruby "
                >
                  <span
                    className="platformicon platformicon-ruby"
                  />
                </li>
              </PlatformiconTile>
              <h5>
                 
                Ruby
                 
              </h5>
            </span>
          </PlatformCard>
        </ul>
      </div>
    </PlatformPicker>
    <div
      className="create-project-form"
    >
      <div
        className="new-project-name client-platform"
      >
        <PageHeading
          withMargins={true}
        >
          <Wrapper
            withMargins={true}
          >
            <h1
              className="css-wxef79-Wrapper e1f8hk460"
            >
              Give your project a name:
            </h1>
          </Wrapper>
        </PageHeading>
        <div
          className="project-name-wrapper"
        >
          <PlatformiconTile
            platform=""
          >
            <li
              className="platform-tile list-unstyled   undefined"
            >
              <span
                className="platformicon platformicon-"
              />
            </li>
          </PlatformiconTile>
          <input
            autoComplete="off"
            label="Project Name"
            name="name"
            onChange={[Function]}
            placeholder="Project name"
            type="text"
            value="bar"
          />
        </div>
      </div>
      <div
        className="new-project-team"
      >
        <PageHeading
          withMargins={true}
        >
          <Wrapper
            withMargins={true}
          >
            <h1
              className="css-wxef79-Wrapper e1f8hk460"
            >
              Team:
            </h1>
          </Wrapper>
        </PageHeading>
        <div>
          <SelectField
            clearable={false}
            disabled={false}
            hideErrorMessage={false}
            multiple={false}
            name="select-team"
            onChange={[Function]}
            options={Array []}
            required={false}
            style={
              Object {
                "marginBottom": 0,
                "width": 180,
              }
            }
            value=""
          >
            <div
              className=""
              style={
                Object {
                  "marginBottom": 0,
                  "width": 180,
                }
              }
            >
              <div
                className="controls"
              >
                <StyledSelectControl
                  clearable={false}
                  disabled={false}
                  id="id-select-team"
                  multiple={false}
                  name="select-team"
                  onChange={[Function]}
                  options={Array []}
                  required={false}
                  value=""
                >
                  <SelectControl
                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
                    clearable={false}
                    disabled={false}
                    height={36}
                    id="id-select-team"
                    multiple={false}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    required={false}
                    value=""
                  >
                    <StyledSelect
                      arrowRenderer={[Function]}
                      backspaceRemoves={false}
                      className="css-j6zs66-StyledSelectControl e1qrhqd00"
                      clearable={false}
                      deleteRemoves={false}
                      disabled={false}
                      height={36}
                      id="id-select-team"
                      multiple={false}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      required={false}
                      value=""
                    >
                      <ForwardRef(SelectPicker)
                        arrowRenderer={[Function]}
                        backspaceRemoves={false}
                        className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
                        clearable={false}
                        deleteRemoves={false}
                        disabled={false}
                        height={36}
                        id="id-select-team"
                        multiple={false}
                        name="select-team"
                        onChange={[Function]}
                        options={Array []}
                        required={false}
                        value=""
                      >
                        <SelectPicker
                          arrowRenderer={[Function]}
                          backspaceRemoves={false}
                          className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
                          clearable={false}
                          deleteRemoves={false}
                          disabled={false}
                          forwardedRef={null}
                          height={36}
                          id="id-select-team"
                          multiple={false}
                          name="select-team"
                          onChange={[Function]}
                          options={Array []}
                          required={false}
                          value=""
                        >
                          <Select
                            arrowRenderer={[Function]}
                            autosize={true}
                            backspaceRemoves={false}
                            backspaceToRemoveMessage="Press backspace to remove {label}"
                            className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
                            clearAllText="Clear all"
                            clearRenderer={[Function]}
                            clearValueText="Clear value"
                            clearable={false}
                            closeOnSelect={true}
                            deleteRemoves={false}
                            delimiter=","
                            disabled={false}
                            escapeClearsValue={true}
                            filterOptions={[Function]}
                            height={36}
                            id="id-select-team"
                            ignoreAccents={true}
                            ignoreCase={true}
                            inputProps={Object {}}
                            isLoading={false}
                            joinValues={false}
                            labelKey="label"
                            matchPos="any"
                            matchProp="any"
                            menuBuffer={0}
                            menuRenderer={[Function]}
                            multi={false}
                            multiple={false}
                            name="select-team"
                            noResultsText="No results found"
                            onBlurResetsInput={true}
                            onChange={[Function]}
                            onCloseResetsInput={true}
                            onSelectResetsInput={true}
                            openOnClick={true}
                            optionComponent={[Function]}
                            options={Array []}
                            pageSize={5}
                            placeholder="Select..."
                            removeSelected={true}
                            required={false}
                            rtl={false}
                            scrollMenuIntoView={true}
                            searchable={true}
                            simpleValue={false}
                            tabSelectsValue={true}
                            trimFilter={true}
                            value=""
                            valueComponent={[Function]}
                            valueKey="value"
                          >
                            <div
                              className="Select e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20 is-searchable Select--single"
                            >
                              <div
                                className="Select-control"
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                              >
                                <span
                                  className="Select-multi-value-wrapper"
                                  id="react-select-2--value"
                                >
                                  <div
                                    className="Select-placeholder"
                                  >
                                    Select...
                                  </div>
                                  <AutosizeInput
                                    aria-activedescendant="react-select-2--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    className="Select-input"
                                    id="id-select-team"
                                    injectStyles={true}
                                    minWidth="5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    value=""
                                  >
                                    <div
                                      className="Select-input"
                                      style={
                                        Object {
                                          "display": "inline-block",
                                        }
                                      }
                                    >
                                      <input
                                        aria-activedescendant="react-select-2--value"
                                        aria-expanded="false"
                                        aria-haspopup="false"
                                        aria-owns=""
                                        id="id-select-team"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        role="combobox"
                                        style={
                                          Object {
                                            "boxSizing": "content-box",
                                            "width": "5px",
                                          }
                                        }
                                        value=""
                                      />
                                      <div
                                        style={
                                          Object {
                                            "height": 0,
                                            "left": 0,
                                            "overflow": "scroll",
                                            "position": "absolute",
                                            "top": 0,
                                            "visibility": "hidden",
                                            "whiteSpace": "pre",
                                          }
                                        }
                                      />
                                    </div>
                                  </AutosizeInput>
                                </span>
                                <span
                                  className="Select-arrow-zone"
                                  onMouseDown={[Function]}
                                >
                                  <span
                                    className="icon-arrow-down"
                                  />
                                </span>
                              </div>
                            </div>
                          </Select>
                        </SelectPicker>
                      </ForwardRef(SelectPicker)>
                    </StyledSelect>
                  </SelectControl>
                </StyledSelectControl>
              </div>
            </div>
          </SelectField>
        </div>
      </div>
      <div>
        <button
          className="btn btn-primary new-project-submit"
          onClick={[Function]}
        >
          Create Project
        </button>
      </div>
      <p>
        Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
      </p>
    </div>
  </div>
</OnboardingProject>
`;
