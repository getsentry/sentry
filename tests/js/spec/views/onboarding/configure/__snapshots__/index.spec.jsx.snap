// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Configure should render correctly render() should redirect to if no matching platform 1`] = `
<div>
  <div
    className="onboarding-Configure"
  >
    <h2
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      Configure your application
    </h2>
    <withRouter(ProjectContext)
      orgId="testOrg"
      projectId="project-slug"
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <ProjectDocsContext>
        <ProjectInstallPlatform
          linkPath={[Function]}
          params={
            Object {
              "orgId": "testOrg",
              "platform": "other",
              "projectId": "project-slug",
            }
          }
          platformData={
            Object {
              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
            }
          }
        />
      </ProjectDocsContext>
    </withRouter(ProjectContext)>
    <Waiting
      hasEvent={false}
      skip={[Function]}
    />
  </div>
</div>
`;

exports[`Configure should render correctly render() should render platform docs 1`] = `
.glamor-17 {
  background: #fff;
  border: 1px solid;
  margin-bottom: NaNpx;
  position: relative;
}

.glamor-6 {
  font-size: 13px;
  font-weight: 600;
  text-transform: uppercase;
  border-bottom: 1px solid;
  border-radius: 0 0;
  line-height: 1;
  padding: 8px 20px;
}

.glamor-3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  font-size: 13px;
  font-weight: 600;
  text-transform: uppercase;
  border-bottom: 1px solid;
  border-radius: 0 0;
  line-height: 1;
  padding: 8px 20px;
}

.glamor-0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.glamor-16 {
  padding: 20px;
}

.glamor-10 {
  line-height: 1.5;
  margin-bottom: 30px;
}

.glamor-14 p {
  line-height: 1.5;
}

<Configure
  next={[Function]}
  params={
    Object {
      "orgId": "testOrg",
      "platform": "node",
      "projectId": "project-slug",
    }
  }
>
  <div>
    <div
      className="onboarding-Configure"
    >
      <h2
        style={
          Object {
            "marginBottom": 30,
          }
        }
      >
        Configure your application
      </h2>
      <withRouter(ProjectContext)
        orgId="testOrg"
        projectId="project-slug"
        style={
          Object {
            "marginBottom": 30,
          }
        }
      >
        <ProjectContext
          location={
            Object {
              "query": Object {},
            }
          }
          orgId="testOrg"
          projectId="project-slug"
          router={
            Object {
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "isActive": [Function],
              "location": Object {
                "query": Object {},
              },
              "push": [Function],
              "replace": [Function],
              "setRouteLeaveHook": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 30,
            }
          }
        >
          <SideEffect(DocumentTitle)
            title="project-slug"
          >
            <DocumentTitle
              title="project-slug"
            >
              <ProjectDocsContext>
                <ProjectInstallPlatform
                  linkPath={[Function]}
                  params={
                    Object {
                      "orgId": "testOrg",
                      "platform": "node",
                      "projectId": "project-slug",
                    }
                  }
                  platformData={
                    Object {
                      "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
                      "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
                      "platforms": Array [
                        Object {
                          "id": "javascript",
                          "integrations": Array [
                            Object {
                              "id": "node",
                              "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                              "name": "node",
                              "type": "language",
                            },
                          ],
                          "name": "js",
                        },
                      ],
                    }
                  }
                >
                  <div
                    className="install row"
                  >
                    <div
                      className="install-content col-md-10"
                    >
                      <Panel>
                        <StyledPanel>
                          <div
                            className="glamor-17 glamor-18"
                          >
                            <PanelHeader
                              hasButtons={true}
                            >
                              <StyledPanelHeader
                                hasButtons={true}
                              >
                                <Component
                                  className="glamor-6 glamor-2"
                                  hasButtons={true}
                                >
                                  <Flex
                                    align="center"
                                    className="glamor-6 glamor-2"
                                    justify="space-between"
                                  >
                                    <Base
                                      align="center"
                                      className="glamor-2 glamor-3"
                                      justify="space-between"
                                    >
                                      <div
                                        className="glamor-2 glamor-3"
                                        is={null}
                                      >
                                        Configure node
                                        <Button
                                          disabled={false}
                                          external={true}
                                          href="https://docs.getsentry.com/hosted/clients/csharp/"
                                          size="small"
                                        >
                                          <ExternalLink
                                            className="button button-default button-sm"
                                            disabled={false}
                                            href="https://docs.getsentry.com/hosted/clients/csharp/"
                                            onClick={[Function]}
                                            rel="noreferrer noopener"
                                            role="button"
                                            target="_blank"
                                          >
                                            <a
                                              className="button button-default button-sm"
                                              disabled={false}
                                              href="https://docs.getsentry.com/hosted/clients/csharp/"
                                              onClick={[Function]}
                                              rel="noreferrer noopener"
                                              role="button"
                                              target="_blank"
                                            >
                                              <Flex
                                                align="center"
                                                className="button-label"
                                              >
                                                <Base
                                                  align="center"
                                                  className="button-label glamor-0"
                                                >
                                                  <div
                                                    className="button-label glamor-0"
                                                    is={null}
                                                  >
                                                    Full Documentation
                                                  </div>
                                                </Base>
                                              </Flex>
                                            </a>
                                          </ExternalLink>
                                        </Button>
                                      </div>
                                    </Base>
                                  </Flex>
                                </Component>
                              </StyledPanelHeader>
                            </PanelHeader>
                            <PanelBody
                              direction="column"
                              disablePadding={false}
                              flex={false}
                            >
                              <div
                                className="glamor-16"
                              >
                                <TextBlock>
                                  <Component
                                    className="glamor-10 glamor-11"
                                  >
                                    <div
                                      className="glamor-10 glamor-11"
                                    >
                                      <span
                                        key="8"
                                      >
                                        <span
                                          key="0"
                                        >
                                          
             This is a quick getting started guide. For in-depth instructions
             on integrating Sentry with 
                                        </span>
                                        <span
                                          key="2"
                                        >
                                          node
                                        </span>
                                        <span
                                          key="3"
                                        >
                                          , view
             
                                        </span>
                                        <a
                                          href="https://docs.getsentry.com/hosted/clients/csharp/"
                                          key="5"
                                        >
                                          <span
                                            key="4"
                                          >
                                            our complete documentation
                                          </span>
                                        </a>
                                        <span
                                          key="6"
                                        >
                                          .
            
                                        </span>
                                      </span>
                                    </div>
                                  </Component>
                                </TextBlock>
                                <DocumentationWrapper
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": undefined,
                                    }
                                  }
                                >
                                  <div
                                    className="glamor-14 glamor-15"
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": undefined,
                                      }
                                    }
                                  />
                                </DocumentationWrapper>
                              </div>
                            </PanelBody>
                          </div>
                        </StyledPanel>
                      </Panel>
                    </div>
                    <div
                      className="install-sidebar col-md-2"
                    >
                      <LanguageNav
                        active={true}
                        key="javascript"
                        name="js"
                      >
                        <div
                          className="install-language-nav"
                        >
                          <ul
                            className="list-group"
                          >
                            <li
                              className="list-group-item list-group-header"
                            >
                              <a
                                onClick={[Function]}
                                style={
                                  Object {
                                    "display": "block",
                                  }
                                }
                              >
                                <span
                                  className="pull-right"
                                >
                                  <span
                                    className="icon-minus"
                                  />
                                </span>
                                <strong>
                                  js
                                </strong>
                              </a>
                            </li>
                            <span
                              style={
                                Object {
                                  "display": "block",
                                }
                              }
                            >
                              <Link
                                className="list-group-item"
                                key="node"
                                to="/onboarding/testOrg/project-slug/configure/node/"
                              >
                                <a
                                  className="list-group-item"
                                  href="/onboarding/testOrg/project-slug/configure/node/"
                                >
                                  node
                                </a>
                              </Link>
                            </span>
                          </ul>
                        </div>
                      </LanguageNav>
                    </div>
                  </div>
                </ProjectInstallPlatform>
              </ProjectDocsContext>
            </DocumentTitle>
          </SideEffect(DocumentTitle)>
        </ProjectContext>
      </withRouter(ProjectContext)>
      <Waiting
        hasEvent={false}
        skip={[Function]}
      >
        <div
          className="awaiting-event"
        >
          <div
            className="pull-right"
          >
            <div
              className="btn btn-primary"
              onClick={[Function]}
            >
              All done!
            </div>
          </div>
          <div
            className="wrap waiting-text"
          >
            <h3
              className="animated-ellipsis"
            >
              Waiting to receive an error
            </h3>
            <div
              className="robot"
            >
              <span
                className="eye"
              />
            </div>
          </div>
        </div>
      </Waiting>
    </div>
  </div>
</Configure>
`;

exports[`Configure should render correctly render() shouldn't redirect for a found platform 1`] = `
<div>
  <div
    className="onboarding-Configure"
  >
    <h2
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      Configure your application
    </h2>
    <withRouter(ProjectContext)
      orgId="testOrg"
      projectId="project-slug"
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <ProjectDocsContext>
        <ProjectInstallPlatform
          linkPath={[Function]}
          params={
            Object {
              "orgId": "testOrg",
              "platform": "node",
              "projectId": "project-slug",
            }
          }
          platformData={
            Object {
              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
            }
          }
        />
      </ProjectDocsContext>
    </withRouter(ProjectContext)>
    <Waiting
      hasEvent={false}
      skip={[Function]}
    />
  </div>
</div>
`;
