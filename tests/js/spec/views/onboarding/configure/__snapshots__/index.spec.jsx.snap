// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Configure should render correctly render() should redirect to if no matching platform 1`] = `
<div>
  <div
    className="onboarding-Configure"
  >
    <h2
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      Configure your application
    </h2>
    <ProjectContext
      orgId="testOrg"
      projectId="testProject"
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <ProjectDocsContext>
        <ProjectInstallPlatform
          linkPath={[Function]}
          params={
            Object {
              "orgId": "testOrg",
              "platform": "other",
              "projectId": "testProject",
            }
          }
          platformData={
            Object {
              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
            }
          }
        />
      </ProjectDocsContext>
    </ProjectContext>
    <Waiting
      hasEvent={false}
      skip={[Function]}
    />
  </div>
</div>
`;

exports[`Configure should render correctly render() should render platform docs 1`] = `
<Configure
  next={[Function]}
  params={
    Object {
      "orgId": "testOrg",
      "platform": "node",
      "projectId": "testProject",
    }
  }
>
  <div>
    <div
      className="onboarding-Configure"
    >
      <h2
        style={
          Object {
            "marginBottom": 30,
          }
        }
      >
        Configure your application
      </h2>
      <ProjectContext
        orgId="testOrg"
        projectId="testProject"
        style={
          Object {
            "marginBottom": 30,
          }
        }
      >
        <SideEffect(DocumentTitle)
          title="undefined / Test Project"
        >
          <DocumentTitle
            title="undefined / Test Project"
          >
            <ProjectDocsContext>
              <LoadingIndicator>
                <div
                  className="loading"
                >
                  <div
                    className="loading-indicator"
                  />
                  <div
                    className="loading-message"
                  />
                </div>
              </LoadingIndicator>
            </ProjectDocsContext>
          </DocumentTitle>
        </SideEffect(DocumentTitle)>
      </ProjectContext>
      <Waiting
        hasEvent={false}
        skip={[Function]}
      >
        <div
          className="awaiting-event"
        >
          <div
            className="pull-right"
          >
            <div
              className="btn btn-primary"
              onClick={[Function]}
            >
              All done!
            </div>
          </div>
          <div
            className="wrap waiting-text"
          >
            <h3
              className="animated-ellipsis"
            >
              Waiting to receive an error
            </h3>
            <div
              className="robot"
            >
              <span
                className="eye"
              />
            </div>
          </div>
        </div>
      </Waiting>
    </div>
  </div>
</Configure>
`;

exports[`Configure should render correctly render() shouldn't redirect for a found platform 1`] = `
<div>
  <div
    className="onboarding-Configure"
  >
    <h2
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      Configure your application
    </h2>
    <ProjectContext
      orgId="testOrg"
      projectId="testProject"
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <ProjectDocsContext>
        <ProjectInstallPlatform
          linkPath={[Function]}
          params={
            Object {
              "orgId": "testOrg",
              "platform": "node",
              "projectId": "testProject",
            }
          }
          platformData={
            Object {
              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
            }
          }
        />
      </ProjectDocsContext>
    </ProjectContext>
    <Waiting
      hasEvent={false}
      skip={[Function]}
    />
  </div>
</div>
`;
