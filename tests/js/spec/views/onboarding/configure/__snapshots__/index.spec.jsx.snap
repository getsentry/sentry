// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Configure should render correctly render() should redirect to if no matching platform 1`] = `
<div>
  <div
    className="onboarding-Configure"
  >
    <h2
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      Configure your application
    </h2>
    <withProjects
      orgId="testOrg"
      projectId="project-slug"
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <ProjectDocsContext>
        <ProjectInstallPlatform
          linkPath={[Function]}
          params={
            Object {
              "orgId": "testOrg",
              "platform": "other",
              "projectId": "project-slug",
            }
          }
          platformData={
            Object {
              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
            }
          }
        />
      </ProjectDocsContext>
    </withProjects>
    <Waiting
      hasEvent={false}
      skip={[Function]}
    />
  </div>
</div>
`;

exports[`Configure should render correctly render() should render platform docs 1`] = `
<Configure
  next={[Function]}
  params={
    Object {
      "orgId": "testOrg",
      "platform": "node",
      "projectId": "project-slug",
    }
  }
>
  <div>
    <div
      className="onboarding-Configure"
    >
      <h2
        style={
          Object {
            "marginBottom": 30,
          }
        }
      >
        Configure your application
      </h2>
      <withProjects
        orgId="testOrg"
        projectId="project-slug"
        style={
          Object {
            "marginBottom": 30,
          }
        }
      >
        <withRouter(ProjectContext)
          orgId="testOrg"
          projectId="project-slug"
          projects={
            Array [
              Object {
                "hasAccess": true,
                "id": "testProject",
                "isBookmarked": false,
                "name": "Test Project",
                "slug": "project-slug",
                "teams": Array [
                  Object {
                    "hasAccess": true,
                    "id": "coolid",
                    "slug": "coolteam",
                  },
                ],
              },
            ]
          }
          style={
            Object {
              "marginBottom": 30,
            }
          }
        >
          <ProjectContext
            location={
              Object {
                "query": Object {},
              }
            }
            orgId="testOrg"
            projectId="project-slug"
            projects={
              Array [
                Object {
                  "hasAccess": true,
                  "id": "testProject",
                  "isBookmarked": false,
                  "name": "Test Project",
                  "slug": "project-slug",
                  "teams": Array [
                    Object {
                      "hasAccess": true,
                      "id": "coolid",
                      "slug": "coolteam",
                    },
                  ],
                },
              ]
            }
            router={
              Object {
                "createHref": [MockFunction] {
                  "calls": Array [
                    Array [
                      "/onboarding/testOrg/project-slug/configure/node/",
                    ],
                    Array [
                      "/onboarding/testOrg/project-slug/configure/node/",
                    ],
                  ],
                },
                "go": [MockFunction],
                "goBack": [MockFunction],
                "goForward": [MockFunction],
                "isActive": [MockFunction],
                "listen": [MockFunction],
                "location": Object {
                  "query": Object {},
                },
                "push": [MockFunction],
                "replace": [MockFunction],
                "setRouteLeaveHook": [MockFunction],
              }
            }
            style={
              Object {
                "marginBottom": 30,
              }
            }
          >
            <SideEffect(DocumentTitle)
              title="project-slug"
            >
              <DocumentTitle
                title="project-slug"
              >
                <ProjectDocsContext>
                  <ProjectInstallPlatform
                    linkPath={[Function]}
                    params={
                      Object {
                        "orgId": "testOrg",
                        "platform": "node",
                        "projectId": "project-slug",
                      }
                    }
                    platformData={
                      Object {
                        "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
                        "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
                        "platforms": Array [
                          Object {
                            "id": "javascript",
                            "integrations": Array [
                              Object {
                                "id": "node",
                                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                                "name": "node",
                                "type": "language",
                              },
                            ],
                            "name": "js",
                          },
                        ],
                      }
                    }
                  >
                    <div
                      className="install row"
                    >
                      <div
                        className="install-content col-md-10"
                      >
                        <Panel>
                          <Component
                            className="css-10qfvek-Panel e1laxa7d0"
                          >
                            <div
                              className="css-10qfvek-Panel e1laxa7d0"
                            >
                              <PanelHeader
                                hasButtons={true}
                              >
                                <Component
                                  className="css-xm0vov-PanelHeader-getPadding e1p8v8nv0"
                                  hasButtons={true}
                                >
                                  <Flex
                                    align="center"
                                    className="css-xm0vov-PanelHeader-getPadding e1p8v8nv0"
                                    justify="space-between"
                                  >
                                    <Base
                                      align="center"
                                      className="e1p8v8nv0 css-13rknte-PanelHeader-getPadding"
                                      justify="space-between"
                                    >
                                      <div
                                        className="e1p8v8nv0 css-13rknte-PanelHeader-getPadding"
                                        is={null}
                                      >
                                        Configure node
                                        <Button
                                          disabled={false}
                                          external={true}
                                          href="https://docs.getsentry.com/hosted/clients/csharp/"
                                          size="small"
                                        >
                                          <StyledButton
                                            aria-label="Full Documentation"
                                            disabled={false}
                                            external={true}
                                            href="https://docs.getsentry.com/hosted/clients/csharp/"
                                            onClick={[Function]}
                                            role="button"
                                            size="small"
                                          >
                                            <Component
                                              aria-label="Full Documentation"
                                              className="css-dkprmi-StyledButton-getColors e17811v30"
                                              disabled={false}
                                              external={true}
                                              href="https://docs.getsentry.com/hosted/clients/csharp/"
                                              onClick={[Function]}
                                              role="button"
                                              size="small"
                                            >
                                              <ExternalLink
                                                aria-label="Full Documentation"
                                                className="css-dkprmi-StyledButton-getColors e17811v30"
                                                disabled={false}
                                                href="https://docs.getsentry.com/hosted/clients/csharp/"
                                                onClick={[Function]}
                                                rel="noreferrer noopener"
                                                role="button"
                                                size="small"
                                                target="_blank"
                                              >
                                                <a
                                                  aria-label="Full Documentation"
                                                  className="css-dkprmi-StyledButton-getColors e17811v30"
                                                  disabled={false}
                                                  href="https://docs.getsentry.com/hosted/clients/csharp/"
                                                  onClick={[Function]}
                                                  rel="noreferrer noopener"
                                                  role="button"
                                                  size="small"
                                                  target="_blank"
                                                >
                                                  <ButtonLabel
                                                    size="small"
                                                  >
                                                    <Component
                                                      className="css-19bmqb3-ButtonLabel e17811v31"
                                                      size="small"
                                                    >
                                                      <Flex
                                                        align="center"
                                                        className="css-19bmqb3-ButtonLabel e17811v31"
                                                        size="small"
                                                      >
                                                        <Base
                                                          align="center"
                                                          className="e17811v31 css-1eblpyp-ButtonLabel"
                                                          size="small"
                                                        >
                                                          <div
                                                            className="e17811v31 css-1eblpyp-ButtonLabel"
                                                            is={null}
                                                            size="small"
                                                          >
                                                            Full Documentation
                                                          </div>
                                                        </Base>
                                                      </Flex>
                                                    </Component>
                                                  </ButtonLabel>
                                                </a>
                                              </ExternalLink>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </div>
                                    </Base>
                                  </Flex>
                                </Component>
                              </PanelHeader>
                              <PanelBody
                                direction="column"
                                disablePadding={false}
                                flex={false}
                              >
                                <div
                                  className="css-zhfi4l-padding-textStyles"
                                >
                                  <TextBlock>
                                    <Component
                                      className="css-1geyb25-TextBlock ec8ep340"
                                    >
                                      <div
                                        className="css-1geyb25-TextBlock ec8ep340"
                                      >
                                        <span
                                          key="8"
                                        >
                                          <span
                                            key="0"
                                          >
                                            
             This is a quick getting started guide. For in-depth instructions
             on integrating Sentry with 
                                          </span>
                                          <span
                                            key="2"
                                          >
                                            node
                                          </span>
                                          <span
                                            key="3"
                                          >
                                            , view
             
                                          </span>
                                          <a
                                            href="https://docs.getsentry.com/hosted/clients/csharp/"
                                            key="5"
                                          >
                                            <span
                                              key="4"
                                            >
                                              our complete documentation
                                            </span>
                                          </a>
                                          <span
                                            key="6"
                                          >
                                            .
            
                                          </span>
                                        </span>
                                      </div>
                                    </Component>
                                  </TextBlock>
                                  <DocumentationWrapper
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": undefined,
                                      }
                                    }
                                  >
                                    <div
                                      className="css-1y7l4t-DocumentationWrapper e1w9lqpk0"
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": undefined,
                                        }
                                      }
                                    />
                                  </DocumentationWrapper>
                                </div>
                              </PanelBody>
                            </div>
                          </Component>
                        </Panel>
                      </div>
                      <div
                        className="install-sidebar col-md-2"
                      >
                        <LanguageNav
                          active={true}
                          key="javascript"
                          name="js"
                        >
                          <div
                            className="install-language-nav"
                          >
                            <ul
                              className="list-group"
                            >
                              <li
                                className="list-group-item list-group-header"
                              >
                                <a
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "display": "block",
                                    }
                                  }
                                >
                                  <span
                                    className="pull-right"
                                  >
                                    <span
                                      className="icon-minus"
                                    />
                                  </span>
                                  <strong>
                                    js
                                  </strong>
                                </a>
                              </li>
                              <span
                                style={
                                  Object {
                                    "display": "block",
                                  }
                                }
                              >
                                <Link
                                  className="list-group-item"
                                  key="node"
                                  to="/onboarding/testOrg/project-slug/configure/node/"
                                >
                                  <Link
                                    className="list-group-item"
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/onboarding/testOrg/project-slug/configure/node/"
                                  >
                                    <a
                                      className="list-group-item"
                                      onClick={[Function]}
                                      style={Object {}}
                                    >
                                      node
                                    </a>
                                  </Link>
                                </Link>
                              </span>
                            </ul>
                          </div>
                        </LanguageNav>
                      </div>
                    </div>
                  </ProjectInstallPlatform>
                </ProjectDocsContext>
              </DocumentTitle>
            </SideEffect(DocumentTitle)>
          </ProjectContext>
        </withRouter(ProjectContext)>
      </withProjects>
      <Waiting
        hasEvent={false}
        skip={[Function]}
      >
        <div
          className="awaiting-event"
        >
          <div
            className="pull-right"
          >
            <div
              className="btn btn-primary"
              onClick={[Function]}
            >
              All done!
            </div>
          </div>
          <div
            className="wrap waiting-text"
          >
            <h3
              className="animated-ellipsis"
            >
              Waiting to receive an error
            </h3>
            <div
              className="robot"
            >
              <span
                className="eye"
              />
            </div>
          </div>
        </div>
      </Waiting>
    </div>
  </div>
</Configure>
`;

exports[`Configure should render correctly render() shouldn't redirect for a found platform 1`] = `
<div>
  <div
    className="onboarding-Configure"
  >
    <h2
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      Configure your application
    </h2>
    <withProjects
      orgId="testOrg"
      projectId="project-slug"
      style={
        Object {
          "marginBottom": 30,
        }
      }
    >
      <ProjectDocsContext>
        <ProjectInstallPlatform
          linkPath={[Function]}
          params={
            Object {
              "orgId": "testOrg",
              "platform": "node",
              "projectId": "project-slug",
            }
          }
          platformData={
            Object {
              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
            }
          }
        />
      </ProjectDocsContext>
    </withProjects>
    <Waiting
      hasEvent={false}
      skip={[Function]}
    />
  </div>
</div>
`;
