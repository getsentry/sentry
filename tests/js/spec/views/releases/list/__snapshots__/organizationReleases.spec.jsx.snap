// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationReleases renders 1`] = `
<WithOrganizationMockWrappeer
  location={
    Object {
      "query": Object {
        "per_page": 0,
        "query": "derp",
      },
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [
        "sentry10",
      ],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [
        Object {
          "hasAccess": true,
          "id": "2",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "project-slug",
          "teams": Array [],
        },
      ],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
    }
  }
>
  <OrganizationReleases
    location={
      Object {
        "query": Object {
          "per_page": 0,
          "query": "derp",
        },
      }
    }
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [
          "sentry10",
        ],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [
          Object {
            "hasAccess": true,
            "id": "2",
            "isBookmarked": false,
            "isMember": true,
            "name": "Project Name",
            "slug": "project-slug",
            "teams": Array [],
          },
        ],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
  >
    <SideEffect(DocumentTitle)
      title="Releases - org-slug - Sentry"
    >
      <DocumentTitle
        title="Releases - org-slug - Sentry"
      >
        <FeatureContainer
          features={
            Array [
              "organizations:sentry10",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "features": Array [
                "sentry10",
              ],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [
                Object {
                  "hasAccess": true,
                  "id": "2",
                  "isBookmarked": false,
                  "isMember": true,
                  "name": "Project Name",
                  "slug": "project-slug",
                  "teams": Array [],
                },
              ],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
          renderDisabled={[Function]}
        >
          <Feature
            configFeatures={Array []}
            features={
              Array [
                "organizations:sentry10",
              ]
            }
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [
                  "sentry10",
                ],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [
                  Object {
                    "hasAccess": true,
                    "id": "2",
                    "isBookmarked": false,
                    "isMember": true,
                    "name": "Project Name",
                    "slug": "project-slug",
                    "teams": Array [],
                  },
                ],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            project={
              Object {
                "hasAccess": true,
                "id": "2",
                "isBookmarked": false,
                "isMember": true,
                "name": "Project Name",
                "slug": "project-slug",
                "teams": Array [],
              }
            }
            renderDisabled={[Function]}
            requireAll={true}
          >
            <withRouter(withGlobalSelection(GlobalSelectionHeader))
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [
                    "sentry10",
                  ],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [
                    Object {
                      "hasAccess": true,
                      "id": "2",
                      "isBookmarked": false,
                      "isMember": true,
                      "name": "Project Name",
                      "slug": "project-slug",
                      "teams": Array [],
                    },
                  ],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
            >
              <withGlobalSelection(GlobalSelectionHeader)
                location={
                  Object {
                    "query": Object {},
                  }
                }
                organization={
                  Object {
                    "access": Array [
                      "org:read",
                      "org:write",
                      "org:admin",
                      "project:read",
                      "project:write",
                      "project:admin",
                      "team:read",
                      "team:write",
                      "team:admin",
                    ],
                    "features": Array [
                      "sentry10",
                    ],
                    "id": "3",
                    "name": "Organization Name",
                    "onboardingTasks": Array [],
                    "projects": Array [
                      Object {
                        "hasAccess": true,
                        "id": "2",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Project Name",
                        "slug": "project-slug",
                        "teams": Array [],
                      },
                    ],
                    "scrapeJavaScript": true,
                    "slug": "org-slug",
                    "status": Object {
                      "id": "active",
                      "name": "active",
                    },
                    "teams": Array [],
                  }
                }
                router={
                  Object {
                    "createHref": [MockFunction] {
                      "calls": Array [
                        Array [
                          "/organizations/org-slug/releases/abc",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "go": [MockFunction],
                    "goBack": [MockFunction],
                    "goForward": [MockFunction],
                    "isActive": [MockFunction],
                    "listen": [MockFunction],
                    "location": Object {
                      "query": Object {},
                    },
                    "push": [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "pathname": undefined,
                            "query": Object {
                              "environment": Array [],
                              "project": Array [],
                              "statsPeriod": "14d",
                              "utc": "true",
                            },
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "replace": [MockFunction],
                    "setRouteLeaveHook": [MockFunction],
                  }
                }
              >
                <GlobalSelectionHeader
                  hasCustomRouting={false}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "features": Array [
                        "sentry10",
                      ],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [
                        Object {
                          "hasAccess": true,
                          "id": "2",
                          "isBookmarked": false,
                          "isMember": true,
                          "name": "Project Name",
                          "slug": "project-slug",
                          "teams": Array [],
                        },
                      ],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "active",
                        "name": "active",
                      },
                      "teams": Array [],
                    }
                  }
                  resetParamsOnChange={Array []}
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            "/organizations/org-slug/releases/abc",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "push": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": undefined,
                              "query": Object {
                                "environment": Array [],
                                "project": Array [],
                                "statsPeriod": "14d",
                                "utc": "true",
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  selection={
                    Object {
                      "datetime": Object {
                        "end": null,
                        "period": "14d",
                        "start": null,
                        "utc": true,
                      },
                      "environments": Array [],
                      "projects": Array [],
                    }
                  }
                  showEnvironmentSelector={true}
                >
                  <Header>
                    <Base
                      className="css-14hw0r3-Header e10yv9i90"
                    >
                      <div
                        className="css-14hw0r3-Header e10yv9i90"
                        is={null}
                      >
                        <HeaderItemPosition>
                          <div
                            className="css-5udiwc-HeaderItemPosition e165b9e40"
                          >
                            <MultipleProjectSelector
                              onChange={[Function]}
                              onUpdate={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "features": Array [
                                    "sentry10",
                                  ],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [
                                    Object {
                                      "hasAccess": true,
                                      "id": "2",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "project-slug",
                                      "teams": Array [],
                                    },
                                  ],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              projects={
                                Array [
                                  Object {
                                    "hasAccess": true,
                                    "id": "2",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Project Name",
                                    "slug": "project-slug",
                                    "teams": Array [],
                                  },
                                ]
                              }
                              value={Array []}
                            >
                              <StyledProjectSelector
                                multi={false}
                                onChange={[Function]}
                                onClose={[Function]}
                                onMultiSelect={[Function]}
                                onSelect={[Function]}
                                onUpdate={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "features": Array [
                                      "sentry10",
                                    ],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [
                                      Object {
                                        "hasAccess": true,
                                        "id": "2",
                                        "isBookmarked": false,
                                        "isMember": true,
                                        "name": "Project Name",
                                        "slug": "project-slug",
                                        "teams": Array [],
                                      },
                                    ],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                projects={
                                  Array [
                                    Object {
                                      "hasAccess": true,
                                      "id": "2",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "project-slug",
                                      "teams": Array [],
                                    },
                                  ]
                                }
                                rootClassName="css-h5t9nh-rootContainerStyles"
                                selectedProjects={Array []}
                                value={Array []}
                              >
                                <ProjectSelector
                                  className="css-iw79rr-StyledProjectSelector ewlipse0"
                                  multi={false}
                                  onChange={[Function]}
                                  onClose={[Function]}
                                  onMultiSelect={[Function]}
                                  onSelect={[Function]}
                                  onUpdate={[Function]}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [
                                        "sentry10",
                                      ],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        },
                                      ],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  projectId={null}
                                  projects={
                                    Array [
                                      Object {
                                        "hasAccess": true,
                                        "id": "2",
                                        "isBookmarked": false,
                                        "isMember": true,
                                        "name": "Project Name",
                                        "slug": "project-slug",
                                        "teams": Array [],
                                      },
                                    ]
                                  }
                                  rootClassName="css-h5t9nh-rootContainerStyles"
                                  selectedProjects={Array []}
                                  value={Array []}
                                >
                                  <DropdownAutoComplete
                                    alignMenu="left"
                                    blendCorner={false}
                                    className="ewlipse0 css-11ijjr3-StyledProjectSelector"
                                    closeOnSelect={true}
                                    emptyHidesInput={true}
                                    emptyMessage="You have no projects"
                                    inputProps={
                                      Object {
                                        "style": Object {
                                          "padding": 8,
                                          "paddingLeft": 14,
                                        },
                                      }
                                    }
                                    items={
                                      Array [
                                        Object {
                                          "label": [Function],
                                          "searchKey": "project-slug",
                                          "value": Object {
                                            "hasAccess": true,
                                            "id": "2",
                                            "isBookmarked": false,
                                            "isMember": true,
                                            "name": "Project Name",
                                            "slug": "project-slug",
                                            "teams": Array [],
                                          },
                                        },
                                      ]
                                    }
                                    maxHeight={500}
                                    menuFooter={[Function]}
                                    noResultsMessage="No projects found"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    rootClassName="css-h5t9nh-rootContainerStyles"
                                    searchPlaceholder="Filter projects"
                                    virtualizedHeight={40}
                                    zIndex={1001}
                                  >
                                    <DropdownAutoCompleteMenu
                                      alignMenu="left"
                                      blendCorner={false}
                                      className="ewlipse0 css-11ijjr3-StyledProjectSelector"
                                      closeOnSelect={true}
                                      emptyHidesInput={true}
                                      emptyMessage="You have no projects"
                                      inputProps={
                                        Object {
                                          "style": Object {
                                            "padding": 8,
                                            "paddingLeft": 14,
                                          },
                                        }
                                      }
                                      items={
                                        Array [
                                          Object {
                                            "label": [Function],
                                            "searchKey": "project-slug",
                                            "value": Object {
                                              "hasAccess": true,
                                              "id": "2",
                                              "isBookmarked": false,
                                              "isMember": true,
                                              "name": "Project Name",
                                              "slug": "project-slug",
                                              "teams": Array [],
                                            },
                                          },
                                        ]
                                      }
                                      maxHeight={500}
                                      menuFooter={[Function]}
                                      noResultsMessage="No projects found"
                                      onClose={[Function]}
                                      onSelect={[Function]}
                                      rootClassName="css-h5t9nh-rootContainerStyles"
                                      searchPlaceholder="Filter projects"
                                      virtualizedHeight={40}
                                      zIndex={1001}
                                    >
                                      <AutoComplete
                                        closeOnSelect={true}
                                        disabled={false}
                                        inputIsActor={false}
                                        itemToString={[Function]}
                                        onClose={[Function]}
                                        onSelect={[Function]}
                                        resetInputOnClose={true}
                                        shouldSelectWithEnter={true}
                                        shouldSelectWithTab={false}
                                        virtualizedHeight={40}
                                        zIndex={1001}
                                      >
                                        <DropdownMenu
                                          closeOnEscape={true}
                                          isOpen={false}
                                          keepMenuOpen={false}
                                          onClickOutside={[Function]}
                                        >
                                          <AutoCompleteRoot
                                            className="css-h5t9nh-rootContainerStyles"
                                          >
                                            <Component
                                              className="css-1ppsre-AutoCompleteRoot-rootContainerStyles ejumqxq0"
                                            >
                                              <div
                                                className="css-1ppsre-AutoCompleteRoot-rootContainerStyles ejumqxq0"
                                              >
                                                <Actor
                                                  innerRef={[Function]}
                                                  isOpen={false}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "outline": "none",
                                                    }
                                                  }
                                                  tabIndex={-1}
                                                >
                                                  <div
                                                    className="css-17fe80j-Actor e53us8t0"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "outline": "none",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <StyledHeaderItem
                                                      active={false}
                                                      hasChanges={false}
                                                      hasSelected={false}
                                                      icon={
                                                        <StyledInlineSvg
                                                          src="icon-project"
                                                        />
                                                      }
                                                      isOpen={false}
                                                      onClear={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onSubmit={[Function]}
                                                      style={
                                                        Object {
                                                          "outline": "none",
                                                        }
                                                      }
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef
                                                        active={false}
                                                        className="css-22y332-StyledHeaderItem ewlipse1"
                                                        hasChanges={false}
                                                        hasSelected={false}
                                                        icon={
                                                          <StyledInlineSvg
                                                            src="icon-project"
                                                          />
                                                        }
                                                        isOpen={false}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onSubmit={[Function]}
                                                        style={
                                                          Object {
                                                            "outline": "none",
                                                          }
                                                        }
                                                        tabIndex={-1}
                                                      >
                                                        <HeaderItem
                                                          active={false}
                                                          allowClear={true}
                                                          className="css-22y332-StyledHeaderItem ewlipse1"
                                                          hasChanges={false}
                                                          hasSelected={false}
                                                          icon={
                                                            <StyledInlineSvg
                                                              src="icon-project"
                                                            />
                                                          }
                                                          innerRef={null}
                                                          isOpen={false}
                                                          onClear={[Function]}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onSubmit={[Function]}
                                                          style={
                                                            Object {
                                                              "outline": "none",
                                                            }
                                                          }
                                                          tabIndex={-1}
                                                        >
                                                          <StyledHeaderItem
                                                            active={false}
                                                            className="css-22y332-StyledHeaderItem ewlipse1"
                                                            hasSelected={false}
                                                            innerRef={null}
                                                            isOpen={false}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            style={
                                                              Object {
                                                                "outline": "none",
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                          >
                                                            <div
                                                              className="ewlipse1 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                              style={
                                                                Object {
                                                                  "outline": "none",
                                                                }
                                                              }
                                                              tabIndex={-1}
                                                            >
                                                              <IconContainer
                                                                hasSelected={false}
                                                              >
                                                                <span
                                                                  className="css-1af7peg-IconContainer enk2k7v2"
                                                                >
                                                                  <StyledInlineSvg
                                                                    src="icon-project"
                                                                  >
                                                                    <InlineSvg
                                                                      className="css-1ibtmti-StyledInlineSvg ewlipse2"
                                                                      src="icon-project"
                                                                    >
                                                                      <StyledSvg
                                                                        className="css-1ibtmti-StyledInlineSvg ewlipse2"
                                                                        height="1em"
                                                                        viewBox={Object {}}
                                                                        width="1em"
                                                                      >
                                                                        <svg
                                                                          className="ewlipse2 css-1ux8cow-StyledSvg-StyledInlineSvg e2idor0"
                                                                          height="1em"
                                                                          viewBox={Object {}}
                                                                          width="1em"
                                                                        >
                                                                          <use
                                                                            href="#test"
                                                                            xlinkHref="#test"
                                                                          />
                                                                        </svg>
                                                                      </StyledSvg>
                                                                    </InlineSvg>
                                                                  </StyledInlineSvg>
                                                                </span>
                                                              </IconContainer>
                                                              <Content>
                                                                <div
                                                                  className="css-1yquznf-Content enk2k7v1"
                                                                >
                                                                  All Projects
                                                                </div>
                                                              </Content>
                                                              <StyledChevron
                                                                hasChanges={false}
                                                                isOpen={false}
                                                                onClick={[Function]}
                                                              >
                                                                <div
                                                                  className="css-ft4nwy-StyledChevron enk2k7v4"
                                                                  onClick={[Function]}
                                                                >
                                                                  <InlineSvg
                                                                    src="icon-chevron-down"
                                                                  >
                                                                    <StyledSvg
                                                                      height="1em"
                                                                      viewBox={Object {}}
                                                                      width="1em"
                                                                    >
                                                                      <svg
                                                                        className="css-ryh69w-StyledSvg e2idor0"
                                                                        height="1em"
                                                                        viewBox={Object {}}
                                                                        width="1em"
                                                                      >
                                                                        <use
                                                                          href="#test"
                                                                          xlinkHref="#test"
                                                                        />
                                                                      </svg>
                                                                    </StyledSvg>
                                                                  </InlineSvg>
                                                                </div>
                                                              </StyledChevron>
                                                            </div>
                                                          </StyledHeaderItem>
                                                        </HeaderItem>
                                                      </ForwardRef>
                                                    </StyledHeaderItem>
                                                  </div>
                                                </Actor>
                                              </div>
                                            </Component>
                                          </AutoCompleteRoot>
                                        </DropdownMenu>
                                      </AutoComplete>
                                    </DropdownAutoCompleteMenu>
                                  </DropdownAutoComplete>
                                </ProjectSelector>
                              </StyledProjectSelector>
                            </MultipleProjectSelector>
                          </div>
                        </HeaderItemPosition>
                        <HeaderSeparator>
                          <Base
                            className="css-zkrb0n-HeaderSeparator elp5f3l0"
                          >
                            <div
                              className="css-zkrb0n-HeaderSeparator elp5f3l0"
                              is={null}
                            />
                          </Base>
                        </HeaderSeparator>
                        <HeaderItemPosition>
                          <div
                            className="css-5udiwc-HeaderItemPosition e165b9e40"
                          >
                            <withApi(MultipleEnvironmentSelector)
                              onChange={[Function]}
                              onUpdate={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "features": Array [
                                    "sentry10",
                                  ],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [
                                    Object {
                                      "hasAccess": true,
                                      "id": "2",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "project-slug",
                                      "teams": Array [],
                                    },
                                  ],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              value={Array []}
                            >
                              <MultipleEnvironmentSelector
                                api={Client {}}
                                onChange={[Function]}
                                onUpdate={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "features": Array [
                                      "sentry10",
                                    ],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [
                                      Object {
                                        "hasAccess": true,
                                        "id": "2",
                                        "isBookmarked": false,
                                        "isMember": true,
                                        "name": "Project Name",
                                        "slug": "project-slug",
                                        "teams": Array [],
                                      },
                                    ],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                value={Array []}
                              >
                                <withApi(FetchOrganizationEnvironments)
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [
                                        "sentry10",
                                      ],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        },
                                      ],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                >
                                  <FetchOrganizationEnvironments
                                    api={Client {}}
                                    organization={
                                      Object {
                                        "access": Array [
                                          "org:read",
                                          "org:write",
                                          "org:admin",
                                          "project:read",
                                          "project:write",
                                          "project:admin",
                                          "team:read",
                                          "team:write",
                                          "team:admin",
                                        ],
                                        "features": Array [
                                          "sentry10",
                                        ],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [
                                          Object {
                                            "hasAccess": true,
                                            "id": "2",
                                            "isBookmarked": false,
                                            "isMember": true,
                                            "name": "Project Name",
                                            "slug": "project-slug",
                                            "teams": Array [],
                                          },
                                        ],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "active",
                                          "name": "active",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                  >
                                    <StyledDropdownAutoComplete
                                      alignMenu="left"
                                      blendCorner={false}
                                      closeOnSelect={true}
                                      emptyHidesInput={true}
                                      emptyMessage={<LoadingIndicator />}
                                      inputProps={
                                        Object {
                                          "style": Object {
                                            "padding": 8,
                                            "paddingLeft": 14,
                                          },
                                        }
                                      }
                                      items={Array []}
                                      maxHeight={500}
                                      menuProps={
                                        Object {
                                          "style": Object {
                                            "position": "relative",
                                          },
                                        }
                                      }
                                      noResultsMessage="No environments found"
                                      onClose={[Function]}
                                      onSelect={[Function]}
                                      rootClassName="css-1utm1zz-rootClassName"
                                      searchPlaceholder="Filter environments"
                                      virtualizedHeight={40}
                                      zIndex={1001}
                                    >
                                      <DropdownAutoComplete
                                        alignMenu="left"
                                        blendCorner={false}
                                        className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
                                        closeOnSelect={true}
                                        emptyHidesInput={true}
                                        emptyMessage={<LoadingIndicator />}
                                        inputProps={
                                          Object {
                                            "style": Object {
                                              "padding": 8,
                                              "paddingLeft": 14,
                                            },
                                          }
                                        }
                                        items={Array []}
                                        maxHeight={500}
                                        menuProps={
                                          Object {
                                            "style": Object {
                                              "position": "relative",
                                            },
                                          }
                                        }
                                        noResultsMessage="No environments found"
                                        onClose={[Function]}
                                        onSelect={[Function]}
                                        rootClassName="css-1utm1zz-rootClassName"
                                        searchPlaceholder="Filter environments"
                                        virtualizedHeight={40}
                                        zIndex={1001}
                                      >
                                        <DropdownAutoCompleteMenu
                                          alignMenu="left"
                                          blendCorner={false}
                                          className="css-qn89t6-StyledDropdownAutoComplete e1gsuvme2"
                                          closeOnSelect={true}
                                          emptyHidesInput={true}
                                          emptyMessage={<LoadingIndicator />}
                                          inputProps={
                                            Object {
                                              "style": Object {
                                                "padding": 8,
                                                "paddingLeft": 14,
                                              },
                                            }
                                          }
                                          items={Array []}
                                          maxHeight={500}
                                          menuProps={
                                            Object {
                                              "style": Object {
                                                "position": "relative",
                                              },
                                            }
                                          }
                                          noResultsMessage="No environments found"
                                          onClose={[Function]}
                                          onSelect={[Function]}
                                          rootClassName="css-1utm1zz-rootClassName"
                                          searchPlaceholder="Filter environments"
                                          virtualizedHeight={40}
                                          zIndex={1001}
                                        >
                                          <AutoComplete
                                            closeOnSelect={true}
                                            disabled={false}
                                            inputIsActor={false}
                                            itemToString={[Function]}
                                            onClose={[Function]}
                                            onSelect={[Function]}
                                            resetInputOnClose={true}
                                            shouldSelectWithEnter={true}
                                            shouldSelectWithTab={false}
                                            virtualizedHeight={40}
                                            zIndex={1001}
                                          >
                                            <DropdownMenu
                                              closeOnEscape={true}
                                              isOpen={false}
                                              keepMenuOpen={false}
                                              onClickOutside={[Function]}
                                            >
                                              <AutoCompleteRoot
                                                className="css-1utm1zz-rootClassName"
                                              >
                                                <Component
                                                  className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
                                                >
                                                  <div
                                                    className="css-qocd3e-AutoCompleteRoot-rootClassName ejumqxq0"
                                                  >
                                                    <Actor
                                                      innerRef={[Function]}
                                                      isOpen={false}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "outline": "none",
                                                        }
                                                      }
                                                      tabIndex={-1}
                                                    >
                                                      <div
                                                        className="css-17fe80j-Actor e53us8t0"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        role="button"
                                                        style={
                                                          Object {
                                                            "outline": "none",
                                                          }
                                                        }
                                                        tabIndex={-1}
                                                      >
                                                        <StyledHeaderItem
                                                          hasChanges={false}
                                                          hasSelected={false}
                                                          icon={
                                                            <StyledInlineSvg
                                                              src="icon-window"
                                                            />
                                                          }
                                                          innerRef={[Function]}
                                                          isOpen={false}
                                                          onClear={[Function]}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onSubmit={[Function]}
                                                          style={
                                                            Object {
                                                              "outline": "none",
                                                            }
                                                          }
                                                          tabIndex={-1}
                                                        >
                                                          <ForwardRef
                                                            className="css-22y332-StyledHeaderItem e1gsuvme0"
                                                            hasChanges={false}
                                                            hasSelected={false}
                                                            icon={
                                                              <StyledInlineSvg
                                                                src="icon-window"
                                                              />
                                                            }
                                                            isOpen={false}
                                                            onClear={[Function]}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onSubmit={[Function]}
                                                            style={
                                                              Object {
                                                                "outline": "none",
                                                              }
                                                            }
                                                            tabIndex={-1}
                                                          >
                                                            <HeaderItem
                                                              allowClear={true}
                                                              className="css-22y332-StyledHeaderItem e1gsuvme0"
                                                              hasChanges={false}
                                                              hasSelected={false}
                                                              icon={
                                                                <StyledInlineSvg
                                                                  src="icon-window"
                                                                />
                                                              }
                                                              innerRef={[Function]}
                                                              isOpen={false}
                                                              onClear={[Function]}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onSubmit={[Function]}
                                                              style={
                                                                Object {
                                                                  "outline": "none",
                                                                }
                                                              }
                                                              tabIndex={-1}
                                                            >
                                                              <StyledHeaderItem
                                                                className="css-22y332-StyledHeaderItem e1gsuvme0"
                                                                hasSelected={false}
                                                                innerRef={[Function]}
                                                                isOpen={false}
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                style={
                                                                  Object {
                                                                    "outline": "none",
                                                                  }
                                                                }
                                                                tabIndex={-1}
                                                              >
                                                                <div
                                                                  className="e1gsuvme0 css-1v6igws-StyledHeaderItem-StyledHeaderItem enk2k7v0"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "outline": "none",
                                                                    }
                                                                  }
                                                                  tabIndex={-1}
                                                                >
                                                                  <IconContainer
                                                                    hasSelected={false}
                                                                  >
                                                                    <span
                                                                      className="css-1af7peg-IconContainer enk2k7v2"
                                                                    >
                                                                      <StyledInlineSvg
                                                                        src="icon-window"
                                                                      >
                                                                        <InlineSvg
                                                                          className="css-1ctth4-StyledInlineSvg e1gsuvme1"
                                                                          src="icon-window"
                                                                        >
                                                                          <StyledSvg
                                                                            className="css-1ctth4-StyledInlineSvg e1gsuvme1"
                                                                            height="1em"
                                                                            viewBox={Object {}}
                                                                            width="1em"
                                                                          >
                                                                            <svg
                                                                              className="e1gsuvme1 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
                                                                              height="1em"
                                                                              viewBox={Object {}}
                                                                              width="1em"
                                                                            >
                                                                              <use
                                                                                href="#test"
                                                                                xlinkHref="#test"
                                                                              />
                                                                            </svg>
                                                                          </StyledSvg>
                                                                        </InlineSvg>
                                                                      </StyledInlineSvg>
                                                                    </span>
                                                                  </IconContainer>
                                                                  <Content>
                                                                    <div
                                                                      className="css-1yquznf-Content enk2k7v1"
                                                                    >
                                                                      All Environments
                                                                    </div>
                                                                  </Content>
                                                                  <StyledChevron
                                                                    hasChanges={false}
                                                                    isOpen={false}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <div
                                                                      className="css-ft4nwy-StyledChevron enk2k7v4"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <InlineSvg
                                                                        src="icon-chevron-down"
                                                                      >
                                                                        <StyledSvg
                                                                          height="1em"
                                                                          viewBox={Object {}}
                                                                          width="1em"
                                                                        >
                                                                          <svg
                                                                            className="css-ryh69w-StyledSvg e2idor0"
                                                                            height="1em"
                                                                            viewBox={Object {}}
                                                                            width="1em"
                                                                          >
                                                                            <use
                                                                              href="#test"
                                                                              xlinkHref="#test"
                                                                            />
                                                                          </svg>
                                                                        </StyledSvg>
                                                                      </InlineSvg>
                                                                    </div>
                                                                  </StyledChevron>
                                                                </div>
                                                              </StyledHeaderItem>
                                                            </HeaderItem>
                                                          </ForwardRef>
                                                        </StyledHeaderItem>
                                                      </div>
                                                    </Actor>
                                                  </div>
                                                </Component>
                                              </AutoCompleteRoot>
                                            </DropdownMenu>
                                          </AutoComplete>
                                        </DropdownAutoCompleteMenu>
                                      </DropdownAutoComplete>
                                    </StyledDropdownAutoComplete>
                                  </FetchOrganizationEnvironments>
                                </withApi(FetchOrganizationEnvironments)>
                              </MultipleEnvironmentSelector>
                            </withApi(MultipleEnvironmentSelector)>
                          </div>
                        </HeaderItemPosition>
                        <HeaderSeparator>
                          <Base
                            className="css-zkrb0n-HeaderSeparator elp5f3l0"
                          >
                            <div
                              className="css-zkrb0n-HeaderSeparator elp5f3l0"
                              is={null}
                            />
                          </Base>
                        </HeaderSeparator>
                        <HeaderItemPosition>
                          <div
                            className="css-5udiwc-HeaderItemPosition e165b9e40"
                          >
                            <TimeRangeSelector
                              end={null}
                              key="period:14d-start:null-end:null-utc:true"
                              onChange={[Function]}
                              onUpdate={[Function]}
                              relative="14d"
                              showAbsolute={true}
                              showRelative={true}
                              start={null}
                              utc={true}
                            >
                              <DropdownMenu
                                closeOnEscape={true}
                                isOpen={false}
                                keepMenuOpen={true}
                                onClose={[Function]}
                                onOpen={[Function]}
                              >
                                <TimeRangeRoot>
                                  <div
                                    className="css-1lz3nth-TimeRangeRoot e1u8612l0"
                                  >
                                    <StyledHeaderItem
                                      allowClear={false}
                                      hasChanges={false}
                                      hasSelected={true}
                                      icon={
                                        <StyledInlineSvg
                                          src="icon-calendar"
                                        />
                                      }
                                      innerRef={[Function]}
                                      isOpen={false}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      onSubmit={[Function]}
                                      style={
                                        Object {
                                          "outline": "none",
                                        }
                                      }
                                      tabIndex={-1}
                                    >
                                      <ForwardRef
                                        allowClear={false}
                                        className="css-22y332-StyledHeaderItem e1u8612l1"
                                        hasChanges={false}
                                        hasSelected={true}
                                        icon={
                                          <StyledInlineSvg
                                            src="icon-calendar"
                                          />
                                        }
                                        isOpen={false}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        onSubmit={[Function]}
                                        style={
                                          Object {
                                            "outline": "none",
                                          }
                                        }
                                        tabIndex={-1}
                                      >
                                        <HeaderItem
                                          allowClear={false}
                                          className="css-22y332-StyledHeaderItem e1u8612l1"
                                          hasChanges={false}
                                          hasSelected={true}
                                          icon={
                                            <StyledInlineSvg
                                              src="icon-calendar"
                                            />
                                          }
                                          innerRef={[Function]}
                                          isOpen={false}
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          onSubmit={[Function]}
                                          style={
                                            Object {
                                              "outline": "none",
                                            }
                                          }
                                          tabIndex={-1}
                                        >
                                          <StyledHeaderItem
                                            className="css-22y332-StyledHeaderItem e1u8612l1"
                                            hasSelected={true}
                                            innerRef={[Function]}
                                            isOpen={false}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            style={
                                              Object {
                                                "outline": "none",
                                              }
                                            }
                                            tabIndex={-1}
                                          >
                                            <div
                                              className="e1u8612l1 css-xvcre7-StyledHeaderItem-StyledHeaderItem enk2k7v0"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              style={
                                                Object {
                                                  "outline": "none",
                                                }
                                              }
                                              tabIndex={-1}
                                            >
                                              <IconContainer
                                                hasSelected={true}
                                              >
                                                <span
                                                  className="css-mzutvw-IconContainer enk2k7v2"
                                                >
                                                  <StyledInlineSvg
                                                    src="icon-calendar"
                                                  >
                                                    <InlineSvg
                                                      className="css-1ctth4-StyledInlineSvg e1u8612l2"
                                                      src="icon-calendar"
                                                    >
                                                      <StyledSvg
                                                        className="css-1ctth4-StyledInlineSvg e1u8612l2"
                                                        height="1em"
                                                        viewBox={Object {}}
                                                        width="1em"
                                                      >
                                                        <svg
                                                          className="e1u8612l2 css-1vh2z4q-StyledSvg-StyledInlineSvg e2idor0"
                                                          height="1em"
                                                          viewBox={Object {}}
                                                          width="1em"
                                                        >
                                                          <use
                                                            href="#test"
                                                            xlinkHref="#test"
                                                          />
                                                        </svg>
                                                      </StyledSvg>
                                                    </InlineSvg>
                                                  </StyledInlineSvg>
                                                </span>
                                              </IconContainer>
                                              <Content>
                                                <div
                                                  className="css-1yquznf-Content enk2k7v1"
                                                >
                                                  Last 14 days
                                                </div>
                                              </Content>
                                              <StyledChevron
                                                hasChanges={false}
                                                isOpen={false}
                                                onClick={[Function]}
                                              >
                                                <div
                                                  className="css-ft4nwy-StyledChevron enk2k7v4"
                                                  onClick={[Function]}
                                                >
                                                  <InlineSvg
                                                    src="icon-chevron-down"
                                                  >
                                                    <StyledSvg
                                                      height="1em"
                                                      viewBox={Object {}}
                                                      width="1em"
                                                    >
                                                      <svg
                                                        className="css-ryh69w-StyledSvg e2idor0"
                                                        height="1em"
                                                        viewBox={Object {}}
                                                        width="1em"
                                                      >
                                                        <use
                                                          href="#test"
                                                          xlinkHref="#test"
                                                        />
                                                      </svg>
                                                    </StyledSvg>
                                                  </InlineSvg>
                                                </div>
                                              </StyledChevron>
                                            </div>
                                          </StyledHeaderItem>
                                        </HeaderItem>
                                      </ForwardRef>
                                    </StyledHeaderItem>
                                  </div>
                                </TimeRangeRoot>
                              </DropdownMenu>
                            </TimeRangeSelector>
                          </div>
                        </HeaderItemPosition>
                      </div>
                    </Base>
                  </Header>
                </GlobalSelectionHeader>
              </withGlobalSelection(GlobalSelectionHeader)>
            </withRouter(withGlobalSelection(GlobalSelectionHeader))>
            <PageContent>
              <div
                className="css-rejmra-PageContent e6lvex70"
              >
                <PageHeader>
                  <div
                    className="css-2b9sz7-PageHeader e6lvex71"
                  >
                    <PageHeading>
                      <Wrapper>
                        <h1
                          className="css-ymsf6g-Wrapper e1f8hk460"
                        >
                          Releases
                        </h1>
                      </Wrapper>
                    </PageHeading>
                    <div>
                      <SearchBar
                        defaultQuery=""
                        onSearch={[Function]}
                        placeholder="Search for a release"
                        query="derp"
                      >
                        <div
                          className="search"
                        >
                          <form
                            className="form-horizontal"
                            onSubmit={[Function]}
                          >
                            <div>
                              <input
                                autoComplete="off"
                                className="search-input form-control"
                                name="query"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Search for a release"
                                type="text"
                                value="derp"
                              />
                              <span
                                className="icon-search"
                              />
                              <div>
                                <a
                                  className="search-clear-form"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="icon-circle-cross"
                                  />
                                </a>
                              </div>
                            </div>
                          </form>
                        </div>
                      </SearchBar>
                    </div>
                  </div>
                </PageHeader>
                <div>
                  <Panel>
                    <Component
                      className="css-yahxlu-Panel e1laxa7d0"
                    >
                      <div
                        className="css-yahxlu-Panel e1laxa7d0"
                      >
                        <ReleaseListHeader>
                          <PanelHeader>
                            <Component
                              className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                            >
                              <Flex
                                align="center"
                                className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                                justify="space-between"
                              >
                                <Base
                                  align="center"
                                  className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                                  justify="space-between"
                                >
                                  <div
                                    className="e1p8v8nv0 css-b7ices-PanelHeader-getPadding"
                                    is={null}
                                  >
                                    <Box
                                      flex="1"
                                    >
                                      <Base
                                        className="css-vti0ei"
                                        flex="1"
                                      >
                                        <div
                                          className="css-vti0ei"
                                          is={null}
                                        >
                                          Version
                                        </div>
                                      </Base>
                                    </Box>
                                    <Box
                                      className="hidden-xs"
                                      pl={2}
                                      w={0.3333333333333333}
                                    >
                                      <Base
                                        className="hidden-xs css-1o6byrk"
                                        pl={2}
                                        w={0.3333333333333333}
                                      >
                                        <div
                                          className="hidden-xs css-1o6byrk"
                                          is={null}
                                        />
                                      </Base>
                                    </Box>
                                    <Box
                                      pl={2}
                                      w={0.16666666666666666}
                                    >
                                      <Base
                                        className="css-187hf53"
                                        pl={2}
                                        w={0.16666666666666666}
                                      >
                                        <div
                                          className="css-187hf53"
                                          is={null}
                                        >
                                          New Issues
                                        </div>
                                      </Base>
                                    </Box>
                                    <Box
                                      pl={2}
                                      w={0.16666666666666666}
                                    >
                                      <Base
                                        className="css-187hf53"
                                        pl={2}
                                        w={0.16666666666666666}
                                      >
                                        <div
                                          className="css-187hf53"
                                          is={null}
                                        >
                                          Last Event
                                        </div>
                                      </Base>
                                    </Box>
                                  </div>
                                </Base>
                              </Flex>
                            </Component>
                          </PanelHeader>
                        </ReleaseListHeader>
                        <PanelBody
                          direction="column"
                          disablePadding={true}
                          flex={false}
                        >
                          <div
                            className="css-9vq8an-textStyles"
                          >
                            <ReleaseList
                              orgId="org-slug"
                              releaseList={
                                Array [
                                  Object {
                                    "author": Object {
                                      "avatar": Object {
                                        "avatarType": "letter_avatar",
                                        "avatarUuid": null,
                                      },
                                      "avatarUrl": "https://example.com/avatar.png",
                                      "dateJoined": "2018-02-26T23:57:43.766Z",
                                      "email": "example@sentry.io",
                                      "emails": Array [
                                        Object {
                                          "email": "example@sentry.io",
                                          "id": "231605",
                                          "is_verified": true,
                                        },
                                      ],
                                      "has2fa": false,
                                      "hasPasswordAuth": true,
                                      "id": "224288",
                                      "isActive": true,
                                      "isManaged": false,
                                      "isSuperuser": true,
                                      "lastActive": "2018-11-30T21:25:15.222Z",
                                      "lastLogin": "2018-11-30T21:18:09.812Z",
                                      "name": "Foo Bar",
                                      "username": "example@sentry.io",
                                    },
                                    "dateCreated": "2018-11-30T18:46:31Z",
                                    "id": "f7f395d14b2fe29a4e253bf1d3094d61e6ad4434",
                                    "message": "(improve) Add Links to Spike-Protection Email (#2408)

* (improve) Add Links to Spike-Protection Email

Users now have access to useful links from the blogs and docs on Spike-protection.

* fixed wording",
                                    "repository": Object {
                                      "externalSlug": "example/repo-name",
                                      "id": "4",
                                      "name": "example/repo-name",
                                      "provider": "github",
                                      "status": "active",
                                      "url": "https://github.com/example/repo-name",
                                    },
                                    "version": "abc",
                                  },
                                ]
                              }
                            >
                              <div>
                                <PanelItem
                                  align="center"
                                  key="abc"
                                  p={2}
                                  px={2}
                                  py={1}
                                >
                                  <Base
                                    align="center"
                                    className="css-1375fgy-PanelItem eo8n7lk0"
                                    p={2}
                                    px={2}
                                    py={1}
                                  >
                                    <div
                                      className="css-1375fgy-PanelItem eo8n7lk0"
                                      is={null}
                                    >
                                      <Box
                                        flex="1"
                                      >
                                        <Base
                                          className="css-vti0ei"
                                          flex="1"
                                        >
                                          <div
                                            className="css-vti0ei"
                                            is={null}
                                          >
                                            <div>
                                              <div
                                                style={
                                                  Object {
                                                    "fontWeight": "bold",
                                                    "marginBottom": 2,
                                                  }
                                                }
                                              >
                                                <Version
                                                  anchor={true}
                                                  orgId="org-slug"
                                                  showShortVersion={true}
                                                  version="abc"
                                                >
                                                  <Link
                                                    to="/organizations/org-slug/releases/abc"
                                                  >
                                                    <Link
                                                      onlyActiveOnIndex={false}
                                                      style={Object {}}
                                                      to="/organizations/org-slug/releases/abc"
                                                    >
                                                      <a
                                                        onClick={[Function]}
                                                        style={Object {}}
                                                      >
                                                        <span
                                                          title="abc"
                                                        >
                                                          abc
                                                        </span>
                                                      </a>
                                                    </Link>
                                                  </Link>
                                                </Version>
                                              </div>
                                              <LatestDeployOrReleaseTime
                                                orgId="org-slug"
                                                release={
                                                  Object {
                                                    "author": Object {
                                                      "avatar": Object {
                                                        "avatarType": "letter_avatar",
                                                        "avatarUuid": null,
                                                      },
                                                      "avatarUrl": "https://example.com/avatar.png",
                                                      "dateJoined": "2018-02-26T23:57:43.766Z",
                                                      "email": "example@sentry.io",
                                                      "emails": Array [
                                                        Object {
                                                          "email": "example@sentry.io",
                                                          "id": "231605",
                                                          "is_verified": true,
                                                        },
                                                      ],
                                                      "has2fa": false,
                                                      "hasPasswordAuth": true,
                                                      "id": "224288",
                                                      "isActive": true,
                                                      "isManaged": false,
                                                      "isSuperuser": true,
                                                      "lastActive": "2018-11-30T21:25:15.222Z",
                                                      "lastLogin": "2018-11-30T21:18:09.812Z",
                                                      "name": "Foo Bar",
                                                      "username": "example@sentry.io",
                                                    },
                                                    "dateCreated": "2018-11-30T18:46:31Z",
                                                    "id": "f7f395d14b2fe29a4e253bf1d3094d61e6ad4434",
                                                    "message": "(improve) Add Links to Spike-Protection Email (#2408)

* (improve) Add Links to Spike-Protection Email

Users now have access to useful links from the blogs and docs on Spike-protection.

* fixed wording",
                                                    "repository": Object {
                                                      "externalSlug": "example/repo-name",
                                                      "id": "4",
                                                      "name": "example/repo-name",
                                                      "provider": "github",
                                                      "status": "active",
                                                      "url": "https://github.com/example/repo-name",
                                                    },
                                                    "version": "abc",
                                                  }
                                                }
                                              >
                                                <div>
                                                  <p
                                                    className="m-b-0 text-light"
                                                  >
                                                    <span
                                                      className="icon icon-clock"
                                                    />
                                                     
                                                    <TimeSince
                                                      date="2018-11-30T18:46:31Z"
                                                      suffix="ago"
                                                    >
                                                      <time
                                                        dateTime="2018-11-30T18:46:31.000Z"
                                                        title="November 30, 2018 6:46 PM UTC"
                                                      >
                                                        in a year
                                                      </time>
                                                    </TimeSince>
                                                  </p>
                                                </div>
                                              </LatestDeployOrReleaseTime>
                                            </div>
                                          </div>
                                        </Base>
                                      </Box>
                                      <Box
                                        className="hidden-xs"
                                        pl={2}
                                        w={0.3333333333333333}
                                      >
                                        <Base
                                          className="hidden-xs css-1o6byrk"
                                          pl={2}
                                          w={0.3333333333333333}
                                        >
                                          <div
                                            className="hidden-xs css-1o6byrk"
                                            is={null}
                                          >
                                            <ReleaseStats
                                              release={
                                                Object {
                                                  "author": Object {
                                                    "avatar": Object {
                                                      "avatarType": "letter_avatar",
                                                      "avatarUuid": null,
                                                    },
                                                    "avatarUrl": "https://example.com/avatar.png",
                                                    "dateJoined": "2018-02-26T23:57:43.766Z",
                                                    "email": "example@sentry.io",
                                                    "emails": Array [
                                                      Object {
                                                        "email": "example@sentry.io",
                                                        "id": "231605",
                                                        "is_verified": true,
                                                      },
                                                    ],
                                                    "has2fa": false,
                                                    "hasPasswordAuth": true,
                                                    "id": "224288",
                                                    "isActive": true,
                                                    "isManaged": false,
                                                    "isSuperuser": true,
                                                    "lastActive": "2018-11-30T21:25:15.222Z",
                                                    "lastLogin": "2018-11-30T21:18:09.812Z",
                                                    "name": "Foo Bar",
                                                    "username": "example@sentry.io",
                                                  },
                                                  "dateCreated": "2018-11-30T18:46:31Z",
                                                  "id": "f7f395d14b2fe29a4e253bf1d3094d61e6ad4434",
                                                  "message": "(improve) Add Links to Spike-Protection Email (#2408)

* (improve) Add Links to Spike-Protection Email

Users now have access to useful links from the blogs and docs on Spike-protection.

* fixed wording",
                                                  "repository": Object {
                                                    "externalSlug": "example/repo-name",
                                                    "id": "4",
                                                    "name": "example/repo-name",
                                                    "provider": "github",
                                                    "status": "active",
                                                    "url": "https://github.com/example/repo-name",
                                                  },
                                                  "version": "abc",
                                                }
                                              }
                                            />
                                          </div>
                                        </Base>
                                      </Box>
                                      <Box
                                        pl={2}
                                        w={0.16666666666666666}
                                      >
                                        <Base
                                          className="css-187hf53"
                                          pl={2}
                                          w={0.16666666666666666}
                                        >
                                          <div
                                            className="css-187hf53"
                                            is={null}
                                          >
                                            <count
                                              className="release-count"
                                              value={0}
                                            >
                                              <span
                                                className="release-count"
                                              >
                                                0
                                              </span>
                                            </count>
                                          </div>
                                        </Base>
                                      </Box>
                                      <Box
                                        pl={2}
                                        w={0.16666666666666666}
                                      >
                                        <Base
                                          className="css-187hf53"
                                          pl={2}
                                          w={0.16666666666666666}
                                        >
                                          <div
                                            className="css-187hf53"
                                            is={null}
                                          >
                                            <span>
                                              —
                                            </span>
                                          </div>
                                        </Base>
                                      </Box>
                                    </div>
                                  </Base>
                                </PanelItem>
                              </div>
                            </ReleaseList>
                          </div>
                        </PanelBody>
                      </div>
                    </Component>
                  </Panel>
                  <Pagination
                    className="stream-pagination"
                    onCursor={[Function]}
                  />
                </div>
              </div>
            </PageContent>
          </Feature>
        </FeatureContainer>
      </DocumentTitle>
    </SideEffect(DocumentTitle)>
  </OrganizationReleases>
</WithOrganizationMockWrappeer>
`;
