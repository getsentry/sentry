// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sentry App Installations displays all Apps owned by the Org 1`] = `
<SentryAppInstallationDetail
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  app={
    Object {
      "author": "Sentry",
      "clientId": "client-id",
      "clientSecret": "client-secret",
      "events": Array [],
      "isAlertable": false,
      "name": "Sample App",
      "overview": "This is an app.",
      "redirectUrl": "https://example/com/setup",
      "schema": Object {},
      "scopes": Array [
        "project:read",
      ],
      "slug": "sample-app",
      "status": "unpublished",
      "uuid": "123456123456123456123456",
      "webhookUrl": "https://example.com/webhook",
    }
  }
  onAppInstall={[MockFunction]}
  onAppUninstall={[MockFunction]}
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
>
  <SentryApplicationRow
    app={
      Object {
        "author": "Sentry",
        "clientId": "client-id",
        "clientSecret": "client-secret",
        "events": Array [],
        "isAlertable": false,
        "name": "Sample App",
        "overview": "This is an app.",
        "redirectUrl": "https://example/com/setup",
        "schema": Object {},
        "scopes": Array [
          "project:read",
        ],
        "slug": "sample-app",
        "status": "unpublished",
        "uuid": "123456123456123456123456",
        "webhookUrl": "https://example.com/webhook",
      }
    }
    isOnIntegrationPage={true}
    onInstall={[Function]}
    onUninstall={[Function]}
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "org:integrations",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
  >
    <SentryAppItem
      data-test-id="sample-app"
      p={2}
    >
      <div
        className="css-1gsw4j6-PanelItem-SentryAppItem e5fmmf40"
        data-test-id="sample-app"
      >
        <StyledFlex>
          <div
            className="css-1dabis4-StyledFlex e5fmmf41"
          >
            <PluginIcon
              pluginId="sample-app"
              size={36}
            >
              <div
                className="css-10qz5vf-PluginIcon e7e65lm0"
                size={36}
              />
            </PluginIcon>
            <SentryAppBox>
              <div
                className="css-u62khm-SentryAppBox e5fmmf42"
              >
                <SentryAppName
                  hideStatus={false}
                >
                  <div
                    className="css-1t6qztj-SentryAppName e5fmmf44"
                  >
                    Sample App
                  </div>
                </SentryAppName>
                <SentryAppDetails>
                  <div
                    className="css-gd49ss-SentryAppDetails e5fmmf43"
                  >
                    <StatusIndicator
                      isInternal={false}
                      status="Not Installed"
                    >
                      <Component
                        className="css-s3jjkg-StatusIndicator e5fmmf47"
                        isInternal={false}
                        status="Not Installed"
                      >
                        <Styled(div)
                          alignItems="center"
                        >
                          <div
                            className="css-zkfaav"
                          >
                            <CircleIndicator
                              color="#9585A3"
                              enabled={true}
                              size={6}
                            >
                              <div
                                className="css-8o8wlf-CircleIndicator exfjg1y0"
                                color="#9585A3"
                                size={6}
                              />
                            </CircleIndicator>
                            <div
                              className="css-s3jjkg-StatusIndicator e5fmmf47"
                            >
                              Not Installed
                            </div>
                          </div>
                        </Styled(div)>
                      </Component>
                    </StatusIndicator>
                    <StyledLink
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <Link
                        className="css-fznx2k-StyledLink e5fmmf45"
                        onClick={[Function]}
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to=""
                      >
                        <a
                          className="css-fznx2k-StyledLink e5fmmf45"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          Learn More
                        </a>
                      </Link>
                    </StyledLink>
                  </div>
                </SentryAppDetails>
              </div>
            </SentryAppBox>
            <Styled(div)>
              <div
                className="css-vurnku"
              >
                <SentryApplicationRowButtons
                  app={
                    Object {
                      "author": "Sentry",
                      "clientId": "client-id",
                      "clientSecret": "client-secret",
                      "events": Array [],
                      "isAlertable": false,
                      "name": "Sample App",
                      "overview": "This is an app.",
                      "redirectUrl": "https://example/com/setup",
                      "schema": Object {},
                      "scopes": Array [
                        "project:read",
                      ],
                      "slug": "sample-app",
                      "status": "unpublished",
                      "uuid": "123456123456123456123456",
                      "webhookUrl": "https://example.com/webhook",
                    }
                  }
                  isOnIntegrationPage={true}
                  onClickInstall={[Function]}
                  onClickPublish={[Function]}
                  onClickUninstall={[Function]}
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "org:integrations",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "active",
                        "name": "active",
                      },
                      "teams": Array [],
                    }
                  }
                >
                  <InstallButton
                    onClickInstall={[Function]}
                  >
                    <Button
                      align="center"
                      className="btn btn-default"
                      disabled={false}
                      icon="icon-circle-add"
                      onClick={[Function]}
                      size="small"
                    >
                      <StyledButton
                        aria-disabled={false}
                        aria-label="Install"
                        className="btn btn-default"
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        size="small"
                      >
                        <ForwardRef
                          aria-disabled={false}
                          aria-label="Install"
                          className="btn btn-default css-12ogwys-StyledButton edwq9my0"
                          disabled={false}
                          onClick={[Function]}
                          role="button"
                          size="small"
                        >
                          <button
                            aria-disabled={false}
                            aria-label="Install"
                            className="btn btn-default css-12ogwys-StyledButton edwq9my0"
                            onClick={[Function]}
                            role="button"
                            size="small"
                          >
                            <ButtonLabel
                              align="center"
                              size="small"
                            >
                              <Component
                                align="center"
                                className="css-19gcr2f-ButtonLabel edwq9my1"
                                size="small"
                              >
                                <span
                                  className="css-19gcr2f-ButtonLabel edwq9my1"
                                >
                                  <Icon
                                    hasChildren={true}
                                    size="small"
                                  >
                                    <Component
                                      className="css-1299qb2-Icon edwq9my2"
                                      hasChildren={true}
                                      size="small"
                                    >
                                      <span
                                        className="css-1299qb2-Icon edwq9my2"
                                        size="small"
                                      >
                                        <StyledInlineSvg
                                          size="12px"
                                          src="icon-circle-add"
                                        >
                                          <ForwardRef
                                            className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                            size="12px"
                                            src="icon-circle-add"
                                          >
                                            <svg
                                              className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                              height="12px"
                                              viewBox={Object {}}
                                              width="12px"
                                            >
                                              <use
                                                href="#test"
                                                xlinkHref="#test"
                                              />
                                            </svg>
                                          </ForwardRef>
                                        </StyledInlineSvg>
                                      </span>
                                    </Component>
                                  </Icon>
                                  Install
                                </span>
                              </Component>
                            </ButtonLabel>
                          </button>
                        </ForwardRef>
                      </StyledButton>
                    </Button>
                  </InstallButton>
                </SentryApplicationRowButtons>
              </div>
            </Styled(div)>
          </div>
        </StyledFlex>
      </div>
    </SentryAppItem>
  </SentryApplicationRow>
</SentryAppInstallationDetail>
`;
