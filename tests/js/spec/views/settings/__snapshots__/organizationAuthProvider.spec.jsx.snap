// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationAuthProvider renders 1`] = `
<div>
  <h3>
    <span
      key="4"
    >
      <span
        key="1"
      >
        dummy
      </span>
      <span
        key="2"
      >
         Authentication
      </span>
    </span>
  </h3>
  <div
    className="box"
  >
    <div
      className="box-content with-padding"
    >
      <legend
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        Login URL
      </legend>
      <p>
        While Sentry will try to be clever about directing members to the
              appropriate login form, you're safest just to hit up your
              organization-specific login when visiting the app
        :
      </p>
      <pre>
        <a
          href="http://loginUrl"
        >
          http://loginUrl
        </a>
      </pre>
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
      <legend>
        General Settings
      </legend>
      <ApiForm
        apiEndpoint="/organizations/org-slug/auth-provider/"
        apiMethod="PUT"
        cancelLabel="Cancel"
        className="form-stacked"
        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
        footerClass="form-actions align-right"
        hideErrors={false}
        initialData={
          Object {
            "auth_provider": Object {
              "id": "1",
              "provider": "dummy",
            },
            "content": "",
            "default_role": "member",
            "login_url": "http://loginUrl",
            "pending_links_count": 0,
            "provider_name": "dummy",
            "require_link": true,
          }
        }
        onSubmit={[Function]}
        requireChanges={false}
        resetOnError={false}
        submitDisabled={false}
        submitErrorMessage="There was an error saving your changes."
        submitLabel="Save Settings"
        submitLoadingMessage="Saving changes.."
      >
        <BooleanField
          disabled={false}
          help="Require members to use a valid linked SSO account to access this organization"
          hideErrorMessage={false}
          label="Require SSO"
          name="require_link"
          required={false}
        />
        <SelectField
          choices={
            Array [
              Array [
                "member",
                "Member",
              ],
              Array [
                "billing",
                "Billing",
              ],
              Array [
                "owner",
                "Owner",
              ],
              Array [
                "admin",
                "Admin",
              ],
              Array [
                "manager",
                "Manager",
              ],
            ]
          }
          clearable={true}
          disabled={false}
          hideErrorMessage={false}
          label="Default Role"
          multiple={false}
          name="default_role"
          required={true}
        />
      </ApiForm>
    </div>
  </div>
  <div
    className="box"
  >
    <div
      className="box-header"
    >
      <h3>
        <span
          key="5"
        >
          <span
            key="0"
          >
            Disable 
          </span>
          <span
            key="2"
          >
            dummy
          </span>
          <span
            key="3"
          >
             Authentication
          </span>
        </span>
      </h3>
    </div>
    <div
      className="box-content with-padding"
    >
      <p>
        Your organization will no longer being able to authenticate with their
              existing accounts. This will prevent any existing users from logging in
              unless they have access outside of SSO.
      </p>
      <fieldset
        className="form-actions"
      >
        <Button
          disabled={false}
          onClick={[Function]}
          priority="danger"
        >
          <span
            key="5"
          >
            <span
              key="0"
            >
              Disable 
            </span>
            <span
              key="2"
            >
              dummy
            </span>
            <span
              key="3"
            >
               Auth
            </span>
          </span>
        </Button>
      </fieldset>
    </div>
  </div>
</div>
`;

exports[`OrganizationAuthProvider renders with Unlinked members  1`] = `
<div>
  <h3>
    <span
      key="4"
    >
      <span
        key="1"
      >
        dummy
      </span>
      <span
        key="2"
      >
         Authentication
      </span>
    </span>
  </h3>
  <div
    className="box"
  >
    <div
      className="box-content with-padding"
    >
      <legend
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        Login URL
      </legend>
      <p>
        While Sentry will try to be clever about directing members to the
              appropriate login form, you're safest just to hit up your
              organization-specific login when visiting the app
        :
      </p>
      <pre>
        <a
          href="http://loginUrl"
        >
          http://loginUrl
        </a>
      </pre>
      <div>
        <hr />
        <h4>
          Unlinked Members
        </h4>
        <Button
          className="pull-right"
          disabled={false}
          onClick={[Function]}
          priority="primary"
          style={
            Object {
              "marginLeft": 20,
            }
          }
        >
          Send Reminders
        </Button>
        <p>
          <span
            key="8"
          >
            <span
              key="0"
            >
              There are currently 
            </span>
            <span
              key="2"
            >
              4
            </span>
            <span
              key="3"
            >
               member(s) who have
                  not yet linked their account with 
            </span>
            <span
              key="5"
            >
              dummy
            </span>
            <span
              key="6"
            >
              . Until this
                  is done they will be unable to access the organization.
            </span>
          </span>
        </p>
      </div>
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
      <legend>
        General Settings
      </legend>
      <ApiForm
        apiEndpoint="/organizations/org-slug/auth-provider/"
        apiMethod="PUT"
        cancelLabel="Cancel"
        className="form-stacked"
        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
        footerClass="form-actions align-right"
        hideErrors={false}
        initialData={
          Object {
            "auth_provider": Object {
              "id": "1",
              "provider": "dummy",
            },
            "content": "",
            "default_role": "member",
            "login_url": "http://loginUrl",
            "pending_links_count": 4,
            "provider_name": "dummy",
            "require_link": true,
          }
        }
        onSubmit={[Function]}
        requireChanges={false}
        resetOnError={false}
        submitDisabled={false}
        submitErrorMessage="There was an error saving your changes."
        submitLabel="Save Settings"
        submitLoadingMessage="Saving changes.."
      >
        <BooleanField
          disabled={false}
          help="Require members to use a valid linked SSO account to access this organization"
          hideErrorMessage={false}
          label="Require SSO"
          name="require_link"
          required={false}
        />
        <SelectField
          choices={
            Array [
              Array [
                "member",
                "Member",
              ],
              Array [
                "billing",
                "Billing",
              ],
              Array [
                "owner",
                "Owner",
              ],
              Array [
                "admin",
                "Admin",
              ],
              Array [
                "manager",
                "Manager",
              ],
            ]
          }
          clearable={true}
          disabled={false}
          hideErrorMessage={false}
          label="Default Role"
          multiple={false}
          name="default_role"
          required={true}
        />
      </ApiForm>
    </div>
  </div>
  <div
    className="box"
  >
    <div
      className="box-header"
    >
      <h3>
        <span
          key="5"
        >
          <span
            key="0"
          >
            Disable 
          </span>
          <span
            key="2"
          >
            dummy
          </span>
          <span
            key="3"
          >
             Authentication
          </span>
        </span>
      </h3>
    </div>
    <div
      className="box-content with-padding"
    >
      <p>
        Your organization will no longer being able to authenticate with their
              existing accounts. This will prevent any existing users from logging in
              unless they have access outside of SSO.
      </p>
      <fieldset
        className="form-actions"
      >
        <Button
          disabled={false}
          onClick={[Function]}
          priority="danger"
        >
          <span
            key="5"
          >
            <span
              key="0"
            >
              Disable 
            </span>
            <span
              key="2"
            >
              dummy
            </span>
            <span
              key="3"
            >
               Auth
            </span>
          </span>
        </Button>
      </fieldset>
    </div>
  </div>
</div>
`;

exports[`OrganizationAuthProvider renders with no provider 1`] = `""`;

exports[`OrganizationAuthProvider renders with provider template 1`] = `
Array [
  <div
    className="box-content with-padding"
  >
    <legend
      style={
        Object {
          "marginTop": 0,
        }
      }
    >
      Login URL
    </legend>
    <p>
      While Sentry will try to be clever about directing members to the
              appropriate login form, you're safest just to hit up your
              organization-specific login when visiting the app
      :
    </p>
    <pre>
      <a
        href="http://loginUrl"
      >
        http://loginUrl
      </a>
    </pre>
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "<strong>Test</strong>",
        }
      }
    />
    <legend>
      General Settings
    </legend>
    <ApiForm
      apiEndpoint="/organizations/org-slug/auth-provider/"
      apiMethod="PUT"
      cancelLabel="Cancel"
      className="form-stacked"
      errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
      footerClass="form-actions align-right"
      hideErrors={false}
      initialData={
        Object {
          "auth_provider": Object {
            "id": "1",
            "provider": "dummy",
          },
          "content": "<strong>Test</strong>",
          "default_role": "member",
          "login_url": "http://loginUrl",
          "pending_links_count": 0,
          "provider_name": "dummy",
          "require_link": true,
        }
      }
      onSubmit={[Function]}
      requireChanges={false}
      resetOnError={false}
      submitDisabled={false}
      submitErrorMessage="There was an error saving your changes."
      submitLabel="Save Settings"
      submitLoadingMessage="Saving changes.."
    >
      <BooleanField
        disabled={false}
        help="Require members to use a valid linked SSO account to access this organization"
        hideErrorMessage={false}
        label="Require SSO"
        name="require_link"
        required={false}
      />
      <SelectField
        choices={
          Array [
            Array [
              "member",
              "Member",
            ],
            Array [
              "billing",
              "Billing",
            ],
            Array [
              "owner",
              "Owner",
            ],
            Array [
              "admin",
              "Admin",
            ],
            Array [
              "manager",
              "Manager",
            ],
          ]
        }
        clearable={true}
        disabled={false}
        hideErrorMessage={false}
        label="Default Role"
        multiple={false}
        name="default_role"
        required={true}
      />
    </ApiForm>
  </div>,
  <div
    className="box-content with-padding"
  >
    <p>
      Your organization will no longer being able to authenticate with their
              existing accounts. This will prevent any existing users from logging in
              unless they have access outside of SSO.
    </p>
    <fieldset
      className="form-actions"
    >
      <Button
        disabled={false}
        onClick={[Function]}
        priority="danger"
      >
        <span
          key="5"
        >
          <span
            key="0"
          >
            Disable 
          </span>
          <span
            key="2"
          >
            dummy
          </span>
          <span
            key="3"
          >
             Auth
          </span>
        </span>
      </Button>
    </fieldset>
  </div>,
]
`;
