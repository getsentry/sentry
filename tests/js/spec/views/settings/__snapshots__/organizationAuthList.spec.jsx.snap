// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationAuthList renders 1`] = `
<OrganizationAuthList
  onSendReminders={[Function]}
  orgId="org-slug"
  providerList={
    Array [
      Object {
        "key": "dummy",
        "name": "Dummy",
        "requiredFeature": "organizations:sso-basic",
      },
      Object {
        "key": "dummy2",
        "name": "Dummy SAML",
        "requiredFeature": "organizations:sso-saml2",
      },
    ]
  }
>
  <div
    className="sso"
  >
    <StyledSettingsPageHeading
      noTitleStyles={false}
      title="Authentication"
    >
      <SettingsPageHeading
        className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        noTitleStyles={false}
        title="Authentication"
      >
        <div
          className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        >
          <TitleAndActions>
            <div
              className="css-ifzfc5-TitleAndActions e1uay4fd0"
            >
              <Title
                styled={false}
              >
                <div
                  className="css-u2ls9d-Title e1uay4fd1"
                >
                  <HeaderTitle>
                    <h4
                      className="css-1bosio6-HeaderTitle eqkydle2"
                    >
                      Authentication
                    </h4>
                  </HeaderTitle>
                </div>
              </Title>
            </div>
          </TitleAndActions>
        </div>
      </SettingsPageHeading>
    </StyledSettingsPageHeading>
    <PermissionAlert>
      <WithOrganizationMockWrapper
        access={
          Array [
            "org:write",
          ]
        }
      >
        <withConfig(Access)
          access={
            Array [
              "org:write",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "experiments": Object {},
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
        >
          <Access
            access={
              Array [
                "org:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            isSuperuser={false}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "experiments": Object {},
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </withConfig(Access)>
      </WithOrganizationMockWrapper>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-ietoyz-Panel e119nu470"
      >
        <div
          className="css-ietoyz-Panel e119nu470"
        >
          <PanelHeader>
            <div
              className="css-pi486d-PanelHeader en8g1d30"
            >
              Choose a provider
            </div>
          </PanelHeader>
          <PanelBody
            flexible={false}
            withPadding={false}
          >
            <FlexBox
              withPadding={false}
            >
              <div
                className="css-1nto0rx-FlexBox e1vnwt6f0"
              >
                <PanelAlert
                  type="info"
                >
                  <Component
                    className="css-148v945-PanelAlert e1cszazt0"
                    type="info"
                  >
                    <Alert
                      className="css-148v945-PanelAlert e1cszazt0"
                      icon={
                        <ForwardRef(IconInfo)
                          size="md"
                        />
                      }
                      iconSize="20px"
                      system={true}
                      type="info"
                    >
                      <Component
                        className="e1cszazt0 css-14qvt3q-Alert-PanelAlert ejthpj82"
                        icon={
                          <ForwardRef(IconInfo)
                            size="md"
                          />
                        }
                        iconSize="20px"
                        system={true}
                        type="info"
                      >
                        <div
                          className="ref-info e1cszazt0 css-14qvt3q-Alert-PanelAlert ejthpj82"
                        >
                          <IconWrapper>
                            <span
                              className="css-1vsw7fz-IconWrapper ejthpj80"
                            >
                              <IconInfo
                                size="md"
                              >
                                <ForwardRef(SvgIcon)
                                  size="md"
                                >
                                  <svg
                                    fill="currentColor"
                                    height="20px"
                                    viewBox="0 0 16 16"
                                    width="20px"
                                  >
                                    <path
                                      d="M8,11.78A.74.74,0,0,1,7.24,11V7a.75.75,0,0,1,1.5,0v4A.75.75,0,0,1,8,11.78Z"
                                    />
                                    <circle
                                      cx="8"
                                      cy="4.78"
                                      r="0.76"
                                    />
                                    <path
                                      d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </IconInfo>
                            </span>
                          </IconWrapper>
                          <StyledTextBlock>
                            <span
                              className="css-6y2q80-StyledTextBlock ejthpj81"
                            >
                              <span
                                key="5"
                              >
                                <span
                                  key="0"
                                >
                                  Get started with Single Sign-on for your organization by selecting a provider. Read more in our 
                                </span>
                                <ForwardRef(ExternalLink)
                                  href="https://docs.sentry.io/learn/sso/"
                                  key="2"
                                >
                                  <a
                                    href="https://docs.sentry.io/learn/sso/"
                                    rel="noreferrer noopener"
                                    target="_blank"
                                  >
                                    <span
                                      key="1"
                                    >
                                      SSO documentation
                                    </span>
                                  </a>
                                </ForwardRef(ExternalLink)>
                                <span
                                  key="3"
                                >
                                  .
                                </span>
                              </span>
                            </span>
                          </StyledTextBlock>
                        </div>
                      </Component>
                    </Alert>
                  </Component>
                </PanelAlert>
                <form
                  action="/organizations/org-slug/auth/configure/"
                  method="POST"
                >
                  <input
                    name="csrfmiddlewaretoken"
                    type="hidden"
                    value=""
                  />
                  <input
                    name="init"
                    type="hidden"
                    value="1"
                  />
                  <ProviderItem
                    key="dummy"
                    onConfigure={[Function]}
                    provider={
                      Object {
                        "key": "dummy",
                        "name": "Dummy",
                        "requiredFeature": "organizations:sso-basic",
                      }
                    }
                  >
                    <WithOrganizationMockWrapper
                      features={
                        Array [
                          "organizations:sso-basic",
                        ]
                      }
                      hookName="feature-disabled:sso-basic"
                      renderDisabled={[Function]}
                    >
                      <withProject(withConfig(Feature))
                        features={
                          Array [
                            "organizations:sso-basic",
                          ]
                        }
                        hookName="feature-disabled:sso-basic"
                        organization={
                          Object {
                            "access": Array [
                              "org:read",
                              "org:write",
                              "org:admin",
                              "org:integrations",
                              "project:read",
                              "project:write",
                              "project:admin",
                              "team:read",
                              "team:write",
                              "team:admin",
                            ],
                            "experiments": Object {},
                            "features": Array [],
                            "id": "3",
                            "name": "Organization Name",
                            "onboardingTasks": Array [],
                            "projects": Array [],
                            "scrapeJavaScript": true,
                            "slug": "org-slug",
                            "status": Object {
                              "id": "active",
                              "name": "active",
                            },
                            "teams": Array [],
                          }
                        }
                        renderDisabled={[Function]}
                      >
                        <withConfig(Feature)
                          features={
                            Array [
                              "organizations:sso-basic",
                            ]
                          }
                          hookName="feature-disabled:sso-basic"
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "experiments": Object {},
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          project={
                            Object {
                              "environments": Array [],
                              "hasAccess": true,
                              "id": "2",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name",
                              "slug": "project-slug",
                              "teams": Array [],
                            }
                          }
                          renderDisabled={[Function]}
                        >
                          <Feature
                            config={
                              Object {
                                "features": Set {},
                                "messages": Array [],
                                "user": Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                },
                              }
                            }
                            features={
                              Array [
                                "organizations:sso-basic",
                              ]
                            }
                            hookName="feature-disabled:sso-basic"
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "experiments": Object {},
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            project={
                              Object {
                                "environments": Array [],
                                "hasAccess": true,
                                "id": "2",
                                "isBookmarked": false,
                                "isMember": true,
                                "name": "Project Name",
                                "slug": "project-slug",
                                "teams": Array [],
                              }
                            }
                            renderDisabled={[Function]}
                            requireAll={true}
                          >
                            <PanelItem
                              alignItems="center"
                              p={2}
                            >
                              <div
                                className="css-3gjm3h-PanelItem ej5ox20"
                              >
                                <ProviderInfo>
                                  <div
                                    className="css-18ztp31-ProviderInfo ef88lyh0"
                                  >
                                    <ProviderLogo
                                      className="provider-logo dummy"
                                    >
                                      <div
                                        className="provider-logo dummy css-x0p475-ProviderLogo ef88lyh1"
                                      />
                                    </ProviderLogo>
                                    <div>
                                      <ProviderName>
                                        <div
                                          className="css-1w6wxlb-ProviderName ef88lyh2"
                                        >
                                          Dummy
                                        </div>
                                      </ProviderName>
                                      <ProviderDescription>
                                        <div
                                          className="css-8ld6bn-ProviderDescription ef88lyh3"
                                        >
                                          Enable your organization to sign in with Dummy.
                                        </div>
                                      </ProviderDescription>
                                    </div>
                                  </div>
                                </ProviderInfo>
                                <FeatureBadge>
                                  <div
                                    className="css-1a376z1-FeatureBadge ef88lyh4"
                                  >
                                    <LockedFeature
                                      features={
                                        Array [
                                          "organizations:sso-basic",
                                        ]
                                      }
                                      provider={
                                        Object {
                                          "key": "dummy",
                                          "name": "Dummy",
                                          "requiredFeature": "organizations:sso-basic",
                                        }
                                      }
                                    >
                                      <DisabledHovercard
                                        body={
                                          <FeatureDisabled
                                            featureName="SSO Auth"
                                            features={
                                              Array [
                                                "organizations:sso-basic",
                                              ]
                                            }
                                            hideHelpToggle={true}
                                            message="Dummy SSO is disabled."
                                          />
                                        }
                                        displayTimeout={100}
                                        position="top"
                                      >
                                        <Hovercard
                                          body={
                                            <FeatureDisabled
                                              featureName="SSO Auth"
                                              features={
                                                Array [
                                                  "organizations:sso-basic",
                                                ]
                                              }
                                              hideHelpToggle={true}
                                              message="Dummy SSO is disabled."
                                            />
                                          }
                                          className="css-jyj3vz-DisabledHovercard ef88lyh6"
                                          displayTimeout={100}
                                          position="top"
                                        >
                                          <Manager>
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <span
                                                  aria-describedby="hovercard-123456"
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                >
                                                  <Tag
                                                    icon={
                                                      <ForwardRef(IconLock)
                                                        size="xs"
                                                      />
                                                    }
                                                  >
                                                    <Component
                                                      className="css-so2sem-Tag e1glkkip0"
                                                      icon={
                                                        <ForwardRef(IconLock)
                                                          size="xs"
                                                        />
                                                      }
                                                    >
                                                      <div
                                                        className="css-so2sem-Tag e1glkkip0"
                                                      >
                                                        <IconWrapper>
                                                          <span
                                                            className="css-srof0p-IconWrapper e1glkkip1"
                                                          >
                                                            <IconLock
                                                              size="xs"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                size="xs"
                                                              >
                                                                <svg
                                                                  fill="currentColor"
                                                                  height="12px"
                                                                  viewBox="0 0 16 16"
                                                                  width="12px"
                                                                >
                                                                  <path
                                                                    d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                                                  />
                                                                  <path
                                                                    d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                                                  />
                                                                  <path
                                                                    d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </IconLock>
                                                          </span>
                                                        </IconWrapper>
                                                        disabled
                                                      </div>
                                                    </Component>
                                                  </Tag>
                                                </span>
                                              </InnerReference>
                                            </Reference>
                                          </Manager>
                                        </Hovercard>
                                      </DisabledHovercard>
                                    </LockedFeature>
                                  </div>
                                </FeatureBadge>
                                <div>
                                  <WithOrganizationMockWrapper
                                    access={
                                      Array [
                                        "org:write",
                                      ]
                                    }
                                  >
                                    <withConfig(Access)
                                      access={
                                        Array [
                                          "org:write",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "org:integrations",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "experiments": Object {},
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "active",
                                            "name": "active",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                    >
                                      <Access
                                        access={
                                          Array [
                                            "org:write",
                                          ]
                                        }
                                        config={
                                          Object {
                                            "features": Set {},
                                            "messages": Array [],
                                            "user": Object {
                                              "email": "foo@example.com",
                                              "flags": Object {
                                                "newsletter_consent_prompt": false,
                                              },
                                              "hasPasswordAuth": true,
                                              "id": "1",
                                              "isAuthenticated": true,
                                              "name": "Foo Bar",
                                              "options": Object {
                                                "timezone": "UTC",
                                              },
                                              "permissions": Set {},
                                              "username": "foo@example.com",
                                            },
                                          }
                                        }
                                        isSuperuser={false}
                                        organization={
                                          Object {
                                            "access": Array [
                                              "org:read",
                                              "org:write",
                                              "org:admin",
                                              "org:integrations",
                                              "project:read",
                                              "project:write",
                                              "project:admin",
                                              "team:read",
                                              "team:write",
                                              "team:admin",
                                            ],
                                            "experiments": Object {},
                                            "features": Array [],
                                            "id": "3",
                                            "name": "Organization Name",
                                            "onboardingTasks": Array [],
                                            "projects": Array [],
                                            "scrapeJavaScript": true,
                                            "slug": "org-slug",
                                            "status": Object {
                                              "id": "active",
                                              "name": "active",
                                            },
                                            "teams": Array [],
                                          }
                                        }
                                        renderNoAccessMessage={false}
                                        requireAll={true}
                                      >
                                        <forwardRef<Button>
                                          disabled={true}
                                          name="provider"
                                          onClick={[Function]}
                                          size="small"
                                          type="submit"
                                          value="dummy"
                                        >
                                          <Button
                                            align="center"
                                            disabled={true}
                                            forwardRef={null}
                                            name="provider"
                                            onClick={[Function]}
                                            size="small"
                                            type="submit"
                                            value="dummy"
                                          >
                                            <StyledButton
                                              aria-disabled={true}
                                              aria-label="Configure"
                                              disabled={true}
                                              forwardRef={null}
                                              name="provider"
                                              onClick={[Function]}
                                              role="button"
                                              size="small"
                                              type="submit"
                                              value="dummy"
                                            >
                                              <Component
                                                aria-disabled={true}
                                                aria-label="Configure"
                                                className="css-1a2o3lm-StyledButton edwq9my0"
                                                forwardRef={null}
                                                name="provider"
                                                onClick={[Function]}
                                                role="button"
                                                size="small"
                                                type="submit"
                                                value="dummy"
                                              >
                                                <button
                                                  aria-disabled={true}
                                                  aria-label="Configure"
                                                  className="css-1a2o3lm-StyledButton edwq9my0"
                                                  name="provider"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="small"
                                                  type="submit"
                                                  value="dummy"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="small"
                                                  >
                                                    <span
                                                      className="css-n7mdnv-ButtonLabel edwq9my1"
                                                    >
                                                      Configure
                                                    </span>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </forwardRef<Button>>
                                      </Access>
                                    </withConfig(Access)>
                                  </WithOrganizationMockWrapper>
                                </div>
                              </div>
                            </PanelItem>
                          </Feature>
                        </withConfig(Feature)>
                      </withProject(withConfig(Feature))>
                    </WithOrganizationMockWrapper>
                  </ProviderItem>
                  <ProviderItem
                    key="dummy2"
                    onConfigure={[Function]}
                    provider={
                      Object {
                        "key": "dummy2",
                        "name": "Dummy SAML",
                        "requiredFeature": "organizations:sso-saml2",
                      }
                    }
                  >
                    <WithOrganizationMockWrapper
                      features={
                        Array [
                          "organizations:sso-saml2",
                        ]
                      }
                      hookName="feature-disabled:sso-saml2"
                      renderDisabled={[Function]}
                    >
                      <withProject(withConfig(Feature))
                        features={
                          Array [
                            "organizations:sso-saml2",
                          ]
                        }
                        hookName="feature-disabled:sso-saml2"
                        organization={
                          Object {
                            "access": Array [
                              "org:read",
                              "org:write",
                              "org:admin",
                              "org:integrations",
                              "project:read",
                              "project:write",
                              "project:admin",
                              "team:read",
                              "team:write",
                              "team:admin",
                            ],
                            "experiments": Object {},
                            "features": Array [],
                            "id": "3",
                            "name": "Organization Name",
                            "onboardingTasks": Array [],
                            "projects": Array [],
                            "scrapeJavaScript": true,
                            "slug": "org-slug",
                            "status": Object {
                              "id": "active",
                              "name": "active",
                            },
                            "teams": Array [],
                          }
                        }
                        renderDisabled={[Function]}
                      >
                        <withConfig(Feature)
                          features={
                            Array [
                              "organizations:sso-saml2",
                            ]
                          }
                          hookName="feature-disabled:sso-saml2"
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "experiments": Object {},
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          project={
                            Object {
                              "environments": Array [],
                              "hasAccess": true,
                              "id": "2",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name",
                              "slug": "project-slug",
                              "teams": Array [],
                            }
                          }
                          renderDisabled={[Function]}
                        >
                          <Feature
                            config={
                              Object {
                                "features": Set {},
                                "messages": Array [],
                                "user": Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                },
                              }
                            }
                            features={
                              Array [
                                "organizations:sso-saml2",
                              ]
                            }
                            hookName="feature-disabled:sso-saml2"
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "experiments": Object {},
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            project={
                              Object {
                                "environments": Array [],
                                "hasAccess": true,
                                "id": "2",
                                "isBookmarked": false,
                                "isMember": true,
                                "name": "Project Name",
                                "slug": "project-slug",
                                "teams": Array [],
                              }
                            }
                            renderDisabled={[Function]}
                            requireAll={true}
                          >
                            <PanelItem
                              alignItems="center"
                              p={2}
                            >
                              <div
                                className="css-3gjm3h-PanelItem ej5ox20"
                              >
                                <ProviderInfo>
                                  <div
                                    className="css-18ztp31-ProviderInfo ef88lyh0"
                                  >
                                    <ProviderLogo
                                      className="provider-logo dummysaml"
                                    >
                                      <div
                                        className="provider-logo dummysaml css-x0p475-ProviderLogo ef88lyh1"
                                      />
                                    </ProviderLogo>
                                    <div>
                                      <ProviderName>
                                        <div
                                          className="css-1w6wxlb-ProviderName ef88lyh2"
                                        >
                                          Dummy SAML
                                        </div>
                                      </ProviderName>
                                      <ProviderDescription>
                                        <div
                                          className="css-8ld6bn-ProviderDescription ef88lyh3"
                                        >
                                          Enable your organization to sign in with Dummy SAML.
                                        </div>
                                      </ProviderDescription>
                                    </div>
                                  </div>
                                </ProviderInfo>
                                <FeatureBadge>
                                  <div
                                    className="css-1a376z1-FeatureBadge ef88lyh4"
                                  >
                                    <LockedFeature
                                      features={
                                        Array [
                                          "organizations:sso-saml2",
                                        ]
                                      }
                                      provider={
                                        Object {
                                          "key": "dummy2",
                                          "name": "Dummy SAML",
                                          "requiredFeature": "organizations:sso-saml2",
                                        }
                                      }
                                    >
                                      <DisabledHovercard
                                        body={
                                          <FeatureDisabled
                                            featureName="SSO Auth"
                                            features={
                                              Array [
                                                "organizations:sso-saml2",
                                              ]
                                            }
                                            hideHelpToggle={true}
                                            message="Dummy SAML SSO is disabled."
                                          />
                                        }
                                        displayTimeout={100}
                                        position="top"
                                      >
                                        <Hovercard
                                          body={
                                            <FeatureDisabled
                                              featureName="SSO Auth"
                                              features={
                                                Array [
                                                  "organizations:sso-saml2",
                                                ]
                                              }
                                              hideHelpToggle={true}
                                              message="Dummy SAML SSO is disabled."
                                            />
                                          }
                                          className="css-jyj3vz-DisabledHovercard ef88lyh6"
                                          displayTimeout={100}
                                          position="top"
                                        >
                                          <Manager>
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <span
                                                  aria-describedby="hovercard-123456"
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                >
                                                  <Tag
                                                    icon={
                                                      <ForwardRef(IconLock)
                                                        size="xs"
                                                      />
                                                    }
                                                  >
                                                    <Component
                                                      className="css-so2sem-Tag e1glkkip0"
                                                      icon={
                                                        <ForwardRef(IconLock)
                                                          size="xs"
                                                        />
                                                      }
                                                    >
                                                      <div
                                                        className="css-so2sem-Tag e1glkkip0"
                                                      >
                                                        <IconWrapper>
                                                          <span
                                                            className="css-srof0p-IconWrapper e1glkkip1"
                                                          >
                                                            <IconLock
                                                              size="xs"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                size="xs"
                                                              >
                                                                <svg
                                                                  fill="currentColor"
                                                                  height="12px"
                                                                  viewBox="0 0 16 16"
                                                                  width="12px"
                                                                >
                                                                  <path
                                                                    d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                                                  />
                                                                  <path
                                                                    d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                                                  />
                                                                  <path
                                                                    d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </IconLock>
                                                          </span>
                                                        </IconWrapper>
                                                        disabled
                                                      </div>
                                                    </Component>
                                                  </Tag>
                                                </span>
                                              </InnerReference>
                                            </Reference>
                                          </Manager>
                                        </Hovercard>
                                      </DisabledHovercard>
                                    </LockedFeature>
                                  </div>
                                </FeatureBadge>
                                <div>
                                  <WithOrganizationMockWrapper
                                    access={
                                      Array [
                                        "org:write",
                                      ]
                                    }
                                  >
                                    <withConfig(Access)
                                      access={
                                        Array [
                                          "org:write",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "org:integrations",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "experiments": Object {},
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "active",
                                            "name": "active",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                    >
                                      <Access
                                        access={
                                          Array [
                                            "org:write",
                                          ]
                                        }
                                        config={
                                          Object {
                                            "features": Set {},
                                            "messages": Array [],
                                            "user": Object {
                                              "email": "foo@example.com",
                                              "flags": Object {
                                                "newsletter_consent_prompt": false,
                                              },
                                              "hasPasswordAuth": true,
                                              "id": "1",
                                              "isAuthenticated": true,
                                              "name": "Foo Bar",
                                              "options": Object {
                                                "timezone": "UTC",
                                              },
                                              "permissions": Set {},
                                              "username": "foo@example.com",
                                            },
                                          }
                                        }
                                        isSuperuser={false}
                                        organization={
                                          Object {
                                            "access": Array [
                                              "org:read",
                                              "org:write",
                                              "org:admin",
                                              "org:integrations",
                                              "project:read",
                                              "project:write",
                                              "project:admin",
                                              "team:read",
                                              "team:write",
                                              "team:admin",
                                            ],
                                            "experiments": Object {},
                                            "features": Array [],
                                            "id": "3",
                                            "name": "Organization Name",
                                            "onboardingTasks": Array [],
                                            "projects": Array [],
                                            "scrapeJavaScript": true,
                                            "slug": "org-slug",
                                            "status": Object {
                                              "id": "active",
                                              "name": "active",
                                            },
                                            "teams": Array [],
                                          }
                                        }
                                        renderNoAccessMessage={false}
                                        requireAll={true}
                                      >
                                        <forwardRef<Button>
                                          disabled={true}
                                          name="provider"
                                          onClick={[Function]}
                                          size="small"
                                          type="submit"
                                          value="dummy2"
                                        >
                                          <Button
                                            align="center"
                                            disabled={true}
                                            forwardRef={null}
                                            name="provider"
                                            onClick={[Function]}
                                            size="small"
                                            type="submit"
                                            value="dummy2"
                                          >
                                            <StyledButton
                                              aria-disabled={true}
                                              aria-label="Configure"
                                              disabled={true}
                                              forwardRef={null}
                                              name="provider"
                                              onClick={[Function]}
                                              role="button"
                                              size="small"
                                              type="submit"
                                              value="dummy2"
                                            >
                                              <Component
                                                aria-disabled={true}
                                                aria-label="Configure"
                                                className="css-1a2o3lm-StyledButton edwq9my0"
                                                forwardRef={null}
                                                name="provider"
                                                onClick={[Function]}
                                                role="button"
                                                size="small"
                                                type="submit"
                                                value="dummy2"
                                              >
                                                <button
                                                  aria-disabled={true}
                                                  aria-label="Configure"
                                                  className="css-1a2o3lm-StyledButton edwq9my0"
                                                  name="provider"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="small"
                                                  type="submit"
                                                  value="dummy2"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="small"
                                                  >
                                                    <span
                                                      className="css-n7mdnv-ButtonLabel edwq9my1"
                                                    >
                                                      Configure
                                                    </span>
                                                  </ButtonLabel>
                                                </button>
                                              </Component>
                                            </StyledButton>
                                          </Button>
                                        </forwardRef<Button>>
                                      </Access>
                                    </withConfig(Access)>
                                  </WithOrganizationMockWrapper>
                                </div>
                              </div>
                            </PanelItem>
                          </Feature>
                        </withConfig(Feature)>
                      </withProject(withConfig(Feature))>
                    </WithOrganizationMockWrapper>
                  </ProviderItem>
                </form>
              </div>
            </FlexBox>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</OrganizationAuthList>
`;

exports[`OrganizationAuthList renders with no providers 1`] = `
<OrganizationAuthList
  providerList={Array []}
>
  <div
    className="sso"
  >
    <StyledSettingsPageHeading
      noTitleStyles={false}
      title="Authentication"
    >
      <SettingsPageHeading
        className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        noTitleStyles={false}
        title="Authentication"
      >
        <div
          className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        >
          <TitleAndActions>
            <div
              className="css-ifzfc5-TitleAndActions e1uay4fd0"
            >
              <Title
                styled={false}
              >
                <div
                  className="css-u2ls9d-Title e1uay4fd1"
                >
                  <HeaderTitle>
                    <h4
                      className="css-1bosio6-HeaderTitle eqkydle2"
                    >
                      Authentication
                    </h4>
                  </HeaderTitle>
                </div>
              </Title>
            </div>
          </TitleAndActions>
        </div>
      </SettingsPageHeading>
    </StyledSettingsPageHeading>
    <PermissionAlert>
      <WithOrganizationMockWrapper
        access={
          Array [
            "org:write",
          ]
        }
      >
        <withConfig(Access)
          access={
            Array [
              "org:write",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "experiments": Object {},
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
        >
          <Access
            access={
              Array [
                "org:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            isSuperuser={false}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "experiments": Object {},
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </withConfig(Access)>
      </WithOrganizationMockWrapper>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-ietoyz-Panel e119nu470"
      >
        <div
          className="css-ietoyz-Panel e119nu470"
        >
          <PanelHeader>
            <div
              className="css-pi486d-PanelHeader en8g1d30"
            >
              Choose a provider
            </div>
          </PanelHeader>
          <PanelBody
            flexible={false}
            withPadding={false}
          >
            <FlexBox
              withPadding={false}
            >
              <div
                className="css-1nto0rx-FlexBox e1vnwt6f0"
              >
                <PanelAlert
                  type="info"
                >
                  <Component
                    className="css-148v945-PanelAlert e1cszazt0"
                    type="info"
                  >
                    <Alert
                      className="css-148v945-PanelAlert e1cszazt0"
                      icon={
                        <ForwardRef(IconInfo)
                          size="md"
                        />
                      }
                      iconSize="20px"
                      system={true}
                      type="info"
                    >
                      <Component
                        className="e1cszazt0 css-14qvt3q-Alert-PanelAlert ejthpj82"
                        icon={
                          <ForwardRef(IconInfo)
                            size="md"
                          />
                        }
                        iconSize="20px"
                        system={true}
                        type="info"
                      >
                        <div
                          className="ref-info e1cszazt0 css-14qvt3q-Alert-PanelAlert ejthpj82"
                        >
                          <IconWrapper>
                            <span
                              className="css-1vsw7fz-IconWrapper ejthpj80"
                            >
                              <IconInfo
                                size="md"
                              >
                                <ForwardRef(SvgIcon)
                                  size="md"
                                >
                                  <svg
                                    fill="currentColor"
                                    height="20px"
                                    viewBox="0 0 16 16"
                                    width="20px"
                                  >
                                    <path
                                      d="M8,11.78A.74.74,0,0,1,7.24,11V7a.75.75,0,0,1,1.5,0v4A.75.75,0,0,1,8,11.78Z"
                                    />
                                    <circle
                                      cx="8"
                                      cy="4.78"
                                      r="0.76"
                                    />
                                    <path
                                      d="M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </IconInfo>
                            </span>
                          </IconWrapper>
                          <StyledTextBlock>
                            <span
                              className="css-6y2q80-StyledTextBlock ejthpj81"
                            >
                              <span
                                key="5"
                              >
                                <span
                                  key="0"
                                >
                                  Get started with Single Sign-on for your organization by selecting a provider. Read more in our 
                                </span>
                                <ForwardRef(ExternalLink)
                                  href="https://docs.sentry.io/learn/sso/"
                                  key="2"
                                >
                                  <a
                                    href="https://docs.sentry.io/learn/sso/"
                                    rel="noreferrer noopener"
                                    target="_blank"
                                  >
                                    <span
                                      key="1"
                                    >
                                      SSO documentation
                                    </span>
                                  </a>
                                </ForwardRef(ExternalLink)>
                                <span
                                  key="3"
                                >
                                  .
                                </span>
                              </span>
                            </span>
                          </StyledTextBlock>
                        </div>
                      </Component>
                    </Alert>
                  </Component>
                </PanelAlert>
                <form
                  action="/organizations/org-slug/auth/configure/"
                  method="POST"
                >
                  <input
                    name="csrfmiddlewaretoken"
                    type="hidden"
                    value=""
                  />
                  <input
                    name="init"
                    type="hidden"
                    value="1"
                  />
                  <EmptyMessage>
                    <Component
                      className="css-1qddu1g-EmptyMessage-EmptyMessage e1h3yfdx0"
                    >
                      <div
                        className="css-1qddu1g-EmptyMessage-EmptyMessage e1h3yfdx0"
                        data-test-id="empty-message"
                      >
                        <Description
                          noMargin={true}
                        >
                          <div
                            className="css-iex7sn-TextBlock-Description e1h3yfdx3"
                          >
                            No authentication providers are available.
                          </div>
                        </Description>
                      </div>
                    </Component>
                  </EmptyMessage>
                </form>
              </div>
            </FlexBox>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</OrganizationAuthList>
`;
