// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectEnvironments render active renders empty message 1`] = `
<ProjectEnvironments
  api={Client {}}
  location={
    Object {
      "pathname": "environments/",
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={Array []}
>
  <div>
    <SettingsPageHeading
      noTitleStyles={false}
      tabs={
        <NavTabs
          underlined={true}
        >
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/"
          >
            Environments
          </ListLink>
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/hidden/"
          >
            Hidden
          </ListLink>
        </NavTabs>
      }
      title="Manage Environments"
    >
      <Wrapper>
        <div
          className="css-1r5ylk7-Wrapper e1kblvez2"
        >
          <Flex
            align="center"
          >
            <Base
              align="center"
              className="css-5ipae5"
            >
              <div
                className="css-5ipae5"
                is={null}
              >
                <Title
                  styled={false}
                  tabs={
                    <NavTabs
                      underlined={true}
                    >
                      <ListLink
                        activeClassName="active"
                        index={true}
                        isActive={[Function]}
                        to="/org-slug/project-slug/settings/environments/"
                      >
                        Environments
                      </ListLink>
                      <ListLink
                        activeClassName="active"
                        index={true}
                        isActive={[Function]}
                        to="/org-slug/project-slug/settings/environments/hidden/"
                      >
                        Hidden
                      </ListLink>
                    </NavTabs>
                  }
                >
                  <Base
                    className="css-zs9eah-Title e1kblvez0"
                    tabs={
                      <NavTabs
                        underlined={true}
                      >
                        <ListLink
                          activeClassName="active"
                          index={true}
                          isActive={[Function]}
                          to="/org-slug/project-slug/settings/environments/"
                        >
                          Environments
                        </ListLink>
                        <ListLink
                          activeClassName="active"
                          index={true}
                          isActive={[Function]}
                          to="/org-slug/project-slug/settings/environments/hidden/"
                        >
                          Hidden
                        </ListLink>
                      </NavTabs>
                    }
                  >
                    <div
                      className="css-zs9eah-Title e1kblvez0"
                      is={null}
                      tabs={
                        <NavTabs
                          underlined={true}
                        >
                          <ListLink
                            activeClassName="active"
                            index={true}
                            isActive={[Function]}
                            to="/org-slug/project-slug/settings/environments/"
                          >
                            Environments
                          </ListLink>
                          <ListLink
                            activeClassName="active"
                            index={true}
                            isActive={[Function]}
                            to="/org-slug/project-slug/settings/environments/hidden/"
                          >
                            Hidden
                          </ListLink>
                        </NavTabs>
                      }
                    >
                      <HeaderTitle>
                        <h4
                          className="css-1w8ttcn-HeaderTitle e6lvex72"
                        >
                          Manage Environments
                        </h4>
                      </HeaderTitle>
                    </div>
                  </Base>
                </Title>
              </div>
            </Base>
          </Flex>
          <div>
            <NavTabs
              underlined={true}
            >
              <ul
                className="nav nav-tabs border-bottom"
              >
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/"
                >
                  <li
                    className="active"
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Environments
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/hidden/"
                >
                  <li
                    className=""
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Hidden
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </div>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <PermissionAlert
      access={
        Array [
          "project:write",
        ]
      }
    >
      <withConfig(AccessContainer)
        access={
          Array [
            "project:write",
          ]
        }
      >
        <AccessContainer
          access={
            Array [
              "project:write",
            ]
          }
          config={
            Object {
              "features": Set {},
              "messages": Array [],
              "user": Object {
                "email": "foo@example.com",
                "flags": Object {
                  "newsletter_consent_prompt": false,
                },
                "hasPasswordAuth": true,
                "id": "1",
                "isAuthenticated": true,
                "name": "Foo Bar",
                "options": Object {
                  "timezone": "UTC",
                },
                "permissions": Set {},
                "username": "foo@example.com",
              },
            }
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            configUser={
              Object {
                "email": "foo@example.com",
                "flags": Object {
                  "newsletter_consent_prompt": false,
                },
                "hasPasswordAuth": true,
                "id": "1",
                "isAuthenticated": true,
                "name": "Foo Bar",
                "options": Object {
                  "timezone": "UTC",
                },
                "permissions": Set {},
                "username": "foo@example.com",
              }
            }
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </AccessContainer>
      </withConfig(AccessContainer)>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-10qfvek-Panel e1laxa7d0"
      >
        <div
          className="css-10qfvek-Panel e1laxa7d0"
        >
          <PanelHeader>
            <Component
              className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
            >
              <Flex
                align="center"
                className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
                justify="space-between"
              >
                <Base
                  align="center"
                  className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                  justify="space-between"
                >
                  <div
                    className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                    is={null}
                  >
                    Active Environments
                  </div>
                </Base>
              </Flex>
            </Component>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <div
              className="css-a4ya23-textStyles"
            >
              <EmptyMessage>
                <Wrapper
                  data-test-id="empty-message"
                >
                  <div
                    className="css-ev9qm0-Wrapper eh488yo0"
                    data-test-id="empty-message"
                  >
                    <Description
                      noMargin={true}
                    >
                      <Component
                        className="css-pwn5v-TextBlock-Description-MarginStyles eh488yo1"
                        noMargin={true}
                      >
                        <div
                          className="css-pwn5v-TextBlock-Description-MarginStyles eh488yo1"
                        >
                          You don't have any environments yet.
                        </div>
                      </Component>
                    </Description>
                  </div>
                </Wrapper>
              </EmptyMessage>
            </div>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</ProjectEnvironments>
`;

exports[`ProjectEnvironments render hidden renders empty message 1`] = `
<ProjectEnvironments
  api={Client {}}
  location={
    Object {
      "pathname": "environments/hidden/",
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={Array []}
>
  <div>
    <SettingsPageHeading
      noTitleStyles={false}
      tabs={
        <NavTabs
          underlined={true}
        >
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/"
          >
            Environments
          </ListLink>
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/hidden/"
          >
            Hidden
          </ListLink>
        </NavTabs>
      }
      title="Manage Environments"
    >
      <Wrapper>
        <div
          className="css-1r5ylk7-Wrapper e1kblvez2"
        >
          <Flex
            align="center"
          >
            <Base
              align="center"
              className="css-5ipae5"
            >
              <div
                className="css-5ipae5"
                is={null}
              >
                <Title
                  styled={false}
                  tabs={
                    <NavTabs
                      underlined={true}
                    >
                      <ListLink
                        activeClassName="active"
                        index={true}
                        isActive={[Function]}
                        to="/org-slug/project-slug/settings/environments/"
                      >
                        Environments
                      </ListLink>
                      <ListLink
                        activeClassName="active"
                        index={true}
                        isActive={[Function]}
                        to="/org-slug/project-slug/settings/environments/hidden/"
                      >
                        Hidden
                      </ListLink>
                    </NavTabs>
                  }
                >
                  <Base
                    className="css-zs9eah-Title e1kblvez0"
                    tabs={
                      <NavTabs
                        underlined={true}
                      >
                        <ListLink
                          activeClassName="active"
                          index={true}
                          isActive={[Function]}
                          to="/org-slug/project-slug/settings/environments/"
                        >
                          Environments
                        </ListLink>
                        <ListLink
                          activeClassName="active"
                          index={true}
                          isActive={[Function]}
                          to="/org-slug/project-slug/settings/environments/hidden/"
                        >
                          Hidden
                        </ListLink>
                      </NavTabs>
                    }
                  >
                    <div
                      className="css-zs9eah-Title e1kblvez0"
                      is={null}
                      tabs={
                        <NavTabs
                          underlined={true}
                        >
                          <ListLink
                            activeClassName="active"
                            index={true}
                            isActive={[Function]}
                            to="/org-slug/project-slug/settings/environments/"
                          >
                            Environments
                          </ListLink>
                          <ListLink
                            activeClassName="active"
                            index={true}
                            isActive={[Function]}
                            to="/org-slug/project-slug/settings/environments/hidden/"
                          >
                            Hidden
                          </ListLink>
                        </NavTabs>
                      }
                    >
                      <HeaderTitle>
                        <h4
                          className="css-1w8ttcn-HeaderTitle e6lvex72"
                        >
                          Manage Environments
                        </h4>
                      </HeaderTitle>
                    </div>
                  </Base>
                </Title>
              </div>
            </Base>
          </Flex>
          <div>
            <NavTabs
              underlined={true}
            >
              <ul
                className="nav nav-tabs border-bottom"
              >
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/"
                >
                  <li
                    className=""
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Environments
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/hidden/"
                >
                  <li
                    className="active"
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Hidden
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </div>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <PermissionAlert
      access={
        Array [
          "project:write",
        ]
      }
    >
      <withConfig(AccessContainer)
        access={
          Array [
            "project:write",
          ]
        }
      >
        <AccessContainer
          access={
            Array [
              "project:write",
            ]
          }
          config={
            Object {
              "features": Set {},
              "messages": Array [],
              "user": Object {
                "email": "foo@example.com",
                "flags": Object {
                  "newsletter_consent_prompt": false,
                },
                "hasPasswordAuth": true,
                "id": "1",
                "isAuthenticated": true,
                "name": "Foo Bar",
                "options": Object {
                  "timezone": "UTC",
                },
                "permissions": Set {},
                "username": "foo@example.com",
              },
            }
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            configUser={
              Object {
                "email": "foo@example.com",
                "flags": Object {
                  "newsletter_consent_prompt": false,
                },
                "hasPasswordAuth": true,
                "id": "1",
                "isAuthenticated": true,
                "name": "Foo Bar",
                "options": Object {
                  "timezone": "UTC",
                },
                "permissions": Set {},
                "username": "foo@example.com",
              }
            }
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </AccessContainer>
      </withConfig(AccessContainer)>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-10qfvek-Panel e1laxa7d0"
      >
        <div
          className="css-10qfvek-Panel e1laxa7d0"
        >
          <PanelHeader>
            <Component
              className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
            >
              <Flex
                align="center"
                className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
                justify="space-between"
              >
                <Base
                  align="center"
                  className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                  justify="space-between"
                >
                  <div
                    className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                    is={null}
                  >
                    Hidden
                  </div>
                </Base>
              </Flex>
            </Component>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <div
              className="css-a4ya23-textStyles"
            >
              <EmptyMessage>
                <Wrapper
                  data-test-id="empty-message"
                >
                  <div
                    className="css-ev9qm0-Wrapper eh488yo0"
                    data-test-id="empty-message"
                  >
                    <Description
                      noMargin={true}
                    >
                      <Component
                        className="css-pwn5v-TextBlock-Description-MarginStyles eh488yo1"
                        noMargin={true}
                      >
                        <div
                          className="css-pwn5v-TextBlock-Description-MarginStyles eh488yo1"
                        >
                          You don't have any hidden environments.
                        </div>
                      </Component>
                    </Description>
                  </div>
                </Wrapper>
              </EmptyMessage>
            </div>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</ProjectEnvironments>
`;

exports[`ProjectEnvironments render hidden renders environment list 1`] = `
<ProjectEnvironments
  api={Client {}}
  location={
    Object {
      "pathname": "environments/hidden/",
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={Array []}
>
  <div>
    <SettingsPageHeading
      noTitleStyles={false}
      tabs={
        <NavTabs
          underlined={true}
        >
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/"
          >
            Environments
          </ListLink>
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/hidden/"
          >
            Hidden
          </ListLink>
        </NavTabs>
      }
      title="Manage Environments"
    >
      <Wrapper>
        <div
          className="css-1r5ylk7-Wrapper e1kblvez2"
        >
          <Flex
            align="center"
          >
            <Base
              align="center"
              className="css-5ipae5"
            >
              <div
                className="css-5ipae5"
                is={null}
              >
                <Title
                  styled={false}
                  tabs={
                    <NavTabs
                      underlined={true}
                    >
                      <ListLink
                        activeClassName="active"
                        index={true}
                        isActive={[Function]}
                        to="/org-slug/project-slug/settings/environments/"
                      >
                        Environments
                      </ListLink>
                      <ListLink
                        activeClassName="active"
                        index={true}
                        isActive={[Function]}
                        to="/org-slug/project-slug/settings/environments/hidden/"
                      >
                        Hidden
                      </ListLink>
                    </NavTabs>
                  }
                >
                  <Base
                    className="css-zs9eah-Title e1kblvez0"
                    tabs={
                      <NavTabs
                        underlined={true}
                      >
                        <ListLink
                          activeClassName="active"
                          index={true}
                          isActive={[Function]}
                          to="/org-slug/project-slug/settings/environments/"
                        >
                          Environments
                        </ListLink>
                        <ListLink
                          activeClassName="active"
                          index={true}
                          isActive={[Function]}
                          to="/org-slug/project-slug/settings/environments/hidden/"
                        >
                          Hidden
                        </ListLink>
                      </NavTabs>
                    }
                  >
                    <div
                      className="css-zs9eah-Title e1kblvez0"
                      is={null}
                      tabs={
                        <NavTabs
                          underlined={true}
                        >
                          <ListLink
                            activeClassName="active"
                            index={true}
                            isActive={[Function]}
                            to="/org-slug/project-slug/settings/environments/"
                          >
                            Environments
                          </ListLink>
                          <ListLink
                            activeClassName="active"
                            index={true}
                            isActive={[Function]}
                            to="/org-slug/project-slug/settings/environments/hidden/"
                          >
                            Hidden
                          </ListLink>
                        </NavTabs>
                      }
                    >
                      <HeaderTitle>
                        <h4
                          className="css-1w8ttcn-HeaderTitle e6lvex72"
                        >
                          Manage Environments
                        </h4>
                      </HeaderTitle>
                    </div>
                  </Base>
                </Title>
              </div>
            </Base>
          </Flex>
          <div>
            <NavTabs
              underlined={true}
            >
              <ul
                className="nav nav-tabs border-bottom"
              >
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/"
                >
                  <li
                    className=""
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Environments
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/hidden/"
                >
                  <li
                    className="active"
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Hidden
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </div>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <PermissionAlert
      access={
        Array [
          "project:write",
        ]
      }
    >
      <withConfig(AccessContainer)
        access={
          Array [
            "project:write",
          ]
        }
      >
        <AccessContainer
          access={
            Array [
              "project:write",
            ]
          }
          config={
            Object {
              "features": Set {},
              "messages": Array [],
              "user": Object {
                "email": "foo@example.com",
                "flags": Object {
                  "newsletter_consent_prompt": false,
                },
                "hasPasswordAuth": true,
                "id": "1",
                "isAuthenticated": true,
                "name": "Foo Bar",
                "options": Object {
                  "timezone": "UTC",
                },
                "permissions": Set {},
                "username": "foo@example.com",
              },
            }
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            configUser={
              Object {
                "email": "foo@example.com",
                "flags": Object {
                  "newsletter_consent_prompt": false,
                },
                "hasPasswordAuth": true,
                "id": "1",
                "isAuthenticated": true,
                "name": "Foo Bar",
                "options": Object {
                  "timezone": "UTC",
                },
                "permissions": Set {},
                "username": "foo@example.com",
              }
            }
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </AccessContainer>
      </withConfig(AccessContainer)>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-10qfvek-Panel e1laxa7d0"
      >
        <div
          className="css-10qfvek-Panel e1laxa7d0"
        >
          <PanelHeader>
            <Component
              className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
            >
              <Flex
                align="center"
                className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
                justify="space-between"
              >
                <Base
                  align="center"
                  className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                  justify="space-between"
                >
                  <div
                    className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                    is={null}
                  >
                    Hidden
                  </div>
                </Base>
              </Flex>
            </Component>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <div
              className="css-a4ya23-textStyles"
            >
              <EnvironmentRow
                actionText="Show"
                environment={
                  Object {
                    "id": "1",
                    "isHidden": true,
                    "name": "zzz",
                  }
                }
                isHidden={true}
                key="1"
                name="zzz"
                onHide={[Function]}
                shouldShowAction={true}
              >
                <PanelItem
                  align="center"
                  justify="space-between"
                  p={2}
                >
                  <Base
                    align="center"
                    className="css-1uaastv-PanelItem eo8n7lk0"
                    justify="space-between"
                    p={2}
                  >
                    <div
                      className="css-1uaastv-PanelItem eo8n7lk0"
                      is={null}
                    >
                      <Flex
                        align="center"
                      >
                        <Base
                          align="center"
                          className="css-5ipae5"
                        >
                          <div
                            className="css-5ipae5"
                            is={null}
                          >
                            zzz
                          </div>
                        </Base>
                      </Flex>
                      <withConfig(AccessContainer)
                        access={
                          Array [
                            "project:write",
                          ]
                        }
                      >
                        <AccessContainer
                          access={
                            Array [
                              "project:write",
                            ]
                          }
                          config={
                            Object {
                              "features": Set {},
                              "messages": Array [],
                              "user": Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              },
                            }
                          }
                        >
                          <Access
                            access={
                              Array [
                                "project:write",
                              ]
                            }
                            config={
                              Object {
                                "features": Set {},
                                "messages": Array [],
                                "user": Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                },
                              }
                            }
                            configUser={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            renderNoAccessMessage={false}
                            requireAll={true}
                          >
                            <div>
                              <EnvironmentButton
                                disabled={false}
                                onClick={[Function]}
                                size="xsmall"
                              >
                                <Button
                                  className="css-10adnmx-EnvironmentButton e1pnz46f0"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="xsmall"
                                >
                                  <StyledButton
                                    aria-disabled={false}
                                    aria-label="Show"
                                    className="css-10adnmx-EnvironmentButton e1pnz46f0"
                                    disabled={false}
                                    onClick={[Function]}
                                    role="button"
                                    size="xsmall"
                                  >
                                    <ForwardRef
                                      aria-disabled={false}
                                      aria-label="Show"
                                      className="e1pnz46f0 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
                                      disabled={false}
                                      onClick={[Function]}
                                      role="button"
                                      size="xsmall"
                                    >
                                      <button
                                        aria-disabled={false}
                                        aria-label="Show"
                                        className="e1pnz46f0 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ButtonLabel
                                          size="xsmall"
                                        >
                                          <Component
                                            className="css-uthd1f-ButtonLabel e12ma6z1"
                                            size="xsmall"
                                          >
                                            <span
                                              className="css-uthd1f-ButtonLabel e12ma6z1"
                                            >
                                              Show
                                            </span>
                                          </Component>
                                        </ButtonLabel>
                                      </button>
                                    </ForwardRef>
                                  </StyledButton>
                                </Button>
                              </EnvironmentButton>
                            </div>
                          </Access>
                        </AccessContainer>
                      </withConfig(AccessContainer)>
                    </div>
                  </Base>
                </PanelItem>
              </EnvironmentRow>
            </div>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</ProjectEnvironments>
`;
