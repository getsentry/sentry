// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectEnvironments render active renders empty message 1`] = `
<ProjectEnvironments
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "pathname": "environments/",
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={Array []}
>
  <div>
    <SentryDocumentTitle
      objSlug="project-slug"
      title="Environments"
    >
      <SideEffect(DocumentTitle)
        title="Environments - project-slug - Sentry"
      >
        <DocumentTitle
          title="Environments - project-slug - Sentry"
        />
      </SideEffect(DocumentTitle)>
    </SentryDocumentTitle>
    <StyledSettingsPageHeading
      noTitleStyles={false}
      tabs={
        <NavTabs
          underlined={true}
        >
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/"
          >
            Environments
          </ListLink>
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/hidden/"
          >
            Hidden
          </ListLink>
        </NavTabs>
      }
      title="Manage Environments"
    >
      <SettingsPageHeading
        className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        noTitleStyles={false}
        tabs={
          <NavTabs
            underlined={true}
          >
            <ListLink
              activeClassName="active"
              index={true}
              isActive={[Function]}
              to="/org-slug/project-slug/settings/environments/"
            >
              Environments
            </ListLink>
            <ListLink
              activeClassName="active"
              index={true}
              isActive={[Function]}
              to="/org-slug/project-slug/settings/environments/hidden/"
            >
              Hidden
            </ListLink>
          </NavTabs>
        }
        title="Manage Environments"
      >
        <div
          className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        >
          <TitleAndActions>
            <div
              className="css-ifzfc5-TitleAndActions e1uay4fd0"
            >
              <Title
                styled={false}
                tabs={
                  <NavTabs
                    underlined={true}
                  >
                    <ListLink
                      activeClassName="active"
                      index={true}
                      isActive={[Function]}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      Environments
                    </ListLink>
                    <ListLink
                      activeClassName="active"
                      index={true}
                      isActive={[Function]}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      Hidden
                    </ListLink>
                  </NavTabs>
                }
              >
                <div
                  className="css-aqgf1z-Title e1uay4fd1"
                >
                  <HeaderTitle>
                    <h4
                      className="css-1bosio6-HeaderTitle eqkydle2"
                    >
                      Manage Environments
                    </h4>
                  </HeaderTitle>
                </div>
              </Title>
            </div>
          </TitleAndActions>
          <div>
            <NavTabs
              underlined={true}
            >
              <ul
                className="nav nav-tabs border-bottom"
              >
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/"
                >
                  <li
                    className="active"
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Environments
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/hidden/"
                >
                  <li
                    className=""
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Hidden
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </div>
        </div>
      </SettingsPageHeading>
    </StyledSettingsPageHeading>
    <PermissionAlert
      access={
        Array [
          "project:write",
        ]
      }
    >
      <WithOrganizationMockWrapper
        access={
          Array [
            "project:write",
          ]
        }
      >
        <withConfig(Access)
          access={
            Array [
              "project:write",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            isSuperuser={false}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </withConfig(Access)>
      </WithOrganizationMockWrapper>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-15hwgrz-Panel e119nu470"
      >
        <div
          className="css-15hwgrz-Panel e119nu470"
        >
          <PanelHeader>
            <div
              className="css-1es1m70-PanelHeader en8g1d30"
            >
              Active Environments
            </div>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <EmotionCssPropInternal
              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="PanelBody"
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
              css={
                Object {
                  "map": undefined,
                  "name": "b1rh9y-PanelBody",
                  "next": undefined,
                  "styles": "h1,h2,h3,h4,h5,h6,p,ul,ol,table,dl,blockquote,form,pre,.auto-select-text,.section,[class^='highlight-']{margin-bottom:20px;&:last-child{margin-bottom:0;}}h1,h2,h3,h4,h5,h6{line-height:1.2;}p,ul,ol,blockquote{line-height:1.5;}h1{font-size:2em;}h2{font-size:1.75em;}h3{font-size:1.5em;}h4{font-size:1.25em;}h5{font-size:1em;}pre{word-break:break-all;white-space:pre-wrap;};;label:PanelBody;",
                  "toString": [Function],
                }
              }
            >
              <div
                className="css-b1rh9y-PanelBody"
              >
                <EmptyMessage>
                  <Component
                    className="css-1scmenn-EmptyMessage e1h3yfdx4"
                  >
                    <div
                      className="css-1scmenn-EmptyMessage e1h3yfdx4"
                      data-test-id="empty-message"
                    >
                      <Description
                        noMargin={true}
                      >
                        <div
                          className="css-1y44za3-TextBlock-Description e1h3yfdx0"
                        >
                          You don't have any environments yet.
                        </div>
                      </Description>
                    </div>
                  </Component>
                </EmptyMessage>
              </div>
            </EmotionCssPropInternal>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</ProjectEnvironments>
`;

exports[`ProjectEnvironments render hidden renders empty message 1`] = `
<ProjectEnvironments
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "pathname": "environments/hidden/",
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={Array []}
>
  <div>
    <SentryDocumentTitle
      objSlug="project-slug"
      title="Environments"
    >
      <SideEffect(DocumentTitle)
        title="Environments - project-slug - Sentry"
      >
        <DocumentTitle
          title="Environments - project-slug - Sentry"
        />
      </SideEffect(DocumentTitle)>
    </SentryDocumentTitle>
    <StyledSettingsPageHeading
      noTitleStyles={false}
      tabs={
        <NavTabs
          underlined={true}
        >
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/"
          >
            Environments
          </ListLink>
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/hidden/"
          >
            Hidden
          </ListLink>
        </NavTabs>
      }
      title="Manage Environments"
    >
      <SettingsPageHeading
        className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        noTitleStyles={false}
        tabs={
          <NavTabs
            underlined={true}
          >
            <ListLink
              activeClassName="active"
              index={true}
              isActive={[Function]}
              to="/org-slug/project-slug/settings/environments/"
            >
              Environments
            </ListLink>
            <ListLink
              activeClassName="active"
              index={true}
              isActive={[Function]}
              to="/org-slug/project-slug/settings/environments/hidden/"
            >
              Hidden
            </ListLink>
          </NavTabs>
        }
        title="Manage Environments"
      >
        <div
          className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        >
          <TitleAndActions>
            <div
              className="css-ifzfc5-TitleAndActions e1uay4fd0"
            >
              <Title
                styled={false}
                tabs={
                  <NavTabs
                    underlined={true}
                  >
                    <ListLink
                      activeClassName="active"
                      index={true}
                      isActive={[Function]}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      Environments
                    </ListLink>
                    <ListLink
                      activeClassName="active"
                      index={true}
                      isActive={[Function]}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      Hidden
                    </ListLink>
                  </NavTabs>
                }
              >
                <div
                  className="css-aqgf1z-Title e1uay4fd1"
                >
                  <HeaderTitle>
                    <h4
                      className="css-1bosio6-HeaderTitle eqkydle2"
                    >
                      Manage Environments
                    </h4>
                  </HeaderTitle>
                </div>
              </Title>
            </div>
          </TitleAndActions>
          <div>
            <NavTabs
              underlined={true}
            >
              <ul
                className="nav nav-tabs border-bottom"
              >
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/"
                >
                  <li
                    className=""
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Environments
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/hidden/"
                >
                  <li
                    className="active"
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Hidden
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </div>
        </div>
      </SettingsPageHeading>
    </StyledSettingsPageHeading>
    <PermissionAlert
      access={
        Array [
          "project:write",
        ]
      }
    >
      <WithOrganizationMockWrapper
        access={
          Array [
            "project:write",
          ]
        }
      >
        <withConfig(Access)
          access={
            Array [
              "project:write",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            isSuperuser={false}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </withConfig(Access)>
      </WithOrganizationMockWrapper>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-15hwgrz-Panel e119nu470"
      >
        <div
          className="css-15hwgrz-Panel e119nu470"
        >
          <PanelHeader>
            <div
              className="css-1es1m70-PanelHeader en8g1d30"
            >
              Hidden
            </div>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <EmotionCssPropInternal
              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="PanelBody"
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
              css={
                Object {
                  "map": undefined,
                  "name": "b1rh9y-PanelBody",
                  "next": undefined,
                  "styles": "h1,h2,h3,h4,h5,h6,p,ul,ol,table,dl,blockquote,form,pre,.auto-select-text,.section,[class^='highlight-']{margin-bottom:20px;&:last-child{margin-bottom:0;}}h1,h2,h3,h4,h5,h6{line-height:1.2;}p,ul,ol,blockquote{line-height:1.5;}h1{font-size:2em;}h2{font-size:1.75em;}h3{font-size:1.5em;}h4{font-size:1.25em;}h5{font-size:1em;}pre{word-break:break-all;white-space:pre-wrap;};;label:PanelBody;",
                  "toString": [Function],
                }
              }
            >
              <div
                className="css-b1rh9y-PanelBody"
              >
                <EmptyMessage>
                  <Component
                    className="css-1scmenn-EmptyMessage e1h3yfdx4"
                  >
                    <div
                      className="css-1scmenn-EmptyMessage e1h3yfdx4"
                      data-test-id="empty-message"
                    >
                      <Description
                        noMargin={true}
                      >
                        <div
                          className="css-1y44za3-TextBlock-Description e1h3yfdx0"
                        >
                          You don't have any hidden environments.
                        </div>
                      </Description>
                    </div>
                  </Component>
                </EmptyMessage>
              </div>
            </EmotionCssPropInternal>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</ProjectEnvironments>
`;

exports[`ProjectEnvironments render hidden renders environment list 1`] = `
<ProjectEnvironments
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "pathname": "environments/hidden/",
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  routes={Array []}
>
  <div>
    <SentryDocumentTitle
      objSlug="project-slug"
      title="Environments"
    >
      <SideEffect(DocumentTitle)
        title="Environments - project-slug - Sentry"
      >
        <DocumentTitle
          title="Environments - project-slug - Sentry"
        />
      </SideEffect(DocumentTitle)>
    </SentryDocumentTitle>
    <StyledSettingsPageHeading
      noTitleStyles={false}
      tabs={
        <NavTabs
          underlined={true}
        >
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/"
          >
            Environments
          </ListLink>
          <ListLink
            activeClassName="active"
            index={true}
            isActive={[Function]}
            to="/org-slug/project-slug/settings/environments/hidden/"
          >
            Hidden
          </ListLink>
        </NavTabs>
      }
      title="Manage Environments"
    >
      <SettingsPageHeading
        className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        noTitleStyles={false}
        tabs={
          <NavTabs
            underlined={true}
          >
            <ListLink
              activeClassName="active"
              index={true}
              isActive={[Function]}
              to="/org-slug/project-slug/settings/environments/"
            >
              Environments
            </ListLink>
            <ListLink
              activeClassName="active"
              index={true}
              isActive={[Function]}
              to="/org-slug/project-slug/settings/environments/hidden/"
            >
              Hidden
            </ListLink>
          </NavTabs>
        }
        title="Manage Environments"
      >
        <div
          className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
        >
          <TitleAndActions>
            <div
              className="css-ifzfc5-TitleAndActions e1uay4fd0"
            >
              <Title
                styled={false}
                tabs={
                  <NavTabs
                    underlined={true}
                  >
                    <ListLink
                      activeClassName="active"
                      index={true}
                      isActive={[Function]}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      Environments
                    </ListLink>
                    <ListLink
                      activeClassName="active"
                      index={true}
                      isActive={[Function]}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      Hidden
                    </ListLink>
                  </NavTabs>
                }
              >
                <div
                  className="css-aqgf1z-Title e1uay4fd1"
                >
                  <HeaderTitle>
                    <h4
                      className="css-1bosio6-HeaderTitle eqkydle2"
                    >
                      Manage Environments
                    </h4>
                  </HeaderTitle>
                </div>
              </Title>
            </div>
          </TitleAndActions>
          <div>
            <NavTabs
              underlined={true}
            >
              <ul
                className="nav nav-tabs border-bottom"
              >
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/"
                >
                  <li
                    className=""
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Environments
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={true}
                  isActive={[Function]}
                  to="/org-slug/project-slug/settings/environments/hidden/"
                >
                  <li
                    className="active"
                  >
                    <Link
                      onlyActiveOnIndex={true}
                      style={Object {}}
                      to="/org-slug/project-slug/settings/environments/hidden/"
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Hidden
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </div>
        </div>
      </SettingsPageHeading>
    </StyledSettingsPageHeading>
    <PermissionAlert
      access={
        Array [
          "project:write",
        ]
      }
    >
      <WithOrganizationMockWrapper
        access={
          Array [
            "project:write",
          ]
        }
      >
        <withConfig(Access)
          access={
            Array [
              "project:write",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
        >
          <Access
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            isSuperuser={false}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          />
        </withConfig(Access)>
      </WithOrganizationMockWrapper>
    </PermissionAlert>
    <Panel>
      <Component
        className="css-15hwgrz-Panel e119nu470"
      >
        <div
          className="css-15hwgrz-Panel e119nu470"
        >
          <PanelHeader>
            <div
              className="css-1es1m70-PanelHeader en8g1d30"
            >
              Hidden
            </div>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <EmotionCssPropInternal
              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="PanelBody"
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
              css={
                Object {
                  "map": undefined,
                  "name": "b1rh9y-PanelBody",
                  "next": undefined,
                  "styles": "h1,h2,h3,h4,h5,h6,p,ul,ol,table,dl,blockquote,form,pre,.auto-select-text,.section,[class^='highlight-']{margin-bottom:20px;&:last-child{margin-bottom:0;}}h1,h2,h3,h4,h5,h6{line-height:1.2;}p,ul,ol,blockquote{line-height:1.5;}h1{font-size:2em;}h2{font-size:1.75em;}h3{font-size:1.5em;}h4{font-size:1.25em;}h5{font-size:1em;}pre{word-break:break-all;white-space:pre-wrap;};;label:PanelBody;",
                  "toString": [Function],
                }
              }
            >
              <div
                className="css-b1rh9y-PanelBody"
              >
                <EnvironmentRow
                  actionText="Show"
                  environment={
                    Object {
                      "id": "1",
                      "isHidden": true,
                      "name": "zzz",
                    }
                  }
                  isHidden={true}
                  key="1"
                  name="zzz"
                  onHide={[Function]}
                  shouldShowAction={true}
                >
                  <PanelItem
                    alignItems="center"
                    justifyContent="space-between"
                    p={2}
                  >
                    <div
                      className="css-d2dsxt-PanelItem eo8n7lk0"
                    >
                      <Styled(div)
                        alignItems="center"
                      >
                        <div
                          className="css-zkfaav"
                        >
                          zzz
                        </div>
                      </Styled(div)>
                      <WithOrganizationMockWrapper
                        access={
                          Array [
                            "project:write",
                          ]
                        }
                      >
                        <withConfig(Access)
                          access={
                            Array [
                              "project:write",
                            ]
                          }
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                        >
                          <Access
                            access={
                              Array [
                                "project:write",
                              ]
                            }
                            config={
                              Object {
                                "features": Set {},
                                "messages": Array [],
                                "user": Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                },
                              }
                            }
                            isSuperuser={false}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            renderNoAccessMessage={false}
                            requireAll={true}
                          >
                            <div>
                              <EnvironmentButton
                                align="center"
                                disabled={false}
                                onClick={[Function]}
                                size="xsmall"
                              >
                                <Button
                                  align="center"
                                  className="css-1g4cmym-EnvironmentButton e1pnz46f0"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="xsmall"
                                >
                                  <StyledButton
                                    aria-disabled={false}
                                    aria-label="Show"
                                    className="css-1g4cmym-EnvironmentButton e1pnz46f0"
                                    disabled={false}
                                    onClick={[Function]}
                                    role="button"
                                    size="xsmall"
                                  >
                                    <ForwardRef
                                      aria-disabled={false}
                                      aria-label="Show"
                                      className="e1pnz46f0 css-kzdej5-StyledButton-EnvironmentButton edwq9my0"
                                      disabled={false}
                                      onClick={[Function]}
                                      role="button"
                                      size="xsmall"
                                    >
                                      <button
                                        aria-disabled={false}
                                        aria-label="Show"
                                        className="e1pnz46f0 css-kzdej5-StyledButton-EnvironmentButton edwq9my0"
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ButtonLabel
                                          align="center"
                                          size="xsmall"
                                        >
                                          <Component
                                            align="center"
                                            className="css-cmi7y3-ButtonLabel edwq9my1"
                                            size="xsmall"
                                          >
                                            <span
                                              className="css-cmi7y3-ButtonLabel edwq9my1"
                                            >
                                              Show
                                            </span>
                                          </Component>
                                        </ButtonLabel>
                                      </button>
                                    </ForwardRef>
                                  </StyledButton>
                                </Button>
                              </EnvironmentButton>
                            </div>
                          </Access>
                        </withConfig(Access)>
                      </WithOrganizationMockWrapper>
                    </div>
                  </PanelItem>
                </EnvironmentRow>
              </div>
            </EmotionCssPropInternal>
          </PanelBody>
        </div>
      </Component>
    </Panel>
  </div>
</ProjectEnvironments>
`;
