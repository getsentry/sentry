// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationProjects should render the projects in the store 1`] = `
<WithOrganizationMockWrapper
  location={
    Object {
      "query": Object {},
    }
  }
  params={
    Object {
      "orgId": "org-slug",
    }
  }
>
  <OrganizationProjects
    location={
      Object {
        "query": Object {},
      }
    }
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "org:integrations",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
  >
    <SideEffect(DocumentTitle)
      title="Projects - org-slug - Sentry"
    >
      <DocumentTitle
        title="Projects - org-slug - Sentry"
      >
        <div>
          <StyledSettingsPageHeading
            action={
              <Button
                align="center"
                disabled={false}
                icon="icon-circle-add"
                priority="primary"
                size="small"
                to="/organizations/org-slug/projects/new/"
              >
                Create Project
              </Button>
            }
            noTitleStyles={false}
            title="Projects"
          >
            <SettingsPageHeading
              action={
                <Button
                  align="center"
                  disabled={false}
                  icon="icon-circle-add"
                  priority="primary"
                  size="small"
                  to="/organizations/org-slug/projects/new/"
                >
                  Create Project
                </Button>
              }
              className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
              noTitleStyles={false}
              title="Projects"
            >
              <div
                className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
              >
                <TitleAndActions>
                  <div
                    className="css-ifzfc5-TitleAndActions e1uay4fd0"
                  >
                    <Title
                      styled={false}
                    >
                      <div
                        className="css-120v9s3-Title e1uay4fd1"
                      >
                        <HeaderTitle>
                          <h4
                            className="css-1bosio6-HeaderTitle eqkydle2"
                          >
                            Projects
                          </h4>
                        </HeaderTitle>
                      </div>
                    </Title>
                    <Action>
                      <div
                        className="css-au7gsx-Action e1uay4fd3"
                      >
                        <Button
                          align="center"
                          disabled={false}
                          icon="icon-circle-add"
                          priority="primary"
                          size="small"
                          to="/organizations/org-slug/projects/new/"
                        >
                          <StyledButton
                            aria-disabled={false}
                            aria-label="Create Project"
                            disabled={false}
                            onClick={[Function]}
                            priority="primary"
                            role="button"
                            size="small"
                            to="/organizations/org-slug/projects/new/"
                          >
                            <ForwardRef
                              aria-disabled={false}
                              aria-label="Create Project"
                              className="css-z8at1v-StyledButton edwq9my0"
                              disabled={false}
                              onClick={[Function]}
                              priority="primary"
                              role="button"
                              size="small"
                              to="/organizations/org-slug/projects/new/"
                            >
                              <Link
                                aria-disabled={false}
                                aria-label="Create Project"
                                className="css-z8at1v-StyledButton edwq9my0"
                                onClick={[Function]}
                                onlyActiveOnIndex={false}
                                role="button"
                                size="small"
                                style={Object {}}
                                to="/organizations/org-slug/projects/new/"
                              >
                                <a
                                  aria-disabled={false}
                                  aria-label="Create Project"
                                  className="css-z8at1v-StyledButton edwq9my0"
                                  onClick={[Function]}
                                  role="button"
                                  size="small"
                                  style={Object {}}
                                >
                                  <ButtonLabel
                                    align="center"
                                    priority="primary"
                                    size="small"
                                  >
                                    <Component
                                      align="center"
                                      className="css-19gcr2f-ButtonLabel edwq9my1"
                                      priority="primary"
                                      size="small"
                                    >
                                      <span
                                        className="css-19gcr2f-ButtonLabel edwq9my1"
                                      >
                                        <Icon
                                          hasChildren={true}
                                          size="small"
                                        >
                                          <Component
                                            className="css-1299qb2-Icon edwq9my2"
                                            hasChildren={true}
                                            size="small"
                                          >
                                            <span
                                              className="css-1299qb2-Icon edwq9my2"
                                              size="small"
                                            >
                                              <StyledInlineSvg
                                                size="12px"
                                                src="icon-circle-add"
                                              >
                                                <ForwardRef
                                                  className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                  size="12px"
                                                  src="icon-circle-add"
                                                >
                                                  <svg
                                                    className="css-nc0ns5-InlineSvg-StyledInlineSvg edwq9my3"
                                                    height="12px"
                                                    viewBox={Object {}}
                                                    width="12px"
                                                  >
                                                    <use
                                                      href="#test"
                                                      xlinkHref="#test"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledInlineSvg>
                                            </span>
                                          </Component>
                                        </Icon>
                                        Create Project
                                      </span>
                                    </Component>
                                  </ButtonLabel>
                                </a>
                              </Link>
                            </ForwardRef>
                          </StyledButton>
                        </Button>
                      </div>
                    </Action>
                  </div>
                </TitleAndActions>
              </div>
            </SettingsPageHeading>
          </StyledSettingsPageHeading>
          <Panel>
            <Component
              className="css-15hwgrz-Panel e119nu470"
            >
              <div
                className="css-15hwgrz-Panel e119nu470"
              >
                <PanelHeader
                  hasButtons={true}
                >
                  <div
                    className="css-yhsu7n-PanelHeader en8g1d30"
                  >
                    Projects
                    <withRouter(AsyncComponentSearchInput)
                      api={
                        Client {
                          "_chain": [Function],
                          "_wrapRequest": [Function],
                          "bulkUpdate": [Function],
                          "handleRequestError": [Function],
                          "hasProjectBeenRenamed": [Function],
                        }
                      }
                      className="search"
                      onError={[Function]}
                      onSuccess={[Function]}
                      placeholder="Search Projects"
                      updateRoute={true}
                      url="/organizations/org-slug/projects/"
                    >
                      <AsyncComponentSearchInput
                        api={
                          Client {
                            "_chain": [Function],
                            "_wrapRequest": [Function],
                            "bulkUpdate": [Function],
                            "handleRequestError": [Function],
                            "hasProjectBeenRenamed": [Function],
                          }
                        }
                        className="search"
                        debounceWait={200}
                        location={
                          Object {
                            "query": Object {},
                          }
                        }
                        onError={[Function]}
                        onSuccess={[Function]}
                        placeholder="Search Projects"
                        router={
                          Object {
                            "createHref": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "/organizations/org-slug/projects/new/",
                                ],
                                Array [
                                  "/settings/org-slug/projects/project-slug/",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "go": [MockFunction],
                            "goBack": [MockFunction],
                            "goForward": [MockFunction],
                            "isActive": [MockFunction],
                            "listen": [MockFunction],
                            "location": Object {
                              "query": Object {},
                            },
                            "push": [MockFunction],
                            "replace": [MockFunction],
                            "setRouteLeaveHook": [MockFunction],
                          }
                        }
                        updateRoute={true}
                        url="/organizations/org-slug/projects/"
                      >
                        <Form
                          onSubmit={[Function]}
                        >
                          <form
                            className="css-1i180od-Form e6xwo1"
                            onSubmit={[Function]}
                          >
                            <Input
                              className="search"
                              onChange={[Function]}
                              placeholder="Search Projects"
                              value=""
                            >
                              <input
                                className="search css-1h04ndk-Input e1xej46s0"
                                onChange={[Function]}
                                placeholder="Search Projects"
                                value=""
                              />
                            </Input>
                          </form>
                        </Form>
                      </AsyncComponentSearchInput>
                    </withRouter(AsyncComponentSearchInput)>
                  </div>
                </PanelHeader>
                <EmotionCssPropInternal
                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
                  css={
                    Object {
                      "name": "1jpon28-OrganizationProjects",
                      "styles": "width:100%;;label:OrganizationProjects;",
                    }
                  }
                >
                  <PanelBody
                    className="css-1jpon28-OrganizationProjects"
                    direction="column"
                    disablePadding={true}
                    flex={false}
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="PanelBody"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                      className="css-1jpon28-OrganizationProjects"
                      css={
                        Object {
                          "map": undefined,
                          "name": "b1rh9y-PanelBody",
                          "next": undefined,
                          "styles": "h1,h2,h3,h4,h5,h6,p,ul,ol,table,dl,blockquote,form,pre,.auto-select-text,.section,[class^='highlight-']{margin-bottom:20px;&:last-child{margin-bottom:0;}}h1,h2,h3,h4,h5,h6{line-height:1.2;}p,ul,ol,blockquote{line-height:1.5;}h1{font-size:2em;}h2{font-size:1.75em;}h3{font-size:1.5em;}h4{font-size:1.25em;}h5{font-size:1em;}pre{word-break:break-all;white-space:pre-wrap;};;label:PanelBody;",
                          "toString": [Function],
                        }
                      }
                    >
                      <div
                        className="css-1r12jej-PanelBody-OrganizationProjects"
                      >
                        <GridPanelItem
                          key="2"
                          p={2}
                        >
                          <div
                            className="css-1mb4cot-PanelItem-GridPanelItem ew99cs00"
                          >
                            <ProjectListItemWrapper>
                              <div
                                className="css-f3hcme-ProjectListItemWrapper ew99cs01"
                              >
                                <ProjectItem
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  project={
                                    Object {
                                      "environments": Array [],
                                      "hasAccess": true,
                                      "id": "2",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "project-slug",
                                      "teams": Array [],
                                    }
                                  }
                                >
                                  <Container
                                    key="2"
                                  >
                                    <div
                                      className="css-vtga8x-Container enngb6z0"
                                    >
                                      <BookmarkLink
                                        isBookmarked={false}
                                        onToggle={[Function]}
                                        organization={
                                          Object {
                                            "access": Array [
                                              "org:read",
                                              "org:write",
                                              "org:admin",
                                              "org:integrations",
                                              "project:read",
                                              "project:write",
                                              "project:admin",
                                              "team:read",
                                              "team:write",
                                              "team:admin",
                                            ],
                                            "features": Array [],
                                            "id": "3",
                                            "name": "Organization Name",
                                            "onboardingTasks": Array [],
                                            "projects": Array [],
                                            "scrapeJavaScript": true,
                                            "slug": "org-slug",
                                            "status": Object {
                                              "id": "active",
                                              "name": "active",
                                            },
                                            "teams": Array [],
                                          }
                                        }
                                        project={
                                          Object {
                                            "environments": Array [],
                                            "hasAccess": true,
                                            "id": "2",
                                            "isBookmarked": false,
                                            "isMember": true,
                                            "name": "Project Name",
                                            "slug": "project-slug",
                                            "teams": Array [],
                                          }
                                        }
                                      >
                                        <withApi(BookmarkStar)
                                          className="css-1qavcxg-BookmarkLink enngb6z1"
                                          isBookmarked={false}
                                          onToggle={[Function]}
                                          organization={
                                            Object {
                                              "access": Array [
                                                "org:read",
                                                "org:write",
                                                "org:admin",
                                                "org:integrations",
                                                "project:read",
                                                "project:write",
                                                "project:admin",
                                                "team:read",
                                                "team:write",
                                                "team:admin",
                                              ],
                                              "features": Array [],
                                              "id": "3",
                                              "name": "Organization Name",
                                              "onboardingTasks": Array [],
                                              "projects": Array [],
                                              "scrapeJavaScript": true,
                                              "slug": "org-slug",
                                              "status": Object {
                                                "id": "active",
                                                "name": "active",
                                              },
                                              "teams": Array [],
                                            }
                                          }
                                          project={
                                            Object {
                                              "environments": Array [],
                                              "hasAccess": true,
                                              "id": "2",
                                              "isBookmarked": false,
                                              "isMember": true,
                                              "name": "Project Name",
                                              "slug": "project-slug",
                                              "teams": Array [],
                                            }
                                          }
                                        >
                                          <BookmarkStar
                                            api={
                                              Client {
                                                "_chain": [Function],
                                                "_wrapRequest": [Function],
                                                "bulkUpdate": [Function],
                                                "handleRequestError": [Function],
                                                "hasProjectBeenRenamed": [Function],
                                              }
                                            }
                                            className="css-1qavcxg-BookmarkLink enngb6z1"
                                            isBookmarked={false}
                                            onToggle={[Function]}
                                            organization={
                                              Object {
                                                "access": Array [
                                                  "org:read",
                                                  "org:write",
                                                  "org:admin",
                                                  "org:integrations",
                                                  "project:read",
                                                  "project:write",
                                                  "project:admin",
                                                  "team:read",
                                                  "team:write",
                                                  "team:admin",
                                                ],
                                                "features": Array [],
                                                "id": "3",
                                                "name": "Organization Name",
                                                "onboardingTasks": Array [],
                                                "projects": Array [],
                                                "scrapeJavaScript": true,
                                                "slug": "org-slug",
                                                "status": Object {
                                                  "id": "active",
                                                  "name": "active",
                                                },
                                                "teams": Array [],
                                              }
                                            }
                                            project={
                                              Object {
                                                "environments": Array [],
                                                "hasAccess": true,
                                                "id": "2",
                                                "isBookmarked": false,
                                                "isMember": true,
                                                "name": "Project Name",
                                                "slug": "project-slug",
                                                "teams": Array [],
                                              }
                                            }
                                          >
                                            <Star
                                              className="css-1qavcxg-BookmarkLink enngb6z1"
                                              isBookmarked={false}
                                              onClick={[Function]}
                                              src="icon-star-small-filled"
                                            >
                                              <ForwardRef
                                                className="enngb6z1 css-lulb5m-InlineSvg-Star-BookmarkLink e5ekdrk0"
                                                isBookmarked={false}
                                                onClick={[Function]}
                                                src="icon-star-small-filled"
                                              >
                                                <svg
                                                  className="enngb6z1 css-lulb5m-InlineSvg-Star-BookmarkLink e5ekdrk0"
                                                  height="1em"
                                                  onClick={[Function]}
                                                  viewBox={Object {}}
                                                  width="1em"
                                                >
                                                  <use
                                                    href="#test"
                                                    xlinkHref="#test"
                                                  />
                                                </svg>
                                              </ForwardRef>
                                            </Star>
                                          </BookmarkStar>
                                        </withApi(BookmarkStar)>
                                      </BookmarkLink>
                                      <Link
                                        to="/settings/org-slug/projects/project-slug/"
                                      >
                                        <Link
                                          onlyActiveOnIndex={false}
                                          style={Object {}}
                                          to="/settings/org-slug/projects/project-slug/"
                                        >
                                          <a
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <ProjectLabel
                                              project={
                                                Object {
                                                  "environments": Array [],
                                                  "hasAccess": true,
                                                  "id": "2",
                                                  "isBookmarked": false,
                                                  "isMember": true,
                                                  "name": "Project Name",
                                                  "slug": "project-slug",
                                                  "teams": Array [],
                                                }
                                              }
                                            >
                                              <span
                                                className="project-label"
                                              >
                                                <span
                                                  className="project-name"
                                                >
                                                  project-slug
                                                </span>
                                              </span>
                                            </ProjectLabel>
                                          </a>
                                        </Link>
                                      </Link>
                                    </div>
                                  </Container>
                                </ProjectItem>
                              </div>
                            </ProjectListItemWrapper>
                            <ProjectStatsGraphWrapper>
                              <div
                                className="css-1cwjgo8-ProjectStatsGraphWrapper ew99cs02"
                              >
                                <ProjectStatsGraph
                                  key="2"
                                  project={
                                    Object {
                                      "environments": Array [],
                                      "hasAccess": true,
                                      "id": "2",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "project-slug",
                                      "teams": Array [],
                                    }
                                  }
                                >
                                  <div />
                                </ProjectStatsGraph>
                              </div>
                            </ProjectStatsGraphWrapper>
                          </div>
                        </GridPanelItem>
                      </div>
                    </EmotionCssPropInternal>
                  </PanelBody>
                </EmotionCssPropInternal>
              </div>
            </Component>
          </Panel>
        </div>
      </DocumentTitle>
    </SideEffect(DocumentTitle)>
  </OrganizationProjects>
</WithOrganizationMockWrapper>
`;
