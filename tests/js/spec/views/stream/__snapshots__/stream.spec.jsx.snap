// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stream render() displays the group list 1`] = `
<div
  className="stream-row"
>
  <div
    className="stream-content"
  >
    <StreamFilters
      access={
        Set {
          "org:read",
          "org:write",
          "org:admin",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        }
      }
      isSearchDisabled={false}
      onSavedSearchCreate={[Function]}
      onSearch={[Function]}
      onSidebarToggle={[Function]}
      onSortChange={[Function]}
      orgId="org-slug"
      projectId="project-slug"
      query="is:unresolved"
      queryCount={0}
      queryMaxCount={0}
      savedSearchList={
        Array [
          Object {
            "id": "789",
            "name": "test",
            "query": "is:unresolved",
          },
        ]
      }
      searchId={null}
      sort="date"
    />
    <Panel>
      <StreamActions
        allResultsVisible={false}
        groupIds={
          Array [
            "1",
          ]
        }
        hasReleases={false}
        latestRelease={null}
        onRealtimeChange={[Function]}
        onSelectStatsPeriod={[Function]}
        orgId="org-slug"
        projectId="project-slug"
        query="is:unresolved"
        queryCount={0}
        realtimeActive={false}
        statsPeriod="24h"
      />
      <PanelBody
        direction="column"
        disablePadding={true}
        flex={false}
      >
        <PanelBody
          className="ref-group-list"
          direction="column"
          disablePadding={true}
          flex={false}
        >
          <StreamGroup
            canSelect={true}
            hasGuideAnchor={false}
            id="1"
            key="1"
            orgId="org-slug"
            query="is:unresolved"
            statsPeriod="24h"
          />
        </PanelBody>
      </PanelBody>
    </Panel>
    <Pagination
      className="stream-pagination"
      onCursor={[Function]}
      pageLinks="<http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"1443575731:0:1\\", <http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"1443575731:0:0"
    />
  </div>
  <StreamSidebar
    loading={false}
    onQueryChange={[Function]}
    orgId="org-slug"
    projectId="project-slug"
    query="is:unresolved"
    tags={
      Object {
        "assigned": Object {
          "key": "assigned",
          "name": "Assigned To",
          "predefined": true,
          "values": Array [],
        },
        "bookmarks": Object {
          "key": "bookmarks",
          "name": "Bookmarked By",
          "predefined": true,
          "values": Array [],
        },
        "event.timestamp": Object {
          "key": "event.timestamp",
          "name": "Event Timestamp",
          "predefined": true,
          "values": Array [
            "2017-01-02",
            ">=2017-01-02T01:00:00",
            "<2017-01-02T02:00:00",
          ],
        },
        "firstSeen": Object {
          "key": "firstSeen",
          "name": "First Seen",
          "predefined": true,
          "values": Array [
            "-1h",
            "+1d",
            "-1w",
          ],
        },
        "has": Object {
          "key": "has",
          "name": "Has Tag",
          "predefined": true,
          "values": Array [],
        },
        "is": Object {
          "key": "is",
          "name": "Status",
          "predefined": true,
          "values": Array [
            "resolved",
            "unresolved",
            "ignored",
            "muted",
            "assigned",
            "unassigned",
          ],
        },
        "lastSeen": Object {
          "key": "lastSeen",
          "name": "Last Seen",
          "predefined": true,
          "values": Array [
            "-1h",
            "+1d",
            "-1w",
          ],
        },
        "timesSeen": Object {
          "isInput": true,
          "key": "timesSeen",
          "name": "Times Seen",
          "predefined": true,
          "values": Array [],
        },
      }
    }
  />
</div>
`;

exports[`Stream toggles environment select all environments 1`] = `
<div
  className="stream-row"
>
  <div
    className="stream-content"
  >
    <StreamFilters
      access={
        Set {
          "org:read",
          "org:write",
          "org:admin",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        }
      }
      isSearchDisabled={false}
      onSavedSearchCreate={[Function]}
      onSearch={[Function]}
      onSidebarToggle={[Function]}
      onSortChange={[Function]}
      orgId="org-slug"
      projectId="project-slug"
      query="is:unresolved"
      queryCount={0}
      queryMaxCount={0}
      savedSearchList={
        Array [
          Object {
            "id": "789",
            "name": "test",
            "query": "is:unresolved",
          },
        ]
      }
      searchId={null}
      sort="date"
    />
    <Panel>
      <StreamActions
        allResultsVisible={false}
        groupIds={
          Array [
            "1",
          ]
        }
        hasReleases={false}
        latestRelease={null}
        onRealtimeChange={[Function]}
        onSelectStatsPeriod={[Function]}
        orgId="org-slug"
        projectId="project-slug"
        query="is:unresolved"
        queryCount={0}
        realtimeActive={false}
        statsPeriod="24h"
      />
      <PanelBody
        direction="column"
        disablePadding={true}
        flex={false}
      >
        <PanelBody
          className="ref-group-list"
          direction="column"
          disablePadding={true}
          flex={false}
        >
          <StreamGroup
            canSelect={true}
            hasGuideAnchor={false}
            id="1"
            key="1"
            orgId="org-slug"
            query="is:unresolved"
            statsPeriod="24h"
          />
        </PanelBody>
      </PanelBody>
    </Panel>
    <Pagination
      className="stream-pagination"
      onCursor={[Function]}
      pageLinks="<http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"1443575731:0:1\\", <http://127.0.0.1:8000/api/0/projects/org-slug/project-slug/issues/?cursor=1443575731:0:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"1443575731:0:0"
    />
  </div>
  <StreamSidebar
    loading={false}
    onQueryChange={[Function]}
    orgId="org-slug"
    projectId="project-slug"
    query="is:unresolved"
    tags={
      Object {
        "assigned": Object {
          "key": "assigned",
          "name": "Assigned To",
          "predefined": true,
          "values": Array [],
        },
        "bookmarks": Object {
          "key": "bookmarks",
          "name": "Bookmarked By",
          "predefined": true,
          "values": Array [],
        },
        "event.timestamp": Object {
          "key": "event.timestamp",
          "name": "Event Timestamp",
          "predefined": true,
          "values": Array [
            "2017-01-02",
            ">=2017-01-02T01:00:00",
            "<2017-01-02T02:00:00",
          ],
        },
        "firstSeen": Object {
          "key": "firstSeen",
          "name": "First Seen",
          "predefined": true,
          "values": Array [
            "-1h",
            "+1d",
            "-1w",
          ],
        },
        "has": Object {
          "key": "has",
          "name": "Has Tag",
          "predefined": true,
          "values": Array [],
        },
        "is": Object {
          "key": "is",
          "name": "Status",
          "predefined": true,
          "values": Array [
            "resolved",
            "unresolved",
            "ignored",
            "muted",
            "assigned",
            "unassigned",
          ],
        },
        "lastSeen": Object {
          "key": "lastSeen",
          "name": "Last Seen",
          "predefined": true,
          "values": Array [
            "-1h",
            "+1d",
            "-1w",
          ],
        },
        "timesSeen": Object {
          "isInput": true,
          "key": "timesSeen",
          "name": "Times Seen",
          "predefined": true,
          "values": Array [],
        },
      }
    }
  />
</div>
`;
