// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectField deprecatedSelectControl renders with flat choices 1`] = `
<SelectField
  choices={
    Array [
      "a",
      "b",
      "c",
    ]
  }
  clearable={true}
  deprecatedSelectControl={true}
  disabled={false}
  hideErrorMessage={false}
  multiple={false}
  name="fieldName"
  required={false}
>
  <div
    className=""
  >
    <div
      className="controls"
    >
      <StyledSelectControl
        choices={
          Array [
            "a",
            "b",
            "c",
          ]
        }
        clearable={true}
        deprecatedSelectControl={true}
        disabled={false}
        id="id-fieldName"
        multiple={false}
        name="fieldName"
        onChange={[Function]}
        required={false}
        value="fieldValue"
      >
        <ForwardRef(RefForwardedSelectControl)
          choices={
            Array [
              "a",
              "b",
              "c",
            ]
          }
          className="css-9gm53a-StyledSelectControl e1qrhqd00"
          clearable={true}
          deprecatedSelectControl={true}
          disabled={false}
          id="id-fieldName"
          multiple={false}
          name="fieldName"
          onChange={[Function]}
          required={false}
          value="fieldValue"
        >
          <SelectControl
            choices={
              Array [
                "a",
                "b",
                "c",
              ]
            }
            className="css-9gm53a-StyledSelectControl e1qrhqd00"
            clearable={true}
            deprecatedSelectControl={true}
            disabled={false}
            forwardedRef={null}
            id="id-fieldName"
            multiple={false}
            name="fieldName"
            onChange={[Function]}
            required={false}
            value="fieldValue"
          >
            <SelectControlLegacy
              choices={
                Array [
                  "a",
                  "b",
                  "c",
                ]
              }
              className="css-9gm53a-StyledSelectControl e1qrhqd00"
              clearable={true}
              disabled={false}
              forwardedRef={null}
              height={36}
              id="id-fieldName"
              multiple={false}
              name="fieldName"
              onChange={[Function]}
              required={false}
              value="fieldValue"
            >
              <StyledSelect
                arrowRenderer={[Function]}
                backspaceRemoves={true}
                className="css-9gm53a-StyledSelectControl e1qrhqd00"
                clearable={true}
                deleteRemoves={true}
                disabled={false}
                forwardedRef={null}
                height={36}
                id="id-fieldName"
                multiple={false}
                name="fieldName"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "a",
                      "value": "a",
                    },
                    Object {
                      "label": "b",
                      "value": "b",
                    },
                    Object {
                      "label": "c",
                      "value": "c",
                    },
                  ]
                }
                required={false}
                value="fieldValue"
              >
                <SelectPicker
                  arrowRenderer={[Function]}
                  backspaceRemoves={true}
                  className="e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0"
                  clearable={true}
                  deleteRemoves={true}
                  disabled={false}
                  forwardedRef={null}
                  height={36}
                  id="id-fieldName"
                  multiple={false}
                  name="fieldName"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "a",
                        "value": "a",
                      },
                      Object {
                        "label": "b",
                        "value": "b",
                      },
                      Object {
                        "label": "c",
                        "value": "c",
                      },
                    ]
                  }
                  required={false}
                  value="fieldValue"
                >
                  <Select
                    arrowRenderer={[Function]}
                    autosize={true}
                    backspaceRemoves={true}
                    backspaceToRemoveMessage="Press backspace to remove {label}"
                    className="e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0"
                    clearAllText="Clear all"
                    clearRenderer={[Function]}
                    clearValueText="Clear value"
                    clearable={true}
                    closeOnSelect={true}
                    deleteRemoves={true}
                    delimiter=","
                    disabled={false}
                    escapeClearsValue={true}
                    filterOptions={[Function]}
                    height={36}
                    id="id-fieldName"
                    ignoreAccents={true}
                    ignoreCase={true}
                    inputProps={Object {}}
                    isLoading={false}
                    joinValues={false}
                    labelKey="label"
                    matchPos="any"
                    matchProp="any"
                    menuBuffer={0}
                    menuRenderer={[Function]}
                    multi={false}
                    multiple={false}
                    name="fieldName"
                    noResultsText="No results found"
                    onBlurResetsInput={true}
                    onChange={[Function]}
                    onCloseResetsInput={true}
                    onSelectResetsInput={true}
                    openOnClick={true}
                    optionComponent={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "a",
                          "value": "a",
                        },
                        Object {
                          "label": "b",
                          "value": "b",
                        },
                        Object {
                          "label": "c",
                          "value": "c",
                        },
                      ]
                    }
                    pageSize={5}
                    placeholder="Select..."
                    removeSelected={true}
                    required={false}
                    rtl={false}
                    scrollMenuIntoView={true}
                    searchable={true}
                    simpleValue={false}
                    tabSelectsValue={true}
                    trimFilter={true}
                    value="fieldValue"
                    valueComponent={[Function]}
                    valueKey="value"
                  >
                    <div
                      className="Select e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0 is-clearable is-searchable Select--single"
                    >
                      <div
                        className="Select-control"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                      >
                        <div
                          className="Select-multi-value-wrapper"
                          id="react-select-3--value"
                        >
                          <div
                            className="Select-placeholder"
                          >
                            Select...
                          </div>
                          <AutosizeInput
                            aria-activedescendant="react-select-3--value"
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-owns=""
                            className="Select-input"
                            id="id-fieldName"
                            injectStyles={true}
                            minWidth="5"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            value=""
                          >
                            <div
                              className="Select-input"
                              style={
                                Object {
                                  "display": "inline-block",
                                }
                              }
                            >
                              <input
                                aria-activedescendant="react-select-3--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                id="id-fieldName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                style={
                                  Object {
                                    "boxSizing": "content-box",
                                    "width": "5px",
                                  }
                                }
                                value=""
                              />
                              <div
                                style={
                                  Object {
                                    "height": 0,
                                    "left": 0,
                                    "overflow": "scroll",
                                    "position": "absolute",
                                    "top": 0,
                                    "visibility": "hidden",
                                    "whiteSpace": "pre",
                                  }
                                }
                              />
                            </div>
                          </AutosizeInput>
                        </div>
                        <span
                          className="Select-arrow-zone"
                          onMouseDown={[Function]}
                        >
                          <StyledIconChevron
                            direction="down"
                            size="xs"
                          >
                            <IconChevron
                              className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                              direction="down"
                              size="xs"
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "color": [Function],
                                      "size": [Function],
                                      "viewBox": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                                css={
                                  Object {
                                    "map": undefined,
                                    "name": "7chgxg-IconChevron",
                                    "next": undefined,
                                    "styles": "transform:rotate(180deg);;label:IconChevron;",
                                    "toString": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <ForwardRef(SvgIcon)
                                  className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                  size="xs"
                                >
                                  <svg
                                    className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                    fill="currentColor"
                                    height="12px"
                                    viewBox="0 0 16 16"
                                    width="12px"
                                  >
                                    <path
                                      d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </EmotionCssPropInternal>
                            </IconChevron>
                          </StyledIconChevron>
                        </span>
                      </div>
                    </div>
                  </Select>
                </SelectPicker>
              </StyledSelect>
            </SelectControlLegacy>
          </SelectControl>
        </ForwardRef(RefForwardedSelectControl)>
      </StyledSelectControl>
    </div>
  </div>
</SelectField>
`;

exports[`SelectField deprecatedSelectControl renders with paired choices 1`] = `
<SelectField
  choices={
    Array [
      Array [
        "a",
        "abc",
      ],
      Array [
        "b",
        "bcd",
      ],
      Array [
        "c",
        "cde",
      ],
    ]
  }
  clearable={true}
  deprecatedSelectControl={true}
  disabled={false}
  hideErrorMessage={false}
  multiple={false}
  name="fieldName"
  required={false}
>
  <div
    className=""
  >
    <div
      className="controls"
    >
      <StyledSelectControl
        choices={
          Array [
            Array [
              "a",
              "abc",
            ],
            Array [
              "b",
              "bcd",
            ],
            Array [
              "c",
              "cde",
            ],
          ]
        }
        clearable={true}
        deprecatedSelectControl={true}
        disabled={false}
        id="id-fieldName"
        multiple={false}
        name="fieldName"
        onChange={[Function]}
        required={false}
        value="fieldValue"
      >
        <ForwardRef(RefForwardedSelectControl)
          choices={
            Array [
              Array [
                "a",
                "abc",
              ],
              Array [
                "b",
                "bcd",
              ],
              Array [
                "c",
                "cde",
              ],
            ]
          }
          className="css-9gm53a-StyledSelectControl e1qrhqd00"
          clearable={true}
          deprecatedSelectControl={true}
          disabled={false}
          id="id-fieldName"
          multiple={false}
          name="fieldName"
          onChange={[Function]}
          required={false}
          value="fieldValue"
        >
          <SelectControl
            choices={
              Array [
                Array [
                  "a",
                  "abc",
                ],
                Array [
                  "b",
                  "bcd",
                ],
                Array [
                  "c",
                  "cde",
                ],
              ]
            }
            className="css-9gm53a-StyledSelectControl e1qrhqd00"
            clearable={true}
            deprecatedSelectControl={true}
            disabled={false}
            forwardedRef={null}
            id="id-fieldName"
            multiple={false}
            name="fieldName"
            onChange={[Function]}
            required={false}
            value="fieldValue"
          >
            <SelectControlLegacy
              choices={
                Array [
                  Array [
                    "a",
                    "abc",
                  ],
                  Array [
                    "b",
                    "bcd",
                  ],
                  Array [
                    "c",
                    "cde",
                  ],
                ]
              }
              className="css-9gm53a-StyledSelectControl e1qrhqd00"
              clearable={true}
              disabled={false}
              forwardedRef={null}
              height={36}
              id="id-fieldName"
              multiple={false}
              name="fieldName"
              onChange={[Function]}
              required={false}
              value="fieldValue"
            >
              <StyledSelect
                arrowRenderer={[Function]}
                backspaceRemoves={true}
                className="css-9gm53a-StyledSelectControl e1qrhqd00"
                clearable={true}
                deleteRemoves={true}
                disabled={false}
                forwardedRef={null}
                height={36}
                id="id-fieldName"
                multiple={false}
                name="fieldName"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "abc",
                      "value": "a",
                    },
                    Object {
                      "label": "bcd",
                      "value": "b",
                    },
                    Object {
                      "label": "cde",
                      "value": "c",
                    },
                  ]
                }
                required={false}
                value="fieldValue"
              >
                <SelectPicker
                  arrowRenderer={[Function]}
                  backspaceRemoves={true}
                  className="e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0"
                  clearable={true}
                  deleteRemoves={true}
                  disabled={false}
                  forwardedRef={null}
                  height={36}
                  id="id-fieldName"
                  multiple={false}
                  name="fieldName"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "abc",
                        "value": "a",
                      },
                      Object {
                        "label": "bcd",
                        "value": "b",
                      },
                      Object {
                        "label": "cde",
                        "value": "c",
                      },
                    ]
                  }
                  required={false}
                  value="fieldValue"
                >
                  <Select
                    arrowRenderer={[Function]}
                    autosize={true}
                    backspaceRemoves={true}
                    backspaceToRemoveMessage="Press backspace to remove {label}"
                    className="e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0"
                    clearAllText="Clear all"
                    clearRenderer={[Function]}
                    clearValueText="Clear value"
                    clearable={true}
                    closeOnSelect={true}
                    deleteRemoves={true}
                    delimiter=","
                    disabled={false}
                    escapeClearsValue={true}
                    filterOptions={[Function]}
                    height={36}
                    id="id-fieldName"
                    ignoreAccents={true}
                    ignoreCase={true}
                    inputProps={Object {}}
                    isLoading={false}
                    joinValues={false}
                    labelKey="label"
                    matchPos="any"
                    matchProp="any"
                    menuBuffer={0}
                    menuRenderer={[Function]}
                    multi={false}
                    multiple={false}
                    name="fieldName"
                    noResultsText="No results found"
                    onBlurResetsInput={true}
                    onChange={[Function]}
                    onCloseResetsInput={true}
                    onSelectResetsInput={true}
                    openOnClick={true}
                    optionComponent={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "abc",
                          "value": "a",
                        },
                        Object {
                          "label": "bcd",
                          "value": "b",
                        },
                        Object {
                          "label": "cde",
                          "value": "c",
                        },
                      ]
                    }
                    pageSize={5}
                    placeholder="Select..."
                    removeSelected={true}
                    required={false}
                    rtl={false}
                    scrollMenuIntoView={true}
                    searchable={true}
                    simpleValue={false}
                    tabSelectsValue={true}
                    trimFilter={true}
                    value="fieldValue"
                    valueComponent={[Function]}
                    valueKey="value"
                  >
                    <div
                      className="Select e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0 is-clearable is-searchable Select--single"
                    >
                      <div
                        className="Select-control"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                      >
                        <div
                          className="Select-multi-value-wrapper"
                          id="react-select-4--value"
                        >
                          <div
                            className="Select-placeholder"
                          >
                            Select...
                          </div>
                          <AutosizeInput
                            aria-activedescendant="react-select-4--value"
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-owns=""
                            className="Select-input"
                            id="id-fieldName"
                            injectStyles={true}
                            minWidth="5"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            value=""
                          >
                            <div
                              className="Select-input"
                              style={
                                Object {
                                  "display": "inline-block",
                                }
                              }
                            >
                              <input
                                aria-activedescendant="react-select-4--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                id="id-fieldName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                style={
                                  Object {
                                    "boxSizing": "content-box",
                                    "width": "5px",
                                  }
                                }
                                value=""
                              />
                              <div
                                style={
                                  Object {
                                    "height": 0,
                                    "left": 0,
                                    "overflow": "scroll",
                                    "position": "absolute",
                                    "top": 0,
                                    "visibility": "hidden",
                                    "whiteSpace": "pre",
                                  }
                                }
                              />
                            </div>
                          </AutosizeInput>
                        </div>
                        <span
                          className="Select-arrow-zone"
                          onMouseDown={[Function]}
                        >
                          <StyledIconChevron
                            direction="down"
                            size="xs"
                          >
                            <IconChevron
                              className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                              direction="down"
                              size="xs"
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "color": [Function],
                                      "size": [Function],
                                      "viewBox": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                                css={
                                  Object {
                                    "map": undefined,
                                    "name": "7chgxg-IconChevron",
                                    "next": undefined,
                                    "styles": "transform:rotate(180deg);;label:IconChevron;",
                                    "toString": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <ForwardRef(SvgIcon)
                                  className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                  size="xs"
                                >
                                  <svg
                                    className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                    fill="currentColor"
                                    height="12px"
                                    viewBox="0 0 16 16"
                                    width="12px"
                                  >
                                    <path
                                      d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </EmotionCssPropInternal>
                            </IconChevron>
                          </StyledIconChevron>
                        </span>
                      </div>
                    </div>
                  </Select>
                </SelectPicker>
              </StyledSelect>
            </SelectControlLegacy>
          </SelectControl>
        </ForwardRef(RefForwardedSelectControl)>
      </StyledSelectControl>
    </div>
  </div>
</SelectField>
`;

exports[`SelectField deprecatedSelectControl renders without form context 1`] = `
<SelectField
  clearable={true}
  deprecatedSelectControl={true}
  disabled={false}
  hideErrorMessage={false}
  multiple={false}
  name="fieldName"
  options={
    Array [
      Object {
        "label": "a",
        "value": "a",
      },
      Object {
        "label": "b",
        "value": "b",
      },
    ]
  }
  required={false}
  value="a"
>
  <div
    className=""
  >
    <div
      className="controls"
    >
      <StyledSelectControl
        clearable={true}
        deprecatedSelectControl={true}
        disabled={false}
        id="id-fieldName"
        multiple={false}
        name="fieldName"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "a",
              "value": "a",
            },
            Object {
              "label": "b",
              "value": "b",
            },
          ]
        }
        required={false}
        value="a"
      >
        <ForwardRef(RefForwardedSelectControl)
          className="css-9gm53a-StyledSelectControl e1qrhqd00"
          clearable={true}
          deprecatedSelectControl={true}
          disabled={false}
          id="id-fieldName"
          multiple={false}
          name="fieldName"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "a",
                "value": "a",
              },
              Object {
                "label": "b",
                "value": "b",
              },
            ]
          }
          required={false}
          value="a"
        >
          <SelectControl
            className="css-9gm53a-StyledSelectControl e1qrhqd00"
            clearable={true}
            deprecatedSelectControl={true}
            disabled={false}
            forwardedRef={null}
            id="id-fieldName"
            multiple={false}
            name="fieldName"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "a",
                  "value": "a",
                },
                Object {
                  "label": "b",
                  "value": "b",
                },
              ]
            }
            required={false}
            value="a"
          >
            <SelectControlLegacy
              className="css-9gm53a-StyledSelectControl e1qrhqd00"
              clearable={true}
              disabled={false}
              forwardedRef={null}
              height={36}
              id="id-fieldName"
              multiple={false}
              name="fieldName"
              onChange={[Function]}
              options={
                Array [
                  Object {
                    "label": "a",
                    "value": "a",
                  },
                  Object {
                    "label": "b",
                    "value": "b",
                  },
                ]
              }
              required={false}
              value="a"
            >
              <StyledSelect
                arrowRenderer={[Function]}
                backspaceRemoves={true}
                className="css-9gm53a-StyledSelectControl e1qrhqd00"
                clearable={true}
                deleteRemoves={true}
                disabled={false}
                forwardedRef={null}
                height={36}
                id="id-fieldName"
                multiple={false}
                name="fieldName"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "a",
                      "value": "a",
                    },
                    Object {
                      "label": "b",
                      "value": "b",
                    },
                  ]
                }
                required={false}
                value="a"
              >
                <SelectPicker
                  arrowRenderer={[Function]}
                  backspaceRemoves={true}
                  className="e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0"
                  clearable={true}
                  deleteRemoves={true}
                  disabled={false}
                  forwardedRef={null}
                  height={36}
                  id="id-fieldName"
                  multiple={false}
                  name="fieldName"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "a",
                        "value": "a",
                      },
                      Object {
                        "label": "b",
                        "value": "b",
                      },
                    ]
                  }
                  required={false}
                  value="a"
                >
                  <Select
                    arrowRenderer={[Function]}
                    autosize={true}
                    backspaceRemoves={true}
                    backspaceToRemoveMessage="Press backspace to remove {label}"
                    className="e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0"
                    clearAllText="Clear all"
                    clearRenderer={[Function]}
                    clearValueText="Clear value"
                    clearable={true}
                    closeOnSelect={true}
                    deleteRemoves={true}
                    delimiter=","
                    disabled={false}
                    escapeClearsValue={true}
                    filterOptions={[Function]}
                    height={36}
                    id="id-fieldName"
                    ignoreAccents={true}
                    ignoreCase={true}
                    inputProps={Object {}}
                    isLoading={false}
                    joinValues={false}
                    labelKey="label"
                    matchPos="any"
                    matchProp="any"
                    menuBuffer={0}
                    menuRenderer={[Function]}
                    multi={false}
                    multiple={false}
                    name="fieldName"
                    noResultsText="No results found"
                    onBlurResetsInput={true}
                    onChange={[Function]}
                    onCloseResetsInput={true}
                    onSelectResetsInput={true}
                    openOnClick={true}
                    optionComponent={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "a",
                          "value": "a",
                        },
                        Object {
                          "label": "b",
                          "value": "b",
                        },
                      ]
                    }
                    pageSize={5}
                    placeholder="Select..."
                    removeSelected={true}
                    required={false}
                    rtl={false}
                    scrollMenuIntoView={true}
                    searchable={true}
                    simpleValue={false}
                    tabSelectsValue={true}
                    trimFilter={true}
                    value="a"
                    valueComponent={[Function]}
                    valueKey="value"
                  >
                    <div
                      className="Select e1qrhqd00 css-1oqptas-StyledSelect-StyledSelectControl e1ynsgsr0 has-value is-clearable is-searchable Select--single"
                    >
                      <input
                        disabled={false}
                        key="hidden.0"
                        name="fieldName"
                        type="hidden"
                        value="a"
                      />
                      <div
                        className="Select-control"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                      >
                        <div
                          className="Select-multi-value-wrapper"
                          id="react-select-2--value"
                        >
                          <Value
                            disabled={false}
                            id="react-select-2--value-item"
                            instancePrefix="react-select-2-"
                            onClick={null}
                            placeholder="Select..."
                            value={
                              Object {
                                "label": "a",
                                "value": "a",
                              }
                            }
                          >
                            <div
                              className="Select-value"
                            >
                              <span
                                aria-selected="true"
                                className="Select-value-label"
                                id="react-select-2--value-item"
                                role="option"
                              >
                                a
                              </span>
                            </div>
                          </Value>
                          <AutosizeInput
                            aria-activedescendant="react-select-2--value"
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-owns=""
                            className="Select-input"
                            id="id-fieldName"
                            injectStyles={true}
                            minWidth="5"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            value=""
                          >
                            <div
                              className="Select-input"
                              style={
                                Object {
                                  "display": "inline-block",
                                }
                              }
                            >
                              <input
                                aria-activedescendant="react-select-2--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                id="id-fieldName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                style={
                                  Object {
                                    "boxSizing": "content-box",
                                    "width": "5px",
                                  }
                                }
                                value=""
                              />
                              <div
                                style={
                                  Object {
                                    "height": 0,
                                    "left": 0,
                                    "overflow": "scroll",
                                    "position": "absolute",
                                    "top": 0,
                                    "visibility": "hidden",
                                    "whiteSpace": "pre",
                                  }
                                }
                              />
                            </div>
                          </AutosizeInput>
                        </div>
                        <span
                          aria-label="Clear value"
                          className="Select-clear-zone"
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          title="Clear value"
                        >
                          <span
                            className="Select-clear"
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "&times;",
                              }
                            }
                          />
                        </span>
                        <span
                          className="Select-arrow-zone"
                          onMouseDown={[Function]}
                        >
                          <StyledIconChevron
                            direction="down"
                            size="xs"
                          >
                            <IconChevron
                              className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                              direction="down"
                              size="xs"
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "color": [Function],
                                      "size": [Function],
                                      "viewBox": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                                css={
                                  Object {
                                    "map": undefined,
                                    "name": "7chgxg-IconChevron",
                                    "next": undefined,
                                    "styles": "transform:rotate(180deg);;label:IconChevron;",
                                    "toString": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <ForwardRef(SvgIcon)
                                  className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                  size="xs"
                                >
                                  <svg
                                    className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                    fill="currentColor"
                                    height="12px"
                                    viewBox="0 0 16 16"
                                    width="12px"
                                  >
                                    <path
                                      d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </EmotionCssPropInternal>
                            </IconChevron>
                          </StyledIconChevron>
                        </span>
                      </div>
                    </div>
                  </Select>
                </SelectPicker>
              </StyledSelect>
            </SelectControlLegacy>
          </SelectControl>
        </ForwardRef(RefForwardedSelectControl)>
      </StyledSelectControl>
    </div>
  </div>
</SelectField>
`;
