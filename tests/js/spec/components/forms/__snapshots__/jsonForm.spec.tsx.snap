// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JsonForm fields prop default 1`] = `
<JsonForm
  additionalFieldProps={Object {}}
  fields={
    Array [
      Object {
        "help": "A unique ID used to identify this project",
        "label": "Name",
        "name": "slug",
        "placeholder": "my-service-name",
        "required": true,
        "saveMessage": "You will be redirected to the new project slug after saving",
        "saveMessageAlertType": "info",
        "saveOnBlur": false,
        "transformInput": [Function],
        "type": "string",
      },
      Object {
        "choices": [Function],
        "help": "The primary platform for this project, used only for aesthetics",
        "label": "Platform",
        "name": "platform",
        "type": "array",
      },
    ]
  }
>
  <Styled(div)>
    <div
      className="css-vurnku"
    >
      <FormPanel
        additionalFieldProps={Object {}}
        fields={
          Array [
            Object {
              "help": "A unique ID used to identify this project",
              "label": "Name",
              "name": "slug",
              "placeholder": "my-service-name",
              "required": true,
              "saveMessage": "You will be redirected to the new project slug after saving",
              "saveMessageAlertType": "info",
              "saveOnBlur": false,
              "transformInput": [Function],
              "type": "string",
            },
            Object {
              "choices": [Function],
              "help": "The primary platform for this project, used only for aesthetics",
              "label": "Platform",
              "name": "platform",
              "type": "array",
            },
          ]
        }
      >
        <Panel>
          <Component
            className="css-ietoyz-Panel e119nu470"
          >
            <div
              className="css-ietoyz-Panel e119nu470"
            >
              <PanelBody
                flexible={false}
                withPadding={false}
              >
                <FlexBox
                  withPadding={false}
                >
                  <div
                    className="css-1nto0rx-FlexBox e1vnwt6f0"
                  >
                    <FieldFromConfig
                      field={
                        Object {
                          "help": "A unique ID used to identify this project",
                          "label": "Name",
                          "name": "slug",
                          "placeholder": "my-service-name",
                          "required": true,
                          "saveMessage": "You will be redirected to the new project slug after saving",
                          "saveMessageAlertType": "info",
                          "saveOnBlur": false,
                          "transformInput": [Function],
                          "type": "string",
                        }
                      }
                      highlighted={false}
                      key="slug"
                    >
                      <TextField
                        help="A unique ID used to identify this project"
                        highlighted={false}
                        label="Name"
                        name="slug"
                        placeholder="my-service-name"
                        required={true}
                        saveMessage="You will be redirected to the new project slug after saving"
                        saveMessageAlertType="info"
                        saveOnBlur={false}
                        transformInput={[Function]}
                        type="string"
                      >
                        <InputField
                          field={[Function]}
                          help="A unique ID used to identify this project"
                          highlighted={false}
                          label="Name"
                          name="slug"
                          placeholder="my-service-name"
                          required={true}
                          saveMessage="You will be redirected to the new project slug after saving"
                          saveMessageAlertType="info"
                          saveOnBlur={false}
                          transformInput={[Function]}
                          type="text"
                        >
                          <FormField
                            field={[Function]}
                            flexibleControlStateSize={false}
                            help="A unique ID used to identify this project"
                            hideErrorMessage={false}
                            highlighted={false}
                            label="Name"
                            name="slug"
                            placeholder="my-service-name"
                            required={true}
                            saveMessage="You will be redirected to the new project slug after saving"
                            saveMessageAlertType="info"
                            saveOnBlur={false}
                            transformInput={[Function]}
                            type="text"
                          >
                            <Field
                              alignRight={false}
                              disabled={false}
                              field={[Function]}
                              flexibleControlStateSize={false}
                              help="A unique ID used to identify this project"
                              highlighted={false}
                              id="slug"
                              inline={true}
                              label="Name"
                              name="slug"
                              placeholder="my-service-name"
                              required={true}
                              showHelpInTooltip={false}
                              transformInput={[Function]}
                              type="text"
                              visible={true}
                            >
                              <FieldWrapper
                                hasControlState={true}
                                highlighted={false}
                                inline={true}
                              >
                                <div
                                  className="css-zwp5he-FieldWrapper-FieldWrapper e2iyls20"
                                >
                                  <FieldDescription
                                    htmlFor="slug"
                                    inline={true}
                                  >
                                    <label
                                      className="css-boiybi-FieldDescription e3z18c30"
                                      htmlFor="slug"
                                    >
                                      <FieldLabel
                                        disabled={false}
                                      >
                                        <div
                                          className="css-wufuns-FieldLabel e16ushrl0"
                                        >
                                          <span>
                                            Name
                                            <FieldRequiredBadge>
                                              <div
                                                className="css-34gop3-FieldRequiredBadge e1uclnuk0"
                                              />
                                            </FieldRequiredBadge>
                                          </span>
                                        </div>
                                      </FieldLabel>
                                      <FieldHelp
                                        inline={true}
                                      >
                                        <div
                                          className="css-1ooulq2-FieldHelp e54sr8f0"
                                        >
                                          A unique ID used to identify this project
                                        </div>
                                      </FieldHelp>
                                    </label>
                                  </FieldDescription>
                                  <FieldControl
                                    alignRight={false}
                                    controlState={
                                      <FormFieldControlState
                                        model={
                                          MockModel {
                                            "initialData": Object {
                                              "slug": undefined,
                                            },
                                            "props": Object {
                                              "access": undefined,
                                              "children": [Function],
                                              "className": undefined,
                                              "disabled": undefined,
                                              "features": undefined,
                                              "field": [Function],
                                              "flexibleControlStateSize": false,
                                              "help": "A unique ID used to identify this project",
                                              "hideErrorMessage": false,
                                              "highlighted": false,
                                              "label": "Name",
                                              "name": "slug",
                                              "placeholder": "my-service-name",
                                              "required": true,
                                              "saveMessage": "You will be redirected to the new project slug after saving",
                                              "saveMessageAlertType": "info",
                                              "saveOnBlur": false,
                                              "transformInput": [Function],
                                              "type": "text",
                                            },
                                          }
                                        }
                                        name="slug"
                                      />
                                    }
                                    disabled={false}
                                    errorState={
                                      <Observer>
                                        [Function]
                                      </Observer>
                                    }
                                    flexibleControlStateSize={false}
                                    inline={true}
                                  >
                                    <FieldControlErrorWrapper
                                      inline={true}
                                    >
                                      <div
                                        className="css-qe5fr0-FieldControlErrorWrapper e12jpfuq0"
                                      >
                                        <FieldControlWrapper>
                                          <div
                                            className="css-1evsibf-FieldControlWrapper e12jpfuq2"
                                          >
                                            <FieldControlStyled
                                              alignRight={false}
                                            >
                                              <div
                                                className="css-ld1e0a-FieldControlStyled e12jpfuq1"
                                              >
                                                <Observer>
                                                  <Input
                                                    disabled={false}
                                                    field={[Function]}
                                                    help="A unique ID used to identify this project"
                                                    highlighted={false}
                                                    id="slug"
                                                    initialData={
                                                      Object {
                                                        "slug": undefined,
                                                      }
                                                    }
                                                    label="Name"
                                                    model={
                                                      MockModel {
                                                        "initialData": Object {
                                                          "slug": undefined,
                                                        },
                                                        "props": Object {
                                                          "access": undefined,
                                                          "children": [Function],
                                                          "className": undefined,
                                                          "disabled": undefined,
                                                          "features": undefined,
                                                          "field": [Function],
                                                          "flexibleControlStateSize": false,
                                                          "help": "A unique ID used to identify this project",
                                                          "hideErrorMessage": false,
                                                          "highlighted": false,
                                                          "label": "Name",
                                                          "name": "slug",
                                                          "placeholder": "my-service-name",
                                                          "required": true,
                                                          "saveMessage": "You will be redirected to the new project slug after saving",
                                                          "saveMessageAlertType": "info",
                                                          "saveOnBlur": false,
                                                          "transformInput": [Function],
                                                          "type": "text",
                                                        },
                                                      }
                                                    }
                                                    name="slug"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="my-service-name"
                                                    required={true}
                                                    transformInput={[Function]}
                                                    type="text"
                                                  >
                                                    <input
                                                      className="css-1g2jzij-Input e1xej46s0"
                                                      disabled={false}
                                                      id="slug"
                                                      label="Name"
                                                      name="slug"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="my-service-name"
                                                      type="text"
                                                    />
                                                  </Input>
                                                </Observer>
                                              </div>
                                            </FieldControlStyled>
                                            <FieldControlState
                                              flexibleControlStateSize={false}
                                            >
                                              <div
                                                className="css-1347hil-FieldControlState ep9s0su0"
                                              >
                                                <FormFieldControlState
                                                  model={
                                                    MockModel {
                                                      "initialData": Object {
                                                        "slug": undefined,
                                                      },
                                                      "props": Object {
                                                        "access": undefined,
                                                        "children": [Function],
                                                        "className": undefined,
                                                        "disabled": undefined,
                                                        "features": undefined,
                                                        "field": [Function],
                                                        "flexibleControlStateSize": false,
                                                        "help": "A unique ID used to identify this project",
                                                        "hideErrorMessage": false,
                                                        "highlighted": false,
                                                        "label": "Name",
                                                        "name": "slug",
                                                        "placeholder": "my-service-name",
                                                        "required": true,
                                                        "saveMessage": "You will be redirected to the new project slug after saving",
                                                        "saveMessageAlertType": "info",
                                                        "saveOnBlur": false,
                                                        "transformInput": [Function],
                                                        "type": "text",
                                                      },
                                                    }
                                                  }
                                                  name="slug"
                                                >
                                                  <Observer>
                                                    <ControlState
                                                      isSaved={false}
                                                      isSaving={false}
                                                    />
                                                  </Observer>
                                                </FormFieldControlState>
                                              </div>
                                            </FieldControlState>
                                          </div>
                                        </FieldControlWrapper>
                                        <Observer />
                                      </div>
                                    </FieldControlErrorWrapper>
                                  </FieldControl>
                                </div>
                              </FieldWrapper>
                            </Field>
                            <Observer />
                          </FormField>
                        </InputField>
                      </TextField>
                    </FieldFromConfig>
                    <FieldFromConfig
                      field={
                        Object {
                          "choices": [Function],
                          "help": "The primary platform for this project, used only for aesthetics",
                          "label": "Platform",
                          "name": "platform",
                          "type": "array",
                        }
                      }
                      highlighted={false}
                      key="platform"
                    >
                      <SelectField
                        allowClear={false}
                        allowEmpty={false}
                        choices={[Function]}
                        deprecatedSelectControl={true}
                        escapeMarkup={true}
                        field={[Function]}
                        formatMessageValue={[Function]}
                        help="The primary platform for this project, used only for aesthetics"
                        highlighted={false}
                        label="Platform"
                        multiple={false}
                        name="platform"
                        placeholder="--"
                        small={false}
                        type="array"
                      >
                        <InputField
                          alignRight={false}
                          allowEmpty={false}
                          choices={[Function]}
                          deprecatedSelectControl={true}
                          escapeMarkup={true}
                          field={[Function]}
                          formatMessageValue={[Function]}
                          help="The primary platform for this project, used only for aesthetics"
                          highlighted={false}
                          label="Platform"
                          name="platform"
                          placeholder="--"
                          small={false}
                          type="array"
                        >
                          <FormField
                            alignRight={false}
                            allowEmpty={false}
                            choices={[Function]}
                            deprecatedSelectControl={true}
                            escapeMarkup={true}
                            field={[Function]}
                            flexibleControlStateSize={false}
                            formatMessageValue={[Function]}
                            help="The primary platform for this project, used only for aesthetics"
                            hideErrorMessage={false}
                            highlighted={false}
                            label="Platform"
                            name="platform"
                            placeholder="--"
                            small={false}
                            type="array"
                          >
                            <Field
                              alignRight={false}
                              allowEmpty={false}
                              choices={[Function]}
                              deprecatedSelectControl={true}
                              disabled={false}
                              escapeMarkup={true}
                              field={[Function]}
                              flexibleControlStateSize={false}
                              formatMessageValue={[Function]}
                              help="The primary platform for this project, used only for aesthetics"
                              highlighted={false}
                              id="platform"
                              inline={true}
                              label="Platform"
                              name="platform"
                              placeholder="--"
                              required={false}
                              showHelpInTooltip={false}
                              small={false}
                              type="array"
                              visible={true}
                            >
                              <FieldWrapper
                                hasControlState={true}
                                highlighted={false}
                                inline={true}
                              >
                                <div
                                  className="css-zwp5he-FieldWrapper-FieldWrapper e2iyls20"
                                >
                                  <FieldDescription
                                    htmlFor="platform"
                                    inline={true}
                                  >
                                    <label
                                      className="css-boiybi-FieldDescription e3z18c30"
                                      htmlFor="platform"
                                    >
                                      <FieldLabel
                                        disabled={false}
                                      >
                                        <div
                                          className="css-wufuns-FieldLabel e16ushrl0"
                                        >
                                          <span>
                                            Platform
                                          </span>
                                        </div>
                                      </FieldLabel>
                                      <FieldHelp
                                        inline={true}
                                      >
                                        <div
                                          className="css-1ooulq2-FieldHelp e54sr8f0"
                                        >
                                          The primary platform for this project, used only for aesthetics
                                        </div>
                                      </FieldHelp>
                                    </label>
                                  </FieldDescription>
                                  <FieldControl
                                    alignRight={false}
                                    controlState={
                                      <FormFieldControlState
                                        model={
                                          MockModel {
                                            "initialData": Object {
                                              "platform": undefined,
                                            },
                                            "props": Object {
                                              "access": undefined,
                                              "alignRight": false,
                                              "allowEmpty": false,
                                              "children": [Function],
                                              "choices": [Function],
                                              "className": undefined,
                                              "deprecatedSelectControl": true,
                                              "disabled": undefined,
                                              "escapeMarkup": true,
                                              "features": undefined,
                                              "field": [Function],
                                              "flexibleControlStateSize": false,
                                              "formatMessageValue": [Function],
                                              "help": "The primary platform for this project, used only for aesthetics",
                                              "hideErrorMessage": false,
                                              "highlighted": false,
                                              "label": "Platform",
                                              "name": "platform",
                                              "placeholder": "--",
                                              "small": false,
                                              "type": "array",
                                            },
                                          }
                                        }
                                        name="platform"
                                      />
                                    }
                                    disabled={false}
                                    errorState={
                                      <Observer>
                                        [Function]
                                      </Observer>
                                    }
                                    flexibleControlStateSize={false}
                                    inline={true}
                                  >
                                    <FieldControlErrorWrapper
                                      inline={true}
                                    >
                                      <div
                                        className="css-qe5fr0-FieldControlErrorWrapper e12jpfuq0"
                                      >
                                        <FieldControlWrapper>
                                          <div
                                            className="css-1evsibf-FieldControlWrapper e12jpfuq2"
                                          >
                                            <FieldControlStyled
                                              alignRight={false}
                                            >
                                              <div
                                                className="css-ld1e0a-FieldControlStyled e12jpfuq1"
                                              >
                                                <Observer>
                                                  <ForwardRef(RefForwardedSelectControl)
                                                    alignRight={false}
                                                    allowEmpty={false}
                                                    choices={[Function]}
                                                    clearable={false}
                                                    deprecatedSelectControl={true}
                                                    disabled={false}
                                                    escapeMarkup={true}
                                                    field={[Function]}
                                                    formatMessageValue={[Function]}
                                                    help="The primary platform for this project, used only for aesthetics"
                                                    highlighted={false}
                                                    id="platform"
                                                    initialData={
                                                      Object {
                                                        "platform": undefined,
                                                      }
                                                    }
                                                    label="Platform"
                                                    model={
                                                      MockModel {
                                                        "initialData": Object {
                                                          "platform": undefined,
                                                        },
                                                        "props": Object {
                                                          "access": undefined,
                                                          "alignRight": false,
                                                          "allowEmpty": false,
                                                          "children": [Function],
                                                          "choices": [Function],
                                                          "className": undefined,
                                                          "deprecatedSelectControl": true,
                                                          "disabled": undefined,
                                                          "escapeMarkup": true,
                                                          "features": undefined,
                                                          "field": [Function],
                                                          "flexibleControlStateSize": false,
                                                          "formatMessageValue": [Function],
                                                          "help": "The primary platform for this project, used only for aesthetics",
                                                          "hideErrorMessage": false,
                                                          "highlighted": false,
                                                          "label": "Platform",
                                                          "name": "platform",
                                                          "placeholder": "--",
                                                          "small": false,
                                                          "type": "array",
                                                        },
                                                      }
                                                    }
                                                    multiple={false}
                                                    name="platform"
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="--"
                                                    small={false}
                                                    type="array"
                                                  >
                                                    <SelectControl
                                                      alignRight={false}
                                                      allowEmpty={false}
                                                      choices={[Function]}
                                                      clearable={false}
                                                      deprecatedSelectControl={true}
                                                      disabled={false}
                                                      escapeMarkup={true}
                                                      field={[Function]}
                                                      formatMessageValue={[Function]}
                                                      forwardedRef={[Function]}
                                                      help="The primary platform for this project, used only for aesthetics"
                                                      highlighted={false}
                                                      id="platform"
                                                      initialData={
                                                        Object {
                                                          "platform": undefined,
                                                        }
                                                      }
                                                      label="Platform"
                                                      model={
                                                        MockModel {
                                                          "initialData": Object {
                                                            "platform": undefined,
                                                          },
                                                          "props": Object {
                                                            "access": undefined,
                                                            "alignRight": false,
                                                            "allowEmpty": false,
                                                            "children": [Function],
                                                            "choices": [Function],
                                                            "className": undefined,
                                                            "deprecatedSelectControl": true,
                                                            "disabled": undefined,
                                                            "escapeMarkup": true,
                                                            "features": undefined,
                                                            "field": [Function],
                                                            "flexibleControlStateSize": false,
                                                            "formatMessageValue": [Function],
                                                            "help": "The primary platform for this project, used only for aesthetics",
                                                            "hideErrorMessage": false,
                                                            "highlighted": false,
                                                            "label": "Platform",
                                                            "name": "platform",
                                                            "placeholder": "--",
                                                            "small": false,
                                                            "type": "array",
                                                          },
                                                        }
                                                      }
                                                      multiple={false}
                                                      name="platform"
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="--"
                                                      small={false}
                                                      type="array"
                                                    >
                                                      <SelectControlLegacy
                                                        alignRight={false}
                                                        allowEmpty={false}
                                                        choices={[Function]}
                                                        clearable={false}
                                                        disabled={false}
                                                        escapeMarkup={true}
                                                        field={[Function]}
                                                        formatMessageValue={[Function]}
                                                        forwardedRef={[Function]}
                                                        height={36}
                                                        help="The primary platform for this project, used only for aesthetics"
                                                        highlighted={false}
                                                        id="platform"
                                                        initialData={
                                                          Object {
                                                            "platform": undefined,
                                                          }
                                                        }
                                                        label="Platform"
                                                        model={
                                                          MockModel {
                                                            "initialData": Object {
                                                              "platform": undefined,
                                                            },
                                                            "props": Object {
                                                              "access": undefined,
                                                              "alignRight": false,
                                                              "allowEmpty": false,
                                                              "children": [Function],
                                                              "choices": [Function],
                                                              "className": undefined,
                                                              "deprecatedSelectControl": true,
                                                              "disabled": undefined,
                                                              "escapeMarkup": true,
                                                              "features": undefined,
                                                              "field": [Function],
                                                              "flexibleControlStateSize": false,
                                                              "formatMessageValue": [Function],
                                                              "help": "The primary platform for this project, used only for aesthetics",
                                                              "hideErrorMessage": false,
                                                              "highlighted": false,
                                                              "label": "Platform",
                                                              "name": "platform",
                                                              "placeholder": "--",
                                                              "small": false,
                                                              "type": "array",
                                                            },
                                                          }
                                                        }
                                                        multiple={false}
                                                        name="platform"
                                                        onChange={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="--"
                                                        small={false}
                                                        type="array"
                                                      >
                                                        <StyledSelect
                                                          alignRight={false}
                                                          allowEmpty={false}
                                                          arrowRenderer={[Function]}
                                                          backspaceRemoves={false}
                                                          clearable={false}
                                                          deleteRemoves={false}
                                                          disabled={false}
                                                          escapeMarkup={true}
                                                          field={[Function]}
                                                          formatMessageValue={[Function]}
                                                          forwardedRef={[Function]}
                                                          height={36}
                                                          help="The primary platform for this project, used only for aesthetics"
                                                          highlighted={false}
                                                          id="platform"
                                                          initialData={
                                                            Object {
                                                              "platform": undefined,
                                                            }
                                                          }
                                                          label="Platform"
                                                          model={
                                                            MockModel {
                                                              "initialData": Object {
                                                                "platform": undefined,
                                                              },
                                                              "props": Object {
                                                                "access": undefined,
                                                                "alignRight": false,
                                                                "allowEmpty": false,
                                                                "children": [Function],
                                                                "choices": [Function],
                                                                "className": undefined,
                                                                "deprecatedSelectControl": true,
                                                                "disabled": undefined,
                                                                "escapeMarkup": true,
                                                                "features": undefined,
                                                                "field": [Function],
                                                                "flexibleControlStateSize": false,
                                                                "formatMessageValue": [Function],
                                                                "help": "The primary platform for this project, used only for aesthetics",
                                                                "hideErrorMessage": false,
                                                                "highlighted": false,
                                                                "label": "Platform",
                                                                "name": "platform",
                                                                "placeholder": "--",
                                                                "small": false,
                                                                "type": "array",
                                                              },
                                                            }
                                                          }
                                                          multiple={false}
                                                          name="platform"
                                                          onChange={[Function]}
                                                          onKeyDown={[Function]}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="csharp"
                                                                    size="20"
                                                                  />
                                                                  C#
                                                                </ForwardRef(render)>,
                                                                "value": "csharp",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="cocoa-swift"
                                                                    size="20"
                                                                  />
                                                                  Swift
                                                                </ForwardRef(render)>,
                                                                "value": "cocoa-swift",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="cocoa-objc"
                                                                    size="20"
                                                                  />
                                                                  Objective-C
                                                                </ForwardRef(render)>,
                                                                "value": "cocoa-objc",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="cordova"
                                                                    size="20"
                                                                  />
                                                                  Cordova
                                                                </ForwardRef(render)>,
                                                                "value": "cordova",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="electron"
                                                                    size="20"
                                                                  />
                                                                  Electron
                                                                </ForwardRef(render)>,
                                                                "value": "electron",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="elixir"
                                                                    size="20"
                                                                  />
                                                                  Elixir
                                                                </ForwardRef(render)>,
                                                                "value": "elixir",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="go"
                                                                    size="20"
                                                                  />
                                                                  Go
                                                                </ForwardRef(render)>,
                                                                "value": "go",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="go-http"
                                                                    size="20"
                                                                  />
                                                                  net/http
                                                                </ForwardRef(render)>,
                                                                "value": "go-http",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="java-android"
                                                                    size="20"
                                                                  />
                                                                  Android
                                                                </ForwardRef(render)>,
                                                                "value": "java-android",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="java-appengine"
                                                                    size="20"
                                                                  />
                                                                  Google App Engine
                                                                </ForwardRef(render)>,
                                                                "value": "java-appengine",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="java"
                                                                    size="20"
                                                                  />
                                                                  Java
                                                                </ForwardRef(render)>,
                                                                "value": "java",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="java-log4j"
                                                                    size="20"
                                                                  />
                                                                  Log4j 1.x
                                                                </ForwardRef(render)>,
                                                                "value": "java-log4j",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="java-log4j2"
                                                                    size="20"
                                                                  />
                                                                  Log4j 2.x
                                                                </ForwardRef(render)>,
                                                                "value": "java-log4j2",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="java-logback"
                                                                    size="20"
                                                                  />
                                                                  Logback
                                                                </ForwardRef(render)>,
                                                                "value": "java-logback",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="java-logging"
                                                                    size="20"
                                                                  />
                                                                  java.util.logging
                                                                </ForwardRef(render)>,
                                                                "value": "java-logging",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="javascript-angular"
                                                                    size="20"
                                                                  />
                                                                  Angular
                                                                </ForwardRef(render)>,
                                                                "value": "javascript-angular",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="javascript-angularjs"
                                                                    size="20"
                                                                  />
                                                                  AngularJS
                                                                </ForwardRef(render)>,
                                                                "value": "javascript-angularjs",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="javascript-backbone"
                                                                    size="20"
                                                                  />
                                                                  Backbone
                                                                </ForwardRef(render)>,
                                                                "value": "javascript-backbone",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="javascript-ember"
                                                                    size="20"
                                                                  />
                                                                  Ember
                                                                </ForwardRef(render)>,
                                                                "value": "javascript-ember",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="javascript"
                                                                    size="20"
                                                                  />
                                                                  JavaScript
                                                                </ForwardRef(render)>,
                                                                "value": "javascript",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="javascript-react"
                                                                    size="20"
                                                                  />
                                                                  React
                                                                </ForwardRef(render)>,
                                                                "value": "javascript-react",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="javascript-vue"
                                                                    size="20"
                                                                  />
                                                                  Vue
                                                                </ForwardRef(render)>,
                                                                "value": "javascript-vue",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="minidump"
                                                                    size="20"
                                                                  />
                                                                  Minidump
                                                                </ForwardRef(render)>,
                                                                "value": "minidump",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="native"
                                                                    size="20"
                                                                  />
                                                                  Native (C/C++)
                                                                </ForwardRef(render)>,
                                                                "value": "native",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="node-connect"
                                                                    size="20"
                                                                  />
                                                                  Connect
                                                                </ForwardRef(render)>,
                                                                "value": "node-connect",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="node-express"
                                                                    size="20"
                                                                  />
                                                                  Express
                                                                </ForwardRef(render)>,
                                                                "value": "node-express",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="node-koa"
                                                                    size="20"
                                                                  />
                                                                  Koa
                                                                </ForwardRef(render)>,
                                                                "value": "node-koa",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="node"
                                                                    size="20"
                                                                  />
                                                                  Node.js
                                                                </ForwardRef(render)>,
                                                                "value": "node",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="php-laravel"
                                                                    size="20"
                                                                  />
                                                                  Laravel
                                                                </ForwardRef(render)>,
                                                                "value": "php-laravel",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="php-monolog"
                                                                    size="20"
                                                                  />
                                                                  Monolog
                                                                </ForwardRef(render)>,
                                                                "value": "php-monolog",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="php"
                                                                    size="20"
                                                                  />
                                                                  PHP
                                                                </ForwardRef(render)>,
                                                                "value": "php",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="php-symfony2"
                                                                    size="20"
                                                                  />
                                                                  Symfony2
                                                                </ForwardRef(render)>,
                                                                "value": "php-symfony2",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-bottle"
                                                                    size="20"
                                                                  />
                                                                  Bottle
                                                                </ForwardRef(render)>,
                                                                "value": "python-bottle",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-celery"
                                                                    size="20"
                                                                  />
                                                                  Celery
                                                                </ForwardRef(render)>,
                                                                "value": "python-celery",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-django"
                                                                    size="20"
                                                                  />
                                                                  Django
                                                                </ForwardRef(render)>,
                                                                "value": "python-django",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-flask"
                                                                    size="20"
                                                                  />
                                                                  Flask
                                                                </ForwardRef(render)>,
                                                                "value": "python-flask",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-pylons"
                                                                    size="20"
                                                                  />
                                                                  Pylons
                                                                </ForwardRef(render)>,
                                                                "value": "python-pylons",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-pyramid"
                                                                    size="20"
                                                                  />
                                                                  Pyramid
                                                                </ForwardRef(render)>,
                                                                "value": "python-pyramid",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python"
                                                                    size="20"
                                                                  />
                                                                  Python
                                                                </ForwardRef(render)>,
                                                                "value": "python",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-rq"
                                                                    size="20"
                                                                  />
                                                                  RQ
                                                                </ForwardRef(render)>,
                                                                "value": "python-rq",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="python-tornado"
                                                                    size="20"
                                                                  />
                                                                  Tornado
                                                                </ForwardRef(render)>,
                                                                "value": "python-tornado",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="react-native"
                                                                    size="20"
                                                                  />
                                                                  React-Native
                                                                </ForwardRef(render)>,
                                                                "value": "react-native",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="ruby-rack"
                                                                    size="20"
                                                                  />
                                                                  Rack
                                                                </ForwardRef(render)>,
                                                                "value": "ruby-rack",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="ruby-rails"
                                                                    size="20"
                                                                  />
                                                                  Rails
                                                                </ForwardRef(render)>,
                                                                "value": "ruby-rails",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="ruby"
                                                                    size="20"
                                                                  />
                                                                  Ruby
                                                                </ForwardRef(render)>,
                                                                "value": "ruby",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="rust"
                                                                    size="20"
                                                                  />
                                                                  Rust
                                                                </ForwardRef(render)>,
                                                                "value": "rust",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="mock"
                                                                    size="20"
                                                                  />
                                                                  Mock Integration
                                                                </ForwardRef(render)>,
                                                                "value": "mock",
                                                              },
                                                              Object {
                                                                "label": <ForwardRef(render)>
                                                                  <ForwardRef(render)
                                                                    platform="other"
                                                                    size="20"
                                                                  />
                                                                  Other
                                                                </ForwardRef(render)>,
                                                                "value": "other",
                                                              },
                                                            ]
                                                          }
                                                          placeholder="--"
                                                          small={false}
                                                          type="array"
                                                        >
                                                          <SelectPicker
                                                            alignRight={false}
                                                            allowEmpty={false}
                                                            arrowRenderer={[Function]}
                                                            backspaceRemoves={false}
                                                            className="css-awk01x-StyledSelect e1ynsgsr0"
                                                            clearable={false}
                                                            deleteRemoves={false}
                                                            disabled={false}
                                                            escapeMarkup={true}
                                                            field={[Function]}
                                                            formatMessageValue={[Function]}
                                                            forwardedRef={[Function]}
                                                            height={36}
                                                            help="The primary platform for this project, used only for aesthetics"
                                                            highlighted={false}
                                                            id="platform"
                                                            initialData={
                                                              Object {
                                                                "platform": undefined,
                                                              }
                                                            }
                                                            label="Platform"
                                                            model={
                                                              MockModel {
                                                                "initialData": Object {
                                                                  "platform": undefined,
                                                                },
                                                                "props": Object {
                                                                  "access": undefined,
                                                                  "alignRight": false,
                                                                  "allowEmpty": false,
                                                                  "children": [Function],
                                                                  "choices": [Function],
                                                                  "className": undefined,
                                                                  "deprecatedSelectControl": true,
                                                                  "disabled": undefined,
                                                                  "escapeMarkup": true,
                                                                  "features": undefined,
                                                                  "field": [Function],
                                                                  "flexibleControlStateSize": false,
                                                                  "formatMessageValue": [Function],
                                                                  "help": "The primary platform for this project, used only for aesthetics",
                                                                  "hideErrorMessage": false,
                                                                  "highlighted": false,
                                                                  "label": "Platform",
                                                                  "name": "platform",
                                                                  "placeholder": "--",
                                                                  "small": false,
                                                                  "type": "array",
                                                                },
                                                              }
                                                            }
                                                            multiple={false}
                                                            name="platform"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="csharp"
                                                                      size="20"
                                                                    />
                                                                    C#
                                                                  </ForwardRef(render)>,
                                                                  "value": "csharp",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="cocoa-swift"
                                                                      size="20"
                                                                    />
                                                                    Swift
                                                                  </ForwardRef(render)>,
                                                                  "value": "cocoa-swift",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="cocoa-objc"
                                                                      size="20"
                                                                    />
                                                                    Objective-C
                                                                  </ForwardRef(render)>,
                                                                  "value": "cocoa-objc",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="cordova"
                                                                      size="20"
                                                                    />
                                                                    Cordova
                                                                  </ForwardRef(render)>,
                                                                  "value": "cordova",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="electron"
                                                                      size="20"
                                                                    />
                                                                    Electron
                                                                  </ForwardRef(render)>,
                                                                  "value": "electron",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="elixir"
                                                                      size="20"
                                                                    />
                                                                    Elixir
                                                                  </ForwardRef(render)>,
                                                                  "value": "elixir",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="go"
                                                                      size="20"
                                                                    />
                                                                    Go
                                                                  </ForwardRef(render)>,
                                                                  "value": "go",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="go-http"
                                                                      size="20"
                                                                    />
                                                                    net/http
                                                                  </ForwardRef(render)>,
                                                                  "value": "go-http",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="java-android"
                                                                      size="20"
                                                                    />
                                                                    Android
                                                                  </ForwardRef(render)>,
                                                                  "value": "java-android",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="java-appengine"
                                                                      size="20"
                                                                    />
                                                                    Google App Engine
                                                                  </ForwardRef(render)>,
                                                                  "value": "java-appengine",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="java"
                                                                      size="20"
                                                                    />
                                                                    Java
                                                                  </ForwardRef(render)>,
                                                                  "value": "java",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="java-log4j"
                                                                      size="20"
                                                                    />
                                                                    Log4j 1.x
                                                                  </ForwardRef(render)>,
                                                                  "value": "java-log4j",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="java-log4j2"
                                                                      size="20"
                                                                    />
                                                                    Log4j 2.x
                                                                  </ForwardRef(render)>,
                                                                  "value": "java-log4j2",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="java-logback"
                                                                      size="20"
                                                                    />
                                                                    Logback
                                                                  </ForwardRef(render)>,
                                                                  "value": "java-logback",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="java-logging"
                                                                      size="20"
                                                                    />
                                                                    java.util.logging
                                                                  </ForwardRef(render)>,
                                                                  "value": "java-logging",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="javascript-angular"
                                                                      size="20"
                                                                    />
                                                                    Angular
                                                                  </ForwardRef(render)>,
                                                                  "value": "javascript-angular",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="javascript-angularjs"
                                                                      size="20"
                                                                    />
                                                                    AngularJS
                                                                  </ForwardRef(render)>,
                                                                  "value": "javascript-angularjs",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="javascript-backbone"
                                                                      size="20"
                                                                    />
                                                                    Backbone
                                                                  </ForwardRef(render)>,
                                                                  "value": "javascript-backbone",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="javascript-ember"
                                                                      size="20"
                                                                    />
                                                                    Ember
                                                                  </ForwardRef(render)>,
                                                                  "value": "javascript-ember",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="javascript"
                                                                      size="20"
                                                                    />
                                                                    JavaScript
                                                                  </ForwardRef(render)>,
                                                                  "value": "javascript",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="javascript-react"
                                                                      size="20"
                                                                    />
                                                                    React
                                                                  </ForwardRef(render)>,
                                                                  "value": "javascript-react",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="javascript-vue"
                                                                      size="20"
                                                                    />
                                                                    Vue
                                                                  </ForwardRef(render)>,
                                                                  "value": "javascript-vue",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="minidump"
                                                                      size="20"
                                                                    />
                                                                    Minidump
                                                                  </ForwardRef(render)>,
                                                                  "value": "minidump",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="native"
                                                                      size="20"
                                                                    />
                                                                    Native (C/C++)
                                                                  </ForwardRef(render)>,
                                                                  "value": "native",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="node-connect"
                                                                      size="20"
                                                                    />
                                                                    Connect
                                                                  </ForwardRef(render)>,
                                                                  "value": "node-connect",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="node-express"
                                                                      size="20"
                                                                    />
                                                                    Express
                                                                  </ForwardRef(render)>,
                                                                  "value": "node-express",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="node-koa"
                                                                      size="20"
                                                                    />
                                                                    Koa
                                                                  </ForwardRef(render)>,
                                                                  "value": "node-koa",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="node"
                                                                      size="20"
                                                                    />
                                                                    Node.js
                                                                  </ForwardRef(render)>,
                                                                  "value": "node",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="php-laravel"
                                                                      size="20"
                                                                    />
                                                                    Laravel
                                                                  </ForwardRef(render)>,
                                                                  "value": "php-laravel",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="php-monolog"
                                                                      size="20"
                                                                    />
                                                                    Monolog
                                                                  </ForwardRef(render)>,
                                                                  "value": "php-monolog",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="php"
                                                                      size="20"
                                                                    />
                                                                    PHP
                                                                  </ForwardRef(render)>,
                                                                  "value": "php",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="php-symfony2"
                                                                      size="20"
                                                                    />
                                                                    Symfony2
                                                                  </ForwardRef(render)>,
                                                                  "value": "php-symfony2",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-bottle"
                                                                      size="20"
                                                                    />
                                                                    Bottle
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-bottle",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-celery"
                                                                      size="20"
                                                                    />
                                                                    Celery
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-celery",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-django"
                                                                      size="20"
                                                                    />
                                                                    Django
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-django",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-flask"
                                                                      size="20"
                                                                    />
                                                                    Flask
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-flask",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-pylons"
                                                                      size="20"
                                                                    />
                                                                    Pylons
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-pylons",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-pyramid"
                                                                      size="20"
                                                                    />
                                                                    Pyramid
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-pyramid",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python"
                                                                      size="20"
                                                                    />
                                                                    Python
                                                                  </ForwardRef(render)>,
                                                                  "value": "python",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-rq"
                                                                      size="20"
                                                                    />
                                                                    RQ
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-rq",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="python-tornado"
                                                                      size="20"
                                                                    />
                                                                    Tornado
                                                                  </ForwardRef(render)>,
                                                                  "value": "python-tornado",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="react-native"
                                                                      size="20"
                                                                    />
                                                                    React-Native
                                                                  </ForwardRef(render)>,
                                                                  "value": "react-native",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="ruby-rack"
                                                                      size="20"
                                                                    />
                                                                    Rack
                                                                  </ForwardRef(render)>,
                                                                  "value": "ruby-rack",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="ruby-rails"
                                                                      size="20"
                                                                    />
                                                                    Rails
                                                                  </ForwardRef(render)>,
                                                                  "value": "ruby-rails",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="ruby"
                                                                      size="20"
                                                                    />
                                                                    Ruby
                                                                  </ForwardRef(render)>,
                                                                  "value": "ruby",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="rust"
                                                                      size="20"
                                                                    />
                                                                    Rust
                                                                  </ForwardRef(render)>,
                                                                  "value": "rust",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="mock"
                                                                      size="20"
                                                                    />
                                                                    Mock Integration
                                                                  </ForwardRef(render)>,
                                                                  "value": "mock",
                                                                },
                                                                Object {
                                                                  "label": <ForwardRef(render)>
                                                                    <ForwardRef(render)
                                                                      platform="other"
                                                                      size="20"
                                                                    />
                                                                    Other
                                                                  </ForwardRef(render)>,
                                                                  "value": "other",
                                                                },
                                                              ]
                                                            }
                                                            placeholder="--"
                                                            small={false}
                                                            type="array"
                                                          >
                                                            <Select
                                                              alignRight={false}
                                                              allowEmpty={false}
                                                              arrowRenderer={[Function]}
                                                              autosize={true}
                                                              backspaceRemoves={false}
                                                              backspaceToRemoveMessage="Press backspace to remove {label}"
                                                              className="css-awk01x-StyledSelect e1ynsgsr0"
                                                              clearAllText="Clear all"
                                                              clearRenderer={[Function]}
                                                              clearValueText="Clear value"
                                                              clearable={false}
                                                              closeOnSelect={true}
                                                              deleteRemoves={false}
                                                              delimiter=","
                                                              disabled={false}
                                                              escapeClearsValue={true}
                                                              escapeMarkup={true}
                                                              field={[Function]}
                                                              filterOptions={[Function]}
                                                              formatMessageValue={[Function]}
                                                              height={36}
                                                              help="The primary platform for this project, used only for aesthetics"
                                                              highlighted={false}
                                                              id="platform"
                                                              ignoreAccents={true}
                                                              ignoreCase={true}
                                                              initialData={
                                                                Object {
                                                                  "platform": undefined,
                                                                }
                                                              }
                                                              inputProps={Object {}}
                                                              isLoading={false}
                                                              joinValues={false}
                                                              label="Platform"
                                                              labelKey="label"
                                                              matchPos="any"
                                                              matchProp="any"
                                                              menuBuffer={0}
                                                              menuRenderer={[Function]}
                                                              model={
                                                                MockModel {
                                                                  "initialData": Object {
                                                                    "platform": undefined,
                                                                  },
                                                                  "props": Object {
                                                                    "access": undefined,
                                                                    "alignRight": false,
                                                                    "allowEmpty": false,
                                                                    "children": [Function],
                                                                    "choices": [Function],
                                                                    "className": undefined,
                                                                    "deprecatedSelectControl": true,
                                                                    "disabled": undefined,
                                                                    "escapeMarkup": true,
                                                                    "features": undefined,
                                                                    "field": [Function],
                                                                    "flexibleControlStateSize": false,
                                                                    "formatMessageValue": [Function],
                                                                    "help": "The primary platform for this project, used only for aesthetics",
                                                                    "hideErrorMessage": false,
                                                                    "highlighted": false,
                                                                    "label": "Platform",
                                                                    "name": "platform",
                                                                    "placeholder": "--",
                                                                    "small": false,
                                                                    "type": "array",
                                                                  },
                                                                }
                                                              }
                                                              multi={false}
                                                              multiple={false}
                                                              name="platform"
                                                              noResultsText="No results found"
                                                              onBlurResetsInput={true}
                                                              onChange={[Function]}
                                                              onCloseResetsInput={true}
                                                              onKeyDown={[Function]}
                                                              onSelectResetsInput={true}
                                                              openOnClick={true}
                                                              optionComponent={[Function]}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="csharp"
                                                                        size="20"
                                                                      />
                                                                      C#
                                                                    </ForwardRef(render)>,
                                                                    "value": "csharp",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="cocoa-swift"
                                                                        size="20"
                                                                      />
                                                                      Swift
                                                                    </ForwardRef(render)>,
                                                                    "value": "cocoa-swift",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="cocoa-objc"
                                                                        size="20"
                                                                      />
                                                                      Objective-C
                                                                    </ForwardRef(render)>,
                                                                    "value": "cocoa-objc",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="cordova"
                                                                        size="20"
                                                                      />
                                                                      Cordova
                                                                    </ForwardRef(render)>,
                                                                    "value": "cordova",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="electron"
                                                                        size="20"
                                                                      />
                                                                      Electron
                                                                    </ForwardRef(render)>,
                                                                    "value": "electron",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="elixir"
                                                                        size="20"
                                                                      />
                                                                      Elixir
                                                                    </ForwardRef(render)>,
                                                                    "value": "elixir",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="go"
                                                                        size="20"
                                                                      />
                                                                      Go
                                                                    </ForwardRef(render)>,
                                                                    "value": "go",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="go-http"
                                                                        size="20"
                                                                      />
                                                                      net/http
                                                                    </ForwardRef(render)>,
                                                                    "value": "go-http",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="java-android"
                                                                        size="20"
                                                                      />
                                                                      Android
                                                                    </ForwardRef(render)>,
                                                                    "value": "java-android",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="java-appengine"
                                                                        size="20"
                                                                      />
                                                                      Google App Engine
                                                                    </ForwardRef(render)>,
                                                                    "value": "java-appengine",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="java"
                                                                        size="20"
                                                                      />
                                                                      Java
                                                                    </ForwardRef(render)>,
                                                                    "value": "java",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="java-log4j"
                                                                        size="20"
                                                                      />
                                                                      Log4j 1.x
                                                                    </ForwardRef(render)>,
                                                                    "value": "java-log4j",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="java-log4j2"
                                                                        size="20"
                                                                      />
                                                                      Log4j 2.x
                                                                    </ForwardRef(render)>,
                                                                    "value": "java-log4j2",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="java-logback"
                                                                        size="20"
                                                                      />
                                                                      Logback
                                                                    </ForwardRef(render)>,
                                                                    "value": "java-logback",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="java-logging"
                                                                        size="20"
                                                                      />
                                                                      java.util.logging
                                                                    </ForwardRef(render)>,
                                                                    "value": "java-logging",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="javascript-angular"
                                                                        size="20"
                                                                      />
                                                                      Angular
                                                                    </ForwardRef(render)>,
                                                                    "value": "javascript-angular",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="javascript-angularjs"
                                                                        size="20"
                                                                      />
                                                                      AngularJS
                                                                    </ForwardRef(render)>,
                                                                    "value": "javascript-angularjs",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="javascript-backbone"
                                                                        size="20"
                                                                      />
                                                                      Backbone
                                                                    </ForwardRef(render)>,
                                                                    "value": "javascript-backbone",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="javascript-ember"
                                                                        size="20"
                                                                      />
                                                                      Ember
                                                                    </ForwardRef(render)>,
                                                                    "value": "javascript-ember",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="javascript"
                                                                        size="20"
                                                                      />
                                                                      JavaScript
                                                                    </ForwardRef(render)>,
                                                                    "value": "javascript",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="javascript-react"
                                                                        size="20"
                                                                      />
                                                                      React
                                                                    </ForwardRef(render)>,
                                                                    "value": "javascript-react",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="javascript-vue"
                                                                        size="20"
                                                                      />
                                                                      Vue
                                                                    </ForwardRef(render)>,
                                                                    "value": "javascript-vue",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="minidump"
                                                                        size="20"
                                                                      />
                                                                      Minidump
                                                                    </ForwardRef(render)>,
                                                                    "value": "minidump",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="native"
                                                                        size="20"
                                                                      />
                                                                      Native (C/C++)
                                                                    </ForwardRef(render)>,
                                                                    "value": "native",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="node-connect"
                                                                        size="20"
                                                                      />
                                                                      Connect
                                                                    </ForwardRef(render)>,
                                                                    "value": "node-connect",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="node-express"
                                                                        size="20"
                                                                      />
                                                                      Express
                                                                    </ForwardRef(render)>,
                                                                    "value": "node-express",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="node-koa"
                                                                        size="20"
                                                                      />
                                                                      Koa
                                                                    </ForwardRef(render)>,
                                                                    "value": "node-koa",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="node"
                                                                        size="20"
                                                                      />
                                                                      Node.js
                                                                    </ForwardRef(render)>,
                                                                    "value": "node",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="php-laravel"
                                                                        size="20"
                                                                      />
                                                                      Laravel
                                                                    </ForwardRef(render)>,
                                                                    "value": "php-laravel",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="php-monolog"
                                                                        size="20"
                                                                      />
                                                                      Monolog
                                                                    </ForwardRef(render)>,
                                                                    "value": "php-monolog",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="php"
                                                                        size="20"
                                                                      />
                                                                      PHP
                                                                    </ForwardRef(render)>,
                                                                    "value": "php",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="php-symfony2"
                                                                        size="20"
                                                                      />
                                                                      Symfony2
                                                                    </ForwardRef(render)>,
                                                                    "value": "php-symfony2",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-bottle"
                                                                        size="20"
                                                                      />
                                                                      Bottle
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-bottle",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-celery"
                                                                        size="20"
                                                                      />
                                                                      Celery
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-celery",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-django"
                                                                        size="20"
                                                                      />
                                                                      Django
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-django",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-flask"
                                                                        size="20"
                                                                      />
                                                                      Flask
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-flask",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-pylons"
                                                                        size="20"
                                                                      />
                                                                      Pylons
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-pylons",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-pyramid"
                                                                        size="20"
                                                                      />
                                                                      Pyramid
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-pyramid",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python"
                                                                        size="20"
                                                                      />
                                                                      Python
                                                                    </ForwardRef(render)>,
                                                                    "value": "python",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-rq"
                                                                        size="20"
                                                                      />
                                                                      RQ
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-rq",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="python-tornado"
                                                                        size="20"
                                                                      />
                                                                      Tornado
                                                                    </ForwardRef(render)>,
                                                                    "value": "python-tornado",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="react-native"
                                                                        size="20"
                                                                      />
                                                                      React-Native
                                                                    </ForwardRef(render)>,
                                                                    "value": "react-native",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="ruby-rack"
                                                                        size="20"
                                                                      />
                                                                      Rack
                                                                    </ForwardRef(render)>,
                                                                    "value": "ruby-rack",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="ruby-rails"
                                                                        size="20"
                                                                      />
                                                                      Rails
                                                                    </ForwardRef(render)>,
                                                                    "value": "ruby-rails",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="ruby"
                                                                        size="20"
                                                                      />
                                                                      Ruby
                                                                    </ForwardRef(render)>,
                                                                    "value": "ruby",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="rust"
                                                                        size="20"
                                                                      />
                                                                      Rust
                                                                    </ForwardRef(render)>,
                                                                    "value": "rust",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="mock"
                                                                        size="20"
                                                                      />
                                                                      Mock Integration
                                                                    </ForwardRef(render)>,
                                                                    "value": "mock",
                                                                  },
                                                                  Object {
                                                                    "label": <ForwardRef(render)>
                                                                      <ForwardRef(render)
                                                                        platform="other"
                                                                        size="20"
                                                                      />
                                                                      Other
                                                                    </ForwardRef(render)>,
                                                                    "value": "other",
                                                                  },
                                                                ]
                                                              }
                                                              pageSize={5}
                                                              placeholder="--"
                                                              removeSelected={true}
                                                              required={false}
                                                              rtl={false}
                                                              scrollMenuIntoView={true}
                                                              searchable={true}
                                                              simpleValue={false}
                                                              small={false}
                                                              tabSelectsValue={true}
                                                              trimFilter={true}
                                                              type="array"
                                                              valueComponent={[Function]}
                                                              valueKey="value"
                                                            >
                                                              <div
                                                                className="Select css-awk01x-StyledSelect e1ynsgsr0 is-searchable Select--single"
                                                              >
                                                                <div
                                                                  className="Select-control"
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                >
                                                                  <div
                                                                    className="Select-multi-value-wrapper"
                                                                    id="react-select-2--value"
                                                                  >
                                                                    <div
                                                                      className="Select-placeholder"
                                                                    >
                                                                      --
                                                                    </div>
                                                                    <AutosizeInput
                                                                      aria-activedescendant="react-select-2--value"
                                                                      aria-expanded="false"
                                                                      aria-haspopup="false"
                                                                      aria-owns=""
                                                                      className="Select-input"
                                                                      id="platform"
                                                                      injectStyles={true}
                                                                      minWidth="5"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      role="combobox"
                                                                      value=""
                                                                    >
                                                                      <div
                                                                        className="Select-input"
                                                                        style={
                                                                          Object {
                                                                            "display": "inline-block",
                                                                          }
                                                                        }
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="react-select-2--value"
                                                                          aria-expanded="false"
                                                                          aria-haspopup="false"
                                                                          aria-owns=""
                                                                          id="platform"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "boxSizing": "content-box",
                                                                              "width": "5px",
                                                                            }
                                                                          }
                                                                          value=""
                                                                        />
                                                                        <div
                                                                          style={
                                                                            Object {
                                                                              "height": 0,
                                                                              "left": 0,
                                                                              "overflow": "scroll",
                                                                              "position": "absolute",
                                                                              "top": 0,
                                                                              "visibility": "hidden",
                                                                              "whiteSpace": "pre",
                                                                            }
                                                                          }
                                                                        />
                                                                      </div>
                                                                    </AutosizeInput>
                                                                  </div>
                                                                  <span
                                                                    className="Select-arrow-zone"
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <StyledIconChevron
                                                                      direction="down"
                                                                      size="xs"
                                                                    >
                                                                      <IconChevron
                                                                        className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                                                                        direction="down"
                                                                        size="xs"
                                                                      >
                                                                        <EmotionCssPropInternal
                                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "propTypes": Object {
                                                                                "color": [Function],
                                                                                "size": [Function],
                                                                                "viewBox": [Function],
                                                                              },
                                                                              "render": [Function],
                                                                            }
                                                                          }
                                                                          className="css-1y21wp1-StyledIconChevron e1ynsgsr1"
                                                                          css={
                                                                            Object {
                                                                              "map": undefined,
                                                                              "name": "7chgxg-IconChevron",
                                                                              "next": undefined,
                                                                              "styles": "transform:rotate(180deg);;label:IconChevron;",
                                                                              "toString": [Function],
                                                                            }
                                                                          }
                                                                          size="xs"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                                                            size="xs"
                                                                          >
                                                                            <svg
                                                                              className="e1ynsgsr1 css-7arx5j-IconChevron-StyledIconChevron"
                                                                              fill="currentColor"
                                                                              height="12px"
                                                                              viewBox="0 0 16 16"
                                                                              width="12px"
                                                                            >
                                                                              <path
                                                                                d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </EmotionCssPropInternal>
                                                                      </IconChevron>
                                                                    </StyledIconChevron>
                                                                  </span>
                                                                </div>
                                                              </div>
                                                            </Select>
                                                          </SelectPicker>
                                                        </StyledSelect>
                                                      </SelectControlLegacy>
                                                    </SelectControl>
                                                  </ForwardRef(RefForwardedSelectControl)>
                                                </Observer>
                                              </div>
                                            </FieldControlStyled>
                                            <FieldControlState
                                              flexibleControlStateSize={false}
                                            >
                                              <div
                                                className="css-1347hil-FieldControlState ep9s0su0"
                                              >
                                                <FormFieldControlState
                                                  model={
                                                    MockModel {
                                                      "initialData": Object {
                                                        "platform": undefined,
                                                      },
                                                      "props": Object {
                                                        "access": undefined,
                                                        "alignRight": false,
                                                        "allowEmpty": false,
                                                        "children": [Function],
                                                        "choices": [Function],
                                                        "className": undefined,
                                                        "deprecatedSelectControl": true,
                                                        "disabled": undefined,
                                                        "escapeMarkup": true,
                                                        "features": undefined,
                                                        "field": [Function],
                                                        "flexibleControlStateSize": false,
                                                        "formatMessageValue": [Function],
                                                        "help": "The primary platform for this project, used only for aesthetics",
                                                        "hideErrorMessage": false,
                                                        "highlighted": false,
                                                        "label": "Platform",
                                                        "name": "platform",
                                                        "placeholder": "--",
                                                        "small": false,
                                                        "type": "array",
                                                      },
                                                    }
                                                  }
                                                  name="platform"
                                                >
                                                  <Observer>
                                                    <ControlState
                                                      isSaved={false}
                                                      isSaving={false}
                                                    />
                                                  </Observer>
                                                </FormFieldControlState>
                                              </div>
                                            </FieldControlState>
                                          </div>
                                        </FieldControlWrapper>
                                        <Observer />
                                      </div>
                                    </FieldControlErrorWrapper>
                                  </FieldControl>
                                </div>
                              </FieldWrapper>
                            </Field>
                          </FormField>
                        </InputField>
                      </SelectField>
                    </FieldFromConfig>
                  </div>
                </FlexBox>
              </PanelBody>
            </div>
          </Component>
        </Panel>
      </FormPanel>
    </div>
  </Styled(div)>
</JsonForm>
`;

exports[`JsonForm form prop default 1`] = `
<JsonForm
  additionalFieldProps={
    Object {
      "user": Object {
        "email": "foo@example.com",
        "flags": Object {
          "newsletter_consent_prompt": false,
        },
        "hasPasswordAuth": true,
        "id": "1",
        "isAuthenticated": true,
        "name": "Foo Bar",
        "options": Object {
          "timezone": "UTC",
        },
        "username": "foo@example.com",
      },
    }
  }
  forms={
    Array [
      Object {
        "fields": Array [
          Object {
            "help": "Your full name",
            "label": "Name",
            "name": "name",
            "placeholder": "e.g. John Doe",
            "required": true,
            "type": "string",
          },
          Object {
            "autoComplete": "username",
            "disabled": [Function],
            "help": "",
            "label": "Username",
            "name": "username",
            "placeholder": "e.g. name@example.com",
            "required": true,
            "type": "string",
            "visible": [Function],
          },
        ],
        "title": "Account Details",
      },
    ]
  }
>
  <Styled(div)>
    <div
      className="css-vurnku"
    >
      <FormPanel
        additionalFieldProps={
          Object {
            "user": Object {
              "email": "foo@example.com",
              "flags": Object {
                "newsletter_consent_prompt": false,
              },
              "hasPasswordAuth": true,
              "id": "1",
              "isAuthenticated": true,
              "name": "Foo Bar",
              "options": Object {
                "timezone": "UTC",
              },
              "username": "foo@example.com",
            },
          }
        }
        fields={
          Array [
            Object {
              "help": "Your full name",
              "label": "Name",
              "name": "name",
              "placeholder": "e.g. John Doe",
              "required": true,
              "type": "string",
            },
            Object {
              "autoComplete": "username",
              "disabled": [Function],
              "help": "",
              "label": "Username",
              "name": "username",
              "placeholder": "e.g. name@example.com",
              "required": true,
              "type": "string",
              "visible": [Function],
            },
          ]
        }
        title="Account Details"
      >
        <Panel
          id="Account-Details"
        >
          <Component
            className="css-ietoyz-Panel e119nu470"
            id="Account-Details"
          >
            <div
              className="css-ietoyz-Panel e119nu470"
              id="Account-Details"
            >
              <PanelHeader>
                <div
                  className="css-pi486d-PanelHeader en8g1d30"
                >
                  Account Details
                </div>
              </PanelHeader>
              <PanelBody
                flexible={false}
                withPadding={false}
              >
                <FlexBox
                  withPadding={false}
                >
                  <div
                    className="css-1nto0rx-FlexBox e1vnwt6f0"
                  >
                    <FieldFromConfig
                      field={
                        Object {
                          "help": "Your full name",
                          "label": "Name",
                          "name": "name",
                          "placeholder": "e.g. John Doe",
                          "required": true,
                          "type": "string",
                        }
                      }
                      highlighted={false}
                      key="name"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <TextField
                        help="Your full name"
                        highlighted={false}
                        label="Name"
                        name="name"
                        placeholder="e.g. John Doe"
                        required={true}
                        type="string"
                        user={
                          Object {
                            "email": "foo@example.com",
                            "flags": Object {
                              "newsletter_consent_prompt": false,
                            },
                            "hasPasswordAuth": true,
                            "id": "1",
                            "isAuthenticated": true,
                            "name": "Foo Bar",
                            "options": Object {
                              "timezone": "UTC",
                            },
                            "username": "foo@example.com",
                          }
                        }
                      >
                        <InputField
                          field={[Function]}
                          help="Your full name"
                          highlighted={false}
                          label="Name"
                          name="name"
                          placeholder="e.g. John Doe"
                          required={true}
                          type="text"
                          user={
                            Object {
                              "email": "foo@example.com",
                              "flags": Object {
                                "newsletter_consent_prompt": false,
                              },
                              "hasPasswordAuth": true,
                              "id": "1",
                              "isAuthenticated": true,
                              "name": "Foo Bar",
                              "options": Object {
                                "timezone": "UTC",
                              },
                              "username": "foo@example.com",
                            }
                          }
                        >
                          <FormField
                            field={[Function]}
                            flexibleControlStateSize={false}
                            help="Your full name"
                            hideErrorMessage={false}
                            highlighted={false}
                            label="Name"
                            name="name"
                            placeholder="e.g. John Doe"
                            required={true}
                            type="text"
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <Field
                              alignRight={false}
                              disabled={false}
                              field={[Function]}
                              flexibleControlStateSize={false}
                              help="Your full name"
                              highlighted={false}
                              id="name"
                              inline={true}
                              label="Name"
                              name="name"
                              placeholder="e.g. John Doe"
                              required={true}
                              showHelpInTooltip={false}
                              type="text"
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "username": "foo@example.com",
                                }
                              }
                              visible={true}
                            >
                              <FieldWrapper
                                hasControlState={true}
                                highlighted={false}
                                inline={true}
                              >
                                <div
                                  className="css-zwp5he-FieldWrapper-FieldWrapper e2iyls20"
                                >
                                  <FieldDescription
                                    htmlFor="name"
                                    inline={true}
                                  >
                                    <label
                                      className="css-boiybi-FieldDescription e3z18c30"
                                      htmlFor="name"
                                    >
                                      <FieldLabel
                                        disabled={false}
                                      >
                                        <div
                                          className="css-wufuns-FieldLabel e16ushrl0"
                                        >
                                          <span>
                                            Name
                                            <FieldRequiredBadge>
                                              <div
                                                className="css-34gop3-FieldRequiredBadge e1uclnuk0"
                                              />
                                            </FieldRequiredBadge>
                                          </span>
                                        </div>
                                      </FieldLabel>
                                      <FieldHelp
                                        inline={true}
                                      >
                                        <div
                                          className="css-1ooulq2-FieldHelp e54sr8f0"
                                        >
                                          Your full name
                                        </div>
                                      </FieldHelp>
                                    </label>
                                  </FieldDescription>
                                  <FieldControl
                                    alignRight={false}
                                    controlState={
                                      <FormFieldControlState
                                        model={
                                          MockModel {
                                            "initialData": Object {
                                              "name": undefined,
                                            },
                                            "props": Object {
                                              "access": undefined,
                                              "children": [Function],
                                              "className": undefined,
                                              "disabled": undefined,
                                              "features": undefined,
                                              "field": [Function],
                                              "flexibleControlStateSize": false,
                                              "help": "Your full name",
                                              "hideErrorMessage": false,
                                              "highlighted": false,
                                              "label": "Name",
                                              "name": "name",
                                              "placeholder": "e.g. John Doe",
                                              "required": true,
                                              "type": "text",
                                              "user": Object {
                                                "email": "foo@example.com",
                                                "flags": Object {
                                                  "newsletter_consent_prompt": false,
                                                },
                                                "hasPasswordAuth": true,
                                                "id": "1",
                                                "isAuthenticated": true,
                                                "name": "Foo Bar",
                                                "options": Object {
                                                  "timezone": "UTC",
                                                },
                                                "username": "foo@example.com",
                                              },
                                            },
                                          }
                                        }
                                        name="name"
                                      />
                                    }
                                    disabled={false}
                                    errorState={
                                      <Observer>
                                        [Function]
                                      </Observer>
                                    }
                                    flexibleControlStateSize={false}
                                    inline={true}
                                  >
                                    <FieldControlErrorWrapper
                                      inline={true}
                                    >
                                      <div
                                        className="css-qe5fr0-FieldControlErrorWrapper e12jpfuq0"
                                      >
                                        <FieldControlWrapper>
                                          <div
                                            className="css-1evsibf-FieldControlWrapper e12jpfuq2"
                                          >
                                            <FieldControlStyled
                                              alignRight={false}
                                            >
                                              <div
                                                className="css-ld1e0a-FieldControlStyled e12jpfuq1"
                                              >
                                                <Observer>
                                                  <Input
                                                    disabled={false}
                                                    field={[Function]}
                                                    help="Your full name"
                                                    highlighted={false}
                                                    id="name"
                                                    initialData={
                                                      Object {
                                                        "name": undefined,
                                                      }
                                                    }
                                                    label="Name"
                                                    model={
                                                      MockModel {
                                                        "initialData": Object {
                                                          "name": undefined,
                                                        },
                                                        "props": Object {
                                                          "access": undefined,
                                                          "children": [Function],
                                                          "className": undefined,
                                                          "disabled": undefined,
                                                          "features": undefined,
                                                          "field": [Function],
                                                          "flexibleControlStateSize": false,
                                                          "help": "Your full name",
                                                          "hideErrorMessage": false,
                                                          "highlighted": false,
                                                          "label": "Name",
                                                          "name": "name",
                                                          "placeholder": "e.g. John Doe",
                                                          "required": true,
                                                          "type": "text",
                                                          "user": Object {
                                                            "email": "foo@example.com",
                                                            "flags": Object {
                                                              "newsletter_consent_prompt": false,
                                                            },
                                                            "hasPasswordAuth": true,
                                                            "id": "1",
                                                            "isAuthenticated": true,
                                                            "name": "Foo Bar",
                                                            "options": Object {
                                                              "timezone": "UTC",
                                                            },
                                                            "username": "foo@example.com",
                                                          },
                                                        },
                                                      }
                                                    }
                                                    name="name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="e.g. John Doe"
                                                    required={true}
                                                    type="text"
                                                    user={
                                                      Object {
                                                        "email": "foo@example.com",
                                                        "flags": Object {
                                                          "newsletter_consent_prompt": false,
                                                        },
                                                        "hasPasswordAuth": true,
                                                        "id": "1",
                                                        "isAuthenticated": true,
                                                        "name": "Foo Bar",
                                                        "options": Object {
                                                          "timezone": "UTC",
                                                        },
                                                        "username": "foo@example.com",
                                                      }
                                                    }
                                                  >
                                                    <input
                                                      className="css-1g2jzij-Input e1xej46s0"
                                                      disabled={false}
                                                      id="name"
                                                      label="Name"
                                                      name="name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="e.g. John Doe"
                                                      type="text"
                                                    />
                                                  </Input>
                                                </Observer>
                                              </div>
                                            </FieldControlStyled>
                                            <FieldControlState
                                              flexibleControlStateSize={false}
                                            >
                                              <div
                                                className="css-1347hil-FieldControlState ep9s0su0"
                                              >
                                                <FormFieldControlState
                                                  model={
                                                    MockModel {
                                                      "initialData": Object {
                                                        "name": undefined,
                                                      },
                                                      "props": Object {
                                                        "access": undefined,
                                                        "children": [Function],
                                                        "className": undefined,
                                                        "disabled": undefined,
                                                        "features": undefined,
                                                        "field": [Function],
                                                        "flexibleControlStateSize": false,
                                                        "help": "Your full name",
                                                        "hideErrorMessage": false,
                                                        "highlighted": false,
                                                        "label": "Name",
                                                        "name": "name",
                                                        "placeholder": "e.g. John Doe",
                                                        "required": true,
                                                        "type": "text",
                                                        "user": Object {
                                                          "email": "foo@example.com",
                                                          "flags": Object {
                                                            "newsletter_consent_prompt": false,
                                                          },
                                                          "hasPasswordAuth": true,
                                                          "id": "1",
                                                          "isAuthenticated": true,
                                                          "name": "Foo Bar",
                                                          "options": Object {
                                                            "timezone": "UTC",
                                                          },
                                                          "username": "foo@example.com",
                                                        },
                                                      },
                                                    }
                                                  }
                                                  name="name"
                                                >
                                                  <Observer>
                                                    <ControlState
                                                      isSaved={false}
                                                      isSaving={false}
                                                    />
                                                  </Observer>
                                                </FormFieldControlState>
                                              </div>
                                            </FieldControlState>
                                          </div>
                                        </FieldControlWrapper>
                                        <Observer />
                                      </div>
                                    </FieldControlErrorWrapper>
                                  </FieldControl>
                                </div>
                              </FieldWrapper>
                            </Field>
                          </FormField>
                        </InputField>
                      </TextField>
                    </FieldFromConfig>
                    <FieldFromConfig
                      field={
                        Object {
                          "autoComplete": "username",
                          "disabled": [Function],
                          "help": "",
                          "label": "Username",
                          "name": "username",
                          "placeholder": "e.g. name@example.com",
                          "required": true,
                          "type": "string",
                          "visible": [Function],
                        }
                      }
                      highlighted={false}
                      key="username"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <TextField
                        autoComplete="username"
                        disabled={[Function]}
                        help=""
                        highlighted={false}
                        label="Username"
                        name="username"
                        placeholder="e.g. name@example.com"
                        required={true}
                        type="string"
                        user={
                          Object {
                            "email": "foo@example.com",
                            "flags": Object {
                              "newsletter_consent_prompt": false,
                            },
                            "hasPasswordAuth": true,
                            "id": "1",
                            "isAuthenticated": true,
                            "name": "Foo Bar",
                            "options": Object {
                              "timezone": "UTC",
                            },
                            "username": "foo@example.com",
                          }
                        }
                        visible={[Function]}
                      >
                        <InputField
                          autoComplete="username"
                          disabled={[Function]}
                          field={[Function]}
                          help=""
                          highlighted={false}
                          label="Username"
                          name="username"
                          placeholder="e.g. name@example.com"
                          required={true}
                          type="text"
                          user={
                            Object {
                              "email": "foo@example.com",
                              "flags": Object {
                                "newsletter_consent_prompt": false,
                              },
                              "hasPasswordAuth": true,
                              "id": "1",
                              "isAuthenticated": true,
                              "name": "Foo Bar",
                              "options": Object {
                                "timezone": "UTC",
                              },
                              "username": "foo@example.com",
                            }
                          }
                          visible={[Function]}
                        >
                          <FormField
                            autoComplete="username"
                            disabled={[Function]}
                            field={[Function]}
                            flexibleControlStateSize={false}
                            help=""
                            hideErrorMessage={false}
                            highlighted={false}
                            label="Username"
                            name="username"
                            placeholder="e.g. name@example.com"
                            required={true}
                            type="text"
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "username": "foo@example.com",
                              }
                            }
                            visible={[Function]}
                          >
                            <Observer>
                              <Field
                                alignRight={false}
                                autoComplete="username"
                                disabled={false}
                                field={[Function]}
                                flexibleControlStateSize={false}
                                help=""
                                highlighted={false}
                                id="username"
                                inline={true}
                                label="Username"
                                name="username"
                                placeholder="e.g. name@example.com"
                                required={true}
                                showHelpInTooltip={false}
                                type="text"
                                user={
                                  Object {
                                    "email": "foo@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Foo Bar",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "username": "foo@example.com",
                                  }
                                }
                                visible={false}
                              />
                            </Observer>
                          </FormField>
                        </InputField>
                      </TextField>
                    </FieldFromConfig>
                  </div>
                </FlexBox>
              </PanelBody>
            </div>
          </Component>
        </Panel>
      </FormPanel>
    </div>
  </Styled(div)>
</JsonForm>
`;
