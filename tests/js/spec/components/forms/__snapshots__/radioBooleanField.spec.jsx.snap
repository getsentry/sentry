// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioBooleanField render() renders new field without form context 1`] = `
<RadioBooleanField
  name="fieldName"
  noLabel="No"
  yesLabel="Yes"
>
  <InputField
    field={[Function]}
    name="fieldName"
    noLabel="No"
    yesLabel="Yes"
  >
    <FormField
      field={[Function]}
      flexibleControlStateSize={false}
      hideErrorMessage={false}
      name="fieldName"
      noLabel="No"
      yesLabel="Yes"
    >
      <Field
        alignRight={false}
        disabled={false}
        field={[Function]}
        flexibleControlStateSize={false}
        id="fieldName"
        inline={true}
        name="fieldName"
        noLabel="No"
        required={false}
        visible={true}
        yesLabel="Yes"
      >
        <FieldWrapper
          hasControlState={true}
          inline={true}
        >
          <div
            className="css-1vcdyvg-FieldWrapper-FieldWrapper e2iyls20"
          >
            <FieldControl
              alignRight={false}
              controlState={
                <FormFieldControlState
                  model={
                    MockModel {
                      "initialData": Object {
                        "fieldName": undefined,
                      },
                      "props": Object {
                        "children": [Function],
                        "className": undefined,
                        "field": [Function],
                        "flexibleControlStateSize": false,
                        "hideErrorMessage": false,
                        "name": "fieldName",
                        "noLabel": "No",
                        "yesLabel": "Yes",
                      },
                    }
                  }
                  name="fieldName"
                />
              }
              disabled={false}
              errorState={
                <Observer>
                  [Function]
                </Observer>
              }
              flexibleControlStateSize={false}
              inline={true}
            >
              <FieldControlErrorWrapper
                inline={true}
              >
                <div
                  className="css-qe5fr0-FieldControlErrorWrapper e12jpfuq0"
                >
                  <FieldControlWrapper>
                    <div
                      className="css-1evsibf-FieldControlWrapper e12jpfuq2"
                    >
                      <FieldControlStyled
                        alignRight={false}
                      >
                        <div
                          className="css-fofrx-FieldControlStyled e12jpfuq1"
                        >
                          <Observer>
                            <RadioBoolean
                              disabled={false}
                              field={[Function]}
                              id="fieldName"
                              initialData={
                                Object {
                                  "fieldName": undefined,
                                }
                              }
                              model={
                                MockModel {
                                  "initialData": Object {
                                    "fieldName": undefined,
                                  },
                                  "props": Object {
                                    "children": [Function],
                                    "className": undefined,
                                    "field": [Function],
                                    "flexibleControlStateSize": false,
                                    "hideErrorMessage": false,
                                    "name": "fieldName",
                                    "noLabel": "No",
                                    "yesLabel": "Yes",
                                  },
                                }
                              }
                              name="fieldName"
                              noLabel="No"
                              onBlur={[Function]}
                              onChange={[Function]}
                              yesFirst={true}
                              yesLabel="Yes"
                            >
                              <div>
                                <Option
                                  checked={false}
                                  disabled={false}
                                  label="Yes"
                                  name="fieldName"
                                  onChange={[Function]}
                                  value="true"
                                >
                                  <div
                                    className="radio"
                                  >
                                    <label
                                      style={
                                        Object {
                                          "fontWeight": "normal",
                                        }
                                      }
                                    >
                                      <input
                                        checked={false}
                                        disabled={false}
                                        name="fieldName"
                                        onChange={[Function]}
                                        type="radio"
                                        value="true"
                                      />
                                       
                                      Yes
                                    </label>
                                  </div>
                                </Option>
                                <Option
                                  checked={false}
                                  disabled={false}
                                  label="No"
                                  name="fieldName"
                                  onChange={[Function]}
                                  value="false"
                                >
                                  <div
                                    className="radio"
                                  >
                                    <label
                                      style={
                                        Object {
                                          "fontWeight": "normal",
                                        }
                                      }
                                    >
                                      <input
                                        checked={false}
                                        disabled={false}
                                        name="fieldName"
                                        onChange={[Function]}
                                        type="radio"
                                        value="false"
                                      />
                                       
                                      No
                                    </label>
                                  </div>
                                </Option>
                              </div>
                            </RadioBoolean>
                          </Observer>
                        </div>
                      </FieldControlStyled>
                      <FieldControlState
                        flexibleControlStateSize={false}
                      >
                        <div
                          className="css-1347hil-FieldControlState ep9s0su0"
                        >
                          <FormFieldControlState
                            model={
                              MockModel {
                                "initialData": Object {
                                  "fieldName": undefined,
                                },
                                "props": Object {
                                  "children": [Function],
                                  "className": undefined,
                                  "field": [Function],
                                  "flexibleControlStateSize": false,
                                  "hideErrorMessage": false,
                                  "name": "fieldName",
                                  "noLabel": "No",
                                  "yesLabel": "Yes",
                                },
                              }
                            }
                            name="fieldName"
                          >
                            <Observer>
                              <ControlState
                                isSaved={false}
                                isSaving={false}
                              />
                            </Observer>
                          </FormFieldControlState>
                        </div>
                      </FieldControlState>
                    </div>
                  </FieldControlWrapper>
                  <Observer />
                </div>
              </FieldControlErrorWrapper>
            </FieldControl>
          </div>
        </FieldWrapper>
      </Field>
    </FormField>
  </InputField>
</RadioBooleanField>
`;

exports[`RadioBooleanField render() renders with form context 1`] = `
<div
  className="control-group"
>
  <div
    className="controls"
  >
    <div
      className="control-group radio-boolean"
    >
      <div
        className="radio"
        key="yes"
      >
        <label
          style={
            Object {
              "fontWeight": "normal",
            }
          }
        >
          <input
            checked={true}
            disabled={false}
            name="fieldName"
            onChange={[Function]}
            type="radio"
            value="true"
          />
           
          Yes
        </label>
      </div>
      <div
        className="radio"
        key="no"
      >
        <label
          style={
            Object {
              "fontWeight": "normal",
            }
          }
        >
          <input
            checked={false}
            disabled={false}
            name="fieldName"
            onChange={[Function]}
            type="radio"
            value="false"
          />
           
          No
        </label>
      </div>
    </div>
  </div>
</div>
`;

exports[`RadioBooleanField render() renders without form context 1`] = `
<div
  className="control-group"
>
  <div
    className="controls"
  >
    <div
      className="control-group radio-boolean"
    >
      <div
        className="radio"
        key="yes"
      >
        <label
          style={
            Object {
              "fontWeight": "normal",
            }
          }
        >
          <input
            checked={false}
            disabled={false}
            name="fieldName"
            onChange={[Function]}
            type="radio"
            value="true"
          />
           
          Yes
        </label>
      </div>
      <div
        className="radio"
        key="no"
      >
        <label
          style={
            Object {
              "fontWeight": "normal",
            }
          }
        >
          <input
            checked={false}
            disabled={false}
            name="fieldName"
            onChange={[Function]}
            type="radio"
            value="false"
          />
           
          No
        </label>
      </div>
    </div>
  </div>
</div>
`;
