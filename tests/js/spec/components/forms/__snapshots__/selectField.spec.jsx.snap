// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectField renders with flat choices 1`] = `
<div
  className=""
>
  <div
    className="controls"
  >
    <StyledSelectControl
      choices={
        Array [
          "a",
          "b",
          "c",
        ]
      }
      clearable={true}
      disabled={false}
      id="id-fieldName"
      multiple={false}
      name="fieldName"
      onChange={[Function]}
      required={false}
      value="fieldValue"
    />
  </div>
</div>
`;

exports[`SelectField renders with paired choices 1`] = `
<div
  className=""
>
  <div
    className="controls"
  >
    <StyledSelectControl
      choices={
        Array [
          Array [
            "a",
            "abc",
          ],
          Array [
            "b",
            "bcd",
          ],
          Array [
            "c",
            "cde",
          ],
        ]
      }
      clearable={true}
      disabled={false}
      id="id-fieldName"
      multiple={false}
      name="fieldName"
      onChange={[Function]}
      required={false}
      value="fieldValue"
    />
  </div>
</div>
`;

exports[`SelectField renders without form context 1`] = `
<SelectField
  clearable={true}
  disabled={false}
  hideErrorMessage={false}
  multiple={false}
  name="fieldName"
  options={
    Array [
      Object {
        "label": "a",
        "value": "a",
      },
      Object {
        "label": "b",
        "value": "b",
      },
    ]
  }
  required={false}
  value="a"
>
  <div
    className=""
  >
    <div
      className="controls"
    >
      <StyledSelectControl
        clearable={true}
        disabled={false}
        id="id-fieldName"
        multiple={false}
        name="fieldName"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "a",
              "value": "a",
            },
            Object {
              "label": "b",
              "value": "b",
            },
          ]
        }
        required={false}
        value="a"
      >
        <ForwardRef(RefForwardedSelectControl)
          className="css-9gm53a-StyledSelectControl e1qrhqd00"
          clearable={true}
          disabled={false}
          id="id-fieldName"
          multiple={false}
          name="fieldName"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "a",
                "value": "a",
              },
              Object {
                "label": "b",
                "value": "b",
              },
            ]
          }
          required={false}
          value="a"
        >
          <SelectControl
            className="css-9gm53a-StyledSelectControl e1qrhqd00"
            clearable={true}
            disabled={false}
            forwardedRef={null}
            height={36}
            id="id-fieldName"
            multiple={false}
            name="fieldName"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "a",
                  "value": "a",
                },
                Object {
                  "label": "b",
                  "value": "b",
                },
              ]
            }
            required={false}
            value="a"
          >
            <StyledSelect
              arrowRenderer={[Function]}
              backspaceRemoves={true}
              className="css-9gm53a-StyledSelectControl e1qrhqd00"
              clearable={true}
              deleteRemoves={true}
              disabled={false}
              forwardedRef={null}
              height={36}
              id="id-fieldName"
              multiple={false}
              name="fieldName"
              onChange={[Function]}
              options={
                Array [
                  Object {
                    "label": "a",
                    "value": "a",
                  },
                  Object {
                    "label": "b",
                    "value": "b",
                  },
                ]
              }
              required={false}
              value="a"
            >
              <SelectPicker
                arrowRenderer={[Function]}
                backspaceRemoves={true}
                className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
                clearable={true}
                deleteRemoves={true}
                disabled={false}
                forwardedRef={null}
                height={36}
                id="id-fieldName"
                multiple={false}
                name="fieldName"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "a",
                      "value": "a",
                    },
                    Object {
                      "label": "b",
                      "value": "b",
                    },
                  ]
                }
                required={false}
                value="a"
              >
                <Select
                  arrowRenderer={[Function]}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
                  clearAllText="Clear all"
                  clearRenderer={[Function]}
                  clearValueText="Clear value"
                  clearable={true}
                  closeOnSelect={true}
                  deleteRemoves={true}
                  delimiter=","
                  disabled={false}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  height={36}
                  id="id-fieldName"
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  multi={false}
                  multiple={false}
                  name="fieldName"
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  onSelectResetsInput={true}
                  openOnClick={true}
                  optionComponent={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "a",
                        "value": "a",
                      },
                      Object {
                        "label": "b",
                        "value": "b",
                      },
                    ]
                  }
                  pageSize={5}
                  placeholder="Select..."
                  removeSelected={true}
                  required={false}
                  rtl={false}
                  scrollMenuIntoView={true}
                  searchable={true}
                  simpleValue={false}
                  tabSelectsValue={true}
                  trimFilter={true}
                  value="a"
                  valueComponent={[Function]}
                  valueKey="value"
                >
                  <div
                    className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20 has-value is-clearable is-searchable Select--single"
                  >
                    <input
                      disabled={false}
                      key="hidden.0"
                      name="fieldName"
                      type="hidden"
                      value="a"
                    />
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                    >
                      <div
                        className="Select-multi-value-wrapper"
                        id="react-select-2--value"
                      >
                        <Value
                          disabled={false}
                          id="react-select-2--value-item"
                          instancePrefix="react-select-2-"
                          onClick={null}
                          placeholder="Select..."
                          value={
                            Object {
                              "label": "a",
                              "value": "a",
                            }
                          }
                        >
                          <div
                            className="Select-value"
                          >
                            <span
                              aria-selected="true"
                              className="Select-value-label"
                              id="react-select-2--value-item"
                              role="option"
                            >
                              a
                            </span>
                          </div>
                        </Value>
                        <AutosizeInput
                          aria-activedescendant="react-select-2--value"
                          aria-expanded="false"
                          aria-haspopup="false"
                          aria-owns=""
                          className="Select-input"
                          id="id-fieldName"
                          injectStyles={true}
                          minWidth="5"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          role="combobox"
                          value=""
                        >
                          <div
                            className="Select-input"
                            style={
                              Object {
                                "display": "inline-block",
                              }
                            }
                          >
                            <input
                              aria-activedescendant="react-select-2--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-owns=""
                              id="id-fieldName"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              style={
                                Object {
                                  "boxSizing": "content-box",
                                  "width": "5px",
                                }
                              }
                              value=""
                            />
                            <div
                              style={
                                Object {
                                  "height": 0,
                                  "left": 0,
                                  "overflow": "scroll",
                                  "position": "absolute",
                                  "top": 0,
                                  "visibility": "hidden",
                                  "whiteSpace": "pre",
                                }
                              }
                            />
                          </div>
                        </AutosizeInput>
                      </div>
                      <span
                        aria-label="Clear value"
                        className="Select-clear-zone"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        title="Clear value"
                      >
                        <span
                          className="Select-clear"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "&times;",
                            }
                          }
                        />
                      </span>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="icon-arrow-down"
                        />
                      </span>
                    </div>
                  </div>
                </Select>
              </SelectPicker>
            </StyledSelect>
          </SelectControl>
        </ForwardRef(RefForwardedSelectControl)>
      </StyledSelectControl>
    </div>
  </div>
</SelectField>
`;
