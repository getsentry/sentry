// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormField + model renders with Form 1`] = `
<Form
  allowUndo={false}
  cancelLabel="Cancel"
  className="form-stacked"
  model={
    FormModel {
      "api": Client {
        "_chain": [Function],
        "_wrapRequest": [Function],
        "bulkUpdate": [Function],
        "handleRequestError": [Function],
        "hasProjectBeenRenamed": [Function],
      },
      "errors": Object {},
      "fieldDescriptor": Map {
        "fieldName" => Object {
          "children": [Function],
          "className": undefined,
          "field": [Function],
          "flexibleControlStateSize": false,
          "hideErrorMessage": false,
          "name": "fieldName",
          "type": "text",
        },
      },
      "fieldState": Object {},
      "fields": Object {},
      "formErrors": undefined,
      "formState": undefined,
      "initialData": Object {},
      "options": Object {
        "allowUndo": false,
        "apiEndpoint": undefined,
        "apiMethod": undefined,
        "onFieldChange": undefined,
        "onSubmitError": undefined,
        "onSubmitSuccess": undefined,
        "resetOnError": undefined,
        "saveOnBlur": false,
      },
      "snapshots": Array [
        Map {},
      ],
    }
  }
  requireChanges={false}
  saveOnBlur={false}
  submitDisabled={false}
  submitLabel="Save Changes"
  submitPriority="primary"
>
  <form
    className="form-stacked"
    onSubmit={[Function]}
  >
    <div>
      <TextField
        name="fieldName"
      >
        <InputField
          field={[Function]}
          name="fieldName"
          type="text"
        >
          <FormField
            field={[Function]}
            flexibleControlStateSize={false}
            hideErrorMessage={false}
            name="fieldName"
            type="text"
          >
            <Field
              alignRight={false}
              disabled={false}
              field={[Function]}
              flexibleControlStateSize={false}
              id="fieldName"
              inline={true}
              name="fieldName"
              required={false}
              type="text"
              visible={true}
            >
              <FieldWrapper
                hasControlState={true}
                inline={true}
              >
                <div
                  className="css-hkyx7n-FieldWrapper-FieldWrapper e2iyls20"
                >
                  <FieldControl
                    alignRight={false}
                    controlState={
                      <FormFieldControlState
                        model={
                          FormModel {
                            "api": Client {
                              "_chain": [Function],
                              "_wrapRequest": [Function],
                              "bulkUpdate": [Function],
                              "handleRequestError": [Function],
                              "hasProjectBeenRenamed": [Function],
                            },
                            "errors": Object {},
                            "fieldDescriptor": Map {
                              "fieldName" => Object {
                                "children": [Function],
                                "className": undefined,
                                "field": [Function],
                                "flexibleControlStateSize": false,
                                "hideErrorMessage": false,
                                "name": "fieldName",
                                "type": "text",
                              },
                            },
                            "fieldState": Object {},
                            "fields": Object {},
                            "formErrors": undefined,
                            "formState": undefined,
                            "initialData": Object {},
                            "options": Object {
                              "allowUndo": false,
                              "apiEndpoint": undefined,
                              "apiMethod": undefined,
                              "onFieldChange": undefined,
                              "onSubmitError": undefined,
                              "onSubmitSuccess": undefined,
                              "resetOnError": undefined,
                              "saveOnBlur": false,
                            },
                            "snapshots": Array [
                              Map {},
                            ],
                          }
                        }
                        name="fieldName"
                      />
                    }
                    disabled={false}
                    errorState={
                      <Observer>
                        [Function]
                      </Observer>
                    }
                    flexibleControlStateSize={false}
                    inline={true}
                  >
                    <FieldControlErrorWrapper
                      inline={true}
                    >
                      <div
                        className="css-qe5fr0-FieldControlErrorWrapper e12jpfuq0"
                      >
                        <FieldControlWrapper>
                          <div
                            className="css-1evsibf-FieldControlWrapper e12jpfuq2"
                          >
                            <FieldControlStyled
                              alignRight={false}
                            >
                              <div
                                className="css-ld1e0a-FieldControlStyled e12jpfuq1"
                              >
                                <Observer>
                                  <Input
                                    disabled={false}
                                    error={false}
                                    field={[Function]}
                                    id="fieldName"
                                    initialData={Object {}}
                                    model={
                                      FormModel {
                                        "api": Client {
                                          "_chain": [Function],
                                          "_wrapRequest": [Function],
                                          "bulkUpdate": [Function],
                                          "handleRequestError": [Function],
                                          "hasProjectBeenRenamed": [Function],
                                        },
                                        "errors": Object {},
                                        "fieldDescriptor": Map {
                                          "fieldName" => Object {
                                            "children": [Function],
                                            "className": undefined,
                                            "field": [Function],
                                            "flexibleControlStateSize": false,
                                            "hideErrorMessage": false,
                                            "name": "fieldName",
                                            "type": "text",
                                          },
                                        },
                                        "fieldState": Object {},
                                        "fields": Object {},
                                        "formErrors": undefined,
                                        "formState": undefined,
                                        "initialData": Object {},
                                        "options": Object {
                                          "allowUndo": false,
                                          "apiEndpoint": undefined,
                                          "apiMethod": undefined,
                                          "onFieldChange": undefined,
                                          "onSubmitError": undefined,
                                          "onSubmitSuccess": undefined,
                                          "resetOnError": undefined,
                                          "saveOnBlur": false,
                                        },
                                        "snapshots": Array [
                                          Map {},
                                        ],
                                      }
                                    }
                                    name="fieldName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onKeyDown={[Function]}
                                    type="text"
                                    value=""
                                  >
                                    <input
                                      className="css-1h04ndk-Input e1xej46s0"
                                      disabled={false}
                                      id="fieldName"
                                      name="fieldName"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      type="text"
                                      value=""
                                    />
                                  </Input>
                                </Observer>
                              </div>
                            </FieldControlStyled>
                            <FieldControlState
                              flexibleControlStateSize={false}
                            >
                              <div
                                className="css-1347hil-FieldControlState ep9s0su0"
                              >
                                <FormFieldControlState
                                  model={
                                    FormModel {
                                      "api": Client {
                                        "_chain": [Function],
                                        "_wrapRequest": [Function],
                                        "bulkUpdate": [Function],
                                        "handleRequestError": [Function],
                                        "hasProjectBeenRenamed": [Function],
                                      },
                                      "errors": Object {},
                                      "fieldDescriptor": Map {
                                        "fieldName" => Object {
                                          "children": [Function],
                                          "className": undefined,
                                          "field": [Function],
                                          "flexibleControlStateSize": false,
                                          "hideErrorMessage": false,
                                          "name": "fieldName",
                                          "type": "text",
                                        },
                                      },
                                      "fieldState": Object {},
                                      "fields": Object {},
                                      "formErrors": undefined,
                                      "formState": undefined,
                                      "initialData": Object {},
                                      "options": Object {
                                        "allowUndo": false,
                                        "apiEndpoint": undefined,
                                        "apiMethod": undefined,
                                        "onFieldChange": undefined,
                                        "onSubmitError": undefined,
                                        "onSubmitSuccess": undefined,
                                        "resetOnError": undefined,
                                        "saveOnBlur": false,
                                      },
                                      "snapshots": Array [
                                        Map {},
                                      ],
                                    }
                                  }
                                  name="fieldName"
                                >
                                  <Observer>
                                    <ControlState
                                      error={false}
                                      isSaved={null}
                                      isSaving={null}
                                    />
                                  </Observer>
                                </FormFieldControlState>
                              </div>
                            </FieldControlState>
                          </div>
                        </FieldControlWrapper>
                        <Observer />
                      </div>
                    </FieldControlErrorWrapper>
                  </FieldControl>
                </div>
              </FieldWrapper>
            </Field>
          </FormField>
        </InputField>
      </TextField>
    </div>
    <StyledFooter
      saveOnBlur={false}
    >
      <div
        className="css-yfxs1k-StyledFooter e1r1zmbj0"
      >
        <DefaultButtons>
          <div
            className="css-1utgghf-DefaultButtons e1r1zmbj1"
          >
            <Observer>
              <forwardRef<Button>
                data-test-id="form-submit"
                disabled={false}
                priority="primary"
                type="submit"
              >
                <Button
                  align="center"
                  data-test-id="form-submit"
                  disabled={false}
                  forwardRef={null}
                  priority="primary"
                  type="submit"
                >
                  <StyledButton
                    aria-disabled={false}
                    aria-label="Save Changes"
                    data-test-id="form-submit"
                    disabled={false}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="primary"
                    role="button"
                    type="submit"
                  >
                    <Component
                      aria-disabled={false}
                      aria-label="Save Changes"
                      className="css-1e05jtd-StyledButton edwq9my0"
                      data-test-id="form-submit"
                      forwardRef={null}
                      onClick={[Function]}
                      role="button"
                      type="submit"
                    >
                      <button
                        aria-disabled={false}
                        aria-label="Save Changes"
                        className="css-1e05jtd-StyledButton edwq9my0"
                        data-test-id="form-submit"
                        onClick={[Function]}
                        role="button"
                        type="submit"
                      >
                        <ButtonLabel
                          align="center"
                          priority="primary"
                        >
                          <span
                            className="css-zmpclt-ButtonLabel edwq9my1"
                          >
                            Save Changes
                          </span>
                        </ButtonLabel>
                      </button>
                    </Component>
                  </StyledButton>
                </Button>
              </forwardRef<Button>>
            </Observer>
          </div>
        </DefaultButtons>
      </div>
    </StyledFooter>
  </form>
</Form>
`;
