// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResolveActions with confirmation step renders 1`] = `
<ResolveActions
  confirmLabel="Resolve"
  confirmMessage="Are you sure???"
  hasRelease={false}
  isAutoResolved={false}
  isResolved={false}
  onUpdate={[MockFunction]}
  orgId="org-1"
  projectId="proj-1"
  shouldConfirm={true}
>
  <div
    style={
      Object {
        "display": "inline-block",
      }
    }
  >
    <CustomResolutionModal
      onCanceled={[Function]}
      onSelected={[Function]}
      orgId="org-1"
      projectId="proj-1"
      show={false}
    >
      <Modal
        animation={false}
        autoFocus={true}
        backdrop={true}
        bsClass="modal"
        dialogComponentClass={[Function]}
        enforceFocus={true}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      >
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropClassName="modal-backdrop"
          containerClassName="modal-open"
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onEntering={[Function]}
          onExited={[Function]}
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        />
      </Modal>
    </CustomResolutionModal>
    <Tooltip
      containerDisplayMode="inline-block"
      disabled={true}
      position="top"
      title="Error fetching project"
    >
      <div
        className="btn-group"
      >
        <ActionLink
          className="btn btn-default btn-sm"
          confirmLabel="Resolve"
          disabled={false}
          message="Are you sure???"
          onAction={[Function]}
          shouldConfirm={true}
          title="Resolve"
        >
          <Confirm
            cancelText="Cancel"
            confirmText="Resolve"
            disableConfirmButton={false}
            message="Are you sure???"
            onConfirm={[Function]}
            priority="primary"
            stopPropagation={false}
          >
            <a
              aria-label="Resolve"
              className="btn btn-default btn-sm"
              onClick={[Function]}
              title="Resolve"
            >
               
              <StyledIconCheckmark
                size="xs"
              >
                <IconCheckmark
                  className="css-g5t06q-StyledIconCheckmark enkvoq90"
                  size="xs"
                >
                  <ForwardRef(SvgIcon)
                    className="css-g5t06q-StyledIconCheckmark enkvoq90"
                    data-test-id="icon-check-mark"
                    size="xs"
                  >
                    <svg
                      className="css-g5t06q-StyledIconCheckmark enkvoq90"
                      data-test-id="icon-check-mark"
                      fill="currentColor"
                      height="12px"
                      viewBox="0 0 16 16"
                      width="12px"
                    >
                      <path
                        d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </IconCheckmark>
              </StyledIconCheckmark>
              Resolve
            </a>
            <Modal
              animation={false}
              autoFocus={true}
              backdrop={true}
              bsClass="modal"
              dialogComponentClass={[Function]}
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": Array [],
                  "remove": [Function],
                }
              }
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            >
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropClassName="modal-backdrop"
                containerClassName="modal-open"
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "add": [Function],
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "isTopModal": [Function],
                    "modals": Array [],
                    "remove": [Function],
                  }
                }
                onEntering={[Function]}
                onExited={[Function]}
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
              />
            </Modal>
          </Confirm>
        </ActionLink>
        <DropdownLink
          alwaysRenderMenu={true}
          anchorRight={false}
          caret={true}
          className="btn btn-default btn-sm"
          disabled={false}
          key="resolve-dropdown"
          title=""
        >
          <DropdownMenu
            alwaysRenderMenu={true}
            closeOnEscape={true}
            keepMenuOpen={false}
          >
            <span
              className="dropdown"
            >
              <a
                className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  Object {
                    "outline": "none",
                  }
                }
              >
                <div
                  className="dropdown-actor-title"
                >
                  <span />
                  <IconChevron
                    direction="down"
                    size="xs"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "color": [Function],
                            "size": [Function],
                            "viewBox": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      css={
                        Object {
                          "map": undefined,
                          "name": "7chgxg-IconChevron",
                          "next": undefined,
                          "styles": "transform:rotate(180deg);;label:IconChevron;",
                          "toString": [Function],
                        }
                      }
                      size="xs"
                    >
                      <ForwardRef(SvgIcon)
                        className="css-7chgxg-IconChevron"
                        size="xs"
                      >
                        <svg
                          className="css-7chgxg-IconChevron"
                          fill="currentColor"
                          height="12px"
                          viewBox="0 0 16 16"
                          width="12px"
                        >
                          <path
                            d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </EmotionCssPropInternal>
                  </IconChevron>
                </div>
              </a>
              <ul
                className="dropdown-menu"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <MenuItem
                  header={true}
                >
                  <MenuListItem
                    header={true}
                    role="presentation"
                  >
                    <li
                      className="css-1bgc7al-MenuListItem e80rkhl1"
                      role="presentation"
                    >
                      Resolved In
                    </li>
                  </MenuListItem>
                </MenuItem>
                <MenuItem
                  noAnchor={true}
                >
                  <MenuListItem
                    noAnchor={true}
                    role="presentation"
                  >
                    <li
                      className="css-1mw8rpx-MenuListItem e80rkhl1"
                      role="presentation"
                    >
                      <Tooltip
                        containerDisplayMode="block"
                        position="top"
                        title="Set up release tracking in order to use this feature."
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Container
                                aria-describedby="tooltip-123456"
                                containerDisplayMode="block"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <span
                                  aria-describedby="tooltip-123456"
                                  className="css-1513qml-Container eowlwvy0"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <ActionLink
                                    confirmLabel="Resolve"
                                    disabled={false}
                                    message="Are you sure???"
                                    onAction={[Function]}
                                    shouldConfirm={true}
                                    title="The next release"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Resolve"
                                      disableConfirmButton={false}
                                      message="Are you sure???"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        aria-label="The next release"
                                        onClick={[Function]}
                                        title="The next release"
                                      >
                                         
                                        The next release
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </ActionLink>
                                </span>
                              </Container>
                            </InnerReference>
                          </Reference>
                        </Manager>
                      </Tooltip>
                      <Tooltip
                        containerDisplayMode="block"
                        position="top"
                        title="Set up release tracking in order to use this feature."
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Container
                                aria-describedby="tooltip-123456"
                                containerDisplayMode="block"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <span
                                  aria-describedby="tooltip-123456"
                                  className="css-1513qml-Container eowlwvy0"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <ActionLink
                                    confirmLabel="Resolve"
                                    disabled={false}
                                    message="Are you sure???"
                                    onAction={[Function]}
                                    shouldConfirm={true}
                                    title="The current release"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Resolve"
                                      disableConfirmButton={false}
                                      message="Are you sure???"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        aria-label="The current release"
                                        onClick={[Function]}
                                        title="The current release"
                                      >
                                         
                                        The current release
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </ActionLink>
                                </span>
                              </Container>
                            </InnerReference>
                          </Reference>
                        </Manager>
                      </Tooltip>
                      <Tooltip
                        containerDisplayMode="block"
                        position="top"
                        title="Set up release tracking in order to use this feature."
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Container
                                aria-describedby="tooltip-123456"
                                containerDisplayMode="block"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <span
                                  aria-describedby="tooltip-123456"
                                  className="css-1513qml-Container eowlwvy0"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <ActionLink
                                    confirmLabel="Resolve"
                                    disabled={false}
                                    message="Are you sure???"
                                    onAction={[Function]}
                                    shouldConfirm={false}
                                    title="Another version"
                                  >
                                    <ActionLinkAnchor
                                      aria-label="Another version"
                                      className=""
                                      data-test-id="action-link-another-version"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <a
                                        aria-label="Another version"
                                        className=" css-dhyg0k-ActionLinkAnchor ehtyk0g0"
                                        data-test-id="action-link-another-version"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        Another version…
                                      </a>
                                    </ActionLinkAnchor>
                                  </ActionLink>
                                </span>
                              </Container>
                            </InnerReference>
                          </Reference>
                        </Manager>
                      </Tooltip>
                    </li>
                  </MenuListItem>
                </MenuItem>
              </ul>
            </span>
          </DropdownMenu>
        </DropdownLink>
      </div>
    </Tooltip>
  </div>
</ResolveActions>
`;

exports[`ResolveActions without confirmation renders 1`] = `
<ResolveActions
  confirmLabel="Resolve"
  hasRelease={false}
  isAutoResolved={false}
  isResolved={false}
  onUpdate={[MockFunction]}
  orgId="org-1"
  projectId="proj-1"
>
  <div
    style={
      Object {
        "display": "inline-block",
      }
    }
  >
    <CustomResolutionModal
      onCanceled={[Function]}
      onSelected={[Function]}
      orgId="org-1"
      projectId="proj-1"
      show={false}
    >
      <Modal
        animation={false}
        autoFocus={true}
        backdrop={true}
        bsClass="modal"
        dialogComponentClass={[Function]}
        enforceFocus={true}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      >
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropClassName="modal-backdrop"
          containerClassName="modal-open"
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onEntering={[Function]}
          onExited={[Function]}
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        />
      </Modal>
    </CustomResolutionModal>
    <Tooltip
      containerDisplayMode="inline-block"
      disabled={true}
      position="top"
      title="Error fetching project"
    >
      <div
        className="btn-group"
      >
        <ActionLink
          className="btn btn-default btn-sm"
          confirmLabel="Resolve"
          disabled={false}
          onAction={[Function]}
          shouldConfirm={false}
          title="Resolve"
        >
          <ActionLinkAnchor
            aria-label="Resolve"
            className="btn btn-default btn-sm"
            data-test-id="action-link-resolve"
            disabled={false}
            onClick={[Function]}
          >
            <a
              aria-label="Resolve"
              className="btn btn-default btn-sm css-dhyg0k-ActionLinkAnchor ehtyk0g0"
              data-test-id="action-link-resolve"
              disabled={false}
              onClick={[Function]}
            >
              <StyledIconCheckmark
                size="xs"
              >
                <IconCheckmark
                  className="css-g5t06q-StyledIconCheckmark enkvoq90"
                  size="xs"
                >
                  <ForwardRef(SvgIcon)
                    className="css-g5t06q-StyledIconCheckmark enkvoq90"
                    data-test-id="icon-check-mark"
                    size="xs"
                  >
                    <svg
                      className="css-g5t06q-StyledIconCheckmark enkvoq90"
                      data-test-id="icon-check-mark"
                      fill="currentColor"
                      height="12px"
                      viewBox="0 0 16 16"
                      width="12px"
                    >
                      <path
                        d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </IconCheckmark>
              </StyledIconCheckmark>
              Resolve
            </a>
          </ActionLinkAnchor>
        </ActionLink>
        <DropdownLink
          alwaysRenderMenu={true}
          anchorRight={false}
          caret={true}
          className="btn btn-default btn-sm"
          disabled={false}
          key="resolve-dropdown"
          title=""
        >
          <DropdownMenu
            alwaysRenderMenu={true}
            closeOnEscape={true}
            keepMenuOpen={false}
          >
            <span
              className="dropdown"
            >
              <a
                className="dropdown-actor btn btn-default btn-sm dropdown-toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  Object {
                    "outline": "none",
                  }
                }
              >
                <div
                  className="dropdown-actor-title"
                >
                  <span />
                  <IconChevron
                    direction="down"
                    size="xs"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "color": [Function],
                            "size": [Function],
                            "viewBox": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      css={
                        Object {
                          "map": undefined,
                          "name": "7chgxg-IconChevron",
                          "next": undefined,
                          "styles": "transform:rotate(180deg);;label:IconChevron;",
                          "toString": [Function],
                        }
                      }
                      size="xs"
                    >
                      <ForwardRef(SvgIcon)
                        className="css-7chgxg-IconChevron"
                        size="xs"
                      >
                        <svg
                          className="css-7chgxg-IconChevron"
                          fill="currentColor"
                          height="12px"
                          viewBox="0 0 16 16"
                          width="12px"
                        >
                          <path
                            d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </EmotionCssPropInternal>
                  </IconChevron>
                </div>
              </a>
              <ul
                className="dropdown-menu"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <MenuItem
                  header={true}
                >
                  <MenuListItem
                    header={true}
                    role="presentation"
                  >
                    <li
                      className="css-1bgc7al-MenuListItem e80rkhl1"
                      role="presentation"
                    >
                      Resolved In
                    </li>
                  </MenuListItem>
                </MenuItem>
                <MenuItem
                  noAnchor={true}
                >
                  <MenuListItem
                    noAnchor={true}
                    role="presentation"
                  >
                    <li
                      className="css-1mw8rpx-MenuListItem e80rkhl1"
                      role="presentation"
                    >
                      <Tooltip
                        containerDisplayMode="block"
                        position="top"
                        title="Set up release tracking in order to use this feature."
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Container
                                aria-describedby="tooltip-123456"
                                containerDisplayMode="block"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <span
                                  aria-describedby="tooltip-123456"
                                  className="css-1513qml-Container eowlwvy0"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <ActionLink
                                    confirmLabel="Resolve"
                                    disabled={false}
                                    onAction={[Function]}
                                    shouldConfirm={false}
                                    title="The next release"
                                  >
                                    <ActionLinkAnchor
                                      aria-label="The next release"
                                      className=""
                                      data-test-id="action-link-the-next-release"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <a
                                        aria-label="The next release"
                                        className=" css-dhyg0k-ActionLinkAnchor ehtyk0g0"
                                        data-test-id="action-link-the-next-release"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        The next release
                                      </a>
                                    </ActionLinkAnchor>
                                  </ActionLink>
                                </span>
                              </Container>
                            </InnerReference>
                          </Reference>
                        </Manager>
                      </Tooltip>
                      <Tooltip
                        containerDisplayMode="block"
                        position="top"
                        title="Set up release tracking in order to use this feature."
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Container
                                aria-describedby="tooltip-123456"
                                containerDisplayMode="block"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <span
                                  aria-describedby="tooltip-123456"
                                  className="css-1513qml-Container eowlwvy0"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <ActionLink
                                    confirmLabel="Resolve"
                                    disabled={false}
                                    onAction={[Function]}
                                    shouldConfirm={false}
                                    title="The current release"
                                  >
                                    <ActionLinkAnchor
                                      aria-label="The current release"
                                      className=""
                                      data-test-id="action-link-the-current-release"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <a
                                        aria-label="The current release"
                                        className=" css-dhyg0k-ActionLinkAnchor ehtyk0g0"
                                        data-test-id="action-link-the-current-release"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        The current release
                                      </a>
                                    </ActionLinkAnchor>
                                  </ActionLink>
                                </span>
                              </Container>
                            </InnerReference>
                          </Reference>
                        </Manager>
                      </Tooltip>
                      <Tooltip
                        containerDisplayMode="block"
                        position="top"
                        title="Set up release tracking in order to use this feature."
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Container
                                aria-describedby="tooltip-123456"
                                containerDisplayMode="block"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                              >
                                <span
                                  aria-describedby="tooltip-123456"
                                  className="css-1513qml-Container eowlwvy0"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  <ActionLink
                                    confirmLabel="Resolve"
                                    disabled={false}
                                    onAction={[Function]}
                                    shouldConfirm={false}
                                    title="Another version"
                                  >
                                    <ActionLinkAnchor
                                      aria-label="Another version"
                                      className=""
                                      data-test-id="action-link-another-version"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <a
                                        aria-label="Another version"
                                        className=" css-dhyg0k-ActionLinkAnchor ehtyk0g0"
                                        data-test-id="action-link-another-version"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        Another version…
                                      </a>
                                    </ActionLinkAnchor>
                                  </ActionLink>
                                </span>
                              </Container>
                            </InnerReference>
                          </Reference>
                        </Manager>
                      </Tooltip>
                    </li>
                  </MenuListItem>
                </MenuItem>
              </ul>
            </span>
          </DropdownMenu>
        </DropdownLink>
      </div>
    </Tooltip>
  </div>
</ResolveActions>
`;
