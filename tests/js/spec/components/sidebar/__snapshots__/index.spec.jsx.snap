// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar SidebarDropdown can open "Switch Organization" sub-menu 1`] = `
<SwitchOrganizationMenu
  data-test-id="sidebar-switch-org-menu"
  innerRef={[Function]}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-1t0ls5k-SwitchOrganizationMenu-SidebarDropdownMenu ejspo4a4"
    data-test-id="sidebar-switch-org-menu"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <OrganizationList>
      <div
        className="css-1qovpib-OrganizationList ejspo4a5"
      />
    </OrganizationList>
    <SidebarMenuItem
      data-test-id="sidebar-create-org"
      style={
        Object {
          "alignItems": "center",
        }
      }
      to="/organizations/new/"
    >
      <MenuItemLink
        data-test-id="sidebar-create-org"
        style={
          Object {
            "alignItems": "center",
          }
        }
        to="/organizations/new/"
      >
        <Component
          className="css-1vsrn4x-MenuItemLink ebifsjx1"
          data-test-id="sidebar-create-org"
          style={
            Object {
              "alignItems": "center",
            }
          }
          to="/organizations/new/"
        >
          <Link
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            data-test-id="sidebar-create-org"
            style={
              Object {
                "alignItems": "center",
              }
            }
            to="/organizations/new/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              data-test-id="sidebar-create-org"
              onlyActiveOnIndex={false}
              style={
                Object {
                  "alignItems": "center",
                }
              }
              to="/organizations/new/"
            >
              <a
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                data-test-id="sidebar-create-org"
                onClick={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                  >
                    <MenuItemLabelWithIcon>
                      <span
                        className="css-186585d-MenuItemLabelWithIcon ejspo4a1"
                      >
                        <AddIcon
                          src="icon-circle-add"
                        >
                          <InlineSvg
                            className="css-1at8pqz-AddIcon ejspo4a0"
                            src="icon-circle-add"
                          >
                            <StyledSvg
                              className="css-1at8pqz-AddIcon ejspo4a0"
                              height="1em"
                              viewBox={Object {}}
                              width="1em"
                            >
                              <svg
                                className="ejspo4a0 css-pcaft6-StyledSvg-AddIcon e2idor0"
                                height="1em"
                                viewBox={Object {}}
                                width="1em"
                              >
                                <use
                                  href="#test"
                                  xlinkHref="#test"
                                />
                              </svg>
                            </StyledSvg>
                          </InlineSvg>
                        </AddIcon>
                        <span>
                          Create a new organization
                        </span>
                      </span>
                    </MenuItemLabelWithIcon>
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
  </div>
</SwitchOrganizationMenu>
`;

exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
<OrgAndUserMenu
  innerRef={[Function]}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  org={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
>
  <div
    className="css-1d11loe-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <SidebarOrgSummary
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <OrgSummary>
        <div
          className="css-1d1he2f-OrgSummary e1n88pby0"
        >
          <Avatar
            className="css-6su6fj"
            hasTooltip={false}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            size={36}
          >
            <OrganizationAvatar
              className="css-6su6fj"
              hasTooltip={false}
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              size={36}
            >
              <BaseAvatar
                className="css-6su6fj"
                hasTooltip={false}
                letterId="org-slug"
                size={36}
                style={Object {}}
                title="org slug"
                tooltip="org-slug"
                type="letter_avatar"
                uploadPath="organization-avatar"
              >
                <Tooltip
                  disabled={true}
                  title="org-slug"
                >
                  <StyledBaseAvatar
                    className="avatar css-6su6fj"
                    style={
                      Object {
                        "height": "36px",
                        "width": "36px",
                      }
                    }
                  >
                    <span
                      className="avatar css-1m7k3tg-StyledBaseAvatar e1z0ohzl0"
                      style={
                        Object {
                          "height": "36px",
                          "width": "36px",
                        }
                      }
                    >
                      <LetterAvatar
                        displayName="org slug"
                        identifier="org-slug"
                      >
                        <Svg
                          viewBox="0 0 120 120"
                        >
                          <svg
                            className="css-123ijso-Svg e1knxa8x0"
                            viewBox="0 0 120 120"
                          >
                            <rect
                              fill="#4674ca"
                              height="120"
                              rx="15"
                              ry="15"
                              width="120"
                              x="0"
                              y="0"
                            />
                            <text
                              fill="#FFFFFF"
                              fontSize="65"
                              style={
                                Object {
                                  "dominantBaseline": "central",
                                }
                              }
                              textAnchor="middle"
                              x="50%"
                              y="50%"
                            >
                              OS
                            </text>
                          </svg>
                        </Svg>
                      </LetterAvatar>
                    </span>
                  </StyledBaseAvatar>
                </Tooltip>
              </BaseAvatar>
            </OrganizationAvatar>
          </Avatar>
          <Details>
            <div
              className="css-r07pll-Details e1n88pby3"
            >
              <SummaryOrgName>
                <div
                  className="css-18gl0tz-SummaryOrgName e1n88pby1"
                >
                  Organization Name
                </div>
              </SummaryOrgName>
            </div>
          </Details>
        </div>
      </OrgSummary>
    </SidebarOrgSummary>
    <SidebarMenuItem
      to="/settings/org-slug/"
    >
      <MenuItemLink
        to="/settings/org-slug/"
      >
        <Component
          className="css-1vsrn4x-MenuItemLink ebifsjx1"
          to="/settings/org-slug/"
        >
          <Link
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            to="/settings/org-slug/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/"
            >
              <a
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                  >
                    Organization settings
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      to="/settings/org-slug/teams/"
    >
      <MenuItemLink
        to="/settings/org-slug/teams/"
      >
        <Component
          className="css-1vsrn4x-MenuItemLink ebifsjx1"
          to="/settings/org-slug/teams/"
        >
          <Link
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            to="/settings/org-slug/teams/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/teams/"
            >
              <a
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                  >
                    Teams
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <Hook
      Components={
        Object {
          "SidebarMenuItem": [Function],
        }
      }
      name="sidebar:organization-dropdown-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    />
    <SidebarMenuItem>
      <MenuItemLink>
        <Component
          className="css-kv4jq4-MenuItemLink ebifsjx1"
        >
          <div
            className="css-kv4jq4-MenuItemLink ebifsjx1"
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-rkoh57-MenuItemLabel-MenuItemLabel ebifsjx0"
              >
                <withOrganizations
                  canCreateOrganization={true}
                >
                  <SwitchOrganization
                    canCreateOrganization={true}
                    organizations={Array []}
                  >
                    <DropdownMenu
                      isNestedDropdown={true}
                      keepMenuOpen={false}
                    >
                      <SwitchOrganizationMenuActor
                        data-test-id="sidebar-switch-org"
                        innerRef={[Function]}
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="css-1lqnj07-SwitchOrganizationMenuActor ejspo4a3"
                          data-test-id="sidebar-switch-org"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          Switch organization
                          <SubMenuCaret>
                            <span
                              className="css-turth4-SubMenuCaret ejspo4a2"
                            >
                              <i
                                className="icon-arrow-right"
                              />
                            </span>
                          </SubMenuCaret>
                        </span>
                      </SwitchOrganizationMenuActor>
                    </DropdownMenu>
                  </SwitchOrganization>
                </withOrganizations>
              </span>
            </MenuItemLabel>
          </div>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <Divider>
      <div
        className="css-19r16al-Divider ek5mfa70"
      />
    </Divider>
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-1fpw0f9-UserSummary e1fowdfw1"
        to="/settings/account/details/"
      >
        <Link
          className="css-1fpw0f9-UserSummary e1fowdfw1"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-1fpw0f9-UserSummary e1fowdfw1"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-otlbo1-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                      hideEmail={false}
                      useLink={true}
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                      >
                        <div
                          className="e1fowdfw2 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
                        >
                          <StyledAvatar
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <Component
                              className="css-1u6j7yz-StyledAvatar ev46mzr4"
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <Avatar
                                className="css-1u6j7yz-StyledAvatar ev46mzr4"
                                hasTooltip={false}
                                size={32}
                                user={
                                  Object {
                                    "email": "foo@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Foo Bar",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "permissions": Set {},
                                    "username": "foo@example.com",
                                  }
                                }
                              >
                                <UserAvatar
                                  className="css-1u6j7yz-StyledAvatar ev46mzr4"
                                  gravatar={false}
                                  hasTooltip={false}
                                  size={32}
                                  user={
                                    Object {
                                      "email": "foo@example.com",
                                      "flags": Object {
                                        "newsletter_consent_prompt": false,
                                      },
                                      "hasPasswordAuth": true,
                                      "id": "1",
                                      "isAuthenticated": true,
                                      "name": "Foo Bar",
                                      "options": Object {
                                        "timezone": "UTC",
                                      },
                                      "permissions": Set {},
                                      "username": "foo@example.com",
                                    }
                                  }
                                >
                                  <BaseAvatar
                                    className="css-1u6j7yz-StyledAvatar ev46mzr4"
                                    gravatarId="foo@example.com"
                                    hasTooltip={false}
                                    letterId="foo@example.com"
                                    round={true}
                                    size={32}
                                    style={Object {}}
                                    title="Foo Bar"
                                    tooltip="Foo Bar (foo@example.com)"
                                    type="letter_avatar"
                                    uploadPath="avatar"
                                  >
                                    <Tooltip
                                      disabled={true}
                                      title="Foo Bar (foo@example.com)"
                                    >
                                      <StyledBaseAvatar
                                        className="avatar css-1u6j7yz-StyledAvatar ev46mzr4"
                                        style={
                                          Object {
                                            "height": "32px",
                                            "width": "32px",
                                          }
                                        }
                                      >
                                        <span
                                          className="avatar ev46mzr4 css-1dbvbxh-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
                                          style={
                                            Object {
                                              "height": "32px",
                                              "width": "32px",
                                            }
                                          }
                                        >
                                          <LetterAvatar
                                            displayName="Foo Bar"
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <Svg
                                              round={true}
                                              viewBox="0 0 120 120"
                                            >
                                              <svg
                                                className="css-1r4mnb9-Svg e1knxa8x0"
                                                viewBox="0 0 120 120"
                                              >
                                                <rect
                                                  fill="#315cac"
                                                  height="120"
                                                  rx="15"
                                                  ry="15"
                                                  width="120"
                                                  x="0"
                                                  y="0"
                                                />
                                                <text
                                                  fill="#FFFFFF"
                                                  fontSize="65"
                                                  style={
                                                    Object {
                                                      "dominantBaseline": "central",
                                                    }
                                                  }
                                                  textAnchor="middle"
                                                  x="50%"
                                                  y="50%"
                                                >
                                                  FB
                                                </text>
                                              </svg>
                                            </Svg>
                                          </LetterAvatar>
                                        </span>
                                      </StyledBaseAvatar>
                                    </Tooltip>
                                  </BaseAvatar>
                                </UserAvatar>
                              </Avatar>
                            </Component>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-9l6b2w-StyledNameAndEmail ev46mzr1"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <Component
                                  className="css-12fcmnb-StyledName ev46mzr3"
                                  hideEmail={false}
                                >
                                  <span
                                    className="css-12fcmnb-StyledName ev46mzr3"
                                  >
                                    Foo Bar
                                  </span>
                                </Component>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-3w2sfq-StyledEmail ev46mzr2"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <MenuItemLink
          to="/settings/account/"
        >
          <Component
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            to="/settings/account/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              to="/settings/account/"
            >
              <Link
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <MenuItemLink
          to="/settings/account/api/"
        >
          <Component
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            to="/settings/account/api/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              to="/settings/account/api/"
            >
              <Link
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        href="/auth/logout/"
      >
        <MenuItemLink
          href="/auth/logout/"
        >
          <Component
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            href="/auth/logout/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              href="/auth/logout/"
            >
              <a
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                href="/auth/logout/"
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                  >
                    Sign out
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;

exports[`Sidebar SidebarPanel can display Broadcasts panel and mark as seen 1`] = `
<SidebarPanelItem
  hasSeen={false}
  key="8"
  link="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
  message="Source maps are JSON files that contain information on how to map your transpiled source code back to their original source."
  title="Learn about Source Maps"
>
  <SidebarPanelItemRoot>
    <div
      className="css-11zw7jo-SidebarPanelItemRoot er110870"
    >
      <Title
        hasSeen={false}
      >
        <Component
          className="css-hs42c5-Title er110871"
          hasSeen={false}
        >
          <div
            className="css-hs42c5-Title er110871"
          >
            Learn about Source Maps
          </div>
        </Component>
      </Title>
      <Message>
        <div
          className="css-1rszf37-Text-Message er110873"
        >
          Source maps are JSON files that contain information on how to map your transpiled source code back to their original source.
        </div>
      </Message>
      <Text>
        <div
          className="css-7bhqyd-Text er110872"
        >
          <ExternalLink
            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
            rel="noreferrer noopener"
            target="_blank"
          >
            <a
              href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
              rel="noreferrer noopener"
              target="_blank"
            >
              Read More
            </a>
          </ExternalLink>
        </div>
      </Text>
    </div>
  </SidebarPanelItemRoot>
</SidebarPanelItem>
`;

exports[`Sidebar SidebarPanel can show Incidents in Sidebar Panel 1`] = `
<IncidentList
  className="incident-list"
>
  <ul
    className="incident-list css-9jctl-IncidentList e1teacth0"
  >
    <IncidentItem
      key="1"
    >
      <li
        className="css-14n5z5w-IncidentItem e1teacth1"
      >
        <IncidentTitle>
          <div
            className="css-5djkqu-IncidentTitle e1teacth2"
          >
            Test Incident
          </div>
        </IncidentTitle>
        <div>
          <StatusHeader>
            <div
              className="css-1x43ghi-StatusHeader e1teacth3"
            >
              Latest updates:
            </div>
          </StatusHeader>
          <StatusList>
            <ul
              className="css-144h8i2-StatusList e1teacth4"
            >
              <StatusItem
                key="0"
              >
                <li
                  className="css-ykoqmj-StatusItem e1teacth5"
                >
                  First Update
                </li>
              </StatusItem>
              <StatusItem
                key="1"
              >
                <li
                  className="css-ykoqmj-StatusItem e1teacth5"
                >
                  Second Update
                </li>
              </StatusItem>
            </ul>
          </StatusList>
        </div>
        <div>
          <Button
            disabled={false}
            external={true}
            href="https://status.sentry.io"
            size="small"
          >
            <StyledButton
              aria-label="Learn more"
              disabled={false}
              external={true}
              href="https://status.sentry.io"
              onClick={[Function]}
              role="button"
              size="small"
            >
              <Component
                aria-label="Learn more"
                className="css-dkprmi-StyledButton-getColors e17811v30"
                disabled={false}
                external={true}
                href="https://status.sentry.io"
                onClick={[Function]}
                role="button"
                size="small"
              >
                <ExternalLink
                  aria-label="Learn more"
                  className="css-dkprmi-StyledButton-getColors e17811v30"
                  disabled={false}
                  href="https://status.sentry.io"
                  onClick={[Function]}
                  rel="noreferrer noopener"
                  role="button"
                  size="small"
                  target="_blank"
                >
                  <a
                    aria-label="Learn more"
                    className="css-dkprmi-StyledButton-getColors e17811v30"
                    disabled={false}
                    href="https://status.sentry.io"
                    onClick={[Function]}
                    rel="noreferrer noopener"
                    role="button"
                    size="small"
                    target="_blank"
                  >
                    <ButtonLabel
                      size="small"
                    >
                      <Component
                        className="css-179w01k-ButtonLabel e17811v31"
                        size="small"
                      >
                        <Flex
                          align="center"
                          className="css-179w01k-ButtonLabel e17811v31"
                          size="small"
                        >
                          <Base
                            align="center"
                            className="e17811v31 css-8mahft-ButtonLabel"
                            size="small"
                          >
                            <div
                              className="e17811v31 css-8mahft-ButtonLabel"
                              is={null}
                              size="small"
                            >
                              Learn more
                            </div>
                          </Base>
                        </Flex>
                      </Component>
                    </ButtonLabel>
                  </a>
                </ExternalLink>
              </Component>
            </StyledButton>
          </Button>
        </div>
      </li>
    </IncidentItem>
  </ul>
</IncidentList>
`;

exports[`Sidebar can have onboarding feature 1`] = `
<SidebarPanel
  collapsed={false}
  hidePanel={[Function]}
  title="Getting Started with Sentry"
>
  <StyledSidebarPanel
    collapsed={false}
  >
    <Component
      className="css-1q74azb-StyledSidebarPanel-getPositionForOrientation e1cvaskl0"
      collapsed={false}
    >
      <div
        className="css-1q74azb-StyledSidebarPanel-getPositionForOrientation e1cvaskl0"
      >
        <SidebarPanelHeader>
          <div
            className="css-13cwjk8-SidebarPanelHeader e1cvaskl1"
          >
            <PanelClose
              onClick={[Function]}
            >
              <a
                className="css-3guzl0-PanelClose e1cvaskl3"
                onClick={[Function]}
              >
                <span
                  className="icon-close"
                />
              </a>
            </PanelClose>
            <Title>
              <div
                className="css-87m5mp-Title e1cvaskl4"
              >
                Getting Started with Sentry
              </div>
            </Title>
          </div>
        </SidebarPanelHeader>
        <SidebarPanelBody>
          <div
            className="css-1pl3kd6-SidebarPanelBody e1cvaskl2"
          >
            <TodoList>
              <div>
                <div
                  className="onboarding-wrapper"
                >
                  <ul
                    className="list-unstyled"
                  >
                    <TodoItem
                      key="1"
                      onSkip={[Function]}
                      task={
                        Object {
                          "description": "Create your first Sentry project",
                          "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors",
                          "display": true,
                          "featureLocation": "organization",
                          "location": "projects/new/",
                          "prereq": Array [],
                          "skippable": false,
                          "task": 1,
                          "title": "Create a project",
                        }
                      }
                    >
                      <li
                        className=""
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <div
                          className="todo-content"
                        >
                          <div
                            className="ob-checkbox"
                          />
                          <a
                            href="/organizations/org-slug/projects/new/"
                            onClick={[Function]}
                          >
                            <h4>
                              Create a project
                            </h4>
                          </a>
                          <div>
                            <p>
                              Create your first Sentry project
                               
                            </p>
                          </div>
                        </div>
                      </li>
                    </TodoItem>
                    <TodoItem
                      key="2"
                      onSkip={[Function]}
                      task={
                        Object {
                          "description": "Install Sentry's client",
                          "detailedDescription": "Choose your platform and send an event",
                          "display": true,
                          "featureLocation": "project",
                          "location": "settings/install/",
                          "prereq": Array [
                            1,
                          ],
                          "skippable": false,
                          "task": 2,
                          "title": "Send your first event",
                        }
                      }
                    >
                      <li
                        className=""
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <div
                          className="todo-content"
                        >
                          <div
                            className="ob-checkbox"
                          />
                          <a
                            href="/organizations/org-slug/projects/choose/?onboarding=1&task=2"
                            onClick={[Function]}
                          >
                            <h4>
                              Send your first event
                            </h4>
                          </a>
                          <div>
                            <p>
                              Install Sentry's client
                               
                            </p>
                          </div>
                        </div>
                      </li>
                    </TodoItem>
                    <TodoItem
                      key="3"
                      onSkip={[Function]}
                      task={
                        Object {
                          "description": "Bring your team aboard",
                          "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
          by unlocking suggested owners, mentions, and assignment",
                          "display": true,
                          "featureLocation": "organization",
                          "location": "members/",
                          "prereq": Array [],
                          "skippable": true,
                          "task": 3,
                          "title": "Invite team member",
                        }
                      }
                    >
                      <li
                        className=""
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <div
                          className="todo-content"
                        >
                          <div
                            className="ob-checkbox"
                          />
                          <a
                            href="/organizations/org-slug/members/"
                            onClick={[Function]}
                          >
                            <h4>
                              Invite team member
                            </h4>
                          </a>
                          <div>
                            <p>
                              Bring your team aboard
                               
                            </p>
                          </div>
                          <a
                            className="skip-btn btn btn-default"
                            onClick={[Function]}
                          >
                            Skip
                          </a>
                        </div>
                      </li>
                    </TodoItem>
                    <TodoItem
                      key="4"
                      onSkip={[Function]}
                      task={
                        Object {
                          "description": "Add Sentry to a second platform",
                          "detailedDescription": "Cross platform functionality to support both your frontend and backend.",
                          "display": true,
                          "featureLocation": "organization",
                          "location": "projects/new/",
                          "prereq": Array [
                            1,
                            2,
                          ],
                          "skippable": true,
                          "task": 4,
                          "title": "Add a second platform",
                        }
                      }
                    >
                      <li
                        className=""
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <div
                          className="todo-content"
                        >
                          <div
                            className="ob-checkbox"
                          />
                          <a
                            href="/organizations/org-slug/projects/new/"
                            onClick={[Function]}
                          >
                            <h4>
                              Add a second platform
                            </h4>
                          </a>
                          <div>
                            <p>
                              Add Sentry to a second platform
                               
                            </p>
                          </div>
                          <a
                            className="skip-btn btn btn-default"
                            onClick={[Function]}
                          >
                            Skip
                          </a>
                        </div>
                      </li>
                    </TodoItem>
                    <TodoItem
                      key="5"
                      onSkip={[Function]}
                      task={
                        Object {
                          "description": "Know who is being affected by crashes",
                          "detailedDescription": "Unlock features that let you
          drill down into the number of users affected by an issue as well as get a broader sense about the quality of the application.",
                          "display": true,
                          "featureLocation": "absolute",
                          "location": "https://docs.sentry.io/hosted/learn/context/#capturing-the-user",
                          "prereq": Array [
                            1,
                            2,
                          ],
                          "skippable": true,
                          "task": 5,
                          "title": "Add user context",
                        }
                      }
                    >
                      <li
                        className=""
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <div
                          className="todo-content"
                        >
                          <div
                            className="ob-checkbox"
                          />
                          <a
                            href="https://docs.sentry.io/hosted/learn/context/#capturing-the-user"
                            onClick={[Function]}
                          >
                            <h4>
                              Add user context
                            </h4>
                          </a>
                          <div>
                            <p>
                              Know who is being affected by crashes
                               
                            </p>
                          </div>
                          <a
                            className="skip-btn btn btn-default"
                            onClick={[Function]}
                          >
                            Skip
                          </a>
                        </div>
                      </li>
                    </TodoItem>
                    <TodoItem
                      key="6"
                      onSkip={[Function]}
                      task={
                        Object {
                          "description": "See what releases are generating errors",
                          "detailedDescription": "Set up commits for additional context when determining the cause of an issue
          e.g. suggested owners and resolve issues via commit messages",
                          "display": true,
                          "featureLocation": "project",
                          "location": "settings/release-tracking/",
                          "prereq": Array [
                            1,
                            2,
                          ],
                          "skippable": true,
                          "task": 6,
                          "title": "Set up release tracking",
                        }
                      }
                    >
                      <li
                        className=""
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <div
                          className="todo-content"
                        >
                          <div
                            className="ob-checkbox"
                          />
                          <a
                            href="/organizations/org-slug/projects/choose/?onboarding=1&task=6"
                            onClick={[Function]}
                          >
                            <h4>
                              Set up release tracking
                            </h4>
                          </a>
                          <div>
                            <p>
                              See what releases are generating errors
                               
                            </p>
                          </div>
                          <a
                            className="skip-btn btn btn-default"
                            onClick={[Function]}
                          >
                            Skip
                          </a>
                        </div>
                      </li>
                    </TodoItem>
                    <TodoItem
                      key="7"
                      onSkip={[Function]}
                      task={
                        Object {
                          "description": "Deminify javascript stacktraces",
                          "detailedDescription": "View source code context obtained from stack traces in their
          original untransformed form, which is particularly useful for debugging minified code",
                          "display": true,
                          "featureLocation": "absolute",
                          "location": "https://docs.sentry.io/hosted/clients/javascript/sourcemaps/",
                          "prereq": Array [
                            1,
                            2,
                          ],
                          "skippable": true,
                          "task": 7,
                          "title": "Upload sourcemaps",
                        }
                      }
                    >
                      <li
                        className=""
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <div
                          className="todo-content"
                        >
                          <div
                            className="ob-checkbox"
                          />
                          <a
                            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/"
                            onClick={[Function]}
                          >
                            <h4>
                              Upload sourcemaps
                            </h4>
                          </a>
                          <div>
                            <p>
                              Deminify javascript stacktraces
                               
                            </p>
                          </div>
                          <a
                            className="skip-btn btn btn-default"
                            onClick={[Function]}
                          >
                            Skip
                          </a>
                        </div>
                      </li>
                    </TodoItem>
                  </ul>
                </div>
              </div>
            </TodoList>
          </div>
        </SidebarPanelBody>
      </div>
    </Component>
  </StyledSidebarPanel>
</SidebarPanel>
`;

exports[`Sidebar renders without org and router 1`] = `
<OrgAndUserMenu
  innerRef={[Function]}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  org={null}
>
  <div
    className="css-1d11loe-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-1fpw0f9-UserSummary e1fowdfw1"
        to="/settings/account/details/"
      >
        <Link
          className="css-1fpw0f9-UserSummary e1fowdfw1"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-1fpw0f9-UserSummary e1fowdfw1"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-otlbo1-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                      hideEmail={false}
                      useLink={true}
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1tz319h-UserBadgeNoOverflow e1fowdfw2"
                      >
                        <div
                          className="e1fowdfw2 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
                        >
                          <StyledAvatar
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <Component
                              className="css-1u6j7yz-StyledAvatar ev46mzr4"
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <Avatar
                                className="css-1u6j7yz-StyledAvatar ev46mzr4"
                                hasTooltip={false}
                                size={32}
                                user={
                                  Object {
                                    "email": "foo@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Foo Bar",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "permissions": Set {},
                                    "username": "foo@example.com",
                                  }
                                }
                              >
                                <UserAvatar
                                  className="css-1u6j7yz-StyledAvatar ev46mzr4"
                                  gravatar={false}
                                  hasTooltip={false}
                                  size={32}
                                  user={
                                    Object {
                                      "email": "foo@example.com",
                                      "flags": Object {
                                        "newsletter_consent_prompt": false,
                                      },
                                      "hasPasswordAuth": true,
                                      "id": "1",
                                      "isAuthenticated": true,
                                      "name": "Foo Bar",
                                      "options": Object {
                                        "timezone": "UTC",
                                      },
                                      "permissions": Set {},
                                      "username": "foo@example.com",
                                    }
                                  }
                                >
                                  <BaseAvatar
                                    className="css-1u6j7yz-StyledAvatar ev46mzr4"
                                    gravatarId="foo@example.com"
                                    hasTooltip={false}
                                    letterId="foo@example.com"
                                    round={true}
                                    size={32}
                                    style={Object {}}
                                    title="Foo Bar"
                                    tooltip="Foo Bar (foo@example.com)"
                                    type="letter_avatar"
                                    uploadPath="avatar"
                                  >
                                    <Tooltip
                                      disabled={true}
                                      title="Foo Bar (foo@example.com)"
                                    >
                                      <StyledBaseAvatar
                                        className="avatar css-1u6j7yz-StyledAvatar ev46mzr4"
                                        style={
                                          Object {
                                            "height": "32px",
                                            "width": "32px",
                                          }
                                        }
                                      >
                                        <span
                                          className="avatar ev46mzr4 css-1dbvbxh-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
                                          style={
                                            Object {
                                              "height": "32px",
                                              "width": "32px",
                                            }
                                          }
                                        >
                                          <LetterAvatar
                                            displayName="Foo Bar"
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <Svg
                                              round={true}
                                              viewBox="0 0 120 120"
                                            >
                                              <svg
                                                className="css-1r4mnb9-Svg e1knxa8x0"
                                                viewBox="0 0 120 120"
                                              >
                                                <rect
                                                  fill="#315cac"
                                                  height="120"
                                                  rx="15"
                                                  ry="15"
                                                  width="120"
                                                  x="0"
                                                  y="0"
                                                />
                                                <text
                                                  fill="#FFFFFF"
                                                  fontSize="65"
                                                  style={
                                                    Object {
                                                      "dominantBaseline": "central",
                                                    }
                                                  }
                                                  textAnchor="middle"
                                                  x="50%"
                                                  y="50%"
                                                >
                                                  FB
                                                </text>
                                              </svg>
                                            </Svg>
                                          </LetterAvatar>
                                        </span>
                                      </StyledBaseAvatar>
                                    </Tooltip>
                                  </BaseAvatar>
                                </UserAvatar>
                              </Avatar>
                            </Component>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-9l6b2w-StyledNameAndEmail ev46mzr1"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <Component
                                  className="css-12fcmnb-StyledName ev46mzr3"
                                  hideEmail={false}
                                >
                                  <span
                                    className="css-12fcmnb-StyledName ev46mzr3"
                                  >
                                    Foo Bar
                                  </span>
                                </Component>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-3w2sfq-StyledEmail ev46mzr2"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <MenuItemLink
          to="/settings/account/"
        >
          <Component
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            to="/settings/account/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              to="/settings/account/"
            >
              <Link
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <MenuItemLink
          to="/settings/account/api/"
        >
          <Component
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            to="/settings/account/api/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              to="/settings/account/api/"
            >
              <Link
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        href="/auth/logout/"
      >
        <MenuItemLink
          href="/auth/logout/"
        >
          <Component
            className="css-1vsrn4x-MenuItemLink ebifsjx1"
            href="/auth/logout/"
          >
            <Link
              className="css-1vsrn4x-MenuItemLink ebifsjx1"
              href="/auth/logout/"
            >
              <a
                className="css-1vsrn4x-MenuItemLink ebifsjx1"
                href="/auth/logout/"
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
                  >
                    Sign out
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;
