// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar SidebarDropdown can open "Switch Organization" sub-menu 1`] = `
<SwitchOrganizationMenu
  data-test-id="sidebar-switch-org-menu"
  isStyled={true}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-pm8679-SwitchOrganizationMenu-SidebarDropdownMenu ejspo4a4"
    data-test-id="sidebar-switch-org-menu"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <OrganizationList>
      <div
        className="css-1tlc4cl-OrganizationList ejspo4a5"
      />
    </OrganizationList>
    <SidebarMenuItem
      data-test-id="sidebar-create-org"
      style={
        Object {
          "alignItems": "center",
        }
      }
      to="/organizations/new/"
    >
      <MenuItemLink
        data-test-id="sidebar-create-org"
        style={
          Object {
            "alignItems": "center",
          }
        }
        to="/organizations/new/"
      >
        <Component
          className="css-1ofty7m-MenuItemLink e1ru2gxu1"
          data-test-id="sidebar-create-org"
          style={
            Object {
              "alignItems": "center",
            }
          }
          to="/organizations/new/"
        >
          <Link
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            data-test-id="sidebar-create-org"
            style={
              Object {
                "alignItems": "center",
              }
            }
            to="/organizations/new/"
          >
            <Link
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              data-test-id="sidebar-create-org"
              onlyActiveOnIndex={false}
              style={
                Object {
                  "alignItems": "center",
                }
              }
              to="/organizations/new/"
            >
              <a
                className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                data-test-id="sidebar-create-org"
                onClick={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                  >
                    <MenuItemLabelWithIcon>
                      <span
                        className="css-1l4bf1b-MenuItemLabelWithIcon ejspo4a1"
                      >
                        <AddIcon
                          src="icon-circle-add"
                        >
                          <ForwardRef
                            className="css-1tqex7n-InlineSvg-AddIcon ejspo4a0"
                            src="icon-circle-add"
                          >
                            <svg
                              className="css-1tqex7n-InlineSvg-AddIcon ejspo4a0"
                              height="1em"
                              viewBox={Object {}}
                              width="1em"
                            >
                              <use
                                href="#test"
                                xlinkHref="#test"
                              />
                            </svg>
                          </ForwardRef>
                        </AddIcon>
                        <span>
                          Create a new organization
                        </span>
                      </span>
                    </MenuItemLabelWithIcon>
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
  </div>
</SwitchOrganizationMenu>
`;

exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
<OrgAndUserMenu
  isStyled={true}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  org={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
>
  <div
    className="css-yvb5my-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <SidebarOrgSummary
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <OrgSummary>
        <div
          className="css-epf2t7-OrgSummary e1dvf3yd0"
        >
          <EmotionCssPropInternal
            __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
            css={
              Object {
                "name": "sev7b4-SidebarOrgSummary",
                "styles": "flex-shrink:0;;label:SidebarOrgSummary;",
              }
            }
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            size={36}
          >
            <OrganizationAvatar
              className="css-sev7b4-SidebarOrgSummary"
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "org:integrations",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              size={36}
            >
              <BaseAvatar
                className="css-sev7b4-SidebarOrgSummary"
                hasTooltip={false}
                letterId="org-slug"
                round={false}
                size={36}
                style={Object {}}
                title="org slug"
                tooltip="org-slug"
                type="letter_avatar"
                uploadPath="organization-avatar"
              >
                <Tooltip
                  containerDisplayMode="inline-block"
                  disabled={true}
                  position="top"
                  title="org-slug"
                >
                  <StyledBaseAvatar
                    className="avatar css-sev7b4-SidebarOrgSummary"
                    loaded={true}
                    round={false}
                    style={
                      Object {
                        "height": "36px",
                        "width": "36px",
                      }
                    }
                  >
                    <span
                      className="avatar css-1cov5tn-StyledBaseAvatar-SidebarOrgSummary e147uwb0"
                      style={
                        Object {
                          "height": "36px",
                          "width": "36px",
                        }
                      }
                    >
                      <LetterAvatar
                        displayName="org slug"
                        identifier="org-slug"
                        round={false}
                      >
                        <Component
                          className="css-1ei2ksv-LetterAvatar e12lgfev0"
                          displayName="org slug"
                          identifier="org-slug"
                          round={false}
                        >
                          <svg
                            className="css-1ei2ksv-LetterAvatar e12lgfev0"
                            viewBox="0 0 120 120"
                          >
                            <rect
                              fill="#4674ca"
                              height="120"
                              rx="15"
                              ry="15"
                              width="120"
                              x="0"
                              y="0"
                            />
                            <text
                              fill="#FFFFFF"
                              fontSize="65"
                              style={
                                Object {
                                  "dominantBaseline": "central",
                                }
                              }
                              textAnchor="middle"
                              x="50%"
                              y="50%"
                            >
                              OS
                            </text>
                          </svg>
                        </Component>
                      </LetterAvatar>
                    </span>
                  </StyledBaseAvatar>
                </Tooltip>
              </BaseAvatar>
            </OrganizationAvatar>
          </EmotionCssPropInternal>
          <Details>
            <div
              className="css-18lie9u-Details e1dvf3yd3"
            >
              <SummaryOrgName>
                <div
                  className="css-1o68u16-SummaryOrgName e1dvf3yd1"
                >
                  Organization Name
                </div>
              </SummaryOrgName>
            </div>
          </Details>
        </div>
      </OrgSummary>
    </SidebarOrgSummary>
    <SidebarMenuItem
      to="/settings/org-slug/"
    >
      <MenuItemLink
        to="/settings/org-slug/"
      >
        <Component
          className="css-1ofty7m-MenuItemLink e1ru2gxu1"
          to="/settings/org-slug/"
        >
          <Link
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            to="/settings/org-slug/"
          >
            <Link
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/"
            >
              <a
                className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                  >
                    Organization settings
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      to="/settings/org-slug/teams/"
    >
      <MenuItemLink
        to="/settings/org-slug/teams/"
      >
        <Component
          className="css-1ofty7m-MenuItemLink e1ru2gxu1"
          to="/settings/org-slug/teams/"
        >
          <Link
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            to="/settings/org-slug/teams/"
          >
            <Link
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/teams/"
            >
              <a
                className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                  >
                    Teams
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <Hook
      name="sidebar:organization-dropdown-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:organization-dropdown-menu) />
    </Hook>
    <SidebarMenuItem>
      <MenuItemLink>
        <Component
          className="css-wwghpc-MenuItemLink e1ru2gxu1"
        >
          <div
            className="css-wwghpc-MenuItemLink e1ru2gxu1"
            tabIndex="0"
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel e1ru2gxu0"
              >
                <withOrganizations(SwitchOrganization)
                  canCreateOrganization={false}
                >
                  <SwitchOrganization
                    canCreateOrganization={false}
                    organizations={Array []}
                    organizationsLoading={true}
                  >
                    <DropdownMenu
                      closeOnEscape={true}
                      isNestedDropdown={true}
                      keepMenuOpen={false}
                    >
                      <SwitchOrganizationMenuActor
                        data-test-id="sidebar-switch-org"
                        isStyled={true}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "outline": "none",
                          }
                        }
                      >
                        <span
                          className="css-lpolsh-SwitchOrganizationMenuActor ejspo4a3"
                          data-test-id="sidebar-switch-org"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "outline": "none",
                            }
                          }
                        >
                          Switch organization
                          <SubMenuCaret>
                            <span
                              className="css-3ur4f5-SubMenuCaret ejspo4a2"
                            >
                              <i
                                className="icon-arrow-right"
                              />
                            </span>
                          </SubMenuCaret>
                        </span>
                      </SwitchOrganizationMenuActor>
                    </DropdownMenu>
                  </SwitchOrganization>
                </withOrganizations(SwitchOrganization)>
              </span>
            </MenuItemLabel>
          </div>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <Divider>
      <div
        className="css-10onrkb-Divider e18ox4wg0"
      />
    </Divider>
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-1x4lcee-UserSummary e1fowdfw1"
        to="/settings/account/details/"
      >
        <Link
          className="css-1x4lcee-UserSummary e1fowdfw1"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-1x4lcee-UserSummary e1fowdfw1"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      hideEmail={false}
                      useLink={true}
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      >
                        <div
                          className="e1fowdfw2 css-qu415y-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
                        >
                          <StyledAvatar
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <Component
                              className="css-593o0g-StyledAvatar ev46mzr4"
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <UserAvatar
                                className="css-593o0g-StyledAvatar ev46mzr4"
                                gravatar={false}
                                size={32}
                                user={
                                  Object {
                                    "email": "foo@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Foo Bar",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "permissions": Set {},
                                    "username": "foo@example.com",
                                  }
                                }
                              >
                                <BaseAvatar
                                  className="css-593o0g-StyledAvatar ev46mzr4"
                                  gravatarId="foo@example.com"
                                  hasTooltip={false}
                                  letterId="foo@example.com"
                                  round={true}
                                  size={32}
                                  style={Object {}}
                                  title="Foo Bar"
                                  tooltip="Foo Bar (foo@example.com)"
                                  type="letter_avatar"
                                  uploadId=""
                                  uploadPath="avatar"
                                >
                                  <Tooltip
                                    containerDisplayMode="inline-block"
                                    disabled={true}
                                    position="top"
                                    title="Foo Bar (foo@example.com)"
                                  >
                                    <StyledBaseAvatar
                                      className="avatar css-593o0g-StyledAvatar ev46mzr4"
                                      loaded={true}
                                      round={true}
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                    >
                                      <span
                                        className="avatar ev46mzr4 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                        style={
                                          Object {
                                            "height": "32px",
                                            "width": "32px",
                                          }
                                        }
                                      >
                                        <LetterAvatar
                                          displayName="Foo Bar"
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <Component
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            displayName="Foo Bar"
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <svg
                                              className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                              viewBox="0 0 120 120"
                                            >
                                              <rect
                                                fill="#315cac"
                                                height="120"
                                                rx="15"
                                                ry="15"
                                                width="120"
                                                x="0"
                                                y="0"
                                              />
                                              <text
                                                fill="#FFFFFF"
                                                fontSize="65"
                                                style={
                                                  Object {
                                                    "dominantBaseline": "central",
                                                  }
                                                }
                                                textAnchor="middle"
                                                x="50%"
                                                y="50%"
                                              >
                                                FB
                                              </text>
                                            </svg>
                                          </Component>
                                        </LetterAvatar>
                                      </span>
                                    </StyledBaseAvatar>
                                  </Tooltip>
                                </BaseAvatar>
                              </UserAvatar>
                            </Component>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail ev46mzr1"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <Component
                                  className="css-19h2nhd-StyledName ev46mzr3"
                                  hideEmail={false}
                                >
                                  <span
                                    className="css-19h2nhd-StyledName ev46mzr3"
                                  >
                                    Foo Bar
                                  </span>
                                </Component>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail ev46mzr2"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <MenuItemLink
          to="/settings/account/"
        >
          <Component
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            to="/settings/account/"
          >
            <Link
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              to="/settings/account/"
            >
              <Link
                className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <MenuItemLink
          to="/settings/account/api/"
        >
          <Component
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            to="/settings/account/api/"
          >
            <Link
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              to="/settings/account/api/"
            >
              <Link
                className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <MenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <Component
            className="css-wwghpc-MenuItemLink e1ru2gxu1"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-wwghpc-MenuItemLink e1ru2gxu1"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex="0"
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;

exports[`Sidebar SidebarHelp can toggle help menu 1`] = `
<HelpMenu
  isStyled={true}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-jlq0c6-HelpMenu-SidebarDropdownMenu e1q2bb9t2"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <Hook
      name="sidebar:help-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:help-menu) />
    </Hook>
    <SidebarMenuItem
      onClick={[Function]}
    >
      <MenuItemLink
        onClick={[Function]}
      >
        <Component
          className="css-wwghpc-MenuItemLink e1ru2gxu1"
          onClick={[Function]}
        >
          <div
            className="css-wwghpc-MenuItemLink e1ru2gxu1"
            onClick={[Function]}
            tabIndex="0"
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel e1ru2gxu0"
              >
                Search Docs and FAQs
              </span>
            </MenuItemLabel>
          </div>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://forum.sentry.io/"
      target="_blank"
    >
      <MenuItemLink
        href="https://forum.sentry.io/"
        target="_blank"
      >
        <Component
          className="css-1ofty7m-MenuItemLink e1ru2gxu1"
          href="https://forum.sentry.io/"
          target="_blank"
        >
          <Link
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            href="https://forum.sentry.io/"
            target="_blank"
          >
            <a
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              href="https://forum.sentry.io/"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                >
                  Community Discussions
                </span>
              </MenuItemLabel>
            </a>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://status.sentry.io/"
      target="_blank"
    >
      <MenuItemLink
        href="https://status.sentry.io/"
        target="_blank"
      >
        <Component
          className="css-1ofty7m-MenuItemLink e1ru2gxu1"
          href="https://status.sentry.io/"
          target="_blank"
        >
          <Link
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            href="https://status.sentry.io/"
            target="_blank"
          >
            <a
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              href="https://status.sentry.io/"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                >
                  Service Status
                </span>
              </MenuItemLabel>
            </a>
          </Link>
        </Component>
      </MenuItemLink>
    </SidebarMenuItem>
  </div>
</HelpMenu>
`;

exports[`Sidebar SidebarPanel can display Broadcasts panel and mark as seen 1`] = `
<SidebarPanelItem
  hasSeen={false}
  key="8"
  link="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
  message="Source maps are JSON files that contain information on how to map your transpiled source code back to their original source."
  title="Learn about Source Maps"
>
  <SidebarPanelItemRoot>
    <div
      className="css-lce7u9-SidebarPanelItemRoot ekutvbl0"
    >
      <Title
        hasSeen={false}
      >
        <div
          className="css-1fgxw89-Title ekutvbl2"
        >
          Learn about Source Maps
        </div>
      </Title>
      <Message>
        <div
          className="css-kuchfm-Text-Message ekutvbl4"
        >
          Source maps are JSON files that contain information on how to map your transpiled source code back to their original source.
        </div>
      </Message>
      <Text>
        <div
          className="css-166h1v-Text ekutvbl3"
        >
          <ForwardRef
            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
          >
            <a
              href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
              rel="noreferrer noopener"
              target="_blank"
            >
              Read More
            </a>
          </ForwardRef>
        </div>
      </Text>
    </div>
  </SidebarPanelItemRoot>
</SidebarPanelItem>
`;

exports[`Sidebar SidebarPanel can show Incidents in Sidebar Panel 1`] = `
<IncidentList
  className="incident-list"
>
  <ul
    className="incident-list css-1iut4k0-IncidentList eglisrw0"
  >
    <IncidentItem
      key="1"
    >
      <li
        className="css-16z7ejm-IncidentItem eglisrw1"
      >
        <IncidentTitle>
          <div
            className="css-c7gclf-IncidentTitle eglisrw2"
          >
            Test Incident
          </div>
        </IncidentTitle>
        <div>
          <StatusHeader>
            <div
              className="css-1p5jdbq-StatusHeader eglisrw3"
            >
              Latest updates:
            </div>
          </StatusHeader>
          <StatusList>
            <ul
              className="css-xjcuzc-StatusList eglisrw4"
            >
              <StatusItem
                key="0"
              >
                <li
                  className="css-y8e5o2-StatusItem eglisrw5"
                >
                  First Update
                </li>
              </StatusItem>
              <StatusItem
                key="1"
              >
                <li
                  className="css-y8e5o2-StatusItem eglisrw5"
                >
                  Second Update
                </li>
              </StatusItem>
            </ul>
          </StatusList>
        </div>
        <div>
          <Button
            align="center"
            disabled={false}
            external={true}
            href="https://status.sentry.io"
            size="small"
          >
            <StyledButton
              aria-disabled={false}
              aria-label="Learn more"
              disabled={false}
              external={true}
              href="https://status.sentry.io"
              onClick={[Function]}
              role="button"
              size="small"
            >
              <ForwardRef
                aria-disabled={false}
                aria-label="Learn more"
                className="css-12ogwys-StyledButton edwq9my0"
                disabled={false}
                external={true}
                href="https://status.sentry.io"
                onClick={[Function]}
                role="button"
                size="small"
              >
                <ForwardRef
                  aria-disabled={false}
                  aria-label="Learn more"
                  className="css-12ogwys-StyledButton edwq9my0"
                  href="https://status.sentry.io"
                  onClick={[Function]}
                  role="button"
                  size="small"
                >
                  <a
                    aria-disabled={false}
                    aria-label="Learn more"
                    className="css-12ogwys-StyledButton edwq9my0"
                    href="https://status.sentry.io"
                    onClick={[Function]}
                    rel="noreferrer noopener"
                    role="button"
                    size="small"
                    target="_blank"
                  >
                    <ButtonLabel
                      align="center"
                      size="small"
                    >
                      <Component
                        align="center"
                        className="css-19gcr2f-ButtonLabel edwq9my1"
                        size="small"
                      >
                        <span
                          className="css-19gcr2f-ButtonLabel edwq9my1"
                        >
                          Learn more
                        </span>
                      </Component>
                    </ButtonLabel>
                  </a>
                </ForwardRef>
              </ForwardRef>
            </StyledButton>
          </Button>
        </div>
      </li>
    </IncidentItem>
  </ul>
</IncidentList>
`;

exports[`Sidebar can have onboarding feature 1`] = `
<SidebarPanel
  collapsed={false}
  hidePanel={[Function]}
  title="Getting Started with Sentry"
>
  <StyledSidebarPanel
    collapsed={false}
  >
    <Component
      className="css-kp1td3-StyledSidebarPanel e1cvaskl0"
      collapsed={false}
    >
      <div
        className="css-kp1td3-StyledSidebarPanel e1cvaskl0"
      >
        <SidebarPanelHeader>
          <div
            className="css-svlib3-SidebarPanelHeader e1cvaskl1"
          >
            <PanelClose
              onClick={[Function]}
            >
              <a
                className="css-f8nv6a-PanelClose e1cvaskl3"
                onClick={[Function]}
              >
                <span
                  className="icon-close"
                />
              </a>
            </PanelClose>
            <Title>
              <div
                className="css-17el80e-Title e1cvaskl4"
              >
                Getting Started with Sentry
              </div>
            </Title>
          </div>
        </SidebarPanelHeader>
        <SidebarPanelBody>
          <div
            className="css-1jf6thw-SidebarPanelBody e1cvaskl2"
          >
            <withApi(WithOrganizationMockWrapper)>
              <WithOrganizationMockWrapper
                api={
                  Client {
                    "_chain": [Function],
                    "_wrapRequest": [Function],
                    "bulkUpdate": [Function],
                    "handleRequestError": [Function],
                    "hasProjectBeenRenamed": [Function],
                  }
                }
              >
                <TodoList
                  api={
                    Client {
                      "_chain": [Function],
                      "_wrapRequest": [Function],
                      "bulkUpdate": [Function],
                      "handleRequestError": [Function],
                      "hasProjectBeenRenamed": [Function],
                    }
                  }
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "org:integrations",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "active",
                        "name": "active",
                      },
                      "teams": Array [],
                    }
                  }
                >
                  <StyledTodoList>
                    <ul
                      className="css-1vmqa5q-StyledTodoList e1l1x1b40"
                    >
                      <WithOrganizationMockWrapper
                        key="1"
                        onSkip={[Function]}
                        task={
                          Object {
                            "description": "Create your first Sentry project",
                            "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                            "display": true,
                            "featureLocation": "organization",
                            "location": "projects/new/",
                            "prereq": Array [],
                            "skippable": false,
                            "task": 1,
                            "title": "Create a project",
                          }
                        }
                      >
                        <TodoItem
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "featureLocation": "organization",
                              "location": "projects/new/",
                              "prereq": Array [],
                              "skippable": false,
                              "task": 1,
                              "title": "Create a project",
                            }
                          }
                        >
                          <Item
                            onMouseOut={[Function]}
                            onMouseOver={[Function]}
                          >
                            <li
                              className="css-7hhgol-Item e1a4o5470"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <Content
                                blur={false}
                              >
                                <div
                                  className="css-9av8oo-Content e1a4o5471"
                                >
                                  <Checkbox>
                                    <div
                                      className="css-hygfta-Checkbox e1a4o5472"
                                    />
                                  </Checkbox>
                                  <StyledLink
                                    data-test-id={1}
                                    href="/organizations/org-slug/projects/new/"
                                    onClick={[Function]}
                                  >
                                    <a
                                      className="css-1scniln-StyledLink e1a4o5475"
                                      data-test-id={1}
                                      href="/organizations/org-slug/projects/new/"
                                      onClick={[Function]}
                                    >
                                      <ItemHeader>
                                        <h4
                                          className="css-13fewgq-ItemHeader e1a4o5476"
                                        >
                                          Create a project
                                        </h4>
                                      </ItemHeader>
                                    </a>
                                  </StyledLink>
                                  <Description>
                                    <p
                                      className="css-1l0q5ef-Description e1a4o5474"
                                    >
                                      Create your first Sentry project
                                    </p>
                                  </Description>
                                  <SkipButton
                                    align="center"
                                    disabled={false}
                                    hide={true}
                                    onClick={[Function]}
                                    size="xsmall"
                                  >
                                    <Button
                                      align="center"
                                      className="css-13i4fqu-SkipButton e1a4o5477"
                                      disabled={false}
                                      hide={true}
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <StyledButton
                                        aria-disabled={false}
                                        aria-label="Skip task"
                                        className="css-13i4fqu-SkipButton e1a4o5477"
                                        disabled={false}
                                        hide={true}
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ForwardRef
                                          aria-disabled={false}
                                          aria-label="Skip task"
                                          className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                          disabled={false}
                                          hide={true}
                                          onClick={[Function]}
                                          role="button"
                                          size="xsmall"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <ButtonLabel
                                              align="center"
                                              size="xsmall"
                                            >
                                              <Component
                                                align="center"
                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                size="xsmall"
                                              >
                                                <span
                                                  className="css-cmi7y3-ButtonLabel edwq9my1"
                                                >
                                                  Skip task
                                                </span>
                                              </Component>
                                            </ButtonLabel>
                                          </button>
                                        </ForwardRef>
                                      </StyledButton>
                                    </Button>
                                  </SkipButton>
                                </div>
                              </Content>
                              <WithOrganizationMockWrapper
                                dismiss={[Function]}
                                hide={true}
                                onSkip={[Function]}
                                task={1}
                              >
                                <Confirmation
                                  dismiss={[Function]}
                                  hide={true}
                                  onSkip={[Function]}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  task={1}
                                >
                                  <Container
                                    hide={true}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-1r2yi7q-Container e18z0fp40"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e18z0fp41"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <Button
                                          align="center"
                                          disabled={false}
                                          priority="link"
                                          to="/settings/org-slug/support/"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Go to Support"
                                            disabled={false}
                                            onClick={[Function]}
                                            priority="link"
                                            role="button"
                                            to="/settings/org-slug/support/"
                                          >
                                            <ForwardRef
                                              aria-disabled={false}
                                              aria-label="Go to Support"
                                              className="css-1ilrgbi-StyledButton edwq9my0"
                                              disabled={false}
                                              onClick={[Function]}
                                              priority="link"
                                              role="button"
                                              to="/settings/org-slug/support/"
                                            >
                                              <Link
                                                aria-disabled={false}
                                                aria-label="Go to Support"
                                                className="css-1ilrgbi-StyledButton edwq9my0"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                role="button"
                                                style={Object {}}
                                                to="/settings/org-slug/support/"
                                              >
                                                <a
                                                  aria-disabled={false}
                                                  aria-label="Go to Support"
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  onClick={[Function]}
                                                  role="button"
                                                  style={Object {}}
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    priority="link"
                                                  >
                                                    <Component
                                                      align="center"
                                                      className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      priority="link"
                                                    >
                                                      <span
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      >
                                                        Go to Support
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </a>
                                              </Link>
                                            </ForwardRef>
                                          </StyledButton>
                                        </Button>
                                         
                                        · 
                                        <a
                                          onClick={[Function]}
                                        >
                                          Skip
                                        </a>
                                      </div>
                                    </div>
                                  </Container>
                                </Confirmation>
                              </WithOrganizationMockWrapper>
                            </li>
                          </Item>
                        </TodoItem>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="2"
                        onSkip={[Function]}
                        task={
                          Object {
                            "description": "Install Sentry's client",
                            "detailedDescription": "Choose your platform and send an event.",
                            "display": true,
                            "featureLocation": "project",
                            "location": "settings/install/",
                            "prereq": Array [
                              1,
                            ],
                            "skippable": false,
                            "task": 2,
                            "title": "Send your first event",
                          }
                        }
                      >
                        <TodoItem
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "description": "Install Sentry's client",
                              "detailedDescription": "Choose your platform and send an event.",
                              "display": true,
                              "featureLocation": "project",
                              "location": "settings/install/",
                              "prereq": Array [
                                1,
                              ],
                              "skippable": false,
                              "task": 2,
                              "title": "Send your first event",
                            }
                          }
                        >
                          <Item
                            onMouseOut={[Function]}
                            onMouseOver={[Function]}
                          >
                            <li
                              className="css-7hhgol-Item e1a4o5470"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <Content
                                blur={false}
                              >
                                <div
                                  className="css-9av8oo-Content e1a4o5471"
                                >
                                  <Checkbox>
                                    <div
                                      className="css-hygfta-Checkbox e1a4o5472"
                                    />
                                  </Checkbox>
                                  <StyledLink
                                    data-test-id={2}
                                    href="/organizations/org-slug/projects/choose/?onboarding=1&task=2"
                                    onClick={[Function]}
                                  >
                                    <a
                                      className="css-1scniln-StyledLink e1a4o5475"
                                      data-test-id={2}
                                      href="/organizations/org-slug/projects/choose/?onboarding=1&task=2"
                                      onClick={[Function]}
                                    >
                                      <ItemHeader>
                                        <h4
                                          className="css-13fewgq-ItemHeader e1a4o5476"
                                        >
                                          Send your first event
                                        </h4>
                                      </ItemHeader>
                                    </a>
                                  </StyledLink>
                                  <Description>
                                    <p
                                      className="css-1l0q5ef-Description e1a4o5474"
                                    >
                                      Install Sentry's client
                                    </p>
                                  </Description>
                                  <SkipButton
                                    align="center"
                                    disabled={false}
                                    hide={true}
                                    onClick={[Function]}
                                    size="xsmall"
                                  >
                                    <Button
                                      align="center"
                                      className="css-13i4fqu-SkipButton e1a4o5477"
                                      disabled={false}
                                      hide={true}
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <StyledButton
                                        aria-disabled={false}
                                        aria-label="Skip task"
                                        className="css-13i4fqu-SkipButton e1a4o5477"
                                        disabled={false}
                                        hide={true}
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ForwardRef
                                          aria-disabled={false}
                                          aria-label="Skip task"
                                          className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                          disabled={false}
                                          hide={true}
                                          onClick={[Function]}
                                          role="button"
                                          size="xsmall"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <ButtonLabel
                                              align="center"
                                              size="xsmall"
                                            >
                                              <Component
                                                align="center"
                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                size="xsmall"
                                              >
                                                <span
                                                  className="css-cmi7y3-ButtonLabel edwq9my1"
                                                >
                                                  Skip task
                                                </span>
                                              </Component>
                                            </ButtonLabel>
                                          </button>
                                        </ForwardRef>
                                      </StyledButton>
                                    </Button>
                                  </SkipButton>
                                </div>
                              </Content>
                              <WithOrganizationMockWrapper
                                dismiss={[Function]}
                                hide={true}
                                onSkip={[Function]}
                                task={2}
                              >
                                <Confirmation
                                  dismiss={[Function]}
                                  hide={true}
                                  onSkip={[Function]}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  task={2}
                                >
                                  <Container
                                    hide={true}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-1r2yi7q-Container e18z0fp40"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e18z0fp41"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <Button
                                          align="center"
                                          disabled={false}
                                          priority="link"
                                          to="/settings/org-slug/support/"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Go to Support"
                                            disabled={false}
                                            onClick={[Function]}
                                            priority="link"
                                            role="button"
                                            to="/settings/org-slug/support/"
                                          >
                                            <ForwardRef
                                              aria-disabled={false}
                                              aria-label="Go to Support"
                                              className="css-1ilrgbi-StyledButton edwq9my0"
                                              disabled={false}
                                              onClick={[Function]}
                                              priority="link"
                                              role="button"
                                              to="/settings/org-slug/support/"
                                            >
                                              <Link
                                                aria-disabled={false}
                                                aria-label="Go to Support"
                                                className="css-1ilrgbi-StyledButton edwq9my0"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                role="button"
                                                style={Object {}}
                                                to="/settings/org-slug/support/"
                                              >
                                                <a
                                                  aria-disabled={false}
                                                  aria-label="Go to Support"
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  onClick={[Function]}
                                                  role="button"
                                                  style={Object {}}
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    priority="link"
                                                  >
                                                    <Component
                                                      align="center"
                                                      className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      priority="link"
                                                    >
                                                      <span
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      >
                                                        Go to Support
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </a>
                                              </Link>
                                            </ForwardRef>
                                          </StyledButton>
                                        </Button>
                                         
                                        · 
                                        <a
                                          onClick={[Function]}
                                        >
                                          Skip
                                        </a>
                                      </div>
                                    </div>
                                  </Container>
                                </Confirmation>
                              </WithOrganizationMockWrapper>
                            </li>
                          </Item>
                        </TodoItem>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="3"
                        onSkip={[Function]}
                        task={
                          Object {
                            "description": "Bring your team aboard",
                            "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                            "display": true,
                            "featureLocation": "modal",
                            "location": [Function],
                            "prereq": Array [],
                            "skippable": true,
                            "task": 3,
                            "title": "Invite team members",
                          }
                        }
                      >
                        <TodoItem
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "description": "Bring your team aboard",
                              "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                              "display": true,
                              "featureLocation": "modal",
                              "location": [Function],
                              "prereq": Array [],
                              "skippable": true,
                              "task": 3,
                              "title": "Invite team members",
                            }
                          }
                        >
                          <Item
                            onMouseOut={[Function]}
                            onMouseOver={[Function]}
                          >
                            <li
                              className="css-7hhgol-Item e1a4o5470"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <Content
                                blur={false}
                              >
                                <div
                                  className="css-9av8oo-Content e1a4o5471"
                                >
                                  <Checkbox>
                                    <div
                                      className="css-hygfta-Checkbox e1a4o5472"
                                    />
                                  </Checkbox>
                                  <StyledLink
                                    data-test-id={3}
                                    onClick={[Function]}
                                  >
                                    <a
                                      className="css-1scniln-StyledLink e1a4o5475"
                                      data-test-id={3}
                                      onClick={[Function]}
                                    >
                                      <ItemHeader>
                                        <h4
                                          className="css-13fewgq-ItemHeader e1a4o5476"
                                        >
                                          Invite team members
                                        </h4>
                                      </ItemHeader>
                                    </a>
                                  </StyledLink>
                                  <Description>
                                    <p
                                      className="css-1l0q5ef-Description e1a4o5474"
                                    >
                                      Bring your team aboard
                                    </p>
                                  </Description>
                                  <SkipButton
                                    align="center"
                                    disabled={false}
                                    hide={true}
                                    onClick={[Function]}
                                    size="xsmall"
                                  >
                                    <Button
                                      align="center"
                                      className="css-13i4fqu-SkipButton e1a4o5477"
                                      disabled={false}
                                      hide={true}
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <StyledButton
                                        aria-disabled={false}
                                        aria-label="Skip task"
                                        className="css-13i4fqu-SkipButton e1a4o5477"
                                        disabled={false}
                                        hide={true}
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ForwardRef
                                          aria-disabled={false}
                                          aria-label="Skip task"
                                          className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                          disabled={false}
                                          hide={true}
                                          onClick={[Function]}
                                          role="button"
                                          size="xsmall"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <ButtonLabel
                                              align="center"
                                              size="xsmall"
                                            >
                                              <Component
                                                align="center"
                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                size="xsmall"
                                              >
                                                <span
                                                  className="css-cmi7y3-ButtonLabel edwq9my1"
                                                >
                                                  Skip task
                                                </span>
                                              </Component>
                                            </ButtonLabel>
                                          </button>
                                        </ForwardRef>
                                      </StyledButton>
                                    </Button>
                                  </SkipButton>
                                </div>
                              </Content>
                              <WithOrganizationMockWrapper
                                dismiss={[Function]}
                                hide={true}
                                onSkip={[Function]}
                                task={3}
                              >
                                <Confirmation
                                  dismiss={[Function]}
                                  hide={true}
                                  onSkip={[Function]}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  task={3}
                                >
                                  <Container
                                    hide={true}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-1r2yi7q-Container e18z0fp40"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e18z0fp41"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <Button
                                          align="center"
                                          disabled={false}
                                          priority="link"
                                          to="/settings/org-slug/support/"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Go to Support"
                                            disabled={false}
                                            onClick={[Function]}
                                            priority="link"
                                            role="button"
                                            to="/settings/org-slug/support/"
                                          >
                                            <ForwardRef
                                              aria-disabled={false}
                                              aria-label="Go to Support"
                                              className="css-1ilrgbi-StyledButton edwq9my0"
                                              disabled={false}
                                              onClick={[Function]}
                                              priority="link"
                                              role="button"
                                              to="/settings/org-slug/support/"
                                            >
                                              <Link
                                                aria-disabled={false}
                                                aria-label="Go to Support"
                                                className="css-1ilrgbi-StyledButton edwq9my0"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                role="button"
                                                style={Object {}}
                                                to="/settings/org-slug/support/"
                                              >
                                                <a
                                                  aria-disabled={false}
                                                  aria-label="Go to Support"
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  onClick={[Function]}
                                                  role="button"
                                                  style={Object {}}
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    priority="link"
                                                  >
                                                    <Component
                                                      align="center"
                                                      className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      priority="link"
                                                    >
                                                      <span
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      >
                                                        Go to Support
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </a>
                                              </Link>
                                            </ForwardRef>
                                          </StyledButton>
                                        </Button>
                                         
                                        · 
                                        <a
                                          onClick={[Function]}
                                        >
                                          Skip
                                        </a>
                                      </div>
                                    </div>
                                  </Container>
                                </Confirmation>
                              </WithOrganizationMockWrapper>
                            </li>
                          </Item>
                        </TodoItem>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="4"
                        onSkip={[Function]}
                        task={
                          Object {
                            "description": "Add Sentry to a second platform",
                            "detailedDescription": "Capture errors from both your front and back ends.",
                            "display": true,
                            "featureLocation": "organization",
                            "location": "projects/new/",
                            "prereq": Array [
                              1,
                              2,
                            ],
                            "skippable": true,
                            "task": 4,
                            "title": "Add a second platform",
                          }
                        }
                      >
                        <TodoItem
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "description": "Add Sentry to a second platform",
                              "detailedDescription": "Capture errors from both your front and back ends.",
                              "display": true,
                              "featureLocation": "organization",
                              "location": "projects/new/",
                              "prereq": Array [
                                1,
                                2,
                              ],
                              "skippable": true,
                              "task": 4,
                              "title": "Add a second platform",
                            }
                          }
                        >
                          <Item
                            onMouseOut={[Function]}
                            onMouseOver={[Function]}
                          >
                            <li
                              className="css-7hhgol-Item e1a4o5470"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <Content
                                blur={false}
                              >
                                <div
                                  className="css-9av8oo-Content e1a4o5471"
                                >
                                  <Checkbox>
                                    <div
                                      className="css-hygfta-Checkbox e1a4o5472"
                                    />
                                  </Checkbox>
                                  <StyledLink
                                    data-test-id={4}
                                    href="/organizations/org-slug/projects/new/"
                                    onClick={[Function]}
                                  >
                                    <a
                                      className="css-1scniln-StyledLink e1a4o5475"
                                      data-test-id={4}
                                      href="/organizations/org-slug/projects/new/"
                                      onClick={[Function]}
                                    >
                                      <ItemHeader>
                                        <h4
                                          className="css-13fewgq-ItemHeader e1a4o5476"
                                        >
                                          Add a second platform
                                        </h4>
                                      </ItemHeader>
                                    </a>
                                  </StyledLink>
                                  <Description>
                                    <p
                                      className="css-1l0q5ef-Description e1a4o5474"
                                    >
                                      Add Sentry to a second platform
                                    </p>
                                  </Description>
                                  <SkipButton
                                    align="center"
                                    disabled={false}
                                    hide={true}
                                    onClick={[Function]}
                                    size="xsmall"
                                  >
                                    <Button
                                      align="center"
                                      className="css-13i4fqu-SkipButton e1a4o5477"
                                      disabled={false}
                                      hide={true}
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <StyledButton
                                        aria-disabled={false}
                                        aria-label="Skip task"
                                        className="css-13i4fqu-SkipButton e1a4o5477"
                                        disabled={false}
                                        hide={true}
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ForwardRef
                                          aria-disabled={false}
                                          aria-label="Skip task"
                                          className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                          disabled={false}
                                          hide={true}
                                          onClick={[Function]}
                                          role="button"
                                          size="xsmall"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <ButtonLabel
                                              align="center"
                                              size="xsmall"
                                            >
                                              <Component
                                                align="center"
                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                size="xsmall"
                                              >
                                                <span
                                                  className="css-cmi7y3-ButtonLabel edwq9my1"
                                                >
                                                  Skip task
                                                </span>
                                              </Component>
                                            </ButtonLabel>
                                          </button>
                                        </ForwardRef>
                                      </StyledButton>
                                    </Button>
                                  </SkipButton>
                                </div>
                              </Content>
                              <WithOrganizationMockWrapper
                                dismiss={[Function]}
                                hide={true}
                                onSkip={[Function]}
                                task={4}
                              >
                                <Confirmation
                                  dismiss={[Function]}
                                  hide={true}
                                  onSkip={[Function]}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  task={4}
                                >
                                  <Container
                                    hide={true}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-1r2yi7q-Container e18z0fp40"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e18z0fp41"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <Button
                                          align="center"
                                          disabled={false}
                                          priority="link"
                                          to="/settings/org-slug/support/"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Go to Support"
                                            disabled={false}
                                            onClick={[Function]}
                                            priority="link"
                                            role="button"
                                            to="/settings/org-slug/support/"
                                          >
                                            <ForwardRef
                                              aria-disabled={false}
                                              aria-label="Go to Support"
                                              className="css-1ilrgbi-StyledButton edwq9my0"
                                              disabled={false}
                                              onClick={[Function]}
                                              priority="link"
                                              role="button"
                                              to="/settings/org-slug/support/"
                                            >
                                              <Link
                                                aria-disabled={false}
                                                aria-label="Go to Support"
                                                className="css-1ilrgbi-StyledButton edwq9my0"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                role="button"
                                                style={Object {}}
                                                to="/settings/org-slug/support/"
                                              >
                                                <a
                                                  aria-disabled={false}
                                                  aria-label="Go to Support"
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  onClick={[Function]}
                                                  role="button"
                                                  style={Object {}}
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    priority="link"
                                                  >
                                                    <Component
                                                      align="center"
                                                      className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      priority="link"
                                                    >
                                                      <span
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      >
                                                        Go to Support
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </a>
                                              </Link>
                                            </ForwardRef>
                                          </StyledButton>
                                        </Button>
                                         
                                        · 
                                        <a
                                          onClick={[Function]}
                                        >
                                          Skip
                                        </a>
                                      </div>
                                    </div>
                                  </Container>
                                </Confirmation>
                              </WithOrganizationMockWrapper>
                            </li>
                          </Item>
                        </TodoItem>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="5"
                        onSkip={[Function]}
                        task={
                          Object {
                            "description": "Know who is being affected by crashes",
                            "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                            "display": true,
                            "featureLocation": "absolute",
                            "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                            "prereq": Array [
                              1,
                              2,
                            ],
                            "skippable": true,
                            "task": 5,
                            "title": "Add user context",
                          }
                        }
                      >
                        <TodoItem
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "description": "Know who is being affected by crashes",
                              "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                              "display": true,
                              "featureLocation": "absolute",
                              "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                              "prereq": Array [
                                1,
                                2,
                              ],
                              "skippable": true,
                              "task": 5,
                              "title": "Add user context",
                            }
                          }
                        >
                          <Item
                            onMouseOut={[Function]}
                            onMouseOver={[Function]}
                          >
                            <li
                              className="css-7hhgol-Item e1a4o5470"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <Content
                                blur={false}
                              >
                                <div
                                  className="css-9av8oo-Content e1a4o5471"
                                >
                                  <Checkbox>
                                    <div
                                      className="css-hygfta-Checkbox e1a4o5472"
                                    />
                                  </Checkbox>
                                  <StyledLink
                                    data-test-id={5}
                                    href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
                                    onClick={[Function]}
                                  >
                                    <a
                                      className="css-1scniln-StyledLink e1a4o5475"
                                      data-test-id={5}
                                      href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
                                      onClick={[Function]}
                                    >
                                      <ItemHeader>
                                        <h4
                                          className="css-13fewgq-ItemHeader e1a4o5476"
                                        >
                                          Add user context
                                        </h4>
                                      </ItemHeader>
                                    </a>
                                  </StyledLink>
                                  <Description>
                                    <p
                                      className="css-1l0q5ef-Description e1a4o5474"
                                    >
                                      Know who is being affected by crashes
                                    </p>
                                  </Description>
                                  <SkipButton
                                    align="center"
                                    disabled={false}
                                    hide={true}
                                    onClick={[Function]}
                                    size="xsmall"
                                  >
                                    <Button
                                      align="center"
                                      className="css-13i4fqu-SkipButton e1a4o5477"
                                      disabled={false}
                                      hide={true}
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <StyledButton
                                        aria-disabled={false}
                                        aria-label="Skip task"
                                        className="css-13i4fqu-SkipButton e1a4o5477"
                                        disabled={false}
                                        hide={true}
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ForwardRef
                                          aria-disabled={false}
                                          aria-label="Skip task"
                                          className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                          disabled={false}
                                          hide={true}
                                          onClick={[Function]}
                                          role="button"
                                          size="xsmall"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <ButtonLabel
                                              align="center"
                                              size="xsmall"
                                            >
                                              <Component
                                                align="center"
                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                size="xsmall"
                                              >
                                                <span
                                                  className="css-cmi7y3-ButtonLabel edwq9my1"
                                                >
                                                  Skip task
                                                </span>
                                              </Component>
                                            </ButtonLabel>
                                          </button>
                                        </ForwardRef>
                                      </StyledButton>
                                    </Button>
                                  </SkipButton>
                                </div>
                              </Content>
                              <WithOrganizationMockWrapper
                                dismiss={[Function]}
                                hide={true}
                                onSkip={[Function]}
                                task={5}
                              >
                                <Confirmation
                                  dismiss={[Function]}
                                  hide={true}
                                  onSkip={[Function]}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  task={5}
                                >
                                  <Container
                                    hide={true}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-1r2yi7q-Container e18z0fp40"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e18z0fp41"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <Button
                                          align="center"
                                          disabled={false}
                                          priority="link"
                                          to="/settings/org-slug/support/"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Go to Support"
                                            disabled={false}
                                            onClick={[Function]}
                                            priority="link"
                                            role="button"
                                            to="/settings/org-slug/support/"
                                          >
                                            <ForwardRef
                                              aria-disabled={false}
                                              aria-label="Go to Support"
                                              className="css-1ilrgbi-StyledButton edwq9my0"
                                              disabled={false}
                                              onClick={[Function]}
                                              priority="link"
                                              role="button"
                                              to="/settings/org-slug/support/"
                                            >
                                              <Link
                                                aria-disabled={false}
                                                aria-label="Go to Support"
                                                className="css-1ilrgbi-StyledButton edwq9my0"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                role="button"
                                                style={Object {}}
                                                to="/settings/org-slug/support/"
                                              >
                                                <a
                                                  aria-disabled={false}
                                                  aria-label="Go to Support"
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  onClick={[Function]}
                                                  role="button"
                                                  style={Object {}}
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    priority="link"
                                                  >
                                                    <Component
                                                      align="center"
                                                      className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      priority="link"
                                                    >
                                                      <span
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      >
                                                        Go to Support
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </a>
                                              </Link>
                                            </ForwardRef>
                                          </StyledButton>
                                        </Button>
                                         
                                        · 
                                        <a
                                          onClick={[Function]}
                                        >
                                          Skip
                                        </a>
                                      </div>
                                    </div>
                                  </Container>
                                </Confirmation>
                              </WithOrganizationMockWrapper>
                            </li>
                          </Item>
                        </TodoItem>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="6"
                        onSkip={[Function]}
                        task={
                          Object {
                            "description": "See which releases cause errors",
                            "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                            "display": true,
                            "featureLocation": "project",
                            "location": "settings/release-tracking/",
                            "prereq": Array [
                              1,
                              2,
                            ],
                            "skippable": true,
                            "task": 6,
                            "title": "Set up release tracking",
                          }
                        }
                      >
                        <TodoItem
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "description": "See which releases cause errors",
                              "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                              "display": true,
                              "featureLocation": "project",
                              "location": "settings/release-tracking/",
                              "prereq": Array [
                                1,
                                2,
                              ],
                              "skippable": true,
                              "task": 6,
                              "title": "Set up release tracking",
                            }
                          }
                        >
                          <Item
                            onMouseOut={[Function]}
                            onMouseOver={[Function]}
                          >
                            <li
                              className="css-7hhgol-Item e1a4o5470"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <Content
                                blur={false}
                              >
                                <div
                                  className="css-9av8oo-Content e1a4o5471"
                                >
                                  <Checkbox>
                                    <div
                                      className="css-hygfta-Checkbox e1a4o5472"
                                    />
                                  </Checkbox>
                                  <StyledLink
                                    data-test-id={6}
                                    href="/organizations/org-slug/projects/choose/?onboarding=1&task=6"
                                    onClick={[Function]}
                                  >
                                    <a
                                      className="css-1scniln-StyledLink e1a4o5475"
                                      data-test-id={6}
                                      href="/organizations/org-slug/projects/choose/?onboarding=1&task=6"
                                      onClick={[Function]}
                                    >
                                      <ItemHeader>
                                        <h4
                                          className="css-13fewgq-ItemHeader e1a4o5476"
                                        >
                                          Set up release tracking
                                        </h4>
                                      </ItemHeader>
                                    </a>
                                  </StyledLink>
                                  <Description>
                                    <p
                                      className="css-1l0q5ef-Description e1a4o5474"
                                    >
                                      See which releases cause errors
                                    </p>
                                  </Description>
                                  <SkipButton
                                    align="center"
                                    disabled={false}
                                    hide={true}
                                    onClick={[Function]}
                                    size="xsmall"
                                  >
                                    <Button
                                      align="center"
                                      className="css-13i4fqu-SkipButton e1a4o5477"
                                      disabled={false}
                                      hide={true}
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <StyledButton
                                        aria-disabled={false}
                                        aria-label="Skip task"
                                        className="css-13i4fqu-SkipButton e1a4o5477"
                                        disabled={false}
                                        hide={true}
                                        onClick={[Function]}
                                        role="button"
                                        size="xsmall"
                                      >
                                        <ForwardRef
                                          aria-disabled={false}
                                          aria-label="Skip task"
                                          className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                          disabled={false}
                                          hide={true}
                                          onClick={[Function]}
                                          role="button"
                                          size="xsmall"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="e1a4o5477 css-1gw4trp-StyledButton-SkipButton edwq9my0"
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <ButtonLabel
                                              align="center"
                                              size="xsmall"
                                            >
                                              <Component
                                                align="center"
                                                className="css-cmi7y3-ButtonLabel edwq9my1"
                                                size="xsmall"
                                              >
                                                <span
                                                  className="css-cmi7y3-ButtonLabel edwq9my1"
                                                >
                                                  Skip task
                                                </span>
                                              </Component>
                                            </ButtonLabel>
                                          </button>
                                        </ForwardRef>
                                      </StyledButton>
                                    </Button>
                                  </SkipButton>
                                </div>
                              </Content>
                              <WithOrganizationMockWrapper
                                dismiss={[Function]}
                                hide={true}
                                onSkip={[Function]}
                                task={6}
                              >
                                <Confirmation
                                  dismiss={[Function]}
                                  hide={true}
                                  onSkip={[Function]}
                                  organization={
                                    Object {
                                      "access": Array [
                                        "org:read",
                                        "org:write",
                                        "org:admin",
                                        "org:integrations",
                                        "project:read",
                                        "project:write",
                                        "project:admin",
                                        "team:read",
                                        "team:write",
                                        "team:admin",
                                      ],
                                      "features": Array [],
                                      "id": "3",
                                      "name": "Organization Name",
                                      "onboardingTasks": Array [],
                                      "projects": Array [],
                                      "scrapeJavaScript": true,
                                      "slug": "org-slug",
                                      "status": Object {
                                        "id": "active",
                                        "name": "active",
                                      },
                                      "teams": Array [],
                                    }
                                  }
                                  task={6}
                                >
                                  <Container
                                    hide={true}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="css-1r2yi7q-Container e18z0fp40"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e18z0fp41"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <Button
                                          align="center"
                                          disabled={false}
                                          priority="link"
                                          to="/settings/org-slug/support/"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Go to Support"
                                            disabled={false}
                                            onClick={[Function]}
                                            priority="link"
                                            role="button"
                                            to="/settings/org-slug/support/"
                                          >
                                            <ForwardRef
                                              aria-disabled={false}
                                              aria-label="Go to Support"
                                              className="css-1ilrgbi-StyledButton edwq9my0"
                                              disabled={false}
                                              onClick={[Function]}
                                              priority="link"
                                              role="button"
                                              to="/settings/org-slug/support/"
                                            >
                                              <Link
                                                aria-disabled={false}
                                                aria-label="Go to Support"
                                                className="css-1ilrgbi-StyledButton edwq9my0"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                role="button"
                                                style={Object {}}
                                                to="/settings/org-slug/support/"
                                              >
                                                <a
                                                  aria-disabled={false}
                                                  aria-label="Go to Support"
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  onClick={[Function]}
                                                  role="button"
                                                  style={Object {}}
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    priority="link"
                                                  >
                                                    <Component
                                                      align="center"
                                                      className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      priority="link"
                                                    >
                                                      <span
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                      >
                                                        Go to Support
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </a>
                                              </Link>
                                            </ForwardRef>
                                          </StyledButton>
                                        </Button>
                                         
                                        · 
                                        <a
                                          onClick={[Function]}
                                        >
                                          Skip
                                        </a>
                                      </div>
                                    </div>
                                  </Container>
                                </Confirmation>
                              </WithOrganizationMockWrapper>
                            </li>
                          </Item>
                        </TodoItem>
                      </WithOrganizationMockWrapper>
                    </ul>
                  </StyledTodoList>
                </TodoList>
              </WithOrganizationMockWrapper>
            </withApi(WithOrganizationMockWrapper)>
          </div>
        </SidebarPanelBody>
      </div>
    </Component>
  </StyledSidebarPanel>
</SidebarPanel>
`;

exports[`Sidebar renders without org and router 1`] = `
<OrgAndUserMenu
  isStyled={true}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  org={null}
>
  <div
    className="css-yvb5my-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-1x4lcee-UserSummary e1fowdfw1"
        to="/settings/account/details/"
      >
        <Link
          className="css-1x4lcee-UserSummary e1fowdfw1"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-1x4lcee-UserSummary e1fowdfw1"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      hideEmail={false}
                      useLink={true}
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      >
                        <div
                          className="e1fowdfw2 css-qu415y-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
                        >
                          <StyledAvatar
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <Component
                              className="css-593o0g-StyledAvatar ev46mzr4"
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <UserAvatar
                                className="css-593o0g-StyledAvatar ev46mzr4"
                                gravatar={false}
                                size={32}
                                user={
                                  Object {
                                    "email": "foo@example.com",
                                    "flags": Object {
                                      "newsletter_consent_prompt": false,
                                    },
                                    "hasPasswordAuth": true,
                                    "id": "1",
                                    "isAuthenticated": true,
                                    "name": "Foo Bar",
                                    "options": Object {
                                      "timezone": "UTC",
                                    },
                                    "permissions": Set {},
                                    "username": "foo@example.com",
                                  }
                                }
                              >
                                <BaseAvatar
                                  className="css-593o0g-StyledAvatar ev46mzr4"
                                  gravatarId="foo@example.com"
                                  hasTooltip={false}
                                  letterId="foo@example.com"
                                  round={true}
                                  size={32}
                                  style={Object {}}
                                  title="Foo Bar"
                                  tooltip="Foo Bar (foo@example.com)"
                                  type="letter_avatar"
                                  uploadId=""
                                  uploadPath="avatar"
                                >
                                  <Tooltip
                                    containerDisplayMode="inline-block"
                                    disabled={true}
                                    position="top"
                                    title="Foo Bar (foo@example.com)"
                                  >
                                    <StyledBaseAvatar
                                      className="avatar css-593o0g-StyledAvatar ev46mzr4"
                                      loaded={true}
                                      round={true}
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                    >
                                      <span
                                        className="avatar ev46mzr4 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                        style={
                                          Object {
                                            "height": "32px",
                                            "width": "32px",
                                          }
                                        }
                                      >
                                        <LetterAvatar
                                          displayName="Foo Bar"
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <Component
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            displayName="Foo Bar"
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <svg
                                              className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                              viewBox="0 0 120 120"
                                            >
                                              <rect
                                                fill="#315cac"
                                                height="120"
                                                rx="15"
                                                ry="15"
                                                width="120"
                                                x="0"
                                                y="0"
                                              />
                                              <text
                                                fill="#FFFFFF"
                                                fontSize="65"
                                                style={
                                                  Object {
                                                    "dominantBaseline": "central",
                                                  }
                                                }
                                                textAnchor="middle"
                                                x="50%"
                                                y="50%"
                                              >
                                                FB
                                              </text>
                                            </svg>
                                          </Component>
                                        </LetterAvatar>
                                      </span>
                                    </StyledBaseAvatar>
                                  </Tooltip>
                                </BaseAvatar>
                              </UserAvatar>
                            </Component>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail ev46mzr1"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <Component
                                  className="css-19h2nhd-StyledName ev46mzr3"
                                  hideEmail={false}
                                >
                                  <span
                                    className="css-19h2nhd-StyledName ev46mzr3"
                                  >
                                    Foo Bar
                                  </span>
                                </Component>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail ev46mzr2"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <MenuItemLink
          to="/settings/account/"
        >
          <Component
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            to="/settings/account/"
          >
            <Link
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              to="/settings/account/"
            >
              <Link
                className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <MenuItemLink
          to="/settings/account/api/"
        >
          <Component
            className="css-1ofty7m-MenuItemLink e1ru2gxu1"
            to="/settings/account/api/"
          >
            <Link
              className="css-1ofty7m-MenuItemLink e1ru2gxu1"
              to="/settings/account/api/"
            >
              <Link
                className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1ofty7m-MenuItemLink e1ru2gxu1"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <MenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <Component
            className="css-wwghpc-MenuItemLink e1ru2gxu1"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-wwghpc-MenuItemLink e1ru2gxu1"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex="0"
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel e1ru2gxu0"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </Component>
        </MenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;
