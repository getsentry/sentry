// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar SidebarDropdown can open "Switch Organization" sub-menu 1`] = `
<SwitchOrganizationMenu
  data-test-id="sidebar-switch-org-menu"
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-pm8679-SwitchOrganizationMenu-SidebarDropdownMenu ev3suul4"
    data-test-id="sidebar-switch-org-menu"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <OrganizationList>
      <div
        className="css-1tlc4cl-OrganizationList ev3suul5"
      />
    </OrganizationList>
    <SidebarMenuItem
      data-test-id="sidebar-create-org"
      style={
        Object {
          "alignItems": "center",
        }
      }
      to="/organizations/new/"
    >
      <StyledSidebarMenuItemLink
        data-test-id="sidebar-create-org"
        style={
          Object {
            "alignItems": "center",
          }
        }
        to="/organizations/new/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          data-test-id="sidebar-create-org"
          style={
            Object {
              "alignItems": "center",
            }
          }
          to="/organizations/new/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebar-create-org"
            style={
              Object {
                "alignItems": "center",
              }
            }
            to="/organizations/new/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebar-create-org"
              onlyActiveOnIndex={false}
              style={
                Object {
                  "alignItems": "center",
                }
              }
              to="/organizations/new/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                data-test-id="sidebar-create-org"
                onClick={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    <MenuItemLabelWithIcon>
                      <span
                        className="css-8m01f9-MenuItemLabelWithIcon ev3suul1"
                      >
                        <StyledIconAdd>
                          <ForwardRef(IconAdd)
                            className="css-4qjexj-StyledIconAdd ev3suul0"
                          >
                            <svg
                              className="css-4qjexj-StyledIconAdd ev3suul0"
                              fill="currentColor"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                            >
                              <g>
                                <path
                                  d="M15.19,8.75H.81a.75.75,0,1,1,0-1.5H15.19a.75.75,0,0,1,0,1.5Z"
                                />
                                <path
                                  d="M8,15.94a.76.76,0,0,1-.75-.75V.81a.75.75,0,0,1,1.5,0V15.19A.76.76,0,0,1,8,15.94Z"
                                />
                              </g>
                            </svg>
                          </ForwardRef(IconAdd)>
                        </StyledIconAdd>
                        <span>
                          Create a new organization
                        </span>
                      </span>
                    </MenuItemLabelWithIcon>
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
  </div>
</SwitchOrganizationMenu>
`;

exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
<OrgAndUserMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-4razvn-OrgAndUserMenu-SidebarDropdownMenu e10773n39"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <SidebarOrgSummary
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <OrgSummary>
        <div
          className="css-epf2t7-OrgSummary e1h7qc9l0"
        >
          <OrganizationAvatar
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "experiments": Object {},
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            size={36}
          >
            <BaseAvatar
              hasTooltip={false}
              letterId="org-slug"
              round={false}
              size={36}
              style={Object {}}
              title="org slug"
              tooltip="org-slug"
              type="letter_avatar"
              uploadPath="organization-avatar"
            >
              <Tooltip
                containerDisplayMode="inline-block"
                disabled={true}
                position="top"
                title="org-slug"
              >
                <StyledBaseAvatar
                  className="avatar"
                  letterId="org-slug"
                  loaded={true}
                  round={false}
                  style={
                    Object {
                      "height": "36px",
                      "width": "36px",
                    }
                  }
                  title="org slug"
                  type="letter_avatar"
                  uploadPath="organization-avatar"
                >
                  <span
                    className="avatar css-wr6j9i-StyledBaseAvatar e147uwb0"
                    style={
                      Object {
                        "height": "36px",
                        "width": "36px",
                      }
                    }
                    title="org slug"
                    type="letter_avatar"
                  >
                    <ForwardRef
                      displayName="org slug"
                      identifier="org-slug"
                      round={false}
                    >
                      <LetterAvatar
                        displayName="org slug"
                        forwardedRef={null}
                        identifier="org-slug"
                        round={false}
                      >
                        <Component
                          className="css-1ei2ksv-LetterAvatar e12lgfev0"
                          displayName="org slug"
                          forwardedRef={null}
                          identifier="org-slug"
                          round={false}
                        >
                          <svg
                            className="css-1ei2ksv-LetterAvatar e12lgfev0"
                            viewBox="0 0 120 120"
                          >
                            <rect
                              fill="#4674ca"
                              height="120"
                              rx="15"
                              ry="15"
                              width="120"
                              x="0"
                              y="0"
                            />
                            <text
                              fill="#FFFFFF"
                              fontSize="65"
                              style={
                                Object {
                                  "dominantBaseline": "central",
                                }
                              }
                              textAnchor="middle"
                              x="50%"
                              y="50%"
                            >
                              OS
                            </text>
                          </svg>
                        </Component>
                      </LetterAvatar>
                    </ForwardRef>
                  </span>
                </StyledBaseAvatar>
              </Tooltip>
            </BaseAvatar>
          </OrganizationAvatar>
          <Details>
            <div
              className="css-18lie9u-Details e1h7qc9l3"
            >
              <SummaryOrgName>
                <div
                  className="css-1o68u16-SummaryOrgName e1h7qc9l1"
                >
                  Organization Name
                </div>
              </SummaryOrgName>
            </div>
          </Details>
        </div>
      </OrgSummary>
    </SidebarOrgSummary>
    <SidebarMenuItem
      to="/settings/org-slug/"
    >
      <StyledSidebarMenuItemLink
        to="/settings/org-slug/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          to="/settings/org-slug/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/org-slug/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    Organization settings
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      to="/settings/org-slug/teams/"
    >
      <StyledSidebarMenuItemLink
        to="/settings/org-slug/teams/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          to="/settings/org-slug/teams/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/org-slug/teams/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/teams/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    Teams
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <Hook
      name="sidebar:organization-dropdown-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:organization-dropdown-menu) />
    </Hook>
    <SidebarMenuItem>
      <StyledSidebarMenuItemLink>
        <SidebarMenuItemLink
          className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
        >
          <div
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            tabIndex={0}
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
              >
                <withOrganizations(SwitchOrganization)
                  canCreateOrganization={false}
                >
                  <SwitchOrganization
                    canCreateOrganization={false}
                    organizations={Array []}
                    organizationsLoading={true}
                  >
                    <DropdownMenu
                      closeOnEscape={true}
                      isNestedDropdown={true}
                      keepMenuOpen={false}
                    >
                      <SwitchOrganizationMenuActor
                        data-test-id="sidebar-switch-org"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "outline": "none",
                          }
                        }
                      >
                        <span
                          className="css-lpolsh-SwitchOrganizationMenuActor ev3suul3"
                          data-test-id="sidebar-switch-org"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "outline": "none",
                            }
                          }
                        >
                          Switch organization
                          <SubMenuCaret>
                            <span
                              className="css-3ur4f5-SubMenuCaret ev3suul2"
                            >
                              <i
                                className="icon-arrow-right"
                              />
                            </span>
                          </SubMenuCaret>
                        </span>
                      </SwitchOrganizationMenuActor>
                    </DropdownMenu>
                  </SwitchOrganization>
                </withOrganizations(SwitchOrganization)>
              </span>
            </MenuItemLabel>
          </div>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <Divider>
      <div
        className="css-10onrkb-Divider e18ox4wg0"
      />
    </Divider>
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-j625pk-UserSummary e10773n31"
        to="/settings/account/details/"
      >
        <Link
          className="css-j625pk-UserSummary e10773n31"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-j625pk-UserSummary e10773n31"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      >
                        <div
                          className="e10773n32 css-qu415y-StyledUserBadge-UserBadgeNoOverflow e31z2f80"
                        >
                          <StyledAvatar
                            gravatar={false}
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <UserAvatar
                              className="css-593o0g-StyledAvatar e31z2f84"
                              gravatar={false}
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <BaseAvatar
                                className="css-593o0g-StyledAvatar e31z2f84"
                                gravatarId="foo@example.com"
                                hasTooltip={false}
                                letterId="foo@example.com"
                                round={true}
                                size={32}
                                style={Object {}}
                                title="Foo Bar"
                                tooltip="Foo Bar (foo@example.com)"
                                type="letter_avatar"
                                uploadId=""
                                uploadPath="avatar"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="Foo Bar (foo@example.com)"
                                >
                                  <StyledBaseAvatar
                                    className="avatar css-593o0g-StyledAvatar e31z2f84"
                                    gravatarId="foo@example.com"
                                    letterId="foo@example.com"
                                    loaded={true}
                                    round={true}
                                    style={
                                      Object {
                                        "height": "32px",
                                        "width": "32px",
                                      }
                                    }
                                    title="Foo Bar"
                                    type="letter_avatar"
                                    uploadId=""
                                    uploadPath="avatar"
                                  >
                                    <span
                                      className="avatar e31z2f84 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                      title="Foo Bar"
                                      type="letter_avatar"
                                    >
                                      <ForwardRef
                                        displayName="Foo Bar"
                                        identifier="foo@example.com"
                                        round={true}
                                      >
                                        <LetterAvatar
                                          displayName="Foo Bar"
                                          forwardedRef={null}
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <Component
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            displayName="Foo Bar"
                                            forwardedRef={null}
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <svg
                                              className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                              viewBox="0 0 120 120"
                                            >
                                              <rect
                                                fill="#315cac"
                                                height="120"
                                                rx="15"
                                                ry="15"
                                                width="120"
                                                x="0"
                                                y="0"
                                              />
                                              <text
                                                fill="#FFFFFF"
                                                fontSize="65"
                                                style={
                                                  Object {
                                                    "dominantBaseline": "central",
                                                  }
                                                }
                                                textAnchor="middle"
                                                x="50%"
                                                y="50%"
                                              >
                                                FB
                                              </text>
                                            </svg>
                                          </Component>
                                        </LetterAvatar>
                                      </ForwardRef>
                                    </span>
                                  </StyledBaseAvatar>
                                </Tooltip>
                              </BaseAvatar>
                            </UserAvatar>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail e31z2f81"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <span
                                  className="css-19h2nhd-StyledName e31z2f83"
                                >
                                  Foo Bar
                                </span>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail e31z2f82"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/api/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/api/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/api/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <StyledSidebarMenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <SidebarMenuItemLink
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex={0}
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;

exports[`Sidebar SidebarHelp can toggle help menu 1`] = `
<HelpMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-jlq0c6-HelpMenu-SidebarDropdownMenu e6tkw732"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <Hook
      name="sidebar:help-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:help-menu) />
    </Hook>
    <SidebarMenuItem
      onClick={[Function]}
    >
      <StyledSidebarMenuItemLink
        onClick={[Function]}
      >
        <SidebarMenuItemLink
          className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
          onClick={[Function]}
        >
          <div
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            onClick={[Function]}
            tabIndex={0}
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
              >
                Search Docs and FAQs
              </span>
            </MenuItemLabel>
          </div>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://forum.sentry.io/"
    >
      <StyledSidebarMenuItemLink
        href="https://forum.sentry.io/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          href="https://forum.sentry.io/"
        >
          <ForwardRef(ExternalLink)
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            href="https://forum.sentry.io/"
          >
            <a
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              href="https://forum.sentry.io/"
              rel="noreferrer noopener"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Community Discussions
                </span>
              </MenuItemLabel>
            </a>
          </ForwardRef(ExternalLink)>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://status.sentry.io/"
    >
      <StyledSidebarMenuItemLink
        href="https://status.sentry.io/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          href="https://status.sentry.io/"
        >
          <ForwardRef(ExternalLink)
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            href="https://status.sentry.io/"
          >
            <a
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              href="https://status.sentry.io/"
              rel="noreferrer noopener"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Service Status
                </span>
              </MenuItemLabel>
            </a>
          </ForwardRef(ExternalLink)>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
  </div>
</HelpMenu>
`;

exports[`Sidebar SidebarPanel can display Broadcasts panel and mark as seen 1`] = `
<SidebarPanelItem
  hasSeen={false}
  key="8"
  link="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
  message="Source maps are JSON files that contain information on how to map your transpiled source code back to their original source."
  title="Learn about Source Maps"
>
  <SidebarPanelItemRoot>
    <div
      className="css-lce7u9-SidebarPanelItemRoot ekutvbl0"
    >
      <Title
        hasSeen={false}
      >
        <div
          className="css-1fgxw89-Title ekutvbl2"
        >
          Learn about Source Maps
        </div>
      </Title>
      <Message>
        <div
          className="css-kuchfm-Text-Message ekutvbl4"
        >
          Source maps are JSON files that contain information on how to map your transpiled source code back to their original source.
        </div>
      </Message>
      <Text>
        <div
          className="css-166h1v-Text ekutvbl3"
        >
          <ForwardRef(ExternalLink)
            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
          >
            <a
              href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
              rel="noreferrer noopener"
              target="_blank"
            >
              Read More
            </a>
          </ForwardRef(ExternalLink)>
        </div>
      </Text>
    </div>
  </SidebarPanelItemRoot>
</SidebarPanelItem>
`;

exports[`Sidebar SidebarPanel can show Incidents in Sidebar Panel 1`] = `
<IncidentList
  className="incident-list"
>
  <ul
    className="incident-list css-1brq3ev-IncidentList e1467r1t0"
  >
    <IncidentItem
      key="1"
    >
      <li
        className="css-10usrjr-IncidentItem e1467r1t1"
      >
        <IncidentTitle>
          <div
            className="css-1luh9do-IncidentTitle e1467r1t2"
          />
        </IncidentTitle>
        <div>
          <StatusHeader>
            <div
              className="css-4apn99-StatusHeader e1467r1t3"
            >
              Latest updates:
            </div>
          </StatusHeader>
          <StatusList>
            <ul
              className="css-xjcuzc-StatusList e1467r1t4"
            >
              <StatusItem
                key="0"
              >
                <li
                  className="css-nuktmw-StatusItem e1467r1t5"
                >
                  First Update
                </li>
              </StatusItem>
              <StatusItem
                key="1"
              >
                <li
                  className="css-nuktmw-StatusItem e1467r1t5"
                >
                  Second Update
                </li>
              </StatusItem>
            </ul>
          </StatusList>
        </div>
        <div>
          <forwardRef<Button>
            external={true}
            href="https://status.sentry.io"
            size="small"
          >
            <Button
              align="center"
              disabled={false}
              external={true}
              forwardRef={null}
              href="https://status.sentry.io"
              size="small"
            >
              <StyledButton
                aria-disabled={false}
                aria-label="Learn more"
                disabled={false}
                external={true}
                forwardRef={null}
                href="https://status.sentry.io"
                onClick={[Function]}
                role="button"
                size="small"
              >
                <Component
                  aria-disabled={false}
                  aria-label="Learn more"
                  className="css-12ogwys-StyledButton edwq9my0"
                  external={true}
                  forwardRef={null}
                  href="https://status.sentry.io"
                  onClick={[Function]}
                  role="button"
                  size="small"
                >
                  <ForwardRef(ExternalLink)
                    aria-disabled={false}
                    aria-label="Learn more"
                    className="css-12ogwys-StyledButton edwq9my0"
                    href="https://status.sentry.io"
                    onClick={[Function]}
                    role="button"
                    size="small"
                  >
                    <a
                      aria-disabled={false}
                      aria-label="Learn more"
                      className="css-12ogwys-StyledButton edwq9my0"
                      href="https://status.sentry.io"
                      onClick={[Function]}
                      rel="noreferrer noopener"
                      role="button"
                      size="small"
                      target="_blank"
                    >
                      <ButtonLabel
                        align="center"
                        size="small"
                      >
                        <span
                          className="css-19gcr2f-ButtonLabel edwq9my1"
                        >
                          Learn more
                        </span>
                      </ButtonLabel>
                    </a>
                  </ForwardRef(ExternalLink)>
                </Component>
              </StyledButton>
            </Button>
          </forwardRef<Button>>
        </div>
      </li>
    </IncidentItem>
  </ul>
</IncidentList>
`;

exports[`Sidebar can have onboarding feature 1`] = `null`;

exports[`Sidebar renders without org and router 1`] = `
<OrgAndUserMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-4razvn-OrgAndUserMenu-SidebarDropdownMenu e10773n39"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-j625pk-UserSummary e10773n31"
        to="/settings/account/details/"
      >
        <Link
          className="css-j625pk-UserSummary e10773n31"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-j625pk-UserSummary e10773n31"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      >
                        <div
                          className="e10773n32 css-qu415y-StyledUserBadge-UserBadgeNoOverflow e31z2f80"
                        >
                          <StyledAvatar
                            gravatar={false}
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <UserAvatar
                              className="css-593o0g-StyledAvatar e31z2f84"
                              gravatar={false}
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <BaseAvatar
                                className="css-593o0g-StyledAvatar e31z2f84"
                                gravatarId="foo@example.com"
                                hasTooltip={false}
                                letterId="foo@example.com"
                                round={true}
                                size={32}
                                style={Object {}}
                                title="Foo Bar"
                                tooltip="Foo Bar (foo@example.com)"
                                type="letter_avatar"
                                uploadId=""
                                uploadPath="avatar"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="Foo Bar (foo@example.com)"
                                >
                                  <StyledBaseAvatar
                                    className="avatar css-593o0g-StyledAvatar e31z2f84"
                                    gravatarId="foo@example.com"
                                    letterId="foo@example.com"
                                    loaded={true}
                                    round={true}
                                    style={
                                      Object {
                                        "height": "32px",
                                        "width": "32px",
                                      }
                                    }
                                    title="Foo Bar"
                                    type="letter_avatar"
                                    uploadId=""
                                    uploadPath="avatar"
                                  >
                                    <span
                                      className="avatar e31z2f84 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                      title="Foo Bar"
                                      type="letter_avatar"
                                    >
                                      <ForwardRef
                                        displayName="Foo Bar"
                                        identifier="foo@example.com"
                                        round={true}
                                      >
                                        <LetterAvatar
                                          displayName="Foo Bar"
                                          forwardedRef={null}
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <Component
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            displayName="Foo Bar"
                                            forwardedRef={null}
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <svg
                                              className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                              viewBox="0 0 120 120"
                                            >
                                              <rect
                                                fill="#315cac"
                                                height="120"
                                                rx="15"
                                                ry="15"
                                                width="120"
                                                x="0"
                                                y="0"
                                              />
                                              <text
                                                fill="#FFFFFF"
                                                fontSize="65"
                                                style={
                                                  Object {
                                                    "dominantBaseline": "central",
                                                  }
                                                }
                                                textAnchor="middle"
                                                x="50%"
                                                y="50%"
                                              >
                                                FB
                                              </text>
                                            </svg>
                                          </Component>
                                        </LetterAvatar>
                                      </ForwardRef>
                                    </span>
                                  </StyledBaseAvatar>
                                </Tooltip>
                              </BaseAvatar>
                            </UserAvatar>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail e31z2f81"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <span
                                  className="css-19h2nhd-StyledName e31z2f83"
                                >
                                  Foo Bar
                                </span>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail e31z2f82"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/api/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/api/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/api/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <StyledSidebarMenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <SidebarMenuItemLink
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex={0}
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;
