// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar SidebarDropdown can open "Switch Organization" sub-menu 1`] = `
<SwitchOrganizationMenu
  data-test-id="sidebar-switch-org-menu"
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-pm8679-SwitchOrganizationMenu-SidebarDropdownMenu ev3suul4"
    data-test-id="sidebar-switch-org-menu"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <OrganizationList>
      <div
        className="css-1tlc4cl-OrganizationList ev3suul5"
      />
    </OrganizationList>
    <SidebarMenuItem
      data-test-id="sidebar-create-org"
      style={
        Object {
          "alignItems": "center",
        }
      }
      to="/organizations/new/"
    >
      <StyledSidebarMenuItemLink
        data-test-id="sidebar-create-org"
        style={
          Object {
            "alignItems": "center",
          }
        }
        to="/organizations/new/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          data-test-id="sidebar-create-org"
          style={
            Object {
              "alignItems": "center",
            }
          }
          to="/organizations/new/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebar-create-org"
            style={
              Object {
                "alignItems": "center",
              }
            }
            to="/organizations/new/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebar-create-org"
              onlyActiveOnIndex={false}
              style={
                Object {
                  "alignItems": "center",
                }
              }
              to="/organizations/new/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                data-test-id="sidebar-create-org"
                onClick={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    <MenuItemLabelWithIcon>
                      <span
                        className="css-8m01f9-MenuItemLabelWithIcon ev3suul1"
                      >
                        <StyledIconAdd>
                          <ForwardRef
                            className="css-4qjexj-StyledIconAdd ev3suul0"
                          >
                            <ForwardRef(SvgIcon)
                              className="css-4qjexj-StyledIconAdd ev3suul0"
                            >
                              <svg
                                className="css-4qjexj-StyledIconAdd ev3suul0"
                                fill="currentColor"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                              >
                                <path
                                  d="M15.19,8.75H.81a.75.75,0,1,1,0-1.5H15.19a.75.75,0,0,1,0,1.5Z"
                                />
                                <path
                                  d="M8,15.94a.76.76,0,0,1-.75-.75V.81a.75.75,0,0,1,1.5,0V15.19A.76.76,0,0,1,8,15.94Z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </ForwardRef>
                        </StyledIconAdd>
                        <span>
                          Create a new organization
                        </span>
                      </span>
                    </MenuItemLabelWithIcon>
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
  </div>
</SwitchOrganizationMenu>
`;

exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
<OrgAndUserMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-4razvn-OrgAndUserMenu-SidebarDropdownMenu e10773n39"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <SidebarOrgSummary
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <OrgSummary>
        <div
          className="css-epf2t7-OrgSummary e1h7qc9l0"
        >
          <OrganizationAvatar
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "experiments": Object {},
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            size={36}
          >
            <BaseAvatar
              hasTooltip={false}
              letterId="org-slug"
              round={false}
              size={36}
              style={Object {}}
              title="org slug"
              tooltip="org-slug"
              type="letter_avatar"
              uploadPath="organization-avatar"
            >
              <Tooltip
                containerDisplayMode="inline-block"
                disabled={true}
                position="top"
                title="org-slug"
              >
                <StyledBaseAvatar
                  className="avatar"
                  letterId="org-slug"
                  loaded={true}
                  round={false}
                  style={
                    Object {
                      "height": "36px",
                      "width": "36px",
                    }
                  }
                  title="org slug"
                  type="letter_avatar"
                  uploadPath="organization-avatar"
                >
                  <span
                    className="avatar css-wr6j9i-StyledBaseAvatar e147uwb0"
                    style={
                      Object {
                        "height": "36px",
                        "width": "36px",
                      }
                    }
                    title="org slug"
                    type="letter_avatar"
                  >
                    <ForwardRef
                      displayName="org slug"
                      identifier="org-slug"
                      round={false}
                    >
                      <LetterAvatar
                        displayName="org slug"
                        forwardedRef={null}
                        identifier="org-slug"
                        round={false}
                      >
                        <Component
                          className="css-1ei2ksv-LetterAvatar e12lgfev0"
                          displayName="org slug"
                          forwardedRef={null}
                          identifier="org-slug"
                          round={false}
                        >
                          <svg
                            className="css-1ei2ksv-LetterAvatar e12lgfev0"
                            viewBox="0 0 120 120"
                          >
                            <rect
                              fill="#4674ca"
                              height="120"
                              rx="15"
                              ry="15"
                              width="120"
                              x="0"
                              y="0"
                            />
                            <text
                              fill="#FFFFFF"
                              fontSize="65"
                              style={
                                Object {
                                  "dominantBaseline": "central",
                                }
                              }
                              textAnchor="middle"
                              x="50%"
                              y="50%"
                            >
                              OS
                            </text>
                          </svg>
                        </Component>
                      </LetterAvatar>
                    </ForwardRef>
                  </span>
                </StyledBaseAvatar>
              </Tooltip>
            </BaseAvatar>
          </OrganizationAvatar>
          <Details>
            <div
              className="css-18lie9u-Details e1h7qc9l3"
            >
              <SummaryOrgName>
                <div
                  className="css-1o68u16-SummaryOrgName e1h7qc9l1"
                >
                  Organization Name
                </div>
              </SummaryOrgName>
            </div>
          </Details>
        </div>
      </OrgSummary>
    </SidebarOrgSummary>
    <SidebarMenuItem
      to="/settings/org-slug/"
    >
      <StyledSidebarMenuItemLink
        to="/settings/org-slug/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          to="/settings/org-slug/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/org-slug/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    Organization settings
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      to="/settings/org-slug/teams/"
    >
      <StyledSidebarMenuItemLink
        to="/settings/org-slug/teams/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          to="/settings/org-slug/teams/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/org-slug/teams/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/settings/org-slug/teams/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onClick={[Function]}
                style={Object {}}
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    Teams
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <Hook
      name="sidebar:organization-dropdown-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:organization-dropdown-menu) />
    </Hook>
    <SidebarMenuItem>
      <StyledSidebarMenuItemLink>
        <SidebarMenuItemLink
          className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
        >
          <div
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            tabIndex={0}
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
              >
                <withOrganizations(SwitchOrganization)
                  canCreateOrganization={false}
                >
                  <SwitchOrganization
                    canCreateOrganization={false}
                    organizations={Array []}
                    organizationsLoading={true}
                  >
                    <DropdownMenu
                      closeOnEscape={true}
                      isNestedDropdown={true}
                      keepMenuOpen={false}
                    >
                      <SwitchOrganizationMenuActor
                        data-test-id="sidebar-switch-org"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "outline": "none",
                          }
                        }
                      >
                        <span
                          className="css-lpolsh-SwitchOrganizationMenuActor ev3suul3"
                          data-test-id="sidebar-switch-org"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "outline": "none",
                            }
                          }
                        >
                          Switch organization
                          <SubMenuCaret>
                            <span
                              className="css-3ur4f5-SubMenuCaret ev3suul2"
                            >
                              <i
                                className="icon-arrow-right"
                              />
                            </span>
                          </SubMenuCaret>
                        </span>
                      </SwitchOrganizationMenuActor>
                    </DropdownMenu>
                  </SwitchOrganization>
                </withOrganizations(SwitchOrganization)>
              </span>
            </MenuItemLabel>
          </div>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <Divider>
      <div
        className="css-10onrkb-Divider e18ox4wg0"
      />
    </Divider>
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-j625pk-UserSummary e10773n31"
        to="/settings/account/details/"
      >
        <Link
          className="css-j625pk-UserSummary e10773n31"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-j625pk-UserSummary e10773n31"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      >
                        <div
                          className="e10773n32 css-qu415y-StyledUserBadge-UserBadgeNoOverflow e31z2f80"
                        >
                          <StyledAvatar
                            gravatar={false}
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <UserAvatar
                              className="css-593o0g-StyledAvatar e31z2f84"
                              gravatar={false}
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <BaseAvatar
                                className="css-593o0g-StyledAvatar e31z2f84"
                                gravatarId="foo@example.com"
                                hasTooltip={false}
                                letterId="foo@example.com"
                                round={true}
                                size={32}
                                style={Object {}}
                                title="Foo Bar"
                                tooltip="Foo Bar (foo@example.com)"
                                type="letter_avatar"
                                uploadId=""
                                uploadPath="avatar"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="Foo Bar (foo@example.com)"
                                >
                                  <StyledBaseAvatar
                                    className="avatar css-593o0g-StyledAvatar e31z2f84"
                                    gravatarId="foo@example.com"
                                    letterId="foo@example.com"
                                    loaded={true}
                                    round={true}
                                    style={
                                      Object {
                                        "height": "32px",
                                        "width": "32px",
                                      }
                                    }
                                    title="Foo Bar"
                                    type="letter_avatar"
                                    uploadId=""
                                    uploadPath="avatar"
                                  >
                                    <span
                                      className="avatar e31z2f84 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                      title="Foo Bar"
                                      type="letter_avatar"
                                    >
                                      <ForwardRef
                                        displayName="Foo Bar"
                                        identifier="foo@example.com"
                                        round={true}
                                      >
                                        <LetterAvatar
                                          displayName="Foo Bar"
                                          forwardedRef={null}
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <Component
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            displayName="Foo Bar"
                                            forwardedRef={null}
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <svg
                                              className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                              viewBox="0 0 120 120"
                                            >
                                              <rect
                                                fill="#315cac"
                                                height="120"
                                                rx="15"
                                                ry="15"
                                                width="120"
                                                x="0"
                                                y="0"
                                              />
                                              <text
                                                fill="#FFFFFF"
                                                fontSize="65"
                                                style={
                                                  Object {
                                                    "dominantBaseline": "central",
                                                  }
                                                }
                                                textAnchor="middle"
                                                x="50%"
                                                y="50%"
                                              >
                                                FB
                                              </text>
                                            </svg>
                                          </Component>
                                        </LetterAvatar>
                                      </ForwardRef>
                                    </span>
                                  </StyledBaseAvatar>
                                </Tooltip>
                              </BaseAvatar>
                            </UserAvatar>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail e31z2f81"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <span
                                  className="css-19h2nhd-StyledName e31z2f83"
                                >
                                  Foo Bar
                                </span>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail e31z2f82"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/api/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/api/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/api/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <StyledSidebarMenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <SidebarMenuItemLink
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex={0}
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;

exports[`Sidebar SidebarHelp can toggle help menu 1`] = `
<HelpMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-jlq0c6-HelpMenu-SidebarDropdownMenu e6tkw732"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <Hook
      name="sidebar:help-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "experiments": Object {},
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:help-menu) />
    </Hook>
    <SidebarMenuItem
      onClick={[Function]}
    >
      <StyledSidebarMenuItemLink
        onClick={[Function]}
      >
        <SidebarMenuItemLink
          className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
          onClick={[Function]}
        >
          <div
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            onClick={[Function]}
            tabIndex={0}
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
              >
                Search Docs and FAQs
              </span>
            </MenuItemLabel>
          </div>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://forum.sentry.io/"
    >
      <StyledSidebarMenuItemLink
        href="https://forum.sentry.io/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          href="https://forum.sentry.io/"
        >
          <ForwardRef(ExternalLink)
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            href="https://forum.sentry.io/"
          >
            <a
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              href="https://forum.sentry.io/"
              rel="noreferrer noopener"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Community Discussions
                </span>
              </MenuItemLabel>
            </a>
          </ForwardRef(ExternalLink)>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://status.sentry.io/"
    >
      <StyledSidebarMenuItemLink
        href="https://status.sentry.io/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          href="https://status.sentry.io/"
        >
          <ForwardRef(ExternalLink)
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            href="https://status.sentry.io/"
          >
            <a
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              href="https://status.sentry.io/"
              rel="noreferrer noopener"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Service Status
                </span>
              </MenuItemLabel>
            </a>
          </ForwardRef(ExternalLink)>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
  </div>
</HelpMenu>
`;

exports[`Sidebar SidebarPanel can display Broadcasts panel and mark as seen 1`] = `
<SidebarPanelItem
  hasSeen={false}
  key="8"
  link="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
  message="Source maps are JSON files that contain information on how to map your transpiled source code back to their original source."
  title="Learn about Source Maps"
>
  <SidebarPanelItemRoot>
    <div
      className="css-lce7u9-SidebarPanelItemRoot ekutvbl0"
    >
      <Title
        hasSeen={false}
      >
        <div
          className="css-1fgxw89-Title ekutvbl2"
        >
          Learn about Source Maps
        </div>
      </Title>
      <Message>
        <div
          className="css-kuchfm-Text-Message ekutvbl4"
        >
          Source maps are JSON files that contain information on how to map your transpiled source code back to their original source.
        </div>
      </Message>
      <Text>
        <div
          className="css-166h1v-Text ekutvbl3"
        >
          <ForwardRef(ExternalLink)
            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
          >
            <a
              href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
              rel="noreferrer noopener"
              target="_blank"
            >
              Read More
            </a>
          </ForwardRef(ExternalLink)>
        </div>
      </Text>
    </div>
  </SidebarPanelItemRoot>
</SidebarPanelItem>
`;

exports[`Sidebar SidebarPanel can show Incidents in Sidebar Panel 1`] = `
<IncidentList
  className="incident-list"
>
  <ul
    className="incident-list css-1brq3ev-IncidentList e1467r1t0"
  >
    <IncidentItem
      key="1"
    >
      <li
        className="css-10usrjr-IncidentItem e1467r1t1"
      >
        <IncidentTitle>
          <div
            className="css-1luh9do-IncidentTitle e1467r1t2"
          />
        </IncidentTitle>
        <div>
          <StatusHeader>
            <div
              className="css-4apn99-StatusHeader e1467r1t3"
            >
              Latest updates:
            </div>
          </StatusHeader>
          <StatusList>
            <ul
              className="css-xjcuzc-StatusList e1467r1t4"
            >
              <StatusItem
                key="0"
              >
                <li
                  className="css-nuktmw-StatusItem e1467r1t5"
                >
                  First Update
                </li>
              </StatusItem>
              <StatusItem
                key="1"
              >
                <li
                  className="css-nuktmw-StatusItem e1467r1t5"
                >
                  Second Update
                </li>
              </StatusItem>
            </ul>
          </StatusList>
        </div>
        <div>
          <forwardRef<Button>
            external={true}
            href="https://status.sentry.io"
            size="small"
          >
            <Button
              align="center"
              disabled={false}
              external={true}
              forwardRef={null}
              href="https://status.sentry.io"
              size="small"
            >
              <StyledButton
                aria-disabled={false}
                aria-label="Learn more"
                disabled={false}
                external={true}
                forwardRef={null}
                href="https://status.sentry.io"
                onClick={[Function]}
                role="button"
                size="small"
              >
                <Component
                  aria-disabled={false}
                  aria-label="Learn more"
                  className="css-12ogwys-StyledButton edwq9my0"
                  external={true}
                  forwardRef={null}
                  href="https://status.sentry.io"
                  onClick={[Function]}
                  role="button"
                  size="small"
                >
                  <ForwardRef(ExternalLink)
                    aria-disabled={false}
                    aria-label="Learn more"
                    className="css-12ogwys-StyledButton edwq9my0"
                    href="https://status.sentry.io"
                    onClick={[Function]}
                    role="button"
                    size="small"
                  >
                    <a
                      aria-disabled={false}
                      aria-label="Learn more"
                      className="css-12ogwys-StyledButton edwq9my0"
                      href="https://status.sentry.io"
                      onClick={[Function]}
                      rel="noreferrer noopener"
                      role="button"
                      size="small"
                      target="_blank"
                    >
                      <ButtonLabel
                        align="center"
                        size="small"
                      >
                        <span
                          className="css-n7mdnv-ButtonLabel edwq9my1"
                        >
                          Learn more
                        </span>
                      </ButtonLabel>
                    </a>
                  </ForwardRef(ExternalLink)>
                </Component>
              </StyledButton>
            </Button>
          </forwardRef<Button>>
        </div>
      </li>
    </IncidentItem>
  </ul>
</IncidentList>
`;

exports[`Sidebar can have onboarding feature 1`] = `
<SidebarPanel
  className="css-wb08zn-TaskSidebarPanel eky05z31"
  collapsed={false}
  hidePanel={[Function]}
  orientation="left"
>
  <Portal
    containerInfo={
      <div
        id="sidebar-flyout-portal"
      >
        <div
          class="eky05z31 css-1uk3lji-PanelContainer-TaskSidebarPanel e1aybls60"
          orientation="left"
        >
          <div
            class="css-18827hc-SidebarPanelBody e1aybls62"
          >
            <div
              class="css-1osy0pt-Container e1roosa10"
            >
              <svg
                class="css-1vfby2y-RingSvg eqr38d41"
                height="88"
                width="88"
              >
                <circle
                  class="css-tvb94l-RingBackground eqr38d42"
                  color="#E7E1EC"
                  cx="44"
                  cy="44"
                  r="38"
                />
                <circle
                  class="css-sn14z-RingBar eqr38d43"
                  color="#57be8c"
                  cx="44"
                  cy="44"
                  r="38"
                  stroke-dashoffset="238.76104167282426"
                  stroke-linecap="round"
                />
                <foreignobject
                  height="100%"
                  width="100%"
                >
                  <div
                    class="css-102hoso-Text-ProgressHeader eqr38d40"
                    style="opacity: 1; transform: none;"
                    x="50%"
                    y="50%"
                  >
                    7
                  </div>
                </foreignobject>
              </svg>
              <div
                class="css-1r25lh0-HeadingText e1roosa11"
              >
                <h4>
                  Setup Sentry
                </h4>
                <p>
                  Complete these tasks to take full advantage of Sentry in your project
                </p>
              </div>
            </div>
            <div
              class="css-nzzi25-TaskList eky05z32"
            >
              <h4
                class="css-1i5djvw-Heading eky05z30"
              >
                <svg
                  fill="currentColor"
                  height="12px"
                  viewBox="0 0 16 16"
                  width="12px"
                >
                  <path
                    d="M3.81,16a1.21,1.21,0,0,1-.74-.26,1.19,1.19,0,0,1-.33-1.45L4.79,10,2.32,8.39a1,1,0,0,1-.07-1.58L10.67.26a1.19,1.19,0,0,1,1.8,1.46L10.41,6,12.9,7.64a1,1,0,0,1,.44.78,1,1,0,0,1-.38.8L4.54,15.74A1.15,1.15,0,0,1,3.81,16ZM3.76,7.53l2.4,1.56a.77.77,0,0,1,.27,1L4.65,13.76l6.81-5.27L9,6.91a.75.75,0,0,1-.26-1l1.78-3.71ZM12.08,8.9Zm-.95-8h0Z"
                  />
                </svg>
                Complete now
              </h4>
              <div
                class="css-apaklj-Card-hoverStyle-Item e9zebce0"
                data-test-id="create_project"
                style="opacity: 0; transform: none;"
              >
                <h5
                  class="css-55b0pa-Title e9zebce1"
                >
                  Create a project
                </h5>
                <p
                  class="css-127nzq8-Description e9zebce2"
                >
                  Create your first Sentry project. Follow our quick and easy steps to set up a project and start sending errors.
                </p>
                <div
                  class="css-1qxx2qs-ActionBar e9zebce3"
                >
                  <div
                    class="css-wf3dy3-CTA e9zebce5"
                  >
                    Setup now
                  </div>
                </div>
              </div>
              <div
                class="css-apaklj-Card-hoverStyle-Item e9zebce0"
                data-test-id="invite_member"
                style="opacity: 0; transform: none;"
              >
                <h5
                  class="css-55b0pa-Title e9zebce1"
                >
                  Invite team members
                </h5>
                <p
                  class="css-127nzq8-Description e9zebce2"
                >
                  Bring your team aboard. Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.
                </p>
                <div
                  class="css-1qxx2qs-ActionBar e9zebce3"
                >
                  <div
                    class="css-wf3dy3-CTA e9zebce5"
                  >
                    Setup now
                  </div>
                  <button
                    aria-disabled="false"
                    aria-label="Skip task"
                    class="e9zebce6 css-1x12sty-StyledButton-SkipButton edwq9my0"
                    role="button"
                  >
                    <span
                      class="css-1igyjbb-ButtonLabel edwq9my1"
                    >
                      Skip task
                    </span>
                  </button>
                  <div
                    class="css-zdd518-Confirmation e1n6fdgx0"
                  >
                    <p>
                      Not sure what to do? We're here for you!
                    </p>
                    <div
                      class="css-dhkb9a-ButtonGrid e1iu08980"
                    >
                      <a
                        aria-disabled="false"
                        aria-label="Community Forum"
                        class="css-z8at1v-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1dw46ju-ButtonLabel edwq9my1"
                        >
                          Community Forum
                        </span>
                      </a>
                      <button
                        aria-disabled="false"
                        aria-label="Just skip"
                        class="css-12ogwys-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1dw46ju-ButtonLabel edwq9my1"
                        >
                          Just skip
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <h4
                class="css-1i5djvw-Heading eky05z30"
              >
                <span
                  aria-describedby="tooltip-123456"
                  class="css-1513qml-Container eowlwvy0"
                >
                  <svg
                    fill="currentColor"
                    height="12px"
                    viewBox="0 0 16 16"
                    width="12px"
                  >
                    <path
                      d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                    />
                    <path
                      d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                    />
                    <path
                      d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                    />
                  </svg>
                </span>
                Upcoming tasks
              </h4>
              <div
                class="css-apaklj-Card-hoverStyle-Item e9zebce0"
                data-test-id="send_first_event"
                style="opacity: 0; transform: none;"
              >
                <h5
                  class="css-55b0pa-Title e9zebce1"
                >
                  <span
                    aria-describedby="tooltip-123456"
                    class="css-1513qml-Container eowlwvy0"
                  >
                    <svg
                      fill="#FA5849"
                      height="12px"
                      viewBox="0 0 16 16"
                      width="12px"
                    >
                      <path
                        d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                      />
                      <path
                        d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                      />
                      <path
                        d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                      />
                    </svg>
                  </span>
                  Send your first event
                </h5>
                <p
                  class="css-127nzq8-Description e9zebce2"
                >
                  Install the appropriate Sentry SDK for your application. Choose your platform and send an event.
                </p>
              </div>
              <div
                class="css-apaklj-Card-hoverStyle-Item e9zebce0"
                data-test-id="setup_second_platform"
                style="opacity: 0; transform: none;"
              >
                <h5
                  class="css-55b0pa-Title e9zebce1"
                >
                  <span
                    aria-describedby="tooltip-123456"
                    class="css-1513qml-Container eowlwvy0"
                  >
                    <svg
                      fill="#FA5849"
                      height="12px"
                      viewBox="0 0 16 16"
                      width="12px"
                    >
                      <path
                        d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                      />
                      <path
                        d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                      />
                      <path
                        d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                      />
                    </svg>
                  </span>
                  Add a second platform
                </h5>
                <p
                  class="css-127nzq8-Description e9zebce2"
                >
                  Add Sentry to a second platform. Capture errors from both your front and back ends.
                </p>
              </div>
              <div
                class="css-apaklj-Card-hoverStyle-Item e9zebce0"
                data-test-id="setup_user_context"
                style="opacity: 0; transform: none;"
              >
                <h5
                  class="css-55b0pa-Title e9zebce1"
                >
                  <span
                    aria-describedby="tooltip-123456"
                    class="css-1513qml-Container eowlwvy0"
                  >
                    <svg
                      fill="#FA5849"
                      height="12px"
                      viewBox="0 0 16 16"
                      width="12px"
                    >
                      <path
                        d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                      />
                      <path
                        d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                      />
                      <path
                        d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                      />
                    </svg>
                  </span>
                  Add user context
                </h5>
                <p
                  class="css-127nzq8-Description e9zebce2"
                >
                  Know who is being affected by crashes. Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.
                </p>
              </div>
              <div
                class="css-apaklj-Card-hoverStyle-Item e9zebce0"
                data-test-id="setup_release_tracking"
                style="opacity: 0; transform: none;"
              >
                <h5
                  class="css-55b0pa-Title e9zebce1"
                >
                  <span
                    aria-describedby="tooltip-123456"
                    class="css-1513qml-Container eowlwvy0"
                  >
                    <svg
                      fill="#FA5849"
                      height="12px"
                      viewBox="0 0 16 16"
                      width="12px"
                    >
                      <path
                        d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                      />
                      <path
                        d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                      />
                      <path
                        d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                      />
                    </svg>
                  </span>
                  Set up release tracking
                </h5>
                <p
                  class="css-127nzq8-Description e9zebce2"
                >
                  See which releases cause errors. Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.
                </p>
              </div>
              <div
                class="css-apaklj-Card-hoverStyle-Item e9zebce0"
                data-test-id="setup_alert_rules"
                style="opacity: 0; transform: none;"
              >
                <h5
                  class="css-55b0pa-Title e9zebce1"
                >
                  <span
                    aria-describedby="tooltip-123456"
                    class="css-1513qml-Container eowlwvy0"
                  >
                    <svg
                      fill="#FA5849"
                      height="12px"
                      viewBox="0 0 16 16"
                      width="12px"
                    >
                      <path
                        d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                      />
                      <path
                        d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                      />
                      <path
                        d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                      />
                    </svg>
                  </span>
                  Configure alerting rules
                </h5>
                <p
                  class="css-127nzq8-Description e9zebce2"
                >
                  Configure alerting rules to control error emails. Receive Sentry alerts in Slack, PagerDuty, and more.
                </p>
              </div>
              <div
                class="css-coc8a5-CompleteList eky05z33"
              />
            </div>
          </div>
        </div>
      </div>
    }
  >
    <PanelContainer
      className="css-wb08zn-TaskSidebarPanel eky05z31"
      collapsed={false}
      orientation="left"
    >
      <div
        className="eky05z31 css-1uk3lji-PanelContainer-TaskSidebarPanel e1aybls60"
        orientation="left"
      >
        <SidebarPanelBody
          hasHeader={false}
        >
          <div
            className="css-18827hc-SidebarPanelBody e1aybls62"
          >
            <ProgressHeader
              allTasks={
                Array [
                  Object {
                    "actionType": "app",
                    "description": "Create your first Sentry project",
                    "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                    "display": true,
                    "location": "/organizations/org-slug/projects/new/",
                    "requisiteTasks": Array [],
                    "requisites": Array [],
                    "skippable": false,
                    "task": "create_project",
                    "title": "Create a project",
                  },
                  Object {
                    "SupplementComponent": [Function],
                    "actionType": "app",
                    "description": "Install the appropriate Sentry SDK for your application",
                    "detailedDescription": "Choose your platform and send an event.",
                    "display": true,
                    "location": "/settings/org-slug/projects/:projectId/install/",
                    "requisiteTasks": Array [
                      Object {
                        "actionType": "app",
                        "description": "Create your first Sentry project",
                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                        "display": true,
                        "location": "/organizations/org-slug/projects/new/",
                        "requisiteTasks": Array [],
                        "requisites": Array [],
                        "skippable": false,
                        "task": "create_project",
                        "title": "Create a project",
                      },
                    ],
                    "requisites": Array [
                      "create_project",
                    ],
                    "skippable": false,
                    "task": "send_first_event",
                    "title": "Send your first event",
                  },
                  Object {
                    "action": [Function],
                    "actionType": "action",
                    "description": "Bring your team aboard",
                    "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                    "display": true,
                    "requisiteTasks": Array [],
                    "requisites": Array [],
                    "skippable": true,
                    "task": "invite_member",
                    "title": "Invite team members",
                  },
                  Object {
                    "actionType": "app",
                    "description": "Add Sentry to a second platform",
                    "detailedDescription": "Capture errors from both your front and back ends.",
                    "display": true,
                    "location": "/organizations/org-slug/projects/new/",
                    "requisiteTasks": Array [
                      Object {
                        "actionType": "app",
                        "description": "Create your first Sentry project",
                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                        "display": true,
                        "location": "/organizations/org-slug/projects/new/",
                        "requisiteTasks": Array [],
                        "requisites": Array [],
                        "skippable": false,
                        "task": "create_project",
                        "title": "Create a project",
                      },
                      Object {
                        "SupplementComponent": [Function],
                        "actionType": "app",
                        "description": "Install the appropriate Sentry SDK for your application",
                        "detailedDescription": "Choose your platform and send an event.",
                        "display": true,
                        "location": "/settings/org-slug/projects/:projectId/install/",
                        "requisiteTasks": Array [],
                        "requisites": Array [
                          "create_project",
                        ],
                        "skippable": false,
                        "task": "send_first_event",
                        "title": "Send your first event",
                      },
                    ],
                    "requisites": Array [
                      "create_project",
                      "send_first_event",
                    ],
                    "skippable": true,
                    "task": "setup_second_platform",
                    "title": "Add a second platform",
                  },
                  Object {
                    "actionType": "external",
                    "description": "Know who is being affected by crashes",
                    "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                    "display": true,
                    "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                    "requisiteTasks": Array [
                      Object {
                        "actionType": "app",
                        "description": "Create your first Sentry project",
                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                        "display": true,
                        "location": "/organizations/org-slug/projects/new/",
                        "requisiteTasks": Array [],
                        "requisites": Array [],
                        "skippable": false,
                        "task": "create_project",
                        "title": "Create a project",
                      },
                      Object {
                        "SupplementComponent": [Function],
                        "actionType": "app",
                        "description": "Install the appropriate Sentry SDK for your application",
                        "detailedDescription": "Choose your platform and send an event.",
                        "display": true,
                        "location": "/settings/org-slug/projects/:projectId/install/",
                        "requisiteTasks": Array [],
                        "requisites": Array [
                          "create_project",
                        ],
                        "skippable": false,
                        "task": "send_first_event",
                        "title": "Send your first event",
                      },
                    ],
                    "requisites": Array [
                      "create_project",
                      "send_first_event",
                    ],
                    "skippable": true,
                    "task": "setup_user_context",
                    "title": "Add user context",
                  },
                  Object {
                    "actionType": "app",
                    "description": "See which releases cause errors",
                    "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                    "display": true,
                    "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                    "requisiteTasks": Array [
                      Object {
                        "actionType": "app",
                        "description": "Create your first Sentry project",
                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                        "display": true,
                        "location": "/organizations/org-slug/projects/new/",
                        "requisiteTasks": Array [],
                        "requisites": Array [],
                        "skippable": false,
                        "task": "create_project",
                        "title": "Create a project",
                      },
                      Object {
                        "SupplementComponent": [Function],
                        "actionType": "app",
                        "description": "Install the appropriate Sentry SDK for your application",
                        "detailedDescription": "Choose your platform and send an event.",
                        "display": true,
                        "location": "/settings/org-slug/projects/:projectId/install/",
                        "requisiteTasks": Array [],
                        "requisites": Array [
                          "create_project",
                        ],
                        "skippable": false,
                        "task": "send_first_event",
                        "title": "Send your first event",
                      },
                    ],
                    "requisites": Array [
                      "create_project",
                      "send_first_event",
                    ],
                    "skippable": true,
                    "task": "setup_release_tracking",
                    "title": "Set up release tracking",
                  },
                  Object {
                    "actionType": "app",
                    "description": "Configure alerting rules to control error emails",
                    "detailedDescription": "Receive Sentry alerts in Slack, PagerDuty, and more.",
                    "display": true,
                    "location": "/settings/org-slug/projects/:projectId/alerts/",
                    "requisiteTasks": Array [
                      Object {
                        "actionType": "app",
                        "description": "Create your first Sentry project",
                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                        "display": true,
                        "location": "/organizations/org-slug/projects/new/",
                        "requisiteTasks": Array [],
                        "requisites": Array [],
                        "skippable": false,
                        "task": "create_project",
                        "title": "Create a project",
                      },
                    ],
                    "requisites": Array [
                      "create_project",
                    ],
                    "skippable": true,
                    "task": "setup_alert_rules",
                    "title": "Configure alerting rules",
                  },
                ]
              }
              completedTasks={Array []}
            >
              <Container>
                <div
                  className="css-1osy0pt-Container e1roosa10"
                >
                  <ProgressRing
                    animateText={true}
                    backgroundColor="#E7E1EC"
                    barWidth={12}
                    progressEndcaps="round"
                    size={88}
                    text={7}
                    textCss={[Function]}
                    value={0}
                  >
                    <RingSvg
                      height={88}
                      width={88}
                    >
                      <svg
                        className="css-1vfby2y-RingSvg eqr38d41"
                        height={88}
                        width={88}
                      >
                        <RingBackground
                          barWidth={12}
                          color="#E7E1EC"
                          cx={44}
                          cy={44}
                          r={38}
                        >
                          <circle
                            className="css-tvb94l-RingBackground eqr38d42"
                            color="#E7E1EC"
                            cx={44}
                            cy={44}
                            r={38}
                          />
                        </RingBackground>
                        <RingBar
                          barWidth={12}
                          circumference={238.76104167282426}
                          color="#57be8c"
                          cx={44}
                          cy={44}
                          r={38}
                          strokeDashoffset={238.76104167282426}
                          strokeLinecap="round"
                        >
                          <circle
                            className="css-sn14z-RingBar eqr38d43"
                            color="#57be8c"
                            cx={44}
                            cy={44}
                            r={38}
                            strokeDashoffset={238.76104167282426}
                            strokeLinecap="round"
                          />
                        </RingBar>
                        <foreignObject
                          height="100%"
                          width="100%"
                        >
                          <PoseGroup
                            flipMove={true}
                            preEnterPose="init"
                          >
                            <Transition
                              enterAfterExit={false}
                              enterPose="enter"
                              exitPose="exit"
                              flipMove={true}
                              preEnterPose="init"
                            >
                              <ForwardRef
                                _pose="enter"
                                key="7"
                                percent={0}
                                textCss={[Function]}
                                x="50%"
                                y="50%"
                              >
                                <PoseElement
                                  _pose="enter"
                                  elementType={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "div",
                                      "__emotion_forwardProp": undefined,
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:Text;",
                                        "position:absolute;display:flex;align-items:center;justify-content:center;height:100%;width:100%;color:",
                                        [Function],
                                        ";font-size:",
                                        [Function],
                                        ";padding-top:1px;transition:color 100ms;",
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "displayName": "Text",
                                      "render": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  innerRef={null}
                                  percent={0}
                                  poseConfig={
                                    Object {
                                      "enter": Object {
                                        "opacity": 1,
                                        "y": 0,
                                      },
                                      "exit": Object {
                                        "opacity": 0,
                                        "y": 10,
                                      },
                                      "init": Object {
                                        "opacity": 0,
                                        "y": -10,
                                      },
                                    }
                                  }
                                  textCss={[Function]}
                                  x="50%"
                                  y="50%"
                                >
                                  <Text
                                    percent={0}
                                    textCss={[Function]}
                                    x="50%"
                                    y="50%"
                                  >
                                    <div
                                      className="css-102hoso-Text-ProgressHeader eqr38d40"
                                      x="50%"
                                      y="50%"
                                    >
                                      7
                                    </div>
                                  </Text>
                                </PoseElement>
                              </ForwardRef>
                            </Transition>
                          </PoseGroup>
                        </foreignObject>
                      </svg>
                    </RingSvg>
                  </ProgressRing>
                  <HeadingText>
                    <div
                      className="css-1r25lh0-HeadingText e1roosa11"
                    >
                      <h4>
                        Setup Sentry
                      </h4>
                      <p>
                        Complete these tasks to take full advantage of Sentry in your project
                      </p>
                    </div>
                  </HeadingText>
                </div>
              </Container>
            </ProgressHeader>
            <TaskList>
              <div
                className="css-nzzi25-TaskList eky05z32"
              >
                <PoseGroup
                  exitPose="markComplete"
                  flipMove={true}
                >
                  <Transition
                    enterAfterExit={false}
                    enterPose="enter"
                    exitPose="markComplete"
                    flipMove={true}
                    preEnterPose="exit"
                  >
                    <Heading
                      _pose="enter"
                      key="now"
                    >
                      <ForwardRef
                        _pose="enter"
                        className="css-1i5djvw-Heading eky05z30"
                      >
                        <PoseElement
                          _pose="enter"
                          className="css-1i5djvw-Heading eky05z30"
                          elementType="h4"
                          innerRef={null}
                          poseConfig={Object {}}
                        >
                          <h4
                            className="css-1i5djvw-Heading eky05z30"
                          >
                            <ForwardRef
                              size="xs"
                            >
                              <ForwardRef(SvgIcon)
                                size="xs"
                              >
                                <svg
                                  fill="currentColor"
                                  height="12px"
                                  viewBox="0 0 16 16"
                                  width="12px"
                                >
                                  <path
                                    d="M3.81,16a1.21,1.21,0,0,1-.74-.26,1.19,1.19,0,0,1-.33-1.45L4.79,10,2.32,8.39a1,1,0,0,1-.07-1.58L10.67.26a1.19,1.19,0,0,1,1.8,1.46L10.41,6,12.9,7.64a1,1,0,0,1,.44.78,1,1,0,0,1-.38.8L4.54,15.74A1.15,1.15,0,0,1,3.81,16ZM3.76,7.53l2.4,1.56a.77.77,0,0,1,.27,1L4.65,13.76l6.81-5.27L9,6.91a.75.75,0,0,1-.26-1l1.78-3.71ZM12.08,8.9Zm-.95-8h0Z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </ForwardRef>
                            Complete now
                          </h4>
                        </PoseElement>
                      </ForwardRef>
                    </Heading>
                    <ForwardRef
                      _pose="enter"
                      key="create_project"
                      onMarkComplete={[Function]}
                      onSkip={[Function]}
                      task={
                        Object {
                          "actionType": "app",
                          "description": "Create your first Sentry project",
                          "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                          "display": true,
                          "location": "/organizations/org-slug/projects/new/",
                          "requisiteTasks": Array [],
                          "requisites": Array [],
                          "skippable": false,
                          "task": "create_project",
                          "title": "Create a project",
                        }
                      }
                    >
                      <PoseElement
                        _pose="enter"
                        elementType={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        innerRef={null}
                        onMarkComplete={[Function]}
                        onSkip={[Function]}
                        poseConfig={
                          Object {
                            "complete": Object {
                              "beforeChildren": true,
                              "opacity": 1,
                              "transition": Object {
                                "delay": 800,
                              },
                              "y": 0,
                            },
                            "completeInit": Object {
                              "opacity": 0,
                              "y": 40,
                            },
                            "markComplete": Object {
                              "opacity": 0,
                              "transition": Object {
                                "duration": 200,
                              },
                              "y": 20,
                              "z": -10,
                            },
                          }
                        }
                        task={
                          Object {
                            "actionType": "app",
                            "description": "Create your first Sentry project",
                            "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                            "display": true,
                            "location": "/organizations/org-slug/projects/new/",
                            "requisiteTasks": Array [],
                            "requisites": Array [],
                            "skippable": false,
                            "task": "create_project",
                            "title": "Create a project",
                          }
                        }
                      >
                        <ForwardRef
                          onMarkComplete={[Function]}
                          onSkip={[Function]}
                          task={
                            Object {
                              "actionType": "app",
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisiteTasks": Array [],
                              "requisites": Array [],
                              "skippable": false,
                              "task": "create_project",
                              "title": "Create a project",
                            }
                          }
                        >
                          <WithOrganizationMockWrapper
                            forwardedRef={[Function]}
                            onMarkComplete={[Function]}
                            onSkip={[Function]}
                            task={
                              Object {
                                "actionType": "app",
                                "description": "Create your first Sentry project",
                                "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisiteTasks": Array [],
                                "requisites": Array [],
                                "skippable": false,
                                "task": "create_project",
                                "title": "Create a project",
                              }
                            }
                          >
                            <withRouter(Task)
                              forwardedRef={[Function]}
                              onMarkComplete={[Function]}
                              onSkip={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              task={
                                Object {
                                  "actionType": "app",
                                  "description": "Create your first Sentry project",
                                  "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                  "display": true,
                                  "location": "/organizations/org-slug/projects/new/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [],
                                  "skippable": false,
                                  "task": "create_project",
                                  "title": "Create a project",
                                }
                              }
                            >
                              <Task
                                forwardedRef={[Function]}
                                location={
                                  Object {
                                    "query": Object {},
                                  }
                                }
                                onMarkComplete={[Function]}
                                onSkip={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                router={
                                  Object {
                                    "createHref": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "/settings/account/details/",
                                        ],
                                        Array [
                                          "/settings/account/",
                                        ],
                                        Array [
                                          "/settings/account/api/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "https://forum.sentry.io/",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "go": [MockFunction],
                                    "goBack": [MockFunction],
                                    "goForward": [MockFunction],
                                    "isActive": [MockFunction],
                                    "listen": [MockFunction],
                                    "location": Object {
                                      "query": Object {},
                                    },
                                    "push": [MockFunction],
                                    "replace": [MockFunction],
                                    "setRouteLeaveHook": [MockFunction],
                                  }
                                }
                                task={
                                  Object {
                                    "actionType": "app",
                                    "description": "Create your first Sentry project",
                                    "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                    "display": true,
                                    "location": "/organizations/org-slug/projects/new/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [],
                                    "skippable": false,
                                    "task": "create_project",
                                    "title": "Create a project",
                                  }
                                }
                              >
                                <Item
                                  data-test-id="create_project"
                                  interactive={true}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="css-apaklj-Card-hoverStyle-Item e9zebce0"
                                    data-test-id="create_project"
                                    onClick={[Function]}
                                  >
                                    <Title>
                                      <h5
                                        className="css-55b0pa-Title e9zebce1"
                                      >
                                        Create a project
                                      </h5>
                                    </Title>
                                    <Description>
                                      <p
                                        className="css-127nzq8-Description e9zebce2"
                                      >
                                        Create your first Sentry project. Follow our quick and easy steps to set up a project and start sending errors.
                                      </p>
                                    </Description>
                                    <ActionBar>
                                      <div
                                        className="css-1qxx2qs-ActionBar e9zebce3"
                                      >
                                        <CTA>
                                          <div
                                            className="css-wf3dy3-CTA e9zebce5"
                                          >
                                            Setup now
                                          </div>
                                        </CTA>
                                      </div>
                                    </ActionBar>
                                  </div>
                                </Item>
                              </Task>
                            </withRouter(Task)>
                          </WithOrganizationMockWrapper>
                        </ForwardRef>
                      </PoseElement>
                    </ForwardRef>
                    <ForwardRef
                      _pose="enter"
                      key="invite_member"
                      onMarkComplete={[Function]}
                      onSkip={[Function]}
                      task={
                        Object {
                          "action": [Function],
                          "actionType": "action",
                          "description": "Bring your team aboard",
                          "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                          "display": true,
                          "requisiteTasks": Array [],
                          "requisites": Array [],
                          "skippable": true,
                          "task": "invite_member",
                          "title": "Invite team members",
                        }
                      }
                    >
                      <PoseElement
                        _pose="enter"
                        elementType={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        innerRef={null}
                        onMarkComplete={[Function]}
                        onSkip={[Function]}
                        poseConfig={
                          Object {
                            "complete": Object {
                              "beforeChildren": true,
                              "opacity": 1,
                              "transition": Object {
                                "delay": 800,
                              },
                              "y": 0,
                            },
                            "completeInit": Object {
                              "opacity": 0,
                              "y": 40,
                            },
                            "markComplete": Object {
                              "opacity": 0,
                              "transition": Object {
                                "duration": 200,
                              },
                              "y": 20,
                              "z": -10,
                            },
                          }
                        }
                        task={
                          Object {
                            "action": [Function],
                            "actionType": "action",
                            "description": "Bring your team aboard",
                            "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                            "display": true,
                            "requisiteTasks": Array [],
                            "requisites": Array [],
                            "skippable": true,
                            "task": "invite_member",
                            "title": "Invite team members",
                          }
                        }
                      >
                        <ForwardRef
                          onMarkComplete={[Function]}
                          onSkip={[Function]}
                          task={
                            Object {
                              "action": [Function],
                              "actionType": "action",
                              "description": "Bring your team aboard",
                              "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                              "display": true,
                              "requisiteTasks": Array [],
                              "requisites": Array [],
                              "skippable": true,
                              "task": "invite_member",
                              "title": "Invite team members",
                            }
                          }
                        >
                          <WithOrganizationMockWrapper
                            forwardedRef={[Function]}
                            onMarkComplete={[Function]}
                            onSkip={[Function]}
                            task={
                              Object {
                                "action": [Function],
                                "actionType": "action",
                                "description": "Bring your team aboard",
                                "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                                "display": true,
                                "requisiteTasks": Array [],
                                "requisites": Array [],
                                "skippable": true,
                                "task": "invite_member",
                                "title": "Invite team members",
                              }
                            }
                          >
                            <withRouter(Task)
                              forwardedRef={[Function]}
                              onMarkComplete={[Function]}
                              onSkip={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              task={
                                Object {
                                  "action": [Function],
                                  "actionType": "action",
                                  "description": "Bring your team aboard",
                                  "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                                  "display": true,
                                  "requisiteTasks": Array [],
                                  "requisites": Array [],
                                  "skippable": true,
                                  "task": "invite_member",
                                  "title": "Invite team members",
                                }
                              }
                            >
                              <Task
                                forwardedRef={[Function]}
                                location={
                                  Object {
                                    "query": Object {},
                                  }
                                }
                                onMarkComplete={[Function]}
                                onSkip={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                router={
                                  Object {
                                    "createHref": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "/settings/account/details/",
                                        ],
                                        Array [
                                          "/settings/account/",
                                        ],
                                        Array [
                                          "/settings/account/api/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "https://forum.sentry.io/",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "go": [MockFunction],
                                    "goBack": [MockFunction],
                                    "goForward": [MockFunction],
                                    "isActive": [MockFunction],
                                    "listen": [MockFunction],
                                    "location": Object {
                                      "query": Object {},
                                    },
                                    "push": [MockFunction],
                                    "replace": [MockFunction],
                                    "setRouteLeaveHook": [MockFunction],
                                  }
                                }
                                task={
                                  Object {
                                    "action": [Function],
                                    "actionType": "action",
                                    "description": "Bring your team aboard",
                                    "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                                    "display": true,
                                    "requisiteTasks": Array [],
                                    "requisites": Array [],
                                    "skippable": true,
                                    "task": "invite_member",
                                    "title": "Invite team members",
                                  }
                                }
                              >
                                <Item
                                  data-test-id="invite_member"
                                  interactive={true}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="css-apaklj-Card-hoverStyle-Item e9zebce0"
                                    data-test-id="invite_member"
                                    onClick={[Function]}
                                  >
                                    <Title>
                                      <h5
                                        className="css-55b0pa-Title e9zebce1"
                                      >
                                        Invite team members
                                      </h5>
                                    </Title>
                                    <Description>
                                      <p
                                        className="css-127nzq8-Description e9zebce2"
                                      >
                                        Bring your team aboard. Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.
                                      </p>
                                    </Description>
                                    <ActionBar>
                                      <div
                                        className="css-1qxx2qs-ActionBar e9zebce3"
                                      >
                                        <CTA>
                                          <div
                                            className="css-wf3dy3-CTA e9zebce5"
                                          >
                                            Setup now
                                          </div>
                                        </CTA>
                                        <SkipConfirm
                                          onSkip={[Function]}
                                        >
                                          <SkipButton
                                            onClick={[Function]}
                                            priority="link"
                                          >
                                            <forwardRef<Button>
                                              className="css-ysuw6w-SkipButton e9zebce6"
                                              onClick={[Function]}
                                              priority="link"
                                            >
                                              <Button
                                                align="center"
                                                className="css-ysuw6w-SkipButton e9zebce6"
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                              >
                                                <StyledButton
                                                  aria-disabled={false}
                                                  aria-label="Skip task"
                                                  className="css-ysuw6w-SkipButton e9zebce6"
                                                  disabled={false}
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  priority="link"
                                                  role="button"
                                                >
                                                  <Component
                                                    aria-disabled={false}
                                                    aria-label="Skip task"
                                                    className="e9zebce6 css-1x12sty-StyledButton-SkipButton edwq9my0"
                                                    forwardRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-disabled={false}
                                                      aria-label="Skip task"
                                                      className="e9zebce6 css-1x12sty-StyledButton-SkipButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        priority="link"
                                                      >
                                                        <span
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        >
                                                          Skip task
                                                        </span>
                                                      </ButtonLabel>
                                                    </button>
                                                  </Component>
                                                </StyledButton>
                                              </Button>
                                            </forwardRef<Button>>
                                          </SkipButton>
                                          <Confirmation
                                            onDismiss={[Function]}
                                            onSkip={[Function]}
                                            visible={false}
                                          >
                                            <Component
                                              className="css-zdd518-Confirmation e1n6fdgx0"
                                              onDismiss={[Function]}
                                              onSkip={[Function]}
                                              visible={false}
                                            >
                                              <div
                                                className="css-zdd518-Confirmation e1n6fdgx0"
                                                onClick={[Function]}
                                              >
                                                <p>
                                                  Not sure what to do? We're here for you!
                                                </p>
                                                <ButtonBar
                                                  gap={1}
                                                >
                                                  <ButtonGrid
                                                    gap={1}
                                                    merged={false}
                                                  >
                                                    <div
                                                      className="css-dhkb9a-ButtonGrid e1iu08980"
                                                    >
                                                      <HookOrDefaultComponent(onboarding-wizard:skip-help)>
                                                        <defaultComponent>
                                                          <forwardRef<Button>
                                                            external={true}
                                                            priority="primary"
                                                            size="xsmall"
                                                            to="https://forum.sentry.io/"
                                                          >
                                                            <Button
                                                              align="center"
                                                              disabled={false}
                                                              external={true}
                                                              forwardRef={null}
                                                              priority="primary"
                                                              size="xsmall"
                                                              to="https://forum.sentry.io/"
                                                            >
                                                              <StyledButton
                                                                aria-disabled={false}
                                                                aria-label="Community Forum"
                                                                disabled={false}
                                                                external={true}
                                                                forwardRef={null}
                                                                onClick={[Function]}
                                                                priority="primary"
                                                                role="button"
                                                                size="xsmall"
                                                                to="https://forum.sentry.io/"
                                                              >
                                                                <Component
                                                                  aria-disabled={false}
                                                                  aria-label="Community Forum"
                                                                  className="css-z8at1v-StyledButton edwq9my0"
                                                                  external={true}
                                                                  forwardRef={null}
                                                                  onClick={[Function]}
                                                                  role="button"
                                                                  size="xsmall"
                                                                  to="https://forum.sentry.io/"
                                                                >
                                                                  <Link
                                                                    aria-disabled={false}
                                                                    aria-label="Community Forum"
                                                                    className="css-z8at1v-StyledButton edwq9my0"
                                                                    onClick={[Function]}
                                                                    onlyActiveOnIndex={false}
                                                                    role="button"
                                                                    size="xsmall"
                                                                    style={Object {}}
                                                                    to="https://forum.sentry.io/"
                                                                  >
                                                                    <a
                                                                      aria-disabled={false}
                                                                      aria-label="Community Forum"
                                                                      className="css-z8at1v-StyledButton edwq9my0"
                                                                      onClick={[Function]}
                                                                      role="button"
                                                                      size="xsmall"
                                                                      style={Object {}}
                                                                    >
                                                                      <ButtonLabel
                                                                        align="center"
                                                                        priority="primary"
                                                                        size="xsmall"
                                                                      >
                                                                        <span
                                                                          className="css-1dw46ju-ButtonLabel edwq9my1"
                                                                        >
                                                                          Community Forum
                                                                        </span>
                                                                      </ButtonLabel>
                                                                    </a>
                                                                  </Link>
                                                                </Component>
                                                              </StyledButton>
                                                            </Button>
                                                          </forwardRef<Button>>
                                                        </defaultComponent>
                                                      </HookOrDefaultComponent(onboarding-wizard:skip-help)>
                                                      <forwardRef<Button>
                                                        onClick={[Function]}
                                                        size="xsmall"
                                                      >
                                                        <Button
                                                          align="center"
                                                          disabled={false}
                                                          forwardRef={null}
                                                          onClick={[Function]}
                                                          size="xsmall"
                                                        >
                                                          <StyledButton
                                                            aria-disabled={false}
                                                            aria-label="Just skip"
                                                            disabled={false}
                                                            forwardRef={null}
                                                            onClick={[Function]}
                                                            role="button"
                                                            size="xsmall"
                                                          >
                                                            <Component
                                                              aria-disabled={false}
                                                              aria-label="Just skip"
                                                              className="css-12ogwys-StyledButton edwq9my0"
                                                              forwardRef={null}
                                                              onClick={[Function]}
                                                              role="button"
                                                              size="xsmall"
                                                            >
                                                              <button
                                                                aria-disabled={false}
                                                                aria-label="Just skip"
                                                                className="css-12ogwys-StyledButton edwq9my0"
                                                                onClick={[Function]}
                                                                role="button"
                                                                size="xsmall"
                                                              >
                                                                <ButtonLabel
                                                                  align="center"
                                                                  size="xsmall"
                                                                >
                                                                  <span
                                                                    className="css-1dw46ju-ButtonLabel edwq9my1"
                                                                  >
                                                                    Just skip
                                                                  </span>
                                                                </ButtonLabel>
                                                              </button>
                                                            </Component>
                                                          </StyledButton>
                                                        </Button>
                                                      </forwardRef<Button>>
                                                    </div>
                                                  </ButtonGrid>
                                                </ButtonBar>
                                              </div>
                                            </Component>
                                          </Confirmation>
                                        </SkipConfirm>
                                      </div>
                                    </ActionBar>
                                  </div>
                                </Item>
                              </Task>
                            </withRouter(Task)>
                          </WithOrganizationMockWrapper>
                        </ForwardRef>
                      </PoseElement>
                    </ForwardRef>
                    <Heading
                      _pose="enter"
                      key="upcoming"
                    >
                      <ForwardRef
                        _pose="enter"
                        className="css-1i5djvw-Heading eky05z30"
                      >
                        <PoseElement
                          _pose="enter"
                          className="css-1i5djvw-Heading eky05z30"
                          elementType="h4"
                          innerRef={null}
                          poseConfig={Object {}}
                        >
                          <h4
                            className="css-1i5djvw-Heading eky05z30"
                          >
                            <Tooltip
                              containerDisplayMode="block"
                              position="top"
                              title="Some tasks should be completed before completing these tasks"
                            >
                              <Manager>
                                <Reference>
                                  <InnerReference
                                    setReferenceNode={[Function]}
                                  >
                                    <Container
                                      aria-describedby="tooltip-123456"
                                      containerDisplayMode="block"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                    >
                                      <span
                                        aria-describedby="tooltip-123456"
                                        className="css-1513qml-Container eowlwvy0"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        <ForwardRef
                                          size="xs"
                                        >
                                          <ForwardRef(SvgIcon)
                                            size="xs"
                                          >
                                            <svg
                                              fill="currentColor"
                                              height="12px"
                                              viewBox="0 0 16 16"
                                              width="12px"
                                            >
                                              <path
                                                d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                              />
                                              <path
                                                d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                              />
                                              <path
                                                d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </ForwardRef>
                                      </span>
                                    </Container>
                                  </InnerReference>
                                </Reference>
                              </Manager>
                            </Tooltip>
                            Upcoming tasks
                          </h4>
                        </PoseElement>
                      </ForwardRef>
                    </Heading>
                    <ForwardRef
                      _pose="enter"
                      key="send_first_event"
                      onMarkComplete={[Function]}
                      onSkip={[Function]}
                      task={
                        Object {
                          "SupplementComponent": [Function],
                          "actionType": "app",
                          "description": "Install the appropriate Sentry SDK for your application",
                          "detailedDescription": "Choose your platform and send an event.",
                          "display": true,
                          "location": "/settings/org-slug/projects/:projectId/install/",
                          "requisiteTasks": Array [
                            Object {
                              "actionType": "app",
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisiteTasks": Array [],
                              "requisites": Array [],
                              "skippable": false,
                              "task": "create_project",
                              "title": "Create a project",
                            },
                          ],
                          "requisites": Array [
                            "create_project",
                          ],
                          "skippable": false,
                          "task": "send_first_event",
                          "title": "Send your first event",
                        }
                      }
                    >
                      <PoseElement
                        _pose="enter"
                        elementType={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        innerRef={null}
                        onMarkComplete={[Function]}
                        onSkip={[Function]}
                        poseConfig={
                          Object {
                            "complete": Object {
                              "beforeChildren": true,
                              "opacity": 1,
                              "transition": Object {
                                "delay": 800,
                              },
                              "y": 0,
                            },
                            "completeInit": Object {
                              "opacity": 0,
                              "y": 40,
                            },
                            "markComplete": Object {
                              "opacity": 0,
                              "transition": Object {
                                "duration": 200,
                              },
                              "y": 20,
                              "z": -10,
                            },
                          }
                        }
                        task={
                          Object {
                            "SupplementComponent": [Function],
                            "actionType": "app",
                            "description": "Install the appropriate Sentry SDK for your application",
                            "detailedDescription": "Choose your platform and send an event.",
                            "display": true,
                            "location": "/settings/org-slug/projects/:projectId/install/",
                            "requisiteTasks": Array [
                              Object {
                                "actionType": "app",
                                "description": "Create your first Sentry project",
                                "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisiteTasks": Array [],
                                "requisites": Array [],
                                "skippable": false,
                                "task": "create_project",
                                "title": "Create a project",
                              },
                            ],
                            "requisites": Array [
                              "create_project",
                            ],
                            "skippable": false,
                            "task": "send_first_event",
                            "title": "Send your first event",
                          }
                        }
                      >
                        <ForwardRef
                          onMarkComplete={[Function]}
                          onSkip={[Function]}
                          task={
                            Object {
                              "SupplementComponent": [Function],
                              "actionType": "app",
                              "description": "Install the appropriate Sentry SDK for your application",
                              "detailedDescription": "Choose your platform and send an event.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/install/",
                              "requisiteTasks": Array [
                                Object {
                                  "actionType": "app",
                                  "description": "Create your first Sentry project",
                                  "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                  "display": true,
                                  "location": "/organizations/org-slug/projects/new/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [],
                                  "skippable": false,
                                  "task": "create_project",
                                  "title": "Create a project",
                                },
                              ],
                              "requisites": Array [
                                "create_project",
                              ],
                              "skippable": false,
                              "task": "send_first_event",
                              "title": "Send your first event",
                            }
                          }
                        >
                          <WithOrganizationMockWrapper
                            forwardedRef={[Function]}
                            onMarkComplete={[Function]}
                            onSkip={[Function]}
                            task={
                              Object {
                                "SupplementComponent": [Function],
                                "actionType": "app",
                                "description": "Install the appropriate Sentry SDK for your application",
                                "detailedDescription": "Choose your platform and send an event.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/install/",
                                "requisiteTasks": Array [
                                  Object {
                                    "actionType": "app",
                                    "description": "Create your first Sentry project",
                                    "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                    "display": true,
                                    "location": "/organizations/org-slug/projects/new/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [],
                                    "skippable": false,
                                    "task": "create_project",
                                    "title": "Create a project",
                                  },
                                ],
                                "requisites": Array [
                                  "create_project",
                                ],
                                "skippable": false,
                                "task": "send_first_event",
                                "title": "Send your first event",
                              }
                            }
                          >
                            <withRouter(Task)
                              forwardedRef={[Function]}
                              onMarkComplete={[Function]}
                              onSkip={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              task={
                                Object {
                                  "SupplementComponent": [Function],
                                  "actionType": "app",
                                  "description": "Install the appropriate Sentry SDK for your application",
                                  "detailedDescription": "Choose your platform and send an event.",
                                  "display": true,
                                  "location": "/settings/org-slug/projects/:projectId/install/",
                                  "requisiteTasks": Array [
                                    Object {
                                      "actionType": "app",
                                      "description": "Create your first Sentry project",
                                      "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                      "display": true,
                                      "location": "/organizations/org-slug/projects/new/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [],
                                      "skippable": false,
                                      "task": "create_project",
                                      "title": "Create a project",
                                    },
                                  ],
                                  "requisites": Array [
                                    "create_project",
                                  ],
                                  "skippable": false,
                                  "task": "send_first_event",
                                  "title": "Send your first event",
                                }
                              }
                            >
                              <Task
                                forwardedRef={[Function]}
                                location={
                                  Object {
                                    "query": Object {},
                                  }
                                }
                                onMarkComplete={[Function]}
                                onSkip={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                router={
                                  Object {
                                    "createHref": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "/settings/account/details/",
                                        ],
                                        Array [
                                          "/settings/account/",
                                        ],
                                        Array [
                                          "/settings/account/api/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "https://forum.sentry.io/",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "go": [MockFunction],
                                    "goBack": [MockFunction],
                                    "goForward": [MockFunction],
                                    "isActive": [MockFunction],
                                    "listen": [MockFunction],
                                    "location": Object {
                                      "query": Object {},
                                    },
                                    "push": [MockFunction],
                                    "replace": [MockFunction],
                                    "setRouteLeaveHook": [MockFunction],
                                  }
                                }
                                task={
                                  Object {
                                    "SupplementComponent": [Function],
                                    "actionType": "app",
                                    "description": "Install the appropriate Sentry SDK for your application",
                                    "detailedDescription": "Choose your platform and send an event.",
                                    "display": true,
                                    "location": "/settings/org-slug/projects/:projectId/install/",
                                    "requisiteTasks": Array [
                                      Object {
                                        "actionType": "app",
                                        "description": "Create your first Sentry project",
                                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                        "display": true,
                                        "location": "/organizations/org-slug/projects/new/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [],
                                        "skippable": false,
                                        "task": "create_project",
                                        "title": "Create a project",
                                      },
                                    ],
                                    "requisites": Array [
                                      "create_project",
                                    ],
                                    "skippable": false,
                                    "task": "send_first_event",
                                    "title": "Send your first event",
                                  }
                                }
                              >
                                <Item
                                  data-test-id="send_first_event"
                                  interactive={true}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="css-apaklj-Card-hoverStyle-Item e9zebce0"
                                    data-test-id="send_first_event"
                                    onClick={[Function]}
                                  >
                                    <Title>
                                      <h5
                                        className="css-55b0pa-Title e9zebce1"
                                      >
                                        <Tooltip
                                          containerDisplayMode="block"
                                          position="top"
                                          title={
                                            <span>
                                              <span>
                                                Create a project
                                              </span>
                                              <span>
                                                 before completing this task
                                              </span>
                                            </span>
                                          }
                                        >
                                          <Manager>
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <Container
                                                  aria-describedby="tooltip-123456"
                                                  containerDisplayMode="block"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                >
                                                  <span
                                                    aria-describedby="tooltip-123456"
                                                    className="css-1513qml-Container eowlwvy0"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <ForwardRef
                                                      color="#FA5849"
                                                      size="xs"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        color="#FA5849"
                                                        size="xs"
                                                      >
                                                        <svg
                                                          fill="#FA5849"
                                                          height="12px"
                                                          viewBox="0 0 16 16"
                                                          width="12px"
                                                        >
                                                          <path
                                                            d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                                          />
                                                          <path
                                                            d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                                          />
                                                          <path
                                                            d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </ForwardRef>
                                                  </span>
                                                </Container>
                                              </InnerReference>
                                            </Reference>
                                          </Manager>
                                        </Tooltip>
                                        Send your first event
                                      </h5>
                                    </Title>
                                    <Description>
                                      <p
                                        className="css-127nzq8-Description e9zebce2"
                                      >
                                        Install the appropriate Sentry SDK for your application. Choose your platform and send an event.
                                      </p>
                                    </Description>
                                  </div>
                                </Item>
                              </Task>
                            </withRouter(Task)>
                          </WithOrganizationMockWrapper>
                        </ForwardRef>
                      </PoseElement>
                    </ForwardRef>
                    <ForwardRef
                      _pose="enter"
                      key="setup_second_platform"
                      onMarkComplete={[Function]}
                      onSkip={[Function]}
                      task={
                        Object {
                          "actionType": "app",
                          "description": "Add Sentry to a second platform",
                          "detailedDescription": "Capture errors from both your front and back ends.",
                          "display": true,
                          "location": "/organizations/org-slug/projects/new/",
                          "requisiteTasks": Array [
                            Object {
                              "actionType": "app",
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisiteTasks": Array [],
                              "requisites": Array [],
                              "skippable": false,
                              "task": "create_project",
                              "title": "Create a project",
                            },
                            Object {
                              "SupplementComponent": [Function],
                              "actionType": "app",
                              "description": "Install the appropriate Sentry SDK for your application",
                              "detailedDescription": "Choose your platform and send an event.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/install/",
                              "requisiteTasks": Array [],
                              "requisites": Array [
                                "create_project",
                              ],
                              "skippable": false,
                              "task": "send_first_event",
                              "title": "Send your first event",
                            },
                          ],
                          "requisites": Array [
                            "create_project",
                            "send_first_event",
                          ],
                          "skippable": true,
                          "task": "setup_second_platform",
                          "title": "Add a second platform",
                        }
                      }
                    >
                      <PoseElement
                        _pose="enter"
                        elementType={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        innerRef={null}
                        onMarkComplete={[Function]}
                        onSkip={[Function]}
                        poseConfig={
                          Object {
                            "complete": Object {
                              "beforeChildren": true,
                              "opacity": 1,
                              "transition": Object {
                                "delay": 800,
                              },
                              "y": 0,
                            },
                            "completeInit": Object {
                              "opacity": 0,
                              "y": 40,
                            },
                            "markComplete": Object {
                              "opacity": 0,
                              "transition": Object {
                                "duration": 200,
                              },
                              "y": 20,
                              "z": -10,
                            },
                          }
                        }
                        task={
                          Object {
                            "actionType": "app",
                            "description": "Add Sentry to a second platform",
                            "detailedDescription": "Capture errors from both your front and back ends.",
                            "display": true,
                            "location": "/organizations/org-slug/projects/new/",
                            "requisiteTasks": Array [
                              Object {
                                "actionType": "app",
                                "description": "Create your first Sentry project",
                                "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisiteTasks": Array [],
                                "requisites": Array [],
                                "skippable": false,
                                "task": "create_project",
                                "title": "Create a project",
                              },
                              Object {
                                "SupplementComponent": [Function],
                                "actionType": "app",
                                "description": "Install the appropriate Sentry SDK for your application",
                                "detailedDescription": "Choose your platform and send an event.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/install/",
                                "requisiteTasks": Array [],
                                "requisites": Array [
                                  "create_project",
                                ],
                                "skippable": false,
                                "task": "send_first_event",
                                "title": "Send your first event",
                              },
                            ],
                            "requisites": Array [
                              "create_project",
                              "send_first_event",
                            ],
                            "skippable": true,
                            "task": "setup_second_platform",
                            "title": "Add a second platform",
                          }
                        }
                      >
                        <ForwardRef
                          onMarkComplete={[Function]}
                          onSkip={[Function]}
                          task={
                            Object {
                              "actionType": "app",
                              "description": "Add Sentry to a second platform",
                              "detailedDescription": "Capture errors from both your front and back ends.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisiteTasks": Array [
                                Object {
                                  "actionType": "app",
                                  "description": "Create your first Sentry project",
                                  "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                  "display": true,
                                  "location": "/organizations/org-slug/projects/new/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [],
                                  "skippable": false,
                                  "task": "create_project",
                                  "title": "Create a project",
                                },
                                Object {
                                  "SupplementComponent": [Function],
                                  "actionType": "app",
                                  "description": "Install the appropriate Sentry SDK for your application",
                                  "detailedDescription": "Choose your platform and send an event.",
                                  "display": true,
                                  "location": "/settings/org-slug/projects/:projectId/install/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [
                                    "create_project",
                                  ],
                                  "skippable": false,
                                  "task": "send_first_event",
                                  "title": "Send your first event",
                                },
                              ],
                              "requisites": Array [
                                "create_project",
                                "send_first_event",
                              ],
                              "skippable": true,
                              "task": "setup_second_platform",
                              "title": "Add a second platform",
                            }
                          }
                        >
                          <WithOrganizationMockWrapper
                            forwardedRef={[Function]}
                            onMarkComplete={[Function]}
                            onSkip={[Function]}
                            task={
                              Object {
                                "actionType": "app",
                                "description": "Add Sentry to a second platform",
                                "detailedDescription": "Capture errors from both your front and back ends.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisiteTasks": Array [
                                  Object {
                                    "actionType": "app",
                                    "description": "Create your first Sentry project",
                                    "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                    "display": true,
                                    "location": "/organizations/org-slug/projects/new/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [],
                                    "skippable": false,
                                    "task": "create_project",
                                    "title": "Create a project",
                                  },
                                  Object {
                                    "SupplementComponent": [Function],
                                    "actionType": "app",
                                    "description": "Install the appropriate Sentry SDK for your application",
                                    "detailedDescription": "Choose your platform and send an event.",
                                    "display": true,
                                    "location": "/settings/org-slug/projects/:projectId/install/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [
                                      "create_project",
                                    ],
                                    "skippable": false,
                                    "task": "send_first_event",
                                    "title": "Send your first event",
                                  },
                                ],
                                "requisites": Array [
                                  "create_project",
                                  "send_first_event",
                                ],
                                "skippable": true,
                                "task": "setup_second_platform",
                                "title": "Add a second platform",
                              }
                            }
                          >
                            <withRouter(Task)
                              forwardedRef={[Function]}
                              onMarkComplete={[Function]}
                              onSkip={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              task={
                                Object {
                                  "actionType": "app",
                                  "description": "Add Sentry to a second platform",
                                  "detailedDescription": "Capture errors from both your front and back ends.",
                                  "display": true,
                                  "location": "/organizations/org-slug/projects/new/",
                                  "requisiteTasks": Array [
                                    Object {
                                      "actionType": "app",
                                      "description": "Create your first Sentry project",
                                      "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                      "display": true,
                                      "location": "/organizations/org-slug/projects/new/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [],
                                      "skippable": false,
                                      "task": "create_project",
                                      "title": "Create a project",
                                    },
                                    Object {
                                      "SupplementComponent": [Function],
                                      "actionType": "app",
                                      "description": "Install the appropriate Sentry SDK for your application",
                                      "detailedDescription": "Choose your platform and send an event.",
                                      "display": true,
                                      "location": "/settings/org-slug/projects/:projectId/install/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [
                                        "create_project",
                                      ],
                                      "skippable": false,
                                      "task": "send_first_event",
                                      "title": "Send your first event",
                                    },
                                  ],
                                  "requisites": Array [
                                    "create_project",
                                    "send_first_event",
                                  ],
                                  "skippable": true,
                                  "task": "setup_second_platform",
                                  "title": "Add a second platform",
                                }
                              }
                            >
                              <Task
                                forwardedRef={[Function]}
                                location={
                                  Object {
                                    "query": Object {},
                                  }
                                }
                                onMarkComplete={[Function]}
                                onSkip={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                router={
                                  Object {
                                    "createHref": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "/settings/account/details/",
                                        ],
                                        Array [
                                          "/settings/account/",
                                        ],
                                        Array [
                                          "/settings/account/api/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "https://forum.sentry.io/",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "go": [MockFunction],
                                    "goBack": [MockFunction],
                                    "goForward": [MockFunction],
                                    "isActive": [MockFunction],
                                    "listen": [MockFunction],
                                    "location": Object {
                                      "query": Object {},
                                    },
                                    "push": [MockFunction],
                                    "replace": [MockFunction],
                                    "setRouteLeaveHook": [MockFunction],
                                  }
                                }
                                task={
                                  Object {
                                    "actionType": "app",
                                    "description": "Add Sentry to a second platform",
                                    "detailedDescription": "Capture errors from both your front and back ends.",
                                    "display": true,
                                    "location": "/organizations/org-slug/projects/new/",
                                    "requisiteTasks": Array [
                                      Object {
                                        "actionType": "app",
                                        "description": "Create your first Sentry project",
                                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                        "display": true,
                                        "location": "/organizations/org-slug/projects/new/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [],
                                        "skippable": false,
                                        "task": "create_project",
                                        "title": "Create a project",
                                      },
                                      Object {
                                        "SupplementComponent": [Function],
                                        "actionType": "app",
                                        "description": "Install the appropriate Sentry SDK for your application",
                                        "detailedDescription": "Choose your platform and send an event.",
                                        "display": true,
                                        "location": "/settings/org-slug/projects/:projectId/install/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [
                                          "create_project",
                                        ],
                                        "skippable": false,
                                        "task": "send_first_event",
                                        "title": "Send your first event",
                                      },
                                    ],
                                    "requisites": Array [
                                      "create_project",
                                      "send_first_event",
                                    ],
                                    "skippable": true,
                                    "task": "setup_second_platform",
                                    "title": "Add a second platform",
                                  }
                                }
                              >
                                <Item
                                  data-test-id="setup_second_platform"
                                  interactive={true}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="css-apaklj-Card-hoverStyle-Item e9zebce0"
                                    data-test-id="setup_second_platform"
                                    onClick={[Function]}
                                  >
                                    <Title>
                                      <h5
                                        className="css-55b0pa-Title e9zebce1"
                                      >
                                        <Tooltip
                                          containerDisplayMode="block"
                                          position="top"
                                          title={
                                            <span>
                                              <span>
                                                Create a project
                                              </span>
                                              <span>
                                                 before completing this task
                                              </span>
                                            </span>
                                          }
                                        >
                                          <Manager>
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <Container
                                                  aria-describedby="tooltip-123456"
                                                  containerDisplayMode="block"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                >
                                                  <span
                                                    aria-describedby="tooltip-123456"
                                                    className="css-1513qml-Container eowlwvy0"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <ForwardRef
                                                      color="#FA5849"
                                                      size="xs"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        color="#FA5849"
                                                        size="xs"
                                                      >
                                                        <svg
                                                          fill="#FA5849"
                                                          height="12px"
                                                          viewBox="0 0 16 16"
                                                          width="12px"
                                                        >
                                                          <path
                                                            d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                                          />
                                                          <path
                                                            d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                                          />
                                                          <path
                                                            d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </ForwardRef>
                                                  </span>
                                                </Container>
                                              </InnerReference>
                                            </Reference>
                                          </Manager>
                                        </Tooltip>
                                        Add a second platform
                                      </h5>
                                    </Title>
                                    <Description>
                                      <p
                                        className="css-127nzq8-Description e9zebce2"
                                      >
                                        Add Sentry to a second platform. Capture errors from both your front and back ends.
                                      </p>
                                    </Description>
                                  </div>
                                </Item>
                              </Task>
                            </withRouter(Task)>
                          </WithOrganizationMockWrapper>
                        </ForwardRef>
                      </PoseElement>
                    </ForwardRef>
                    <ForwardRef
                      _pose="enter"
                      key="setup_user_context"
                      onMarkComplete={[Function]}
                      onSkip={[Function]}
                      task={
                        Object {
                          "actionType": "external",
                          "description": "Know who is being affected by crashes",
                          "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                          "display": true,
                          "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                          "requisiteTasks": Array [
                            Object {
                              "actionType": "app",
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisiteTasks": Array [],
                              "requisites": Array [],
                              "skippable": false,
                              "task": "create_project",
                              "title": "Create a project",
                            },
                            Object {
                              "SupplementComponent": [Function],
                              "actionType": "app",
                              "description": "Install the appropriate Sentry SDK for your application",
                              "detailedDescription": "Choose your platform and send an event.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/install/",
                              "requisiteTasks": Array [],
                              "requisites": Array [
                                "create_project",
                              ],
                              "skippable": false,
                              "task": "send_first_event",
                              "title": "Send your first event",
                            },
                          ],
                          "requisites": Array [
                            "create_project",
                            "send_first_event",
                          ],
                          "skippable": true,
                          "task": "setup_user_context",
                          "title": "Add user context",
                        }
                      }
                    >
                      <PoseElement
                        _pose="enter"
                        elementType={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        innerRef={null}
                        onMarkComplete={[Function]}
                        onSkip={[Function]}
                        poseConfig={
                          Object {
                            "complete": Object {
                              "beforeChildren": true,
                              "opacity": 1,
                              "transition": Object {
                                "delay": 800,
                              },
                              "y": 0,
                            },
                            "completeInit": Object {
                              "opacity": 0,
                              "y": 40,
                            },
                            "markComplete": Object {
                              "opacity": 0,
                              "transition": Object {
                                "duration": 200,
                              },
                              "y": 20,
                              "z": -10,
                            },
                          }
                        }
                        task={
                          Object {
                            "actionType": "external",
                            "description": "Know who is being affected by crashes",
                            "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                            "display": true,
                            "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                            "requisiteTasks": Array [
                              Object {
                                "actionType": "app",
                                "description": "Create your first Sentry project",
                                "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisiteTasks": Array [],
                                "requisites": Array [],
                                "skippable": false,
                                "task": "create_project",
                                "title": "Create a project",
                              },
                              Object {
                                "SupplementComponent": [Function],
                                "actionType": "app",
                                "description": "Install the appropriate Sentry SDK for your application",
                                "detailedDescription": "Choose your platform and send an event.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/install/",
                                "requisiteTasks": Array [],
                                "requisites": Array [
                                  "create_project",
                                ],
                                "skippable": false,
                                "task": "send_first_event",
                                "title": "Send your first event",
                              },
                            ],
                            "requisites": Array [
                              "create_project",
                              "send_first_event",
                            ],
                            "skippable": true,
                            "task": "setup_user_context",
                            "title": "Add user context",
                          }
                        }
                      >
                        <ForwardRef
                          onMarkComplete={[Function]}
                          onSkip={[Function]}
                          task={
                            Object {
                              "actionType": "external",
                              "description": "Know who is being affected by crashes",
                              "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                              "display": true,
                              "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                              "requisiteTasks": Array [
                                Object {
                                  "actionType": "app",
                                  "description": "Create your first Sentry project",
                                  "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                  "display": true,
                                  "location": "/organizations/org-slug/projects/new/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [],
                                  "skippable": false,
                                  "task": "create_project",
                                  "title": "Create a project",
                                },
                                Object {
                                  "SupplementComponent": [Function],
                                  "actionType": "app",
                                  "description": "Install the appropriate Sentry SDK for your application",
                                  "detailedDescription": "Choose your platform and send an event.",
                                  "display": true,
                                  "location": "/settings/org-slug/projects/:projectId/install/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [
                                    "create_project",
                                  ],
                                  "skippable": false,
                                  "task": "send_first_event",
                                  "title": "Send your first event",
                                },
                              ],
                              "requisites": Array [
                                "create_project",
                                "send_first_event",
                              ],
                              "skippable": true,
                              "task": "setup_user_context",
                              "title": "Add user context",
                            }
                          }
                        >
                          <WithOrganizationMockWrapper
                            forwardedRef={[Function]}
                            onMarkComplete={[Function]}
                            onSkip={[Function]}
                            task={
                              Object {
                                "actionType": "external",
                                "description": "Know who is being affected by crashes",
                                "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                                "display": true,
                                "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                                "requisiteTasks": Array [
                                  Object {
                                    "actionType": "app",
                                    "description": "Create your first Sentry project",
                                    "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                    "display": true,
                                    "location": "/organizations/org-slug/projects/new/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [],
                                    "skippable": false,
                                    "task": "create_project",
                                    "title": "Create a project",
                                  },
                                  Object {
                                    "SupplementComponent": [Function],
                                    "actionType": "app",
                                    "description": "Install the appropriate Sentry SDK for your application",
                                    "detailedDescription": "Choose your platform and send an event.",
                                    "display": true,
                                    "location": "/settings/org-slug/projects/:projectId/install/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [
                                      "create_project",
                                    ],
                                    "skippable": false,
                                    "task": "send_first_event",
                                    "title": "Send your first event",
                                  },
                                ],
                                "requisites": Array [
                                  "create_project",
                                  "send_first_event",
                                ],
                                "skippable": true,
                                "task": "setup_user_context",
                                "title": "Add user context",
                              }
                            }
                          >
                            <withRouter(Task)
                              forwardedRef={[Function]}
                              onMarkComplete={[Function]}
                              onSkip={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              task={
                                Object {
                                  "actionType": "external",
                                  "description": "Know who is being affected by crashes",
                                  "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                                  "display": true,
                                  "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                                  "requisiteTasks": Array [
                                    Object {
                                      "actionType": "app",
                                      "description": "Create your first Sentry project",
                                      "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                      "display": true,
                                      "location": "/organizations/org-slug/projects/new/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [],
                                      "skippable": false,
                                      "task": "create_project",
                                      "title": "Create a project",
                                    },
                                    Object {
                                      "SupplementComponent": [Function],
                                      "actionType": "app",
                                      "description": "Install the appropriate Sentry SDK for your application",
                                      "detailedDescription": "Choose your platform and send an event.",
                                      "display": true,
                                      "location": "/settings/org-slug/projects/:projectId/install/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [
                                        "create_project",
                                      ],
                                      "skippable": false,
                                      "task": "send_first_event",
                                      "title": "Send your first event",
                                    },
                                  ],
                                  "requisites": Array [
                                    "create_project",
                                    "send_first_event",
                                  ],
                                  "skippable": true,
                                  "task": "setup_user_context",
                                  "title": "Add user context",
                                }
                              }
                            >
                              <Task
                                forwardedRef={[Function]}
                                location={
                                  Object {
                                    "query": Object {},
                                  }
                                }
                                onMarkComplete={[Function]}
                                onSkip={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                router={
                                  Object {
                                    "createHref": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "/settings/account/details/",
                                        ],
                                        Array [
                                          "/settings/account/",
                                        ],
                                        Array [
                                          "/settings/account/api/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "https://forum.sentry.io/",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "go": [MockFunction],
                                    "goBack": [MockFunction],
                                    "goForward": [MockFunction],
                                    "isActive": [MockFunction],
                                    "listen": [MockFunction],
                                    "location": Object {
                                      "query": Object {},
                                    },
                                    "push": [MockFunction],
                                    "replace": [MockFunction],
                                    "setRouteLeaveHook": [MockFunction],
                                  }
                                }
                                task={
                                  Object {
                                    "actionType": "external",
                                    "description": "Know who is being affected by crashes",
                                    "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                                    "display": true,
                                    "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                                    "requisiteTasks": Array [
                                      Object {
                                        "actionType": "app",
                                        "description": "Create your first Sentry project",
                                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                        "display": true,
                                        "location": "/organizations/org-slug/projects/new/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [],
                                        "skippable": false,
                                        "task": "create_project",
                                        "title": "Create a project",
                                      },
                                      Object {
                                        "SupplementComponent": [Function],
                                        "actionType": "app",
                                        "description": "Install the appropriate Sentry SDK for your application",
                                        "detailedDescription": "Choose your platform and send an event.",
                                        "display": true,
                                        "location": "/settings/org-slug/projects/:projectId/install/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [
                                          "create_project",
                                        ],
                                        "skippable": false,
                                        "task": "send_first_event",
                                        "title": "Send your first event",
                                      },
                                    ],
                                    "requisites": Array [
                                      "create_project",
                                      "send_first_event",
                                    ],
                                    "skippable": true,
                                    "task": "setup_user_context",
                                    "title": "Add user context",
                                  }
                                }
                              >
                                <Item
                                  data-test-id="setup_user_context"
                                  interactive={true}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="css-apaklj-Card-hoverStyle-Item e9zebce0"
                                    data-test-id="setup_user_context"
                                    onClick={[Function]}
                                  >
                                    <Title>
                                      <h5
                                        className="css-55b0pa-Title e9zebce1"
                                      >
                                        <Tooltip
                                          containerDisplayMode="block"
                                          position="top"
                                          title={
                                            <span>
                                              <span>
                                                Create a project
                                              </span>
                                              <span>
                                                 before completing this task
                                              </span>
                                            </span>
                                          }
                                        >
                                          <Manager>
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <Container
                                                  aria-describedby="tooltip-123456"
                                                  containerDisplayMode="block"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                >
                                                  <span
                                                    aria-describedby="tooltip-123456"
                                                    className="css-1513qml-Container eowlwvy0"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <ForwardRef
                                                      color="#FA5849"
                                                      size="xs"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        color="#FA5849"
                                                        size="xs"
                                                      >
                                                        <svg
                                                          fill="#FA5849"
                                                          height="12px"
                                                          viewBox="0 0 16 16"
                                                          width="12px"
                                                        >
                                                          <path
                                                            d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                                          />
                                                          <path
                                                            d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                                          />
                                                          <path
                                                            d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </ForwardRef>
                                                  </span>
                                                </Container>
                                              </InnerReference>
                                            </Reference>
                                          </Manager>
                                        </Tooltip>
                                        Add user context
                                      </h5>
                                    </Title>
                                    <Description>
                                      <p
                                        className="css-127nzq8-Description e9zebce2"
                                      >
                                        Know who is being affected by crashes. Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.
                                      </p>
                                    </Description>
                                  </div>
                                </Item>
                              </Task>
                            </withRouter(Task)>
                          </WithOrganizationMockWrapper>
                        </ForwardRef>
                      </PoseElement>
                    </ForwardRef>
                    <ForwardRef
                      _pose="enter"
                      key="setup_release_tracking"
                      onMarkComplete={[Function]}
                      onSkip={[Function]}
                      task={
                        Object {
                          "actionType": "app",
                          "description": "See which releases cause errors",
                          "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                          "display": true,
                          "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                          "requisiteTasks": Array [
                            Object {
                              "actionType": "app",
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisiteTasks": Array [],
                              "requisites": Array [],
                              "skippable": false,
                              "task": "create_project",
                              "title": "Create a project",
                            },
                            Object {
                              "SupplementComponent": [Function],
                              "actionType": "app",
                              "description": "Install the appropriate Sentry SDK for your application",
                              "detailedDescription": "Choose your platform and send an event.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/install/",
                              "requisiteTasks": Array [],
                              "requisites": Array [
                                "create_project",
                              ],
                              "skippable": false,
                              "task": "send_first_event",
                              "title": "Send your first event",
                            },
                          ],
                          "requisites": Array [
                            "create_project",
                            "send_first_event",
                          ],
                          "skippable": true,
                          "task": "setup_release_tracking",
                          "title": "Set up release tracking",
                        }
                      }
                    >
                      <PoseElement
                        _pose="enter"
                        elementType={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        innerRef={null}
                        onMarkComplete={[Function]}
                        onSkip={[Function]}
                        poseConfig={
                          Object {
                            "complete": Object {
                              "beforeChildren": true,
                              "opacity": 1,
                              "transition": Object {
                                "delay": 800,
                              },
                              "y": 0,
                            },
                            "completeInit": Object {
                              "opacity": 0,
                              "y": 40,
                            },
                            "markComplete": Object {
                              "opacity": 0,
                              "transition": Object {
                                "duration": 200,
                              },
                              "y": 20,
                              "z": -10,
                            },
                          }
                        }
                        task={
                          Object {
                            "actionType": "app",
                            "description": "See which releases cause errors",
                            "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                            "display": true,
                            "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                            "requisiteTasks": Array [
                              Object {
                                "actionType": "app",
                                "description": "Create your first Sentry project",
                                "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisiteTasks": Array [],
                                "requisites": Array [],
                                "skippable": false,
                                "task": "create_project",
                                "title": "Create a project",
                              },
                              Object {
                                "SupplementComponent": [Function],
                                "actionType": "app",
                                "description": "Install the appropriate Sentry SDK for your application",
                                "detailedDescription": "Choose your platform and send an event.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/install/",
                                "requisiteTasks": Array [],
                                "requisites": Array [
                                  "create_project",
                                ],
                                "skippable": false,
                                "task": "send_first_event",
                                "title": "Send your first event",
                              },
                            ],
                            "requisites": Array [
                              "create_project",
                              "send_first_event",
                            ],
                            "skippable": true,
                            "task": "setup_release_tracking",
                            "title": "Set up release tracking",
                          }
                        }
                      >
                        <ForwardRef
                          onMarkComplete={[Function]}
                          onSkip={[Function]}
                          task={
                            Object {
                              "actionType": "app",
                              "description": "See which releases cause errors",
                              "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                              "requisiteTasks": Array [
                                Object {
                                  "actionType": "app",
                                  "description": "Create your first Sentry project",
                                  "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                  "display": true,
                                  "location": "/organizations/org-slug/projects/new/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [],
                                  "skippable": false,
                                  "task": "create_project",
                                  "title": "Create a project",
                                },
                                Object {
                                  "SupplementComponent": [Function],
                                  "actionType": "app",
                                  "description": "Install the appropriate Sentry SDK for your application",
                                  "detailedDescription": "Choose your platform and send an event.",
                                  "display": true,
                                  "location": "/settings/org-slug/projects/:projectId/install/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [
                                    "create_project",
                                  ],
                                  "skippable": false,
                                  "task": "send_first_event",
                                  "title": "Send your first event",
                                },
                              ],
                              "requisites": Array [
                                "create_project",
                                "send_first_event",
                              ],
                              "skippable": true,
                              "task": "setup_release_tracking",
                              "title": "Set up release tracking",
                            }
                          }
                        >
                          <WithOrganizationMockWrapper
                            forwardedRef={[Function]}
                            onMarkComplete={[Function]}
                            onSkip={[Function]}
                            task={
                              Object {
                                "actionType": "app",
                                "description": "See which releases cause errors",
                                "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                                "requisiteTasks": Array [
                                  Object {
                                    "actionType": "app",
                                    "description": "Create your first Sentry project",
                                    "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                    "display": true,
                                    "location": "/organizations/org-slug/projects/new/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [],
                                    "skippable": false,
                                    "task": "create_project",
                                    "title": "Create a project",
                                  },
                                  Object {
                                    "SupplementComponent": [Function],
                                    "actionType": "app",
                                    "description": "Install the appropriate Sentry SDK for your application",
                                    "detailedDescription": "Choose your platform and send an event.",
                                    "display": true,
                                    "location": "/settings/org-slug/projects/:projectId/install/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [
                                      "create_project",
                                    ],
                                    "skippable": false,
                                    "task": "send_first_event",
                                    "title": "Send your first event",
                                  },
                                ],
                                "requisites": Array [
                                  "create_project",
                                  "send_first_event",
                                ],
                                "skippable": true,
                                "task": "setup_release_tracking",
                                "title": "Set up release tracking",
                              }
                            }
                          >
                            <withRouter(Task)
                              forwardedRef={[Function]}
                              onMarkComplete={[Function]}
                              onSkip={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              task={
                                Object {
                                  "actionType": "app",
                                  "description": "See which releases cause errors",
                                  "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                                  "display": true,
                                  "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                                  "requisiteTasks": Array [
                                    Object {
                                      "actionType": "app",
                                      "description": "Create your first Sentry project",
                                      "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                      "display": true,
                                      "location": "/organizations/org-slug/projects/new/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [],
                                      "skippable": false,
                                      "task": "create_project",
                                      "title": "Create a project",
                                    },
                                    Object {
                                      "SupplementComponent": [Function],
                                      "actionType": "app",
                                      "description": "Install the appropriate Sentry SDK for your application",
                                      "detailedDescription": "Choose your platform and send an event.",
                                      "display": true,
                                      "location": "/settings/org-slug/projects/:projectId/install/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [
                                        "create_project",
                                      ],
                                      "skippable": false,
                                      "task": "send_first_event",
                                      "title": "Send your first event",
                                    },
                                  ],
                                  "requisites": Array [
                                    "create_project",
                                    "send_first_event",
                                  ],
                                  "skippable": true,
                                  "task": "setup_release_tracking",
                                  "title": "Set up release tracking",
                                }
                              }
                            >
                              <Task
                                forwardedRef={[Function]}
                                location={
                                  Object {
                                    "query": Object {},
                                  }
                                }
                                onMarkComplete={[Function]}
                                onSkip={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                router={
                                  Object {
                                    "createHref": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "/settings/account/details/",
                                        ],
                                        Array [
                                          "/settings/account/",
                                        ],
                                        Array [
                                          "/settings/account/api/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "https://forum.sentry.io/",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "go": [MockFunction],
                                    "goBack": [MockFunction],
                                    "goForward": [MockFunction],
                                    "isActive": [MockFunction],
                                    "listen": [MockFunction],
                                    "location": Object {
                                      "query": Object {},
                                    },
                                    "push": [MockFunction],
                                    "replace": [MockFunction],
                                    "setRouteLeaveHook": [MockFunction],
                                  }
                                }
                                task={
                                  Object {
                                    "actionType": "app",
                                    "description": "See which releases cause errors",
                                    "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                                    "display": true,
                                    "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                                    "requisiteTasks": Array [
                                      Object {
                                        "actionType": "app",
                                        "description": "Create your first Sentry project",
                                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                        "display": true,
                                        "location": "/organizations/org-slug/projects/new/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [],
                                        "skippable": false,
                                        "task": "create_project",
                                        "title": "Create a project",
                                      },
                                      Object {
                                        "SupplementComponent": [Function],
                                        "actionType": "app",
                                        "description": "Install the appropriate Sentry SDK for your application",
                                        "detailedDescription": "Choose your platform and send an event.",
                                        "display": true,
                                        "location": "/settings/org-slug/projects/:projectId/install/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [
                                          "create_project",
                                        ],
                                        "skippable": false,
                                        "task": "send_first_event",
                                        "title": "Send your first event",
                                      },
                                    ],
                                    "requisites": Array [
                                      "create_project",
                                      "send_first_event",
                                    ],
                                    "skippable": true,
                                    "task": "setup_release_tracking",
                                    "title": "Set up release tracking",
                                  }
                                }
                              >
                                <Item
                                  data-test-id="setup_release_tracking"
                                  interactive={true}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="css-apaklj-Card-hoverStyle-Item e9zebce0"
                                    data-test-id="setup_release_tracking"
                                    onClick={[Function]}
                                  >
                                    <Title>
                                      <h5
                                        className="css-55b0pa-Title e9zebce1"
                                      >
                                        <Tooltip
                                          containerDisplayMode="block"
                                          position="top"
                                          title={
                                            <span>
                                              <span>
                                                Create a project
                                              </span>
                                              <span>
                                                 before completing this task
                                              </span>
                                            </span>
                                          }
                                        >
                                          <Manager>
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <Container
                                                  aria-describedby="tooltip-123456"
                                                  containerDisplayMode="block"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                >
                                                  <span
                                                    aria-describedby="tooltip-123456"
                                                    className="css-1513qml-Container eowlwvy0"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <ForwardRef
                                                      color="#FA5849"
                                                      size="xs"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        color="#FA5849"
                                                        size="xs"
                                                      >
                                                        <svg
                                                          fill="#FA5849"
                                                          height="12px"
                                                          viewBox="0 0 16 16"
                                                          width="12px"
                                                        >
                                                          <path
                                                            d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                                          />
                                                          <path
                                                            d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                                          />
                                                          <path
                                                            d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </ForwardRef>
                                                  </span>
                                                </Container>
                                              </InnerReference>
                                            </Reference>
                                          </Manager>
                                        </Tooltip>
                                        Set up release tracking
                                      </h5>
                                    </Title>
                                    <Description>
                                      <p
                                        className="css-127nzq8-Description e9zebce2"
                                      >
                                        See which releases cause errors. Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.
                                      </p>
                                    </Description>
                                  </div>
                                </Item>
                              </Task>
                            </withRouter(Task)>
                          </WithOrganizationMockWrapper>
                        </ForwardRef>
                      </PoseElement>
                    </ForwardRef>
                    <ForwardRef
                      _pose="enter"
                      key="setup_alert_rules"
                      onMarkComplete={[Function]}
                      onSkip={[Function]}
                      task={
                        Object {
                          "actionType": "app",
                          "description": "Configure alerting rules to control error emails",
                          "detailedDescription": "Receive Sentry alerts in Slack, PagerDuty, and more.",
                          "display": true,
                          "location": "/settings/org-slug/projects/:projectId/alerts/",
                          "requisiteTasks": Array [
                            Object {
                              "actionType": "app",
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisiteTasks": Array [],
                              "requisites": Array [],
                              "skippable": false,
                              "task": "create_project",
                              "title": "Create a project",
                            },
                          ],
                          "requisites": Array [
                            "create_project",
                          ],
                          "skippable": true,
                          "task": "setup_alert_rules",
                          "title": "Configure alerting rules",
                        }
                      }
                    >
                      <PoseElement
                        _pose="enter"
                        elementType={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        innerRef={null}
                        onMarkComplete={[Function]}
                        onSkip={[Function]}
                        poseConfig={
                          Object {
                            "complete": Object {
                              "beforeChildren": true,
                              "opacity": 1,
                              "transition": Object {
                                "delay": 800,
                              },
                              "y": 0,
                            },
                            "completeInit": Object {
                              "opacity": 0,
                              "y": 40,
                            },
                            "markComplete": Object {
                              "opacity": 0,
                              "transition": Object {
                                "duration": 200,
                              },
                              "y": 20,
                              "z": -10,
                            },
                          }
                        }
                        task={
                          Object {
                            "actionType": "app",
                            "description": "Configure alerting rules to control error emails",
                            "detailedDescription": "Receive Sentry alerts in Slack, PagerDuty, and more.",
                            "display": true,
                            "location": "/settings/org-slug/projects/:projectId/alerts/",
                            "requisiteTasks": Array [
                              Object {
                                "actionType": "app",
                                "description": "Create your first Sentry project",
                                "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisiteTasks": Array [],
                                "requisites": Array [],
                                "skippable": false,
                                "task": "create_project",
                                "title": "Create a project",
                              },
                            ],
                            "requisites": Array [
                              "create_project",
                            ],
                            "skippable": true,
                            "task": "setup_alert_rules",
                            "title": "Configure alerting rules",
                          }
                        }
                      >
                        <ForwardRef
                          onMarkComplete={[Function]}
                          onSkip={[Function]}
                          task={
                            Object {
                              "actionType": "app",
                              "description": "Configure alerting rules to control error emails",
                              "detailedDescription": "Receive Sentry alerts in Slack, PagerDuty, and more.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/alerts/",
                              "requisiteTasks": Array [
                                Object {
                                  "actionType": "app",
                                  "description": "Create your first Sentry project",
                                  "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                  "display": true,
                                  "location": "/organizations/org-slug/projects/new/",
                                  "requisiteTasks": Array [],
                                  "requisites": Array [],
                                  "skippable": false,
                                  "task": "create_project",
                                  "title": "Create a project",
                                },
                              ],
                              "requisites": Array [
                                "create_project",
                              ],
                              "skippable": true,
                              "task": "setup_alert_rules",
                              "title": "Configure alerting rules",
                            }
                          }
                        >
                          <WithOrganizationMockWrapper
                            forwardedRef={[Function]}
                            onMarkComplete={[Function]}
                            onSkip={[Function]}
                            task={
                              Object {
                                "actionType": "app",
                                "description": "Configure alerting rules to control error emails",
                                "detailedDescription": "Receive Sentry alerts in Slack, PagerDuty, and more.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/alerts/",
                                "requisiteTasks": Array [
                                  Object {
                                    "actionType": "app",
                                    "description": "Create your first Sentry project",
                                    "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                    "display": true,
                                    "location": "/organizations/org-slug/projects/new/",
                                    "requisiteTasks": Array [],
                                    "requisites": Array [],
                                    "skippable": false,
                                    "task": "create_project",
                                    "title": "Create a project",
                                  },
                                ],
                                "requisites": Array [
                                  "create_project",
                                ],
                                "skippable": true,
                                "task": "setup_alert_rules",
                                "title": "Configure alerting rules",
                              }
                            }
                          >
                            <withRouter(Task)
                              forwardedRef={[Function]}
                              onMarkComplete={[Function]}
                              onSkip={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "experiments": Object {},
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              task={
                                Object {
                                  "actionType": "app",
                                  "description": "Configure alerting rules to control error emails",
                                  "detailedDescription": "Receive Sentry alerts in Slack, PagerDuty, and more.",
                                  "display": true,
                                  "location": "/settings/org-slug/projects/:projectId/alerts/",
                                  "requisiteTasks": Array [
                                    Object {
                                      "actionType": "app",
                                      "description": "Create your first Sentry project",
                                      "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                      "display": true,
                                      "location": "/organizations/org-slug/projects/new/",
                                      "requisiteTasks": Array [],
                                      "requisites": Array [],
                                      "skippable": false,
                                      "task": "create_project",
                                      "title": "Create a project",
                                    },
                                  ],
                                  "requisites": Array [
                                    "create_project",
                                  ],
                                  "skippable": true,
                                  "task": "setup_alert_rules",
                                  "title": "Configure alerting rules",
                                }
                              }
                            >
                              <Task
                                forwardedRef={[Function]}
                                location={
                                  Object {
                                    "query": Object {},
                                  }
                                }
                                onMarkComplete={[Function]}
                                onSkip={[Function]}
                                organization={
                                  Object {
                                    "access": Array [
                                      "org:read",
                                      "org:write",
                                      "org:admin",
                                      "org:integrations",
                                      "project:read",
                                      "project:write",
                                      "project:admin",
                                      "team:read",
                                      "team:write",
                                      "team:admin",
                                    ],
                                    "experiments": Object {},
                                    "features": Array [],
                                    "id": "3",
                                    "name": "Organization Name",
                                    "onboardingTasks": Array [],
                                    "projects": Array [],
                                    "scrapeJavaScript": true,
                                    "slug": "org-slug",
                                    "status": Object {
                                      "id": "active",
                                      "name": "active",
                                    },
                                    "teams": Array [],
                                  }
                                }
                                router={
                                  Object {
                                    "createHref": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "/settings/account/details/",
                                        ],
                                        Array [
                                          "/settings/account/",
                                        ],
                                        Array [
                                          "/settings/account/api/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/projects/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/issues/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/releases/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/user-feedback/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/activity/",
                                        ],
                                        Array [
                                          "/organizations/org-slug/stats/",
                                        ],
                                        Array [
                                          "/settings/org-slug/",
                                        ],
                                        Array [
                                          "https://forum.sentry.io/",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "go": [MockFunction],
                                    "goBack": [MockFunction],
                                    "goForward": [MockFunction],
                                    "isActive": [MockFunction],
                                    "listen": [MockFunction],
                                    "location": Object {
                                      "query": Object {},
                                    },
                                    "push": [MockFunction],
                                    "replace": [MockFunction],
                                    "setRouteLeaveHook": [MockFunction],
                                  }
                                }
                                task={
                                  Object {
                                    "actionType": "app",
                                    "description": "Configure alerting rules to control error emails",
                                    "detailedDescription": "Receive Sentry alerts in Slack, PagerDuty, and more.",
                                    "display": true,
                                    "location": "/settings/org-slug/projects/:projectId/alerts/",
                                    "requisiteTasks": Array [
                                      Object {
                                        "actionType": "app",
                                        "description": "Create your first Sentry project",
                                        "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                        "display": true,
                                        "location": "/organizations/org-slug/projects/new/",
                                        "requisiteTasks": Array [],
                                        "requisites": Array [],
                                        "skippable": false,
                                        "task": "create_project",
                                        "title": "Create a project",
                                      },
                                    ],
                                    "requisites": Array [
                                      "create_project",
                                    ],
                                    "skippable": true,
                                    "task": "setup_alert_rules",
                                    "title": "Configure alerting rules",
                                  }
                                }
                              >
                                <Item
                                  data-test-id="setup_alert_rules"
                                  interactive={true}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="css-apaklj-Card-hoverStyle-Item e9zebce0"
                                    data-test-id="setup_alert_rules"
                                    onClick={[Function]}
                                  >
                                    <Title>
                                      <h5
                                        className="css-55b0pa-Title e9zebce1"
                                      >
                                        <Tooltip
                                          containerDisplayMode="block"
                                          position="top"
                                          title={
                                            <span>
                                              <span>
                                                Create a project
                                              </span>
                                              <span>
                                                 before completing this task
                                              </span>
                                            </span>
                                          }
                                        >
                                          <Manager>
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <Container
                                                  aria-describedby="tooltip-123456"
                                                  containerDisplayMode="block"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                >
                                                  <span
                                                    aria-describedby="tooltip-123456"
                                                    className="css-1513qml-Container eowlwvy0"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <ForwardRef
                                                      color="#FA5849"
                                                      size="xs"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        color="#FA5849"
                                                        size="xs"
                                                      >
                                                        <svg
                                                          fill="#FA5849"
                                                          height="12px"
                                                          viewBox="0 0 16 16"
                                                          width="12px"
                                                        >
                                                          <path
                                                            d="M12.42,7.19h-1.5V4.34a2.84,2.84,0,1,0-5.67,0V7.19H3.75V4.34a4.34,4.34,0,1,1,8.67,0Z"
                                                          />
                                                          <path
                                                            d="M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z"
                                                          />
                                                          <path
                                                            d="M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </ForwardRef>
                                                  </span>
                                                </Container>
                                              </InnerReference>
                                            </Reference>
                                          </Manager>
                                        </Tooltip>
                                        Configure alerting rules
                                      </h5>
                                    </Title>
                                    <Description>
                                      <p
                                        className="css-127nzq8-Description e9zebce2"
                                      >
                                        Configure alerting rules to control error emails. Receive Sentry alerts in Slack, PagerDuty, and more.
                                      </p>
                                    </Description>
                                  </div>
                                </Item>
                              </Task>
                            </withRouter(Task)>
                          </WithOrganizationMockWrapper>
                        </ForwardRef>
                      </PoseElement>
                    </ForwardRef>
                    <CompleteList
                      _pose="enter"
                      key="complete-group"
                    >
                      <div
                        className="css-coc8a5-CompleteList eky05z33"
                      >
                        <PoseGroup
                          enterPose="complete"
                          flipMove={false}
                          preEnterPose="completeInit"
                        >
                          <Transition
                            enterAfterExit={false}
                            enterPose="complete"
                            exitPose="exit"
                            flipMove={false}
                            preEnterPose="completeInit"
                          />
                        </PoseGroup>
                      </div>
                    </CompleteList>
                  </Transition>
                </PoseGroup>
              </div>
            </TaskList>
          </div>
        </SidebarPanelBody>
      </div>
    </PanelContainer>
  </Portal>
</SidebarPanel>
`;

exports[`Sidebar renders without org and router 1`] = `
<OrgAndUserMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-4razvn-OrgAndUserMenu-SidebarDropdownMenu e10773n39"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-j625pk-UserSummary e10773n31"
        to="/settings/account/details/"
      >
        <Link
          className="css-j625pk-UserSummary e10773n31"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-j625pk-UserSummary e10773n31"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e10773n32"
                      >
                        <div
                          className="e10773n32 css-qu415y-StyledUserBadge-UserBadgeNoOverflow e31z2f80"
                        >
                          <StyledAvatar
                            gravatar={false}
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <UserAvatar
                              className="css-593o0g-StyledAvatar e31z2f84"
                              gravatar={false}
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <BaseAvatar
                                className="css-593o0g-StyledAvatar e31z2f84"
                                gravatarId="foo@example.com"
                                hasTooltip={false}
                                letterId="foo@example.com"
                                round={true}
                                size={32}
                                style={Object {}}
                                title="Foo Bar"
                                tooltip="Foo Bar (foo@example.com)"
                                type="letter_avatar"
                                uploadId=""
                                uploadPath="avatar"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="Foo Bar (foo@example.com)"
                                >
                                  <StyledBaseAvatar
                                    className="avatar css-593o0g-StyledAvatar e31z2f84"
                                    gravatarId="foo@example.com"
                                    letterId="foo@example.com"
                                    loaded={true}
                                    round={true}
                                    style={
                                      Object {
                                        "height": "32px",
                                        "width": "32px",
                                      }
                                    }
                                    title="Foo Bar"
                                    type="letter_avatar"
                                    uploadId=""
                                    uploadPath="avatar"
                                  >
                                    <span
                                      className="avatar e31z2f84 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                      title="Foo Bar"
                                      type="letter_avatar"
                                    >
                                      <ForwardRef
                                        displayName="Foo Bar"
                                        identifier="foo@example.com"
                                        round={true}
                                      >
                                        <LetterAvatar
                                          displayName="Foo Bar"
                                          forwardedRef={null}
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <Component
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            displayName="Foo Bar"
                                            forwardedRef={null}
                                            identifier="foo@example.com"
                                            round={true}
                                          >
                                            <svg
                                              className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                              viewBox="0 0 120 120"
                                            >
                                              <rect
                                                fill="#315cac"
                                                height="120"
                                                rx="15"
                                                ry="15"
                                                width="120"
                                                x="0"
                                                y="0"
                                              />
                                              <text
                                                fill="#FFFFFF"
                                                fontSize="65"
                                                style={
                                                  Object {
                                                    "dominantBaseline": "central",
                                                  }
                                                }
                                                textAnchor="middle"
                                                x="50%"
                                                y="50%"
                                              >
                                                FB
                                              </text>
                                            </svg>
                                          </Component>
                                        </LetterAvatar>
                                      </ForwardRef>
                                    </span>
                                  </StyledBaseAvatar>
                                </Tooltip>
                              </BaseAvatar>
                            </UserAvatar>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail e31z2f81"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <span
                                  className="css-19h2nhd-StyledName e31z2f83"
                                >
                                  Foo Bar
                                </span>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail e31z2f82"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/api/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/api/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              to="/settings/account/api/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings/account/api/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <StyledSidebarMenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <SidebarMenuItemLink
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex={0}
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;
