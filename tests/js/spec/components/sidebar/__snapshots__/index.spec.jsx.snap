// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar SidebarDropdown can open "Switch Organization" sub-menu 1`] = `
<SwitchOrganizationMenu
  data-test-id="sidebar-switch-org-menu"
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-pm8679-SwitchOrganizationMenu-SidebarDropdownMenu ejspo4a4"
    data-test-id="sidebar-switch-org-menu"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <OrganizationList>
      <div
        className="css-1tlc4cl-OrganizationList ejspo4a5"
      />
    </OrganizationList>
    <SidebarMenuItem
      data-test-id="sidebar-create-org"
      style={
        Object {
          "alignItems": "center",
        }
      }
      to="/organizations/new/"
    >
      <StyledSidebarMenuItemLink
        data-test-id="sidebar-create-org"
        style={
          Object {
            "alignItems": "center",
          }
        }
        to="/organizations/new/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          data-test-id="sidebar-create-org"
          style={
            Object {
              "alignItems": "center",
            }
          }
          to="/organizations/new/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebar-create-org"
            style={
              Object {
                "alignItems": "center",
              }
            }
            target="_self"
            to="/organizations/new/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebar-create-org"
              onlyActiveOnIndex={false}
              style={
                Object {
                  "alignItems": "center",
                }
              }
              target="_self"
              to="/organizations/new/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                data-test-id="sidebar-create-org"
                onClick={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                  }
                }
                target="_self"
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    <MenuItemLabelWithIcon>
                      <span
                        className="css-1l4bf1b-MenuItemLabelWithIcon ejspo4a1"
                      >
                        <StyledIconAdd>
                          <ForwardRef(IconAdd)
                            className="css-4qjexj-StyledIconAdd ejspo4a0"
                          >
                            <svg
                              className="css-4qjexj-StyledIconAdd ejspo4a0"
                              fill="currentColor"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                            >
                              <g>
                                <path
                                  d="M15.19,8.75H.81a.75.75,0,1,1,0-1.5H15.19a.75.75,0,0,1,0,1.5Z"
                                />
                                <path
                                  d="M8,15.94a.76.76,0,0,1-.75-.75V.81a.75.75,0,0,1,1.5,0V15.19A.76.76,0,0,1,8,15.94Z"
                                />
                              </g>
                            </svg>
                          </ForwardRef(IconAdd)>
                        </StyledIconAdd>
                        <span>
                          Create a new organization
                        </span>
                      </span>
                    </MenuItemLabelWithIcon>
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
  </div>
</SwitchOrganizationMenu>
`;

exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
<OrgAndUserMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-4razvn-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <SidebarOrgSummary
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <OrgSummary>
        <div
          className="css-epf2t7-OrgSummary e1h7qc9l0"
        >
          <OrganizationAvatar
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            size={36}
          >
            <BaseAvatar
              hasTooltip={false}
              letterId="org-slug"
              round={false}
              size={36}
              style={Object {}}
              title="org slug"
              tooltip="org-slug"
              type="letter_avatar"
              uploadPath="organization-avatar"
            >
              <Tooltip
                containerDisplayMode="inline-block"
                disabled={true}
                position="top"
                title="org-slug"
              >
                <StyledBaseAvatar
                  className="avatar"
                  loaded={true}
                  round={false}
                  style={
                    Object {
                      "height": "36px",
                      "width": "36px",
                    }
                  }
                >
                  <span
                    className="avatar css-wr6j9i-StyledBaseAvatar e147uwb0"
                    style={
                      Object {
                        "height": "36px",
                        "width": "36px",
                      }
                    }
                  >
                    <LetterAvatar
                      displayName="org slug"
                      identifier="org-slug"
                      round={false}
                    >
                      <Component
                        className="css-1ei2ksv-LetterAvatar e12lgfev0"
                        displayName="org slug"
                        identifier="org-slug"
                        round={false}
                      >
                        <svg
                          className="css-1ei2ksv-LetterAvatar e12lgfev0"
                          viewBox="0 0 120 120"
                        >
                          <rect
                            fill="#4674ca"
                            height="120"
                            rx="15"
                            ry="15"
                            width="120"
                            x="0"
                            y="0"
                          />
                          <text
                            fill="#FFFFFF"
                            fontSize="65"
                            style={
                              Object {
                                "dominantBaseline": "central",
                              }
                            }
                            textAnchor="middle"
                            x="50%"
                            y="50%"
                          >
                            OS
                          </text>
                        </svg>
                      </Component>
                    </LetterAvatar>
                  </span>
                </StyledBaseAvatar>
              </Tooltip>
            </BaseAvatar>
          </OrganizationAvatar>
          <Details>
            <div
              className="css-18lie9u-Details e1h7qc9l3"
            >
              <SummaryOrgName>
                <div
                  className="css-1o68u16-SummaryOrgName e1h7qc9l1"
                >
                  Organization Name
                </div>
              </SummaryOrgName>
            </div>
          </Details>
        </div>
      </OrgSummary>
    </SidebarOrgSummary>
    <SidebarMenuItem
      to="/settings/org-slug/"
    >
      <StyledSidebarMenuItemLink
        to="/settings/org-slug/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          to="/settings/org-slug/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            target="_self"
            to="/settings/org-slug/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              onlyActiveOnIndex={false}
              style={Object {}}
              target="_self"
              to="/settings/org-slug/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onClick={[Function]}
                style={Object {}}
                target="_self"
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    Organization settings
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      to="/settings/org-slug/teams/"
    >
      <StyledSidebarMenuItemLink
        to="/settings/org-slug/teams/"
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          to="/settings/org-slug/teams/"
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            target="_self"
            to="/settings/org-slug/teams/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              onlyActiveOnIndex={false}
              style={Object {}}
              target="_self"
              to="/settings/org-slug/teams/"
            >
              <a
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onClick={[Function]}
                style={Object {}}
                target="_self"
              >
                <MenuItemLabel
                  hasMenu={false}
                >
                  <span
                    className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                  >
                    Teams
                  </span>
                </MenuItemLabel>
              </a>
            </Link>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <Hook
      name="sidebar:organization-dropdown-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:organization-dropdown-menu) />
    </Hook>
    <SidebarMenuItem>
      <StyledSidebarMenuItemLink>
        <SidebarMenuItemLink
          className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
        >
          <div
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            tabIndex={0}
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
              >
                <withOrganizations(SwitchOrganization)
                  canCreateOrganization={false}
                >
                  <SwitchOrganization
                    canCreateOrganization={false}
                    organizations={Array []}
                    organizationsLoading={true}
                  >
                    <DropdownMenu
                      closeOnEscape={true}
                      isNestedDropdown={true}
                      keepMenuOpen={false}
                    >
                      <SwitchOrganizationMenuActor
                        data-test-id="sidebar-switch-org"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "outline": "none",
                          }
                        }
                      >
                        <span
                          className="css-lpolsh-SwitchOrganizationMenuActor ejspo4a3"
                          data-test-id="sidebar-switch-org"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "outline": "none",
                            }
                          }
                        >
                          Switch organization
                          <SubMenuCaret>
                            <span
                              className="css-3ur4f5-SubMenuCaret ejspo4a2"
                            >
                              <i
                                className="icon-arrow-right"
                              />
                            </span>
                          </SubMenuCaret>
                        </span>
                      </SwitchOrganizationMenuActor>
                    </DropdownMenu>
                  </SwitchOrganization>
                </withOrganizations(SwitchOrganization)>
              </span>
            </MenuItemLabel>
          </div>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <Divider>
      <div
        className="css-10onrkb-Divider e18ox4wg0"
      />
    </Divider>
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-j625pk-UserSummary e1fowdfw1"
        to="/settings/account/details/"
      >
        <Link
          className="css-j625pk-UserSummary e1fowdfw1"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-j625pk-UserSummary e1fowdfw1"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      >
                        <div
                          className="e1fowdfw2 css-qu415y-StyledUserBadge-UserBadgeNoOverflow e31z2f80"
                        >
                          <StyledAvatar
                            gravatar={false}
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <UserAvatar
                              className="css-593o0g-StyledAvatar e31z2f84"
                              gravatar={false}
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <BaseAvatar
                                className="css-593o0g-StyledAvatar e31z2f84"
                                gravatarId="foo@example.com"
                                hasTooltip={false}
                                letterId="foo@example.com"
                                round={true}
                                size={32}
                                style={Object {}}
                                title="Foo Bar"
                                tooltip="Foo Bar (foo@example.com)"
                                type="letter_avatar"
                                uploadId=""
                                uploadPath="avatar"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="Foo Bar (foo@example.com)"
                                >
                                  <StyledBaseAvatar
                                    className="avatar css-593o0g-StyledAvatar e31z2f84"
                                    loaded={true}
                                    round={true}
                                    style={
                                      Object {
                                        "height": "32px",
                                        "width": "32px",
                                      }
                                    }
                                  >
                                    <span
                                      className="avatar e31z2f84 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                    >
                                      <LetterAvatar
                                        displayName="Foo Bar"
                                        identifier="foo@example.com"
                                        round={true}
                                      >
                                        <Component
                                          className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                          displayName="Foo Bar"
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <svg
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            viewBox="0 0 120 120"
                                          >
                                            <rect
                                              fill="#315cac"
                                              height="120"
                                              rx="15"
                                              ry="15"
                                              width="120"
                                              x="0"
                                              y="0"
                                            />
                                            <text
                                              fill="#FFFFFF"
                                              fontSize="65"
                                              style={
                                                Object {
                                                  "dominantBaseline": "central",
                                                }
                                              }
                                              textAnchor="middle"
                                              x="50%"
                                              y="50%"
                                            >
                                              FB
                                            </text>
                                          </svg>
                                        </Component>
                                      </LetterAvatar>
                                    </span>
                                  </StyledBaseAvatar>
                                </Tooltip>
                              </BaseAvatar>
                            </UserAvatar>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail e31z2f81"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <span
                                  className="css-19h2nhd-StyledName e31z2f83"
                                >
                                  Foo Bar
                                </span>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail e31z2f82"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              target="_self"
              to="/settings/account/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                target="_self"
                to="/settings/account/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                  target="_self"
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/api/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/api/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              target="_self"
              to="/settings/account/api/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                target="_self"
                to="/settings/account/api/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                  target="_self"
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <StyledSidebarMenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <SidebarMenuItemLink
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex={0}
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;

exports[`Sidebar SidebarHelp can toggle help menu 1`] = `
<HelpMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-jlq0c6-HelpMenu-SidebarDropdownMenu e1q2bb9t2"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <Hook
      name="sidebar:help-menu"
      organization={
        Object {
          "access": Array [
            "org:read",
            "org:write",
            "org:admin",
            "org:integrations",
            "project:read",
            "project:write",
            "project:admin",
            "team:read",
            "team:write",
            "team:admin",
          ],
          "features": Array [],
          "id": "3",
          "name": "Organization Name",
          "onboardingTasks": Array [],
          "projects": Array [],
          "scrapeJavaScript": true,
          "slug": "org-slug",
          "status": Object {
            "id": "active",
            "name": "active",
          },
          "teams": Array [],
        }
      }
    >
      <Hook(sidebar:help-menu) />
    </Hook>
    <SidebarMenuItem
      onClick={[Function]}
    >
      <StyledSidebarMenuItemLink
        onClick={[Function]}
      >
        <SidebarMenuItemLink
          className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
          onClick={[Function]}
        >
          <div
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            onClick={[Function]}
            tabIndex={0}
          >
            <MenuItemLabel
              hasMenu={true}
            >
              <span
                className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
              >
                Search Docs and FAQs
              </span>
            </MenuItemLabel>
          </div>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://forum.sentry.io/"
      openInNewTab={true}
    >
      <StyledSidebarMenuItemLink
        href="https://forum.sentry.io/"
        openInNewTab={true}
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          href="https://forum.sentry.io/"
          openInNewTab={true}
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            href="https://forum.sentry.io/"
            target="_blank"
          >
            <a
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              href="https://forum.sentry.io/"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Community Discussions
                </span>
              </MenuItemLabel>
            </a>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
    <SidebarMenuItem
      href="https://status.sentry.io/"
      openInNewTab={true}
    >
      <StyledSidebarMenuItemLink
        href="https://status.sentry.io/"
        openInNewTab={true}
      >
        <SidebarMenuItemLink
          className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
          href="https://status.sentry.io/"
          openInNewTab={true}
        >
          <Link
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            href="https://status.sentry.io/"
            target="_blank"
          >
            <a
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              href="https://status.sentry.io/"
              target="_blank"
            >
              <MenuItemLabel
                hasMenu={false}
              >
                <span
                  className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Service Status
                </span>
              </MenuItemLabel>
            </a>
          </Link>
        </SidebarMenuItemLink>
      </StyledSidebarMenuItemLink>
    </SidebarMenuItem>
  </div>
</HelpMenu>
`;

exports[`Sidebar SidebarPanel can display Broadcasts panel and mark as seen 1`] = `
<SidebarPanelItem
  hasSeen={false}
  key="8"
  link="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
  message="Source maps are JSON files that contain information on how to map your transpiled source code back to their original source."
  title="Learn about Source Maps"
>
  <SidebarPanelItemRoot>
    <div
      className="css-lce7u9-SidebarPanelItemRoot ekutvbl0"
    >
      <Title
        hasSeen={false}
      >
        <div
          className="css-1fgxw89-Title ekutvbl2"
        >
          Learn about Source Maps
        </div>
      </Title>
      <Message>
        <div
          className="css-kuchfm-Text-Message ekutvbl4"
        >
          Source maps are JSON files that contain information on how to map your transpiled source code back to their original source.
        </div>
      </Message>
      <Text>
        <div
          className="css-166h1v-Text ekutvbl3"
        >
          <ForwardRef
            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
          >
            <a
              href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
              rel="noreferrer noopener"
              target="_blank"
            >
              Read More
            </a>
          </ForwardRef>
        </div>
      </Text>
    </div>
  </SidebarPanelItemRoot>
</SidebarPanelItem>
`;

exports[`Sidebar SidebarPanel can show Incidents in Sidebar Panel 1`] = `
<IncidentList
  className="incident-list"
>
  <ul
    className="incident-list css-1iut4k0-IncidentList eglisrw0"
  >
    <IncidentItem
      key="1"
    >
      <li
        className="css-16z7ejm-IncidentItem eglisrw1"
      >
        <IncidentTitle>
          <div
            className="css-c7gclf-IncidentTitle eglisrw2"
          >
            Test Incident
          </div>
        </IncidentTitle>
        <div>
          <StatusHeader>
            <div
              className="css-1p5jdbq-StatusHeader eglisrw3"
            >
              Latest updates:
            </div>
          </StatusHeader>
          <StatusList>
            <ul
              className="css-xjcuzc-StatusList eglisrw4"
            >
              <StatusItem
                key="0"
              >
                <li
                  className="css-y8e5o2-StatusItem eglisrw5"
                >
                  First Update
                </li>
              </StatusItem>
              <StatusItem
                key="1"
              >
                <li
                  className="css-y8e5o2-StatusItem eglisrw5"
                >
                  Second Update
                </li>
              </StatusItem>
            </ul>
          </StatusList>
        </div>
        <div>
          <forwardRef<Button>
            external={true}
            href="https://status.sentry.io"
            size="small"
          >
            <Button
              align="center"
              disabled={false}
              external={true}
              forwardRef={null}
              href="https://status.sentry.io"
              size="small"
            >
              <StyledButton
                aria-disabled={false}
                aria-label="Learn more"
                disabled={false}
                external={true}
                forwardRef={null}
                href="https://status.sentry.io"
                onClick={[Function]}
                role="button"
                size="small"
              >
                <Component
                  aria-disabled={false}
                  aria-label="Learn more"
                  className="css-12ogwys-StyledButton edwq9my0"
                  external={true}
                  forwardRef={null}
                  href="https://status.sentry.io"
                  onClick={[Function]}
                  role="button"
                  size="small"
                >
                  <ForwardRef
                    aria-disabled={false}
                    aria-label="Learn more"
                    className="css-12ogwys-StyledButton edwq9my0"
                    href="https://status.sentry.io"
                    onClick={[Function]}
                    role="button"
                    size="small"
                  >
                    <a
                      aria-disabled={false}
                      aria-label="Learn more"
                      className="css-12ogwys-StyledButton edwq9my0"
                      href="https://status.sentry.io"
                      onClick={[Function]}
                      rel="noreferrer noopener"
                      role="button"
                      size="small"
                      target="_blank"
                    >
                      <ButtonLabel
                        align="center"
                        size="small"
                      >
                        <Component
                          align="center"
                          className="css-19gcr2f-ButtonLabel edwq9my1"
                          size="small"
                        >
                          <span
                            className="css-19gcr2f-ButtonLabel edwq9my1"
                          >
                            Learn more
                          </span>
                        </Component>
                      </ButtonLabel>
                    </a>
                  </ForwardRef>
                </Component>
              </StyledButton>
            </Button>
          </forwardRef<Button>>
        </div>
      </li>
    </IncidentItem>
  </ul>
</IncidentList>
`;

exports[`Sidebar can have onboarding feature 1`] = `
<SidebarPanel
  collapsed={false}
  hidePanel={[Function]}
  title="Getting Started with Sentry"
>
  <Portal
    containerInfo={
      <div
        id="sidebar-flyout-portal"
      >
        <div
          class="css-s9pvq1-PanelContainer e1aybls60"
        >
          <div
            class="css-1pq9bx-SidebarPanelHeader e1aybls61"
          >
            <div
              class="css-16z7jx4-Title e1aybls64"
            >
              Getting Started with Sentry
            </div>
            <svg
              class="css-7jb8pb-PanelClose e1aybls63"
              fill="currentColor"
              height="24px"
              viewBox="0 0 16 16"
              width="24px"
            >
              <g>
                <path
                  d="M15.13,15.88a.77.77,0,0,1-.53-.22L.34,1.4A.75.75,0,0,1,1.4.34L15.66,14.6a.75.75,0,0,1,0,1.06A.79.79,0,0,1,15.13,15.88Z"
                />
                <path
                  d="M.87,15.88a.79.79,0,0,1-.53-.22.75.75,0,0,1,0-1.06L14.6.34A.75.75,0,0,1,15.66,1.4L1.4,15.66A.77.77,0,0,1,.87,15.88Z"
                />
              </g>
            </svg>
          </div>
          <div
            class="css-18827hc-SidebarPanelBody e1aybls62"
          >
            <ul
              class="css-1vmqa5q-StyledTodoList epgvp2d0"
            >
              <li
                class="css-1tc3zvc-Item ev4hf7u0"
              >
                <div
                  class="css-9av8oo-Content ev4hf7u1"
                >
                  <div
                    class="css-kvrkkk-ActionTarget ev4hf7u6"
                    data-test-id="create_project"
                  >
                    <div
                      class="css-k6399d-Checkbox ev4hf7u2"
                    />
                    <h4
                      class="css-1x2o9i9-ItemHeader ev4hf7u7"
                    >
                      Create a project
                    </h4>
                    <p
                      class="css-1qxrlo5-Description ev4hf7u4"
                    >
                      Create your first Sentry project. Follow our quick and easy steps to set up a project and start sending errors.
                    </p>
                  </div>
                </div>
                <div
                  class="css-1bs7c7i-Confirmation e1yl8cry0"
                >
                  <h4
                    class="css-cwdjtc-Header e1yl8cry1"
                  >
                    Want help?
                  </h4>
                  <div>
                    <span>
                      <a
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Go to support
                          </span>
                        </span>
                      </a>
                      <span>
                         · 
                      </span>
                      <button
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Skip
                          </span>
                        </span>
                      </button>
                    </span>
                  </div>
                </div>
              </li>
              <li
                class="css-1tc3zvc-Item ev4hf7u0"
              >
                <div
                  class="css-9av8oo-Content ev4hf7u1"
                >
                  <div
                    class="css-kvrkkk-ActionTarget ev4hf7u6"
                    data-test-id="send_first_event"
                  >
                    <div
                      class="css-k6399d-Checkbox ev4hf7u2"
                    />
                    <h4
                      class="css-1x2o9i9-ItemHeader ev4hf7u7"
                    >
                      Send your first event
                    </h4>
                    <p
                      class="css-1qxrlo5-Description ev4hf7u4"
                    >
                      Install Sentry's client. Choose your platform and send an event.
                    </p>
                  </div>
                </div>
                <div
                  class="css-1bs7c7i-Confirmation e1yl8cry0"
                >
                  <h4
                    class="css-cwdjtc-Header e1yl8cry1"
                  >
                    Want help?
                  </h4>
                  <div>
                    <span>
                      <a
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Go to support
                          </span>
                        </span>
                      </a>
                      <span>
                         · 
                      </span>
                      <button
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Skip
                          </span>
                        </span>
                      </button>
                    </span>
                  </div>
                </div>
              </li>
              <li
                class="css-1tc3zvc-Item ev4hf7u0"
              >
                <div
                  class="css-9av8oo-Content ev4hf7u1"
                >
                  <div
                    class="css-kvrkkk-ActionTarget ev4hf7u6"
                    data-test-id="invite_member"
                  >
                    <div
                      class="css-k6399d-Checkbox ev4hf7u2"
                    />
                    <h4
                      class="css-1x2o9i9-ItemHeader ev4hf7u7"
                    >
                      Invite team members
                    </h4>
                    <p
                      class="css-1qxrlo5-Description ev4hf7u4"
                    >
                      Bring your team aboard. Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.
                    </p>
                  </div>
                  <button
                    aria-disabled="false"
                    aria-label="Skip task"
                    class="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                    role="button"
                  >
                    <span
                      class="css-cmi7y3-ButtonLabel edwq9my1"
                    >
                      Skip task
                    </span>
                  </button>
                </div>
                <div
                  class="css-1bs7c7i-Confirmation e1yl8cry0"
                >
                  <h4
                    class="css-cwdjtc-Header e1yl8cry1"
                  >
                    Want help?
                  </h4>
                  <div>
                    <span>
                      <a
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Go to support
                          </span>
                        </span>
                      </a>
                      <span>
                         · 
                      </span>
                      <button
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Skip
                          </span>
                        </span>
                      </button>
                    </span>
                  </div>
                </div>
              </li>
              <li
                class="css-1tc3zvc-Item ev4hf7u0"
              >
                <div
                  class="css-9av8oo-Content ev4hf7u1"
                >
                  <div
                    class="css-kvrkkk-ActionTarget ev4hf7u6"
                    data-test-id="setup_second_platform"
                  >
                    <div
                      class="css-k6399d-Checkbox ev4hf7u2"
                    />
                    <h4
                      class="css-1x2o9i9-ItemHeader ev4hf7u7"
                    >
                      Add a second platform
                    </h4>
                    <p
                      class="css-1qxrlo5-Description ev4hf7u4"
                    >
                      Add Sentry to a second platform. Capture errors from both your front and back ends.
                    </p>
                  </div>
                  <button
                    aria-disabled="false"
                    aria-label="Skip task"
                    class="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                    role="button"
                  >
                    <span
                      class="css-cmi7y3-ButtonLabel edwq9my1"
                    >
                      Skip task
                    </span>
                  </button>
                </div>
                <div
                  class="css-1bs7c7i-Confirmation e1yl8cry0"
                >
                  <h4
                    class="css-cwdjtc-Header e1yl8cry1"
                  >
                    Want help?
                  </h4>
                  <div>
                    <span>
                      <a
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Go to support
                          </span>
                        </span>
                      </a>
                      <span>
                         · 
                      </span>
                      <button
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Skip
                          </span>
                        </span>
                      </button>
                    </span>
                  </div>
                </div>
              </li>
              <li
                class="css-1tc3zvc-Item ev4hf7u0"
              >
                <div
                  class="css-9av8oo-Content ev4hf7u1"
                >
                  <a
                    class="css-1usfu4d-ActionExternalLink ev4hf7u5"
                    data-test-id="setup_user_context"
                    href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
                    rel="noreferrer noopener"
                    target="_blank"
                  >
                    <div
                      class="css-k6399d-Checkbox ev4hf7u2"
                    />
                    <h4
                      class="css-1x2o9i9-ItemHeader ev4hf7u7"
                    >
                      Add user context
                    </h4>
                    <p
                      class="css-1qxrlo5-Description ev4hf7u4"
                    >
                      Know who is being affected by crashes. Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.
                    </p>
                  </a>
                  <button
                    aria-disabled="false"
                    aria-label="Skip task"
                    class="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                    role="button"
                  >
                    <span
                      class="css-cmi7y3-ButtonLabel edwq9my1"
                    >
                      Skip task
                    </span>
                  </button>
                </div>
                <div
                  class="css-1bs7c7i-Confirmation e1yl8cry0"
                >
                  <h4
                    class="css-cwdjtc-Header e1yl8cry1"
                  >
                    Want help?
                  </h4>
                  <div>
                    <span>
                      <a
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Go to support
                          </span>
                        </span>
                      </a>
                      <span>
                         · 
                      </span>
                      <button
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Skip
                          </span>
                        </span>
                      </button>
                    </span>
                  </div>
                </div>
              </li>
              <li
                class="css-1tc3zvc-Item ev4hf7u0"
              >
                <div
                  class="css-9av8oo-Content ev4hf7u1"
                >
                  <div
                    class="css-kvrkkk-ActionTarget ev4hf7u6"
                    data-test-id="setup_release_tracking"
                  >
                    <div
                      class="css-k6399d-Checkbox ev4hf7u2"
                    />
                    <h4
                      class="css-1x2o9i9-ItemHeader ev4hf7u7"
                    >
                      Set up release tracking
                    </h4>
                    <p
                      class="css-1qxrlo5-Description ev4hf7u4"
                    >
                      See which releases cause errors. Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.
                    </p>
                  </div>
                  <button
                    aria-disabled="false"
                    aria-label="Skip task"
                    class="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                    role="button"
                  >
                    <span
                      class="css-cmi7y3-ButtonLabel edwq9my1"
                    >
                      Skip task
                    </span>
                  </button>
                </div>
                <div
                  class="css-1bs7c7i-Confirmation e1yl8cry0"
                >
                  <h4
                    class="css-cwdjtc-Header e1yl8cry1"
                  >
                    Want help?
                  </h4>
                  <div>
                    <span>
                      <a
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Go to support
                          </span>
                        </span>
                      </a>
                      <span>
                         · 
                      </span>
                      <button
                        aria-disabled="false"
                        class="css-1ilrgbi-StyledButton edwq9my0"
                        role="button"
                      >
                        <span
                          class="css-1igyjbb-ButtonLabel edwq9my1"
                        >
                          <span>
                            Skip
                          </span>
                        </span>
                      </button>
                    </span>
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    }
  >
    <PanelContainer
      collapsed={false}
    >
      <div
        className="css-s9pvq1-PanelContainer e1aybls60"
      >
        <SidebarPanelHeader>
          <div
            className="css-1pq9bx-SidebarPanelHeader e1aybls61"
          >
            <Title>
              <div
                className="css-16z7jx4-Title e1aybls64"
              >
                Getting Started with Sentry
              </div>
            </Title>
            <PanelClose
              onClick={[Function]}
              size="lg"
            >
              <ForwardRef(IconClose)
                className="css-7jb8pb-PanelClose e1aybls63"
                onClick={[Function]}
                size="lg"
              >
                <svg
                  className="css-7jb8pb-PanelClose e1aybls63"
                  fill="currentColor"
                  height="24px"
                  onClick={[Function]}
                  viewBox="0 0 16 16"
                  width="24px"
                >
                  <g>
                    <path
                      d="M15.13,15.88a.77.77,0,0,1-.53-.22L.34,1.4A.75.75,0,0,1,1.4.34L15.66,14.6a.75.75,0,0,1,0,1.06A.79.79,0,0,1,15.13,15.88Z"
                    />
                    <path
                      d="M.87,15.88a.79.79,0,0,1-.53-.22.75.75,0,0,1,0-1.06L14.6.34A.75.75,0,0,1,15.66,1.4L1.4,15.66A.77.77,0,0,1,.87,15.88Z"
                    />
                  </g>
                </svg>
              </ForwardRef(IconClose)>
            </PanelClose>
          </div>
        </SidebarPanelHeader>
        <SidebarPanelBody
          hasHeader={true}
        >
          <div
            className="css-18827hc-SidebarPanelBody e1aybls62"
          >
            <withApi(WithOrganizationMockWrapper)>
              <WithOrganizationMockWrapper
                api={
                  Client {
                    "_chain": [Function],
                    "_wrapRequest": [Function],
                    "bulkUpdate": [Function],
                    "handleRequestError": [Function],
                    "hasProjectBeenRenamed": [Function],
                  }
                }
              >
                <TodoList
                  api={
                    Client {
                      "_chain": [Function],
                      "_wrapRequest": [Function],
                      "bulkUpdate": [Function],
                      "handleRequestError": [Function],
                      "hasProjectBeenRenamed": [Function],
                    }
                  }
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "org:integrations",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "active",
                        "name": "active",
                      },
                      "teams": Array [],
                    }
                  }
                >
                  <StyledTodoList>
                    <ul
                      className="css-1vmqa5q-StyledTodoList epgvp2d0"
                    >
                      <WithOrganizationMockWrapper
                        key="create_project"
                        onSkip={[Function]}
                        task={
                          Object {
                            "actionType": "app",
                            "description": "Create your first Sentry project",
                            "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                            "display": true,
                            "location": "/organizations/org-slug/projects/new/",
                            "requisites": Array [],
                            "skippable": false,
                            "task": "create_project",
                            "title": "Create a project",
                          }
                        }
                      >
                        <withRouter(TodoItem)
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "actionType": "app",
                              "description": "Create your first Sentry project",
                              "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisites": Array [],
                              "skippable": false,
                              "task": "create_project",
                              "title": "Create a project",
                            }
                          }
                        >
                          <TodoItem
                            location={
                              Object {
                                "query": Object {},
                              }
                            }
                            onSkip={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            router={
                              Object {
                                "createHref": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "/settings/account/details/",
                                    ],
                                    Array [
                                      "/settings/account/",
                                    ],
                                    Array [
                                      "/settings/account/api/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "go": [MockFunction],
                                "goBack": [MockFunction],
                                "goForward": [MockFunction],
                                "isActive": [MockFunction],
                                "listen": [MockFunction],
                                "location": Object {
                                  "query": Object {},
                                },
                                "push": [MockFunction],
                                "replace": [MockFunction],
                                "setRouteLeaveHook": [MockFunction],
                              }
                            }
                            task={
                              Object {
                                "actionType": "app",
                                "description": "Create your first Sentry project",
                                "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisites": Array [],
                                "skippable": false,
                                "task": "create_project",
                                "title": "Create a project",
                              }
                            }
                          >
                            <Item>
                              <li
                                className="css-1tc3zvc-Item ev4hf7u0"
                              >
                                <Content
                                  blur={false}
                                >
                                  <div
                                    className="css-9av8oo-Content ev4hf7u1"
                                  >
                                    <Action
                                      data-test-id="create_project"
                                      onClick={[Function]}
                                    >
                                      <ActionTarget
                                        data-test-id="create_project"
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="css-kvrkkk-ActionTarget ev4hf7u6"
                                          data-test-id="create_project"
                                          onClick={[Function]}
                                        >
                                          <Checkbox>
                                            <div
                                              className="css-k6399d-Checkbox ev4hf7u2"
                                            />
                                          </Checkbox>
                                          <ItemHeader>
                                            <h4
                                              className="css-1x2o9i9-ItemHeader ev4hf7u7"
                                            >
                                              Create a project
                                            </h4>
                                          </ItemHeader>
                                          <Description>
                                            <p
                                              className="css-1qxrlo5-Description ev4hf7u4"
                                            >
                                              Create your first Sentry project. Follow our quick and easy steps to set up a project and start sending errors.
                                            </p>
                                          </Description>
                                        </div>
                                      </ActionTarget>
                                    </Action>
                                  </div>
                                </Content>
                                <Confirmation
                                  hide={true}
                                  onDismiss={[Function]}
                                  onSkip={[Function]}
                                  orgId="org-slug"
                                >
                                  <Component
                                    className="css-1bs7c7i-Confirmation e1yl8cry0"
                                    hide={true}
                                    onDismiss={[Function]}
                                    onSkip={[Function]}
                                    orgId="org-slug"
                                  >
                                    <div
                                      className="css-1bs7c7i-Confirmation e1yl8cry0"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e1yl8cry1"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <span
                                          key="6"
                                        >
                                          <forwardRef<Button>
                                            key="1"
                                            priority="link"
                                            to="/settings/org-slug/support/"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              priority="link"
                                              to="/settings/org-slug/support/"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                                to="/settings/org-slug/support/"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  to="/settings/org-slug/support/"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    role="button"
                                                    style={Object {}}
                                                    to="/settings/org-slug/support/"
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="css-1ilrgbi-StyledButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                      style={Object {}}
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        priority="link"
                                                      >
                                                        <Component
                                                          align="center"
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          priority="link"
                                                        >
                                                          <span
                                                            className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          >
                                                            <span
                                                              key="0"
                                                            >
                                                              Go to support
                                                            </span>
                                                          </span>
                                                        </Component>
                                                      </ButtonLabel>
                                                    </a>
                                                  </Link>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                          <span
                                            key="2"
                                          >
                                             · 
                                          </span>
                                          <forwardRef<Button>
                                            key="4"
                                            onClick={[Function]}
                                            priority="link"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              priority="link"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    role="button"
                                                  >
                                                    <ButtonLabel
                                                      align="center"
                                                      priority="link"
                                                    >
                                                      <Component
                                                        align="center"
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        priority="link"
                                                      >
                                                        <span
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        >
                                                          <span
                                                            key="3"
                                                          >
                                                            Skip
                                                          </span>
                                                        </span>
                                                      </Component>
                                                    </ButtonLabel>
                                                  </button>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                        </span>
                                      </div>
                                    </div>
                                  </Component>
                                </Confirmation>
                              </li>
                            </Item>
                          </TodoItem>
                        </withRouter(TodoItem)>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="send_first_event"
                        onSkip={[Function]}
                        task={
                          Object {
                            "actionType": "app",
                            "description": "Install Sentry's client",
                            "detailedDescription": "Choose your platform and send an event.",
                            "display": true,
                            "location": "/settings/org-slug/projects/:projectId/install/",
                            "requisites": Array [
                              "create_project",
                            ],
                            "skippable": false,
                            "task": "send_first_event",
                            "title": "Send your first event",
                          }
                        }
                      >
                        <withRouter(TodoItem)
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "actionType": "app",
                              "description": "Install Sentry's client",
                              "detailedDescription": "Choose your platform and send an event.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/install/",
                              "requisites": Array [
                                "create_project",
                              ],
                              "skippable": false,
                              "task": "send_first_event",
                              "title": "Send your first event",
                            }
                          }
                        >
                          <TodoItem
                            location={
                              Object {
                                "query": Object {},
                              }
                            }
                            onSkip={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            router={
                              Object {
                                "createHref": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "/settings/account/details/",
                                    ],
                                    Array [
                                      "/settings/account/",
                                    ],
                                    Array [
                                      "/settings/account/api/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "go": [MockFunction],
                                "goBack": [MockFunction],
                                "goForward": [MockFunction],
                                "isActive": [MockFunction],
                                "listen": [MockFunction],
                                "location": Object {
                                  "query": Object {},
                                },
                                "push": [MockFunction],
                                "replace": [MockFunction],
                                "setRouteLeaveHook": [MockFunction],
                              }
                            }
                            task={
                              Object {
                                "actionType": "app",
                                "description": "Install Sentry's client",
                                "detailedDescription": "Choose your platform and send an event.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/install/",
                                "requisites": Array [
                                  "create_project",
                                ],
                                "skippable": false,
                                "task": "send_first_event",
                                "title": "Send your first event",
                              }
                            }
                          >
                            <Item>
                              <li
                                className="css-1tc3zvc-Item ev4hf7u0"
                              >
                                <Content
                                  blur={false}
                                >
                                  <div
                                    className="css-9av8oo-Content ev4hf7u1"
                                  >
                                    <Action
                                      data-test-id="send_first_event"
                                      onClick={[Function]}
                                    >
                                      <ActionTarget
                                        data-test-id="send_first_event"
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="css-kvrkkk-ActionTarget ev4hf7u6"
                                          data-test-id="send_first_event"
                                          onClick={[Function]}
                                        >
                                          <Checkbox>
                                            <div
                                              className="css-k6399d-Checkbox ev4hf7u2"
                                            />
                                          </Checkbox>
                                          <ItemHeader>
                                            <h4
                                              className="css-1x2o9i9-ItemHeader ev4hf7u7"
                                            >
                                              Send your first event
                                            </h4>
                                          </ItemHeader>
                                          <Description>
                                            <p
                                              className="css-1qxrlo5-Description ev4hf7u4"
                                            >
                                              Install Sentry's client. Choose your platform and send an event.
                                            </p>
                                          </Description>
                                        </div>
                                      </ActionTarget>
                                    </Action>
                                  </div>
                                </Content>
                                <Confirmation
                                  hide={true}
                                  onDismiss={[Function]}
                                  onSkip={[Function]}
                                  orgId="org-slug"
                                >
                                  <Component
                                    className="css-1bs7c7i-Confirmation e1yl8cry0"
                                    hide={true}
                                    onDismiss={[Function]}
                                    onSkip={[Function]}
                                    orgId="org-slug"
                                  >
                                    <div
                                      className="css-1bs7c7i-Confirmation e1yl8cry0"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e1yl8cry1"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <span
                                          key="6"
                                        >
                                          <forwardRef<Button>
                                            key="1"
                                            priority="link"
                                            to="/settings/org-slug/support/"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              priority="link"
                                              to="/settings/org-slug/support/"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                                to="/settings/org-slug/support/"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  to="/settings/org-slug/support/"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    role="button"
                                                    style={Object {}}
                                                    to="/settings/org-slug/support/"
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="css-1ilrgbi-StyledButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                      style={Object {}}
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        priority="link"
                                                      >
                                                        <Component
                                                          align="center"
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          priority="link"
                                                        >
                                                          <span
                                                            className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          >
                                                            <span
                                                              key="0"
                                                            >
                                                              Go to support
                                                            </span>
                                                          </span>
                                                        </Component>
                                                      </ButtonLabel>
                                                    </a>
                                                  </Link>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                          <span
                                            key="2"
                                          >
                                             · 
                                          </span>
                                          <forwardRef<Button>
                                            key="4"
                                            onClick={[Function]}
                                            priority="link"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              priority="link"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    role="button"
                                                  >
                                                    <ButtonLabel
                                                      align="center"
                                                      priority="link"
                                                    >
                                                      <Component
                                                        align="center"
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        priority="link"
                                                      >
                                                        <span
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        >
                                                          <span
                                                            key="3"
                                                          >
                                                            Skip
                                                          </span>
                                                        </span>
                                                      </Component>
                                                    </ButtonLabel>
                                                  </button>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                        </span>
                                      </div>
                                    </div>
                                  </Component>
                                </Confirmation>
                              </li>
                            </Item>
                          </TodoItem>
                        </withRouter(TodoItem)>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="invite_member"
                        onSkip={[Function]}
                        task={
                          Object {
                            "action": [Function],
                            "actionType": "action",
                            "description": "Bring your team aboard",
                            "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                            "display": true,
                            "requisites": Array [],
                            "skippable": true,
                            "task": "invite_member",
                            "title": "Invite team members",
                          }
                        }
                      >
                        <withRouter(TodoItem)
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "action": [Function],
                              "actionType": "action",
                              "description": "Bring your team aboard",
                              "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                              "display": true,
                              "requisites": Array [],
                              "skippable": true,
                              "task": "invite_member",
                              "title": "Invite team members",
                            }
                          }
                        >
                          <TodoItem
                            location={
                              Object {
                                "query": Object {},
                              }
                            }
                            onSkip={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            router={
                              Object {
                                "createHref": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "/settings/account/details/",
                                    ],
                                    Array [
                                      "/settings/account/",
                                    ],
                                    Array [
                                      "/settings/account/api/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "go": [MockFunction],
                                "goBack": [MockFunction],
                                "goForward": [MockFunction],
                                "isActive": [MockFunction],
                                "listen": [MockFunction],
                                "location": Object {
                                  "query": Object {},
                                },
                                "push": [MockFunction],
                                "replace": [MockFunction],
                                "setRouteLeaveHook": [MockFunction],
                              }
                            }
                            task={
                              Object {
                                "action": [Function],
                                "actionType": "action",
                                "description": "Bring your team aboard",
                                "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.",
                                "display": true,
                                "requisites": Array [],
                                "skippable": true,
                                "task": "invite_member",
                                "title": "Invite team members",
                              }
                            }
                          >
                            <Item>
                              <li
                                className="css-1tc3zvc-Item ev4hf7u0"
                              >
                                <Content
                                  blur={false}
                                >
                                  <div
                                    className="css-9av8oo-Content ev4hf7u1"
                                  >
                                    <Action
                                      data-test-id="invite_member"
                                      onClick={[Function]}
                                    >
                                      <ActionTarget
                                        data-test-id="invite_member"
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="css-kvrkkk-ActionTarget ev4hf7u6"
                                          data-test-id="invite_member"
                                          onClick={[Function]}
                                        >
                                          <Checkbox>
                                            <div
                                              className="css-k6399d-Checkbox ev4hf7u2"
                                            />
                                          </Checkbox>
                                          <ItemHeader>
                                            <h4
                                              className="css-1x2o9i9-ItemHeader ev4hf7u7"
                                            >
                                              Invite team members
                                            </h4>
                                          </ItemHeader>
                                          <Description>
                                            <p
                                              className="css-1qxrlo5-Description ev4hf7u4"
                                            >
                                              Bring your team aboard. Let Sentry help your team triage and assign issues. Improve your workflow
        by unlocking mentions, assignment, and suggested issue owners.
                                            </p>
                                          </Description>
                                        </div>
                                      </ActionTarget>
                                    </Action>
                                    <SkipButton
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <forwardRef<Button>
                                        className="css-14778x-SkipButton ev4hf7u8"
                                        onClick={[Function]}
                                        size="xsmall"
                                      >
                                        <Button
                                          align="center"
                                          className="css-14778x-SkipButton ev4hf7u8"
                                          disabled={false}
                                          forwardRef={null}
                                          onClick={[Function]}
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="css-14778x-SkipButton ev4hf7u8"
                                            disabled={false}
                                            forwardRef={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              aria-label="Skip task"
                                              className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <button
                                                aria-disabled={false}
                                                aria-label="Skip task"
                                                className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ButtonLabel
                                                  align="center"
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    align="center"
                                                    className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    >
                                                      Skip task
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </forwardRef<Button>>
                                    </SkipButton>
                                  </div>
                                </Content>
                                <Confirmation
                                  hide={true}
                                  onDismiss={[Function]}
                                  onSkip={[Function]}
                                  orgId="org-slug"
                                >
                                  <Component
                                    className="css-1bs7c7i-Confirmation e1yl8cry0"
                                    hide={true}
                                    onDismiss={[Function]}
                                    onSkip={[Function]}
                                    orgId="org-slug"
                                  >
                                    <div
                                      className="css-1bs7c7i-Confirmation e1yl8cry0"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e1yl8cry1"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <span
                                          key="6"
                                        >
                                          <forwardRef<Button>
                                            key="1"
                                            priority="link"
                                            to="/settings/org-slug/support/"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              priority="link"
                                              to="/settings/org-slug/support/"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                                to="/settings/org-slug/support/"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  to="/settings/org-slug/support/"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    role="button"
                                                    style={Object {}}
                                                    to="/settings/org-slug/support/"
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="css-1ilrgbi-StyledButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                      style={Object {}}
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        priority="link"
                                                      >
                                                        <Component
                                                          align="center"
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          priority="link"
                                                        >
                                                          <span
                                                            className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          >
                                                            <span
                                                              key="0"
                                                            >
                                                              Go to support
                                                            </span>
                                                          </span>
                                                        </Component>
                                                      </ButtonLabel>
                                                    </a>
                                                  </Link>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                          <span
                                            key="2"
                                          >
                                             · 
                                          </span>
                                          <forwardRef<Button>
                                            key="4"
                                            onClick={[Function]}
                                            priority="link"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              priority="link"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    role="button"
                                                  >
                                                    <ButtonLabel
                                                      align="center"
                                                      priority="link"
                                                    >
                                                      <Component
                                                        align="center"
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        priority="link"
                                                      >
                                                        <span
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        >
                                                          <span
                                                            key="3"
                                                          >
                                                            Skip
                                                          </span>
                                                        </span>
                                                      </Component>
                                                    </ButtonLabel>
                                                  </button>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                        </span>
                                      </div>
                                    </div>
                                  </Component>
                                </Confirmation>
                              </li>
                            </Item>
                          </TodoItem>
                        </withRouter(TodoItem)>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="setup_second_platform"
                        onSkip={[Function]}
                        task={
                          Object {
                            "actionType": "app",
                            "description": "Add Sentry to a second platform",
                            "detailedDescription": "Capture errors from both your front and back ends.",
                            "display": true,
                            "location": "/organizations/org-slug/projects/new/",
                            "requisites": Array [
                              "create_project",
                              "send_first_event",
                            ],
                            "skippable": true,
                            "task": "setup_second_platform",
                            "title": "Add a second platform",
                          }
                        }
                      >
                        <withRouter(TodoItem)
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "actionType": "app",
                              "description": "Add Sentry to a second platform",
                              "detailedDescription": "Capture errors from both your front and back ends.",
                              "display": true,
                              "location": "/organizations/org-slug/projects/new/",
                              "requisites": Array [
                                "create_project",
                                "send_first_event",
                              ],
                              "skippable": true,
                              "task": "setup_second_platform",
                              "title": "Add a second platform",
                            }
                          }
                        >
                          <TodoItem
                            location={
                              Object {
                                "query": Object {},
                              }
                            }
                            onSkip={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            router={
                              Object {
                                "createHref": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "/settings/account/details/",
                                    ],
                                    Array [
                                      "/settings/account/",
                                    ],
                                    Array [
                                      "/settings/account/api/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "go": [MockFunction],
                                "goBack": [MockFunction],
                                "goForward": [MockFunction],
                                "isActive": [MockFunction],
                                "listen": [MockFunction],
                                "location": Object {
                                  "query": Object {},
                                },
                                "push": [MockFunction],
                                "replace": [MockFunction],
                                "setRouteLeaveHook": [MockFunction],
                              }
                            }
                            task={
                              Object {
                                "actionType": "app",
                                "description": "Add Sentry to a second platform",
                                "detailedDescription": "Capture errors from both your front and back ends.",
                                "display": true,
                                "location": "/organizations/org-slug/projects/new/",
                                "requisites": Array [
                                  "create_project",
                                  "send_first_event",
                                ],
                                "skippable": true,
                                "task": "setup_second_platform",
                                "title": "Add a second platform",
                              }
                            }
                          >
                            <Item>
                              <li
                                className="css-1tc3zvc-Item ev4hf7u0"
                              >
                                <Content
                                  blur={false}
                                >
                                  <div
                                    className="css-9av8oo-Content ev4hf7u1"
                                  >
                                    <Action
                                      data-test-id="setup_second_platform"
                                      onClick={[Function]}
                                    >
                                      <ActionTarget
                                        data-test-id="setup_second_platform"
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="css-kvrkkk-ActionTarget ev4hf7u6"
                                          data-test-id="setup_second_platform"
                                          onClick={[Function]}
                                        >
                                          <Checkbox>
                                            <div
                                              className="css-k6399d-Checkbox ev4hf7u2"
                                            />
                                          </Checkbox>
                                          <ItemHeader>
                                            <h4
                                              className="css-1x2o9i9-ItemHeader ev4hf7u7"
                                            >
                                              Add a second platform
                                            </h4>
                                          </ItemHeader>
                                          <Description>
                                            <p
                                              className="css-1qxrlo5-Description ev4hf7u4"
                                            >
                                              Add Sentry to a second platform. Capture errors from both your front and back ends.
                                            </p>
                                          </Description>
                                        </div>
                                      </ActionTarget>
                                    </Action>
                                    <SkipButton
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <forwardRef<Button>
                                        className="css-14778x-SkipButton ev4hf7u8"
                                        onClick={[Function]}
                                        size="xsmall"
                                      >
                                        <Button
                                          align="center"
                                          className="css-14778x-SkipButton ev4hf7u8"
                                          disabled={false}
                                          forwardRef={null}
                                          onClick={[Function]}
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="css-14778x-SkipButton ev4hf7u8"
                                            disabled={false}
                                            forwardRef={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              aria-label="Skip task"
                                              className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <button
                                                aria-disabled={false}
                                                aria-label="Skip task"
                                                className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ButtonLabel
                                                  align="center"
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    align="center"
                                                    className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    >
                                                      Skip task
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </forwardRef<Button>>
                                    </SkipButton>
                                  </div>
                                </Content>
                                <Confirmation
                                  hide={true}
                                  onDismiss={[Function]}
                                  onSkip={[Function]}
                                  orgId="org-slug"
                                >
                                  <Component
                                    className="css-1bs7c7i-Confirmation e1yl8cry0"
                                    hide={true}
                                    onDismiss={[Function]}
                                    onSkip={[Function]}
                                    orgId="org-slug"
                                  >
                                    <div
                                      className="css-1bs7c7i-Confirmation e1yl8cry0"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e1yl8cry1"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <span
                                          key="6"
                                        >
                                          <forwardRef<Button>
                                            key="1"
                                            priority="link"
                                            to="/settings/org-slug/support/"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              priority="link"
                                              to="/settings/org-slug/support/"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                                to="/settings/org-slug/support/"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  to="/settings/org-slug/support/"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    role="button"
                                                    style={Object {}}
                                                    to="/settings/org-slug/support/"
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="css-1ilrgbi-StyledButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                      style={Object {}}
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        priority="link"
                                                      >
                                                        <Component
                                                          align="center"
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          priority="link"
                                                        >
                                                          <span
                                                            className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          >
                                                            <span
                                                              key="0"
                                                            >
                                                              Go to support
                                                            </span>
                                                          </span>
                                                        </Component>
                                                      </ButtonLabel>
                                                    </a>
                                                  </Link>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                          <span
                                            key="2"
                                          >
                                             · 
                                          </span>
                                          <forwardRef<Button>
                                            key="4"
                                            onClick={[Function]}
                                            priority="link"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              priority="link"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    role="button"
                                                  >
                                                    <ButtonLabel
                                                      align="center"
                                                      priority="link"
                                                    >
                                                      <Component
                                                        align="center"
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        priority="link"
                                                      >
                                                        <span
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        >
                                                          <span
                                                            key="3"
                                                          >
                                                            Skip
                                                          </span>
                                                        </span>
                                                      </Component>
                                                    </ButtonLabel>
                                                  </button>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                        </span>
                                      </div>
                                    </div>
                                  </Component>
                                </Confirmation>
                              </li>
                            </Item>
                          </TodoItem>
                        </withRouter(TodoItem)>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="setup_user_context"
                        onSkip={[Function]}
                        task={
                          Object {
                            "actionType": "external",
                            "description": "Know who is being affected by crashes",
                            "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                            "display": true,
                            "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                            "requisites": Array [
                              "create_project",
                              "send_first_event",
                            ],
                            "skippable": true,
                            "task": "setup_user_context",
                            "title": "Add user context",
                          }
                        }
                      >
                        <withRouter(TodoItem)
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "actionType": "external",
                              "description": "Know who is being affected by crashes",
                              "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                              "display": true,
                              "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                              "requisites": Array [
                                "create_project",
                                "send_first_event",
                              ],
                              "skippable": true,
                              "task": "setup_user_context",
                              "title": "Add user context",
                            }
                          }
                        >
                          <TodoItem
                            location={
                              Object {
                                "query": Object {},
                              }
                            }
                            onSkip={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            router={
                              Object {
                                "createHref": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "/settings/account/details/",
                                    ],
                                    Array [
                                      "/settings/account/",
                                    ],
                                    Array [
                                      "/settings/account/api/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "go": [MockFunction],
                                "goBack": [MockFunction],
                                "goForward": [MockFunction],
                                "isActive": [MockFunction],
                                "listen": [MockFunction],
                                "location": Object {
                                  "query": Object {},
                                },
                                "push": [MockFunction],
                                "replace": [MockFunction],
                                "setRouteLeaveHook": [MockFunction],
                              }
                            }
                            task={
                              Object {
                                "actionType": "external",
                                "description": "Know who is being affected by crashes",
                                "detailedDescription": "Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.",
                                "display": true,
                                "location": "https://docs.sentry.io/enriching-error-data/context/#capturing-the-user",
                                "requisites": Array [
                                  "create_project",
                                  "send_first_event",
                                ],
                                "skippable": true,
                                "task": "setup_user_context",
                                "title": "Add user context",
                              }
                            }
                          >
                            <Item>
                              <li
                                className="css-1tc3zvc-Item ev4hf7u0"
                              >
                                <Content
                                  blur={false}
                                >
                                  <div
                                    className="css-9av8oo-Content ev4hf7u1"
                                  >
                                    <Action
                                      data-test-id="setup_user_context"
                                      onClick={[Function]}
                                    >
                                      <ActionExternalLink
                                        data-test-id="setup_user_context"
                                        href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
                                        onClick={[Function]}
                                      >
                                        <ForwardRef
                                          className="css-1usfu4d-ActionExternalLink ev4hf7u5"
                                          data-test-id="setup_user_context"
                                          href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
                                          onClick={[Function]}
                                        >
                                          <a
                                            className="css-1usfu4d-ActionExternalLink ev4hf7u5"
                                            data-test-id="setup_user_context"
                                            href="https://docs.sentry.io/enriching-error-data/context/#capturing-the-user"
                                            onClick={[Function]}
                                            rel="noreferrer noopener"
                                            target="_blank"
                                          >
                                            <Checkbox>
                                              <div
                                                className="css-k6399d-Checkbox ev4hf7u2"
                                              />
                                            </Checkbox>
                                            <ItemHeader>
                                              <h4
                                                className="css-1x2o9i9-ItemHeader ev4hf7u7"
                                              >
                                                Add user context
                                              </h4>
                                            </ItemHeader>
                                            <Description>
                                              <p
                                                className="css-1qxrlo5-Description ev4hf7u4"
                                              >
                                                Know who is being affected by crashes. Unlock features that let you drill down into the number of users affected by an issue
        and get a broader sense about the quality of your application.
                                              </p>
                                            </Description>
                                          </a>
                                        </ForwardRef>
                                      </ActionExternalLink>
                                    </Action>
                                    <SkipButton
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <forwardRef<Button>
                                        className="css-14778x-SkipButton ev4hf7u8"
                                        onClick={[Function]}
                                        size="xsmall"
                                      >
                                        <Button
                                          align="center"
                                          className="css-14778x-SkipButton ev4hf7u8"
                                          disabled={false}
                                          forwardRef={null}
                                          onClick={[Function]}
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="css-14778x-SkipButton ev4hf7u8"
                                            disabled={false}
                                            forwardRef={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              aria-label="Skip task"
                                              className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <button
                                                aria-disabled={false}
                                                aria-label="Skip task"
                                                className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ButtonLabel
                                                  align="center"
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    align="center"
                                                    className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    >
                                                      Skip task
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </forwardRef<Button>>
                                    </SkipButton>
                                  </div>
                                </Content>
                                <Confirmation
                                  hide={true}
                                  onDismiss={[Function]}
                                  onSkip={[Function]}
                                  orgId="org-slug"
                                >
                                  <Component
                                    className="css-1bs7c7i-Confirmation e1yl8cry0"
                                    hide={true}
                                    onDismiss={[Function]}
                                    onSkip={[Function]}
                                    orgId="org-slug"
                                  >
                                    <div
                                      className="css-1bs7c7i-Confirmation e1yl8cry0"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e1yl8cry1"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <span
                                          key="6"
                                        >
                                          <forwardRef<Button>
                                            key="1"
                                            priority="link"
                                            to="/settings/org-slug/support/"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              priority="link"
                                              to="/settings/org-slug/support/"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                                to="/settings/org-slug/support/"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  to="/settings/org-slug/support/"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    role="button"
                                                    style={Object {}}
                                                    to="/settings/org-slug/support/"
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="css-1ilrgbi-StyledButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                      style={Object {}}
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        priority="link"
                                                      >
                                                        <Component
                                                          align="center"
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          priority="link"
                                                        >
                                                          <span
                                                            className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          >
                                                            <span
                                                              key="0"
                                                            >
                                                              Go to support
                                                            </span>
                                                          </span>
                                                        </Component>
                                                      </ButtonLabel>
                                                    </a>
                                                  </Link>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                          <span
                                            key="2"
                                          >
                                             · 
                                          </span>
                                          <forwardRef<Button>
                                            key="4"
                                            onClick={[Function]}
                                            priority="link"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              priority="link"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    role="button"
                                                  >
                                                    <ButtonLabel
                                                      align="center"
                                                      priority="link"
                                                    >
                                                      <Component
                                                        align="center"
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        priority="link"
                                                      >
                                                        <span
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        >
                                                          <span
                                                            key="3"
                                                          >
                                                            Skip
                                                          </span>
                                                        </span>
                                                      </Component>
                                                    </ButtonLabel>
                                                  </button>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                        </span>
                                      </div>
                                    </div>
                                  </Component>
                                </Confirmation>
                              </li>
                            </Item>
                          </TodoItem>
                        </withRouter(TodoItem)>
                      </WithOrganizationMockWrapper>
                      <WithOrganizationMockWrapper
                        key="setup_release_tracking"
                        onSkip={[Function]}
                        task={
                          Object {
                            "actionType": "app",
                            "description": "See which releases cause errors",
                            "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                            "display": true,
                            "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                            "requisites": Array [
                              "create_project",
                              "send_first_event",
                            ],
                            "skippable": true,
                            "task": "setup_release_tracking",
                            "title": "Set up release tracking",
                          }
                        }
                      >
                        <withRouter(TodoItem)
                          onSkip={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          task={
                            Object {
                              "actionType": "app",
                              "description": "See which releases cause errors",
                              "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                              "display": true,
                              "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                              "requisites": Array [
                                "create_project",
                                "send_first_event",
                              ],
                              "skippable": true,
                              "task": "setup_release_tracking",
                              "title": "Set up release tracking",
                            }
                          }
                        >
                          <TodoItem
                            location={
                              Object {
                                "query": Object {},
                              }
                            }
                            onSkip={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            router={
                              Object {
                                "createHref": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "/settings/account/details/",
                                    ],
                                    Array [
                                      "/settings/account/",
                                    ],
                                    Array [
                                      "/settings/account/api/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/projects/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/issues/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/releases/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/user-feedback/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/activity/",
                                    ],
                                    Array [
                                      "/organizations/org-slug/stats/",
                                    ],
                                    Array [
                                      "/settings/org-slug/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                    Array [
                                      "/settings/org-slug/support/",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "go": [MockFunction],
                                "goBack": [MockFunction],
                                "goForward": [MockFunction],
                                "isActive": [MockFunction],
                                "listen": [MockFunction],
                                "location": Object {
                                  "query": Object {},
                                },
                                "push": [MockFunction],
                                "replace": [MockFunction],
                                "setRouteLeaveHook": [MockFunction],
                              }
                            }
                            task={
                              Object {
                                "actionType": "app",
                                "description": "See which releases cause errors",
                                "detailedDescription": "Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.",
                                "display": true,
                                "location": "/settings/org-slug/projects/:projectId/release-tracking/",
                                "requisites": Array [
                                  "create_project",
                                  "send_first_event",
                                ],
                                "skippable": true,
                                "task": "setup_release_tracking",
                                "title": "Set up release tracking",
                              }
                            }
                          >
                            <Item>
                              <li
                                className="css-1tc3zvc-Item ev4hf7u0"
                              >
                                <Content
                                  blur={false}
                                >
                                  <div
                                    className="css-9av8oo-Content ev4hf7u1"
                                  >
                                    <Action
                                      data-test-id="setup_release_tracking"
                                      onClick={[Function]}
                                    >
                                      <ActionTarget
                                        data-test-id="setup_release_tracking"
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="css-kvrkkk-ActionTarget ev4hf7u6"
                                          data-test-id="setup_release_tracking"
                                          onClick={[Function]}
                                        >
                                          <Checkbox>
                                            <div
                                              className="css-k6399d-Checkbox ev4hf7u2"
                                            />
                                          </Checkbox>
                                          <ItemHeader>
                                            <h4
                                              className="css-1x2o9i9-ItemHeader ev4hf7u7"
                                            >
                                              Set up release tracking
                                            </h4>
                                          </ItemHeader>
                                          <Description>
                                            <p
                                              className="css-1qxrlo5-Description ev4hf7u4"
                                            >
                                              See which releases cause errors. Set up releases and associate commits to gain additional context when determining the
        cause of an issue and unlock the ability to resolve issues via commit message.
                                            </p>
                                          </Description>
                                        </div>
                                      </ActionTarget>
                                    </Action>
                                    <SkipButton
                                      onClick={[Function]}
                                      size="xsmall"
                                    >
                                      <forwardRef<Button>
                                        className="css-14778x-SkipButton ev4hf7u8"
                                        onClick={[Function]}
                                        size="xsmall"
                                      >
                                        <Button
                                          align="center"
                                          className="css-14778x-SkipButton ev4hf7u8"
                                          disabled={false}
                                          forwardRef={null}
                                          onClick={[Function]}
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            aria-label="Skip task"
                                            className="css-14778x-SkipButton ev4hf7u8"
                                            disabled={false}
                                            forwardRef={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              aria-label="Skip task"
                                              className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                              forwardRef={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <button
                                                aria-disabled={false}
                                                aria-label="Skip task"
                                                className="ev4hf7u8 css-sbtm7d-StyledButton-SkipButton edwq9my0"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ButtonLabel
                                                  align="center"
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    align="center"
                                                    className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-cmi7y3-ButtonLabel edwq9my1"
                                                    >
                                                      Skip task
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </forwardRef<Button>>
                                    </SkipButton>
                                  </div>
                                </Content>
                                <Confirmation
                                  hide={true}
                                  onDismiss={[Function]}
                                  onSkip={[Function]}
                                  orgId="org-slug"
                                >
                                  <Component
                                    className="css-1bs7c7i-Confirmation e1yl8cry0"
                                    hide={true}
                                    onDismiss={[Function]}
                                    onSkip={[Function]}
                                    orgId="org-slug"
                                  >
                                    <div
                                      className="css-1bs7c7i-Confirmation e1yl8cry0"
                                      onClick={[Function]}
                                    >
                                      <Header>
                                        <h4
                                          className="css-cwdjtc-Header e1yl8cry1"
                                        >
                                          Want help?
                                        </h4>
                                      </Header>
                                      <div>
                                        <span
                                          key="6"
                                        >
                                          <forwardRef<Button>
                                            key="1"
                                            priority="link"
                                            to="/settings/org-slug/support/"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              priority="link"
                                              to="/settings/org-slug/support/"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                                to="/settings/org-slug/support/"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  to="/settings/org-slug/support/"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    role="button"
                                                    style={Object {}}
                                                    to="/settings/org-slug/support/"
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="css-1ilrgbi-StyledButton edwq9my0"
                                                      onClick={[Function]}
                                                      role="button"
                                                      style={Object {}}
                                                    >
                                                      <ButtonLabel
                                                        align="center"
                                                        priority="link"
                                                      >
                                                        <Component
                                                          align="center"
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          priority="link"
                                                        >
                                                          <span
                                                            className="css-1igyjbb-ButtonLabel edwq9my1"
                                                          >
                                                            <span
                                                              key="0"
                                                            >
                                                              Go to support
                                                            </span>
                                                          </span>
                                                        </Component>
                                                      </ButtonLabel>
                                                    </a>
                                                  </Link>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                          <span
                                            key="2"
                                          >
                                             · 
                                          </span>
                                          <forwardRef<Button>
                                            key="4"
                                            onClick={[Function]}
                                            priority="link"
                                          >
                                            <Button
                                              align="center"
                                              disabled={false}
                                              forwardRef={null}
                                              onClick={[Function]}
                                              priority="link"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
                                                disabled={false}
                                                forwardRef={null}
                                                onClick={[Function]}
                                                priority="link"
                                                role="button"
                                              >
                                                <Component
                                                  aria-disabled={false}
                                                  className="css-1ilrgbi-StyledButton edwq9my0"
                                                  forwardRef={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    className="css-1ilrgbi-StyledButton edwq9my0"
                                                    onClick={[Function]}
                                                    role="button"
                                                  >
                                                    <ButtonLabel
                                                      align="center"
                                                      priority="link"
                                                    >
                                                      <Component
                                                        align="center"
                                                        className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        priority="link"
                                                      >
                                                        <span
                                                          className="css-1igyjbb-ButtonLabel edwq9my1"
                                                        >
                                                          <span
                                                            key="3"
                                                          >
                                                            Skip
                                                          </span>
                                                        </span>
                                                      </Component>
                                                    </ButtonLabel>
                                                  </button>
                                                </Component>
                                              </StyledButton>
                                            </Button>
                                          </forwardRef<Button>>
                                        </span>
                                      </div>
                                    </div>
                                  </Component>
                                </Confirmation>
                              </li>
                            </Item>
                          </TodoItem>
                        </withRouter(TodoItem)>
                      </WithOrganizationMockWrapper>
                    </ul>
                  </StyledTodoList>
                </TodoList>
              </WithOrganizationMockWrapper>
            </withApi(WithOrganizationMockWrapper)>
          </div>
        </SidebarPanelBody>
      </div>
    </PanelContainer>
  </Portal>
</SidebarPanel>
`;

exports[`Sidebar renders without org and router 1`] = `
<OrgAndUserMenu
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="css-4razvn-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw9"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <UserSummary
      to="/settings/account/details/"
    >
      <Link
        className="css-j625pk-UserSummary e1fowdfw1"
        to="/settings/account/details/"
      >
        <Link
          className="css-j625pk-UserSummary e1fowdfw1"
          onlyActiveOnIndex={false}
          style={Object {}}
          to="/settings/account/details/"
        >
          <a
            className="css-j625pk-UserSummary e1fowdfw1"
            onClick={[Function]}
            style={Object {}}
          >
            <UserBadgeNoOverflow
              avatarSize={32}
              user={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
            >
              <IdBadge
                avatarSize={32}
                className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                user={
                  Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  }
                }
              >
                <InlineErrorBoundary
                  mini={true}
                >
                  <ErrorBoundary
                    className="css-1wuy21l-InlineErrorBoundary e83vi020"
                    mini={true}
                  >
                    <UserBadge
                      avatarSize={32}
                      className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      user={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                    >
                      <StyledUserBadge
                        className="css-1b4dtj5-UserBadgeNoOverflow e1fowdfw2"
                      >
                        <div
                          className="e1fowdfw2 css-qu415y-StyledUserBadge-UserBadgeNoOverflow e31z2f80"
                        >
                          <StyledAvatar
                            gravatar={false}
                            size={32}
                            user={
                              Object {
                                "email": "foo@example.com",
                                "flags": Object {
                                  "newsletter_consent_prompt": false,
                                },
                                "hasPasswordAuth": true,
                                "id": "1",
                                "isAuthenticated": true,
                                "name": "Foo Bar",
                                "options": Object {
                                  "timezone": "UTC",
                                },
                                "permissions": Set {},
                                "username": "foo@example.com",
                              }
                            }
                          >
                            <UserAvatar
                              className="css-593o0g-StyledAvatar e31z2f84"
                              gravatar={false}
                              size={32}
                              user={
                                Object {
                                  "email": "foo@example.com",
                                  "flags": Object {
                                    "newsletter_consent_prompt": false,
                                  },
                                  "hasPasswordAuth": true,
                                  "id": "1",
                                  "isAuthenticated": true,
                                  "name": "Foo Bar",
                                  "options": Object {
                                    "timezone": "UTC",
                                  },
                                  "permissions": Set {},
                                  "username": "foo@example.com",
                                }
                              }
                            >
                              <BaseAvatar
                                className="css-593o0g-StyledAvatar e31z2f84"
                                gravatarId="foo@example.com"
                                hasTooltip={false}
                                letterId="foo@example.com"
                                round={true}
                                size={32}
                                style={Object {}}
                                title="Foo Bar"
                                tooltip="Foo Bar (foo@example.com)"
                                type="letter_avatar"
                                uploadId=""
                                uploadPath="avatar"
                              >
                                <Tooltip
                                  containerDisplayMode="inline-block"
                                  disabled={true}
                                  position="top"
                                  title="Foo Bar (foo@example.com)"
                                >
                                  <StyledBaseAvatar
                                    className="avatar css-593o0g-StyledAvatar e31z2f84"
                                    loaded={true}
                                    round={true}
                                    style={
                                      Object {
                                        "height": "32px",
                                        "width": "32px",
                                      }
                                    }
                                  >
                                    <span
                                      className="avatar e31z2f84 css-13sepyg-StyledBaseAvatar-StyledAvatar e147uwb0"
                                      style={
                                        Object {
                                          "height": "32px",
                                          "width": "32px",
                                        }
                                      }
                                    >
                                      <LetterAvatar
                                        displayName="Foo Bar"
                                        identifier="foo@example.com"
                                        round={true}
                                      >
                                        <Component
                                          className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                          displayName="Foo Bar"
                                          identifier="foo@example.com"
                                          round={true}
                                        >
                                          <svg
                                            className="css-1oxr9oh-LetterAvatar e12lgfev0"
                                            viewBox="0 0 120 120"
                                          >
                                            <rect
                                              fill="#315cac"
                                              height="120"
                                              rx="15"
                                              ry="15"
                                              width="120"
                                              x="0"
                                              y="0"
                                            />
                                            <text
                                              fill="#FFFFFF"
                                              fontSize="65"
                                              style={
                                                Object {
                                                  "dominantBaseline": "central",
                                                }
                                              }
                                              textAnchor="middle"
                                              x="50%"
                                              y="50%"
                                            >
                                              FB
                                            </text>
                                          </svg>
                                        </Component>
                                      </LetterAvatar>
                                    </span>
                                  </StyledBaseAvatar>
                                </Tooltip>
                              </BaseAvatar>
                            </UserAvatar>
                          </StyledAvatar>
                          <StyledNameAndEmail>
                            <div
                              className="css-14b4oxh-StyledNameAndEmail e31z2f81"
                            >
                              <StyledName
                                hideEmail={false}
                              >
                                <span
                                  className="css-19h2nhd-StyledName e31z2f83"
                                >
                                  Foo Bar
                                </span>
                              </StyledName>
                              <StyledEmail>
                                <div
                                  className="css-zdh78r-StyledEmail e31z2f82"
                                >
                                  foo@example.com
                                </div>
                              </StyledEmail>
                            </div>
                          </StyledNameAndEmail>
                        </div>
                      </StyledUserBadge>
                    </UserBadge>
                  </ErrorBoundary>
                </InlineErrorBoundary>
              </IdBadge>
            </UserBadgeNoOverflow>
          </a>
        </Link>
      </Link>
    </UserSummary>
    <div>
      <SidebarMenuItem
        to="/settings/account/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              target="_self"
              to="/settings/account/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                target="_self"
                to="/settings/account/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                  target="_self"
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      User settings
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        to="/settings/account/api/"
      >
        <StyledSidebarMenuItemLink
          to="/settings/account/api/"
        >
          <SidebarMenuItemLink
            className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
            to="/settings/account/api/"
          >
            <Link
              className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
              target="_self"
              to="/settings/account/api/"
            >
              <Link
                className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                onlyActiveOnIndex={false}
                style={Object {}}
                target="_self"
                to="/settings/account/api/"
              >
                <a
                  className="css-1eunyni-StyledSidebarMenuItemLink eev51g21"
                  onClick={[Function]}
                  style={Object {}}
                  target="_self"
                >
                  <MenuItemLabel
                    hasMenu={false}
                  >
                    <span
                      className="css-1ug1il4-MenuItemLabel-MenuItemLabel eev51g20"
                    >
                      API keys
                    </span>
                  </MenuItemLabel>
                </a>
              </Link>
            </Link>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
      <SidebarMenuItem
        data-test-id="sidebarSignout"
        onClick={[Function]}
      >
        <StyledSidebarMenuItemLink
          data-test-id="sidebarSignout"
          onClick={[Function]}
        >
          <SidebarMenuItemLink
            className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
            data-test-id="sidebarSignout"
            onClick={[Function]}
          >
            <div
              className="css-1sehl9l-StyledSidebarMenuItemLink eev51g21"
              data-test-id="sidebarSignout"
              onClick={[Function]}
              tabIndex={0}
            >
              <MenuItemLabel
                hasMenu={true}
              >
                <span
                  className="css-uvye8q-MenuItemLabel-MenuItemLabel eev51g20"
                >
                  Sign out
                </span>
              </MenuItemLabel>
            </div>
          </SidebarMenuItemLink>
        </StyledSidebarMenuItemLink>
      </SidebarMenuItem>
    </div>
  </div>
</OrgAndUserMenu>
`;
