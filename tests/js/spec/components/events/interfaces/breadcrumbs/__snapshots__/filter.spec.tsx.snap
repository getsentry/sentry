// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filter default render 1`] = `
<Filter
  onFilter={[MockFunction]}
  options={
    Array [
      Array [
        Object {
          "description": "HTTP request",
          "isChecked": true,
          "levels": Array [
            "info",
          ],
          "symbol": <UNDEFINED
            color="green400"
            icon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "IconSwitch",
                "render": [Function],
              }
            }
            size="xs"
          />,
          "type": "http",
        },
        Object {
          "description": "Transaction",
          "isChecked": true,
          "levels": Array [
            "error",
          ],
          "symbol": <UNDEFINED
            color="pink400"
            icon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "IconSpan",
                "render": [Function],
              }
            }
            size="xs"
          />,
          "type": "transaction",
        },
        Object {
          "description": "User Action",
          "isChecked": true,
          "levels": Array [
            "info",
          ],
          "symbol": <UNDEFINED
            color="purple400"
            icon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "IconUser",
                "render": [Function],
              }
            }
            size="xs"
          />,
          "type": "ui",
        },
        Object {
          "description": "Navigation",
          "isChecked": true,
          "levels": Array [
            "info",
          ],
          "symbol": <UNDEFINED
            color="green500"
            icon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "IconLocation",
                "render": [Function],
              }
            }
            size="xs"
          />,
          "type": "navigation",
        },
        Object {
          "description": "Debug",
          "isChecked": true,
          "levels": Array [
            "info",
          ],
          "symbol": <UNDEFINED
            color="purple500"
            icon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "IconFix",
                "render": [Function],
              }
            }
            size="xs"
          />,
          "type": "debug",
        },
        Object {
          "description": "Error",
          "isChecked": true,
          "levels": Array [
            "error",
          ],
          "symbol": <UNDEFINED
            color="red400"
            icon={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "IconFire",
                "render": [Function],
              }
            }
            size="xs"
          />,
          "type": "error",
        },
      ],
      Array [
        Object {
          "isChecked": true,
          "symbol": <UNDEFINED
            level="info"
          />,
          "type": "info",
        },
        Object {
          "isChecked": true,
          "symbol": <UNDEFINED
            level="error"
          />,
          "type": "error",
        },
      ],
    ]
  }
>
  <Wrapper>
    <div
      className="css-cd4fy0-Wrapper efxik2w0"
    >
      <DropdownControl
        alwaysRenderMenu={true}
        blendWithActor={true}
        button={[Function]}
        menuWidth="240px"
      >
        <Container>
          <div
            className="css-1rtatqb-Container e1r8p2re0"
          >
            <DropdownMenu
              alwaysRenderMenu={true}
              closeOnEscape={true}
              keepMenuOpen={false}
            >
              <DropDownButton
                checkedQuantity={8}
                getActorProps={[Function]}
                isOpen={false}
              >
                <StyledDropdownButton
                  hasDarkBorderBottomColor={true}
                  isOpen={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  priority="primary"
                  size="small"
                  style={
                    Object {
                      "outline": "none",
                    }
                  }
                >
                  <ForwardRef
                    className="css-3q3sgn-StyledDropdownButton e1sx99c0"
                    hasDarkBorderBottomColor={true}
                    isOpen={false}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    priority="primary"
                    size="small"
                    style={
                      Object {
                        "outline": "none",
                      }
                    }
                  >
                    <DropdownButton
                      className="css-3q3sgn-StyledDropdownButton e1sx99c0"
                      forwardedRef={[Function]}
                      hasDarkBorderBottomColor={true}
                      isOpen={false}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      priority="primary"
                      showChevron={true}
                      size="small"
                      style={
                        Object {
                          "outline": "none",
                        }
                      }
                    >
                      <StyledButton
                        className="css-3q3sgn-StyledDropdownButton e1sx99c0"
                        hasDarkBorderBottomColor={true}
                        hideBottomBorder={true}
                        isOpen={false}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        priority="primary"
                        size="small"
                        style={
                          Object {
                            "outline": "none",
                          }
                        }
                        type="button"
                      >
                        <forwardRef<Button>
                          className="e1sx99c0 css-fa3aic-StyledButton-StyledDropdownButton eenpoef1"
                          hasDarkBorderBottomColor={true}
                          hideBottomBorder={true}
                          isOpen={false}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          priority="primary"
                          size="small"
                          style={
                            Object {
                              "outline": "none",
                            }
                          }
                          type="button"
                        >
                          <Button
                            align="center"
                            className="e1sx99c0 css-fa3aic-StyledButton-StyledDropdownButton eenpoef1"
                            disabled={false}
                            forwardRef={[Function]}
                            hasDarkBorderBottomColor={true}
                            hideBottomBorder={true}
                            isOpen={false}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            priority="primary"
                            size="small"
                            style={
                              Object {
                                "outline": "none",
                              }
                            }
                            type="button"
                          >
                            <StyledButton
                              aria-disabled={false}
                              className="e1sx99c0 css-fa3aic-StyledButton-StyledDropdownButton eenpoef1"
                              disabled={false}
                              forwardRef={[Function]}
                              hasDarkBorderBottomColor={true}
                              hideBottomBorder={true}
                              isOpen={false}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              priority="primary"
                              role="button"
                              size="small"
                              style={
                                Object {
                                  "outline": "none",
                                }
                              }
                              type="button"
                            >
                              <Component
                                aria-disabled={false}
                                className="e1sx99c0 eenpoef1 css-1u4jty5-StyledButton-StyledButton-StyledDropdownButton edwq9my0"
                                forwardRef={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                role="button"
                                size="small"
                                style={
                                  Object {
                                    "outline": "none",
                                  }
                                }
                                type="button"
                              >
                                <button
                                  aria-disabled={false}
                                  className="e1sx99c0 eenpoef1 css-1u4jty5-StyledButton-StyledButton-StyledDropdownButton edwq9my0"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  size="small"
                                  style={
                                    Object {
                                      "outline": "none",
                                    }
                                  }
                                  type="button"
                                >
                                  <ButtonLabel
                                    align="center"
                                    priority="primary"
                                    size="small"
                                  >
                                    <span
                                      className="css-n7mdnv-ButtonLabel edwq9my1"
                                    >
                                      8 Active Filters
                                      <StyledChevron
                                        direction="down"
                                        size="10px"
                                      >
                                        <IconChevron
                                          className="css-17f1s2z-StyledChevron eenpoef0"
                                          direction="down"
                                          size="10px"
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "color": [Function],
                                                  "size": [Function],
                                                  "viewBox": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            className="css-17f1s2z-StyledChevron eenpoef0"
                                            css={
                                              Object {
                                                "map": undefined,
                                                "name": "7chgxg-IconChevron",
                                                "next": undefined,
                                                "styles": "transform:rotate(180deg);;label:IconChevron;",
                                                "toString": [Function],
                                              }
                                            }
                                            size="10px"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
                                              size="10px"
                                            >
                                              <svg
                                                className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
                                                fill="currentColor"
                                                height="10px"
                                                viewBox="0 0 16 16"
                                                width="10px"
                                              >
                                                <path
                                                  d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </EmotionCssPropInternal>
                                        </IconChevron>
                                      </StyledChevron>
                                    </span>
                                  </ButtonLabel>
                                </button>
                              </Component>
                            </StyledButton>
                          </Button>
                        </forwardRef<Button>>
                      </StyledButton>
                    </DropdownButton>
                  </ForwardRef>
                </StyledDropdownButton>
              </DropDownButton>
              <Content
                alignMenu="left"
                blendCorner={true}
                blendWithActor={true}
                isOpen={false}
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                theme={
                  Object {
                    "alert": Object {
                      "error": Object {
                        "background": "#FA4747",
                        "backgroundLight": "#FFF5F7",
                        "border": "#F4B1BB",
                        "iconColor": "#FA4747",
                        "textLight": "#F4B1BB",
                      },
                      "info": Object {
                        "background": "#3D74DB",
                        "backgroundLight": "#F5F9FF",
                        "border": "#AFC7EE",
                        "iconColor": "#3D74DB",
                      },
                      "muted": Object {
                        "background": "#C6BECF",
                        "backgroundLight": "#FAF9FB",
                        "border": "#C6BECF",
                        "iconColor": "inherit",
                      },
                      "success": Object {
                        "background": "#4DC771",
                        "backgroundLight": "#F5FFFB",
                        "border": "#8FE7BF",
                        "iconColor": "#1C8952",
                      },
                      "warn": Object {
                        "background": "#E2A301",
                        "backgroundLight": "#FFFDF5",
                        "border": "#FFC227",
                        "iconColor": "#E2A301",
                      },
                      "warning": Object {
                        "background": "#E2A301",
                        "backgroundLight": "#FFFDF5",
                        "border": "#FFC227",
                        "iconColor": "#E2A301",
                      },
                    },
                    "badge": Object {
                      "alpha": Object {
                        "background": "linear-gradient(90deg, #F69C7D, #BA4A23)",
                        "indicatorColor": "#FF7738",
                      },
                      "beta": Object {
                        "background": "linear-gradient(90deg, #E1567C, #6C5FC7)",
                        "indicatorColor": "#6C5FC7",
                      },
                      "new": Object {
                        "background": "linear-gradient(90deg, #4DC771, #1C8952)",
                        "indicatorColor": "#4DC771",
                      },
                    },
                    "blue100": "#F5F9FF",
                    "blue200": "#AFC7EE",
                    "blue300": "#7199DD",
                    "blue400": "#3D74DB",
                    "blue500": "#194591",
                    "borderDark": "#C6BECF",
                    "borderLight": "#E7E1EC",
                    "borderLighter": "#FAF9FB",
                    "borderRadius": "4px",
                    "borderRadiusBottom": "0 0 4px 4px",
                    "borderRadiusTop": "4px 4px 0 0",
                    "breakpoints": Array [
                      "768px",
                      "992px",
                      "1200px",
                      "1440px",
                      "2560px",
                    ],
                    "button": Object {
                      "borderRadius": "3px",
                      "danger": Object {
                        "background": "#FA4747",
                        "backgroundActive": "#bf2a1d",
                        "border": "#bf2a1d",
                        "borderActive": "#7d1c13",
                        "color": "#FFFFFF",
                        "colorActive": "#FFFFFF",
                        "focusShadow": "rgba(250, 71, 71, 0.5)",
                      },
                      "default": Object {
                        "background": "#FFFFFF",
                        "backgroundActive": "#FFFFFF",
                        "border": "#d8d2de",
                        "borderActive": "#c9c0d1",
                        "color": "#2f2936",
                        "colorActive": "#161319",
                        "focusShadow": "rgba(231, 225, 236, 0.5)",
                      },
                      "disabled": Object {
                        "background": "#FFFFFF",
                        "backgroundActive": "#FFFFFF",
                        "border": "#e3e5e6",
                        "borderActive": "#e3e5e6",
                        "color": "#C6BECF",
                        "colorActive": "#C6BECF",
                        "focusShadow": false,
                      },
                      "link": Object {
                        "background": "transparent",
                        "backgroundActive": "transparent",
                        "border": false,
                        "borderActive": false,
                        "color": "#3D74DB",
                        "colorActive": "#3D74DB",
                        "focusShadow": false,
                      },
                      "primary": Object {
                        "background": "#6C5FC7",
                        "backgroundActive": "#4e3fb4",
                        "border": "#3d328e",
                        "borderActive": "#352b7b",
                        "color": "#FFFFFF",
                        "colorActive": "#FFFFFF",
                        "focusShadow": "rgba(108, 95, 199, 0.4)",
                      },
                      "success": Object {
                        "background": "#3fa372",
                        "backgroundActive": "#4DC771",
                        "border": "#7ccca5",
                        "borderActive": "#7ccca5",
                        "color": "#FFFFFF",
                        "colorActive": "#FFFFFF",
                        "focusShadow": "rgba(77, 199, 113, 0.5)",
                      },
                    },
                    "charts": Object {
                      "colors": Array [
                        "#444674",
                        "#524a7e",
                        "#624d84",
                        "#744f88",
                        "#865189",
                        "#985389",
                        "#aa5488",
                        "#bc5585",
                        "#cd5681",
                        "#df567c",
                        "#e86070",
                        "#ed6c64",
                        "#f17959",
                        "#f4854e",
                        "#f59242",
                        "#f59e35",
                        "#f4aa27",
                        "#f2b712",
                      ],
                      "getColorPalette": [Function],
                      "previousPeriod": "#C6BECF",
                      "symbolSize": 6,
                    },
                    "diff": Object {
                      "added": "#d8f0e4",
                      "addedRow": "#f5fbf8",
                      "removed": "#f7ceca",
                      "removedRow": "#fcefee",
                    },
                    "disabled": "#C6BECF",
                    "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
                    "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
                    "dropShadowLightest": "0 1px 2px rgba(0, 0, 0, 0.04)",
                    "error": "#FA4747",
                    "fontSizeExtraLarge": "18px",
                    "fontSizeExtraSmall": "11px",
                    "fontSizeLarge": "16px",
                    "fontSizeMedium": "14px",
                    "fontSizeRelativeSmall": "0.9em",
                    "fontSizeSmall": "12px",
                    "gray100": "#FAF9FB",
                    "gray200": "#F2F0F5",
                    "gray300": "#E7E1EC",
                    "gray400": "#C6BECF",
                    "gray500": "#9585A3",
                    "gray600": "#645574",
                    "gray700": "#4A3E56",
                    "gray800": "#302839",
                    "green100": "#F5FFFB",
                    "green200": "#C0F3DD",
                    "green300": "#8FE7BF",
                    "green400": "#4DC771",
                    "green500": "#1C8952",
                    "grid": 8,
                    "headerFontSize": "22px",
                    "headerSelectorLabelHeight": 28,
                    "headerSelectorRowHeight": 44,
                    "iconDirections": Object {
                      "down": "180",
                      "left": "270",
                      "right": "90",
                      "up": "0",
                    },
                    "iconSizes": Object {
                      "lg": "24px",
                      "md": "20px",
                      "sm": "16px",
                      "xl": "32px",
                      "xs": "12px",
                    },
                    "orange100": "#FCF8F7",
                    "orange200": "#F9C7B9",
                    "orange300": "#F69C7D",
                    "orange400": "#FF7738",
                    "orange500": "#BA4A23",
                    "pink100": "#FFF5F9",
                    "pink200": "#FFCEE4",
                    "pink300": "#FF99BC",
                    "pink400": "#E1567C",
                    "pink500": "#902D4C",
                    "purple100": "#FAF5FF",
                    "purple200": "#E7D3FF",
                    "purple300": "#B9A2FD",
                    "purple400": "#6C5FC7",
                    "purple500": "#3E2C73",
                    "red100": "#FFF5F7",
                    "red200": "#F4B1BB",
                    "red300": "#EA7282",
                    "red400": "#FA4747",
                    "red500": "#AC1025",
                    "settings": Object {
                      "containerWidth": "1440px",
                      "headerHeight": "69px",
                      "maxCrumbWidth": "240px",
                      "sidebarWidth": "220px",
                    },
                    "sidebar": Object {
                      "background": "#2f2936",
                      "badgeSize": "22px",
                      "collapsedWidth": "70px",
                      "color": "#9586a5",
                      "divider": "#493e54",
                      "expandedWidth": "220px",
                      "menuSpacing": "15px",
                      "mobileHeight": "54px",
                      "smallBadgeSize": "11px",
                    },
                    "similarity": Object {
                      "colors": Array [
                        "#ec5e44",
                        "#f38259",
                        "#f9a66d",
                        "#98b480",
                        "#57be8c",
                      ],
                      "empty": "#e2dee6",
                    },
                    "space": Array [
                      0,
                      8,
                      16,
                      20,
                      30,
                    ],
                    "success": "#4DC771",
                    "text": Object {
                      "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
                      "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
                      "lineHeightBody": "1.4",
                      "lineHeightHeading": "1.15",
                    },
                    "textColor": "#302839",
                    "white": "#FFFFFF",
                    "yellow100": "#FFFDF5",
                    "yellow200": "#FFF8C4",
                    "yellow300": "#FFF492",
                    "yellow400": "#FFC227",
                    "yellow500": "#E2A301",
                    "zIndex": Object {
                      "breadcrumbs": Object {
                        "gridCellError": 1,
                        "header": 2,
                        "iconWrapper": 1,
                      },
                      "dropdown": 1001,
                      "dropdownAutocomplete": Object {
                        "actor": 1008,
                        "menu": 1007,
                      },
                      "errorMessage": 1000,
                      "globalSelectionHeader": 1009,
                      "header": 1000,
                      "hovercard": 10002,
                      "initial": 1,
                      "modal": 10000,
                      "orgAndUserMenu": 1030,
                      "sentryErrorEmbed": 1090,
                      "settingsSidebarNav": 1018,
                      "settingsSidebarNavMask": 1017,
                      "sidebar": 1020,
                      "sidebarPanel": 1019,
                      "toast": 10001,
                      "tooltip": 10003,
                      "traceView": Object {
                        "dividerLine": 909,
                        "minimapContainer": 999,
                        "rowInfoMessage": 910,
                        "spanTreeToggler": 900,
                      },
                    },
                  }
                }
                width="240px"
              >
                <div
                  className="css-1pa22ky-DropdownBubble-Content e1r8p2re2"
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  width="240px"
                >
                  <OptionsGroup
                    onClick={[Function]}
                    options={
                      Array [
                        Object {
                          "description": "HTTP request",
                          "isChecked": true,
                          "levels": Array [
                            "info",
                          ],
                          "symbol": <UNDEFINED
                            color="green400"
                            icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "IconSwitch",
                                "render": [Function],
                              }
                            }
                            size="xs"
                          />,
                          "type": "http",
                        },
                        Object {
                          "description": "Transaction",
                          "isChecked": true,
                          "levels": Array [
                            "error",
                          ],
                          "symbol": <UNDEFINED
                            color="pink400"
                            icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "IconSpan",
                                "render": [Function],
                              }
                            }
                            size="xs"
                          />,
                          "type": "transaction",
                        },
                        Object {
                          "description": "User Action",
                          "isChecked": true,
                          "levels": Array [
                            "info",
                          ],
                          "symbol": <UNDEFINED
                            color="purple400"
                            icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "IconUser",
                                "render": [Function],
                              }
                            }
                            size="xs"
                          />,
                          "type": "ui",
                        },
                        Object {
                          "description": "Navigation",
                          "isChecked": true,
                          "levels": Array [
                            "info",
                          ],
                          "symbol": <UNDEFINED
                            color="green500"
                            icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "IconLocation",
                                "render": [Function],
                              }
                            }
                            size="xs"
                          />,
                          "type": "navigation",
                        },
                        Object {
                          "description": "Debug",
                          "isChecked": true,
                          "levels": Array [
                            "info",
                          ],
                          "symbol": <UNDEFINED
                            color="purple500"
                            icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "IconFix",
                                "render": [Function],
                              }
                            }
                            size="xs"
                          />,
                          "type": "debug",
                        },
                        Object {
                          "description": "Error",
                          "isChecked": true,
                          "levels": Array [
                            "error",
                          ],
                          "symbol": <UNDEFINED
                            color="red400"
                            icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "IconFire",
                                "render": [Function],
                              }
                            }
                            size="xs"
                          />,
                          "type": "error",
                        },
                      ]
                    }
                    type="type"
                  >
                    <div>
                      <Header>
                        <div
                          className="css-19x9s3h-Header e1cujor50"
                        >
                          Type
                        </div>
                      </Header>
                      <List>
                        <ul
                          className="css-16sggtq-List e1cujor51"
                        >
                          <ListItem
                            isChecked={true}
                            key="http"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                color="green400"
                                icon={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "IconSwitch",
                                    "render": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <IconWrapper
                                  color="green400"
                                >
                                  <div
                                    className="css-m7rno3-IconWrapper e1oljvyu0"
                                  >
                                    <IconSwitch
                                      size="xs"
                                    >
                                      <ForwardRef(SvgIcon)
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <path
                                            d="M3.91001 15.49C3.81147 15.4905 3.71383 15.4712 3.62281 15.4335C3.5318 15.3957 3.44925 15.3401 3.38001 15.27L0.510008 12.39C0.439251 12.3211 0.383015 12.2386 0.344618 12.1476C0.30622 12.0566 0.286438 11.9588 0.286438 11.86C0.286438 11.7612 0.30622 11.6634 0.344618 11.5724C0.383015 11.4814 0.439251 11.3989 0.510008 11.33L3.38001 8.46C3.52218 8.32752 3.71023 8.25539 3.90453 8.25882C4.09883 8.26225 4.28422 8.34096 4.42163 8.47837C4.55904 8.61579 4.63775 8.80117 4.64118 8.99547C4.64461 9.18978 4.57249 9.37782 4.44001 9.52L2.10001 11.86L4.44001 14.21C4.51077 14.2789 4.567 14.3614 4.6054 14.4524C4.6438 14.5434 4.66358 14.6412 4.66358 14.74C4.66358 14.8388 4.6438 14.9366 4.6054 15.0276C4.567 15.1186 4.51077 15.2011 4.44001 15.27C4.37111 15.3406 4.28862 15.3964 4.19753 15.4343C4.10644 15.4721 4.00863 15.491 3.91001 15.49Z"
                                          />
                                          <path
                                            d="M15 12.61H1C0.801088 12.61 0.610322 12.531 0.46967 12.3903C0.329018 12.2497 0.25 12.0589 0.25 11.86C0.25 11.6611 0.329018 11.4703 0.46967 11.3297C0.610322 11.189 0.801088 11.11 1 11.11H15C15.1989 11.11 15.3897 11.189 15.5303 11.3297C15.671 11.4703 15.75 11.6611 15.75 11.86C15.75 12.0589 15.671 12.2497 15.5303 12.3903C15.3897 12.531 15.1989 12.61 15 12.61Z"
                                          />
                                          <path
                                            d="M12.09 7.87C11.9914 7.87103 11.8936 7.85207 11.8025 7.81426C11.7114 7.77645 11.6289 7.72057 11.56 7.65C11.4892 7.58105 11.433 7.49864 11.3946 7.40761C11.3562 7.31659 11.3364 7.21879 11.3364 7.12C11.3364 7.02121 11.3562 6.92341 11.3946 6.83239C11.433 6.74136 11.4892 6.65895 11.56 6.59L13.9 4.25L11.56 1.9C11.4892 1.83105 11.433 1.74864 11.3946 1.65761C11.3562 1.56659 11.3364 1.46879 11.3364 1.37C11.3364 1.27121 11.3562 1.17341 11.3946 1.08239C11.433 0.99136 11.4892 0.908945 11.56 0.839999C11.7006 0.699548 11.8912 0.620659 12.09 0.620659C12.2887 0.620659 12.4794 0.699548 12.62 0.839999L15.49 3.72C15.6304 3.86062 15.7093 4.05125 15.7093 4.25C15.7093 4.44875 15.6304 4.63937 15.49 4.78L12.62 7.65C12.5508 7.72011 12.4682 7.77569 12.3772 7.81347C12.2862 7.85124 12.1885 7.87046 12.09 7.87Z"
                                          />
                                          <path
                                            d="M15 5H1C0.801088 5 0.610322 4.92098 0.46967 4.78033C0.329018 4.63968 0.25 4.44891 0.25 4.25C0.25 4.05109 0.329018 3.86032 0.46967 3.71967C0.610322 3.57902 0.801088 3.5 1 3.5H15C15.1989 3.5 15.3897 3.57902 15.5303 3.71967C15.671 3.86032 15.75 4.05109 15.75 4.25C15.75 4.44891 15.671 4.63968 15.5303 4.78033C15.3897 4.92098 15.1989 5 15 5Z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </IconSwitch>
                                  </div>
                                </IconWrapper>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                >
                                  HTTP request
                                </div>
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                          <ListItem
                            isChecked={true}
                            key="transaction"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                color="pink400"
                                icon={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "IconSpan",
                                    "render": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <IconWrapper
                                  color="pink400"
                                >
                                  <div
                                    className="css-efjb4a-IconWrapper e1oljvyu0"
                                  >
                                    <IconSpan
                                      size="xs"
                                    >
                                      <ForwardRef(SvgIcon)
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <path
                                            d="M8.28,14.48h6.24V11.16H8.28ZM4.88,9.66h6.24V6.34H4.88Zm7.74,0h2.15A1.25,1.25,0,0,1,16,10.91v3.82A1.25,1.25,0,0,1,14.77,16H8a1.25,1.25,0,0,1-1.25-1.25V11.16H4.63A1.25,1.25,0,0,1,3.38,9.91V6.34H1.23A1.25,1.25,0,0,1,0,5.09V1.27A1.25,1.25,0,0,1,1.23,0H8A1.25,1.25,0,0,1,9.22,1.27V4.84h2.15a1.25,1.25,0,0,1,1.25,1.25ZM1.48,4.84H7.72V1.52H1.48Z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </IconSpan>
                                  </div>
                                </IconWrapper>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                >
                                  Transaction
                                </div>
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                          <ListItem
                            isChecked={true}
                            key="ui"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                color="purple400"
                                icon={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "IconUser",
                                    "render": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <IconWrapper
                                  color="purple400"
                                >
                                  <div
                                    className="css-12w2aso-IconWrapper e1oljvyu0"
                                  >
                                    <IconUser
                                      size="xs"
                                    >
                                      <ForwardRef(SvgIcon)
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <path
                                            d="M8,10.63a4,4,0,0,1-3.94-4V4a3.94,3.94,0,1,1,7.88,0V6.68A4,4,0,0,1,8,10.63ZM8,1.52A2.44,2.44,0,0,0,5.56,4V6.68a2.44,2.44,0,1,0,4.88,0V4A2.44,2.44,0,0,0,8,1.52Z"
                                          />
                                          <path
                                            d="M14.19,16H1.81A1.74,1.74,0,0,1,.07,14.24V12.32A3.72,3.72,0,0,1,3.19,8.64l2.46-.41a.76.76,0,0,1,.87.62.75.75,0,0,1-.62.86l-2.47.41a2.22,2.22,0,0,0-1.86,2.2v1.92a.24.24,0,0,0,.24.24H14.19a.24.24,0,0,0,.24-.24V12.32a2.22,2.22,0,0,0-1.86-2.2L10.1,9.71a.75.75,0,0,1-.62-.86.76.76,0,0,1,.87-.62l2.47.41a3.72,3.72,0,0,1,3.11,3.68v1.92A1.74,1.74,0,0,1,14.19,16Z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </IconUser>
                                  </div>
                                </IconWrapper>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                >
                                  User Action
                                </div>
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                          <ListItem
                            isChecked={true}
                            key="navigation"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                color="green500"
                                icon={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "IconLocation",
                                    "render": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <IconWrapper
                                  color="green500"
                                >
                                  <div
                                    className="css-1o5bgxp-IconWrapper e1oljvyu0"
                                  >
                                    <IconLocation
                                      size="xs"
                                    >
                                      <ForwardRef(SvgIcon)
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <path
                                            d="M8,16a.74.74,0,0,1-.45-.15c-4-3-6.09-6.16-6.09-9.29A6.55,6.55,0,0,1,8,0a6.54,6.54,0,0,1,6.54,6.54c0,3.14-2,6.26-6.09,9.29A.74.74,0,0,1,8,16ZM8,1.51a5,5,0,0,0-5,5c0,2.53,1.69,5.13,5,7.74,3.34-2.61,5-5.21,5-7.74a5,5,0,0,0-5-5Z"
                                          />
                                          <path
                                            d="M8,8.85a2.78,2.78,0,1,1,2.77-2.77A2.78,2.78,0,0,1,8,8.85Zm0-4A1.28,1.28,0,1,0,9.27,6.08,1.27,1.27,0,0,0,8,4.8Z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </IconLocation>
                                  </div>
                                </IconWrapper>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                >
                                  Navigation
                                </div>
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                          <ListItem
                            isChecked={true}
                            key="debug"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                color="purple500"
                                icon={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "IconFix",
                                    "render": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <IconWrapper
                                  color="purple500"
                                >
                                  <div
                                    className="css-11o98lp-IconWrapper e1oljvyu0"
                                  >
                                    <IconFix
                                      size="xs"
                                    >
                                      <ForwardRef(SvgIcon)
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <path
                                            d="M2.68,16a2.64,2.64,0,0,1-1.86-.77,2.61,2.61,0,0,1-.77-1.86,2.58,2.58,0,0,1,.77-1.86L5.71,6.57l0-.05a4.74,4.74,0,0,1,.79-5.25A4.76,4.76,0,0,1,11.75.5.73.73,0,0,1,12.2,1a.74.74,0,0,1-.2.68L9.72,4l.61,1.67L12,6.28,14.28,4A.74.74,0,0,1,15,3.8a.73.73,0,0,1,.54.45,4.76,4.76,0,0,1-.77,5.27,4.76,4.76,0,0,1-5.28.78h0L4.54,15.18A2.62,2.62,0,0,1,2.68,16Zm6.9-14.4a2.86,2.86,0,0,0-2,.78A3.32,3.32,0,0,0,7.09,6l.19.53a.73.73,0,0,1-.18.78L1.88,12.52a1.13,1.13,0,0,0,0,1.6,1.15,1.15,0,0,0,1.6,0L8.71,8.9a.73.73,0,0,1,.78-.18l.5.18a3.32,3.32,0,0,0,3.68-.44A2.93,2.93,0,0,0,14.42,6l-1.7,1.7a.73.73,0,0,1-.79.17L9.49,7a.69.69,0,0,1-.44-.44l-.9-2.44a.73.73,0,0,1,.17-.79L10,1.58Z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </IconFix>
                                  </div>
                                </IconWrapper>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                >
                                  Debug
                                </div>
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                          <ListItem
                            isChecked={true}
                            key="error"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                color="red400"
                                icon={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "IconFire",
                                    "render": [Function],
                                  }
                                }
                                size="xs"
                              >
                                <IconWrapper
                                  color="red400"
                                >
                                  <div
                                    className="css-1hei10e-IconWrapper e1oljvyu0"
                                  >
                                    <IconFire
                                      size="xs"
                                    >
                                      <ForwardRef(SvgIcon)
                                        size="xs"
                                      >
                                        <svg
                                          fill="currentColor"
                                          height="12px"
                                          viewBox="0 0 16 16"
                                          width="12px"
                                        >
                                          <path
                                            d="M8.08,15.92A6.58,6.58,0,0,1,1.51,9.34a4.88,4.88,0,0,1,2.2-4.25.74.74,0,0,1,1,.34,6,6,0,0,1,4-5.3A.74.74,0,0,1,9.4.22a.73.73,0,0,1,.33.61v.31A15.07,15.07,0,0,0,10,4.93a3.72,3.72,0,0,1,2.3-1.7.74.74,0,0,1,.66.12.75.75,0,0,1,.3.6A6.21,6.21,0,0,0,14,6.79a5.78,5.78,0,0,1,.68,2.55A6.58,6.58,0,0,1,8.08,15.92ZM3.59,7.23A4.25,4.25,0,0,0,3,9.34a5.07,5.07,0,1,0,10.14,0,4.6,4.6,0,0,0-.54-1.94,8,8,0,0,1-.76-2.32A2,2,0,0,0,11.07,7a.75.75,0,0,1-1.32.58C8.4,6,8.25,4.22,8.23,2c-2,1.29-2.15,3.58-2.09,5.85A7.52,7.52,0,0,1,6.14,9a.74.74,0,0,1-.46.63.77.77,0,0,1-.76-.11A4.56,4.56,0,0,1,3.59,7.23Z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </IconFire>
                                  </div>
                                </IconWrapper>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                >
                                  Error
                                </div>
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                        </ul>
                      </List>
                    </div>
                  </OptionsGroup>
                  <OptionsGroup
                    onClick={[Function]}
                    options={
                      Array [
                        Object {
                          "isChecked": true,
                          "symbol": <UNDEFINED
                            level="info"
                          />,
                          "type": "info",
                        },
                        Object {
                          "isChecked": true,
                          "symbol": <UNDEFINED
                            level="error"
                          />,
                          "type": "error",
                        },
                      ]
                    }
                    type="level"
                  >
                    <div>
                      <Header>
                        <div
                          className="css-19x9s3h-Header e1cujor50"
                        >
                          Level
                        </div>
                      </Header>
                      <List>
                        <ul
                          className="css-16sggtq-List e1cujor51"
                        >
                          <ListItem
                            isChecked={true}
                            key="info"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                level="info"
                              >
                                <StyledTag
                                  color="blue400"
                                >
                                  <Component
                                    className="css-1dx7owx-Tag-StyledTag eio8trv0"
                                    color="blue400"
                                  >
                                    <div
                                      className="css-1dx7owx-Tag-StyledTag eio8trv0"
                                      color="blue400"
                                    >
                                      <Highlight
                                        text=""
                                      >
                                        <HighlightComponent
                                          className="css-hl9lzc-Highlight em9eqvp0"
                                          text=""
                                        >
                                          info
                                        </HighlightComponent>
                                      </Highlight>
                                    </div>
                                  </Component>
                                </StyledTag>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                />
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                          <ListItem
                            isChecked={true}
                            key="error"
                            onClick={[Function]}
                          >
                            <li
                              className="css-7g0svi-ListItem e1cujor52"
                              onClick={[Function]}
                            >
                              <Memo()
                                level="error"
                              >
                                <StyledTag
                                  color="red400"
                                >
                                  <Component
                                    className="css-eius55-Tag-StyledTag eio8trv0"
                                    color="red400"
                                  >
                                    <div
                                      className="css-eius55-Tag-StyledTag eio8trv0"
                                      color="red400"
                                    >
                                      <Highlight
                                        text=""
                                      >
                                        <HighlightComponent
                                          className="css-hl9lzc-Highlight em9eqvp0"
                                          text=""
                                        >
                                          error
                                        </HighlightComponent>
                                      </Highlight>
                                    </div>
                                  </Component>
                                </StyledTag>
                              </Memo()>
                              <ListItemDescription>
                                <div
                                  className="css-1xx8l1w-ListItemDescription e1cujor53"
                                />
                              </ListItemDescription>
                              <CheckboxFancy
                                isChecked={true}
                                isIndeterminate={false}
                                size="16px"
                              >
                                <Component
                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                  isChecked={true}
                                  isIndeterminate={false}
                                  size="16px"
                                >
                                  <div
                                    aria-checked={true}
                                    className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                    data-test-id="checkbox-fancy"
                                    role="checkbox"
                                  >
                                    <CheckboxFancyContent
                                      isChecked={true}
                                      isIndeterminate={false}
                                    >
                                      <IconCheckmark
                                        color="white"
                                        size="70%"
                                      >
                                        <ForwardRef(SvgIcon)
                                          color="white"
                                          data-test-id="icon-check-mark"
                                          size="70%"
                                        >
                                          <svg
                                            data-test-id="icon-check-mark"
                                            fill="#FFFFFF"
                                            height="70%"
                                            viewBox="0 0 16 16"
                                            width="70%"
                                          >
                                            <path
                                              d="M6.19,14.51a.77.77,0,0,1-.57-.25l-4.2-4.8a.75.75,0,0,1,1.13-1l3.56,4.06L13.36,1.82a.75.75,0,0,1,1-.21.76.76,0,0,1,.21,1.05L6.81,14.18a.73.73,0,0,1-.58.33Z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </IconCheckmark>
                                    </CheckboxFancyContent>
                                  </div>
                                </Component>
                              </CheckboxFancy>
                            </li>
                          </ListItem>
                        </ul>
                      </List>
                    </div>
                  </OptionsGroup>
                </div>
              </Content>
            </DropdownMenu>
          </div>
        </Container>
      </DropdownControl>
    </div>
  </Wrapper>
</Filter>
`;
