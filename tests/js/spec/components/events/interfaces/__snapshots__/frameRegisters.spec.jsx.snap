// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FrameRegisters should render registers 1`] = `
Array [
  <InlinePre
    data-test-id="frame-registers-value"
  >
    <pre
      className="css-quozkg-InlinePre e1e1y5ql0"
      data-test-id="frame-registers-value"
    >
      <FixedWidth>
        <span
          className="css-cb9msf-FixedWidth e1e1y5ql1"
        >
          <AnnotatedText
            meta={null}
            value="0x00007fff9300bf70"
          >
            <span>
              0x00007fff9300bf70
            </span>
          </AnnotatedText>
        </span>
      </FixedWidth>
      <Tooltip
        containerDisplayMode="inline-block"
        position="top"
        title="Hexadecimal"
      >
        <Manager>
          <Reference>
            <InnerReference
              setReferenceNode={[Function]}
            >
              <Container
                aria-describedby="tooltip-123456"
                containerDisplayMode="inline-block"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <span
                  aria-describedby="tooltip-123456"
                  className="css-1y4rfpo-Container eowlwvy0"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <Toggle
                    onClick={[Function]}
                    size="xs"
                  >
                    <IconSliders
                      className="css-5my71s-Toggle e1e1y5ql2"
                      onClick={[Function]}
                      size="xs"
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "color": [Function],
                              "size": [Function],
                              "viewBox": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        className="css-5my71s-Toggle e1e1y5ql2"
                        css={
                          Object {
                            "map": undefined,
                            "name": "gkc929-IconSliders",
                            "next": undefined,
                            "styles": "transform:rotate(0deg);;label:IconSliders;",
                            "toString": [Function],
                          }
                        }
                        onClick={[Function]}
                        size="xs"
                      >
                        <ForwardRef(SvgIcon)
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          onClick={[Function]}
                          size="xs"
                        >
                          <svg
                            className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                            fill="currentColor"
                            height="12px"
                            onClick={[Function]}
                            viewBox="0 0 16 16"
                            width="12px"
                          >
                            <path
                              d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                            />
                            <path
                              d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                            />
                            <path
                              d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                            />
                            <path
                              d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </EmotionCssPropInternal>
                    </IconSliders>
                  </Toggle>
                </span>
              </Container>
            </InnerReference>
          </Reference>
        </Manager>
      </Tooltip>
    </pre>
  </InlinePre>,
  <pre
    className="css-quozkg-InlinePre e1e1y5ql0"
    data-test-id="frame-registers-value"
  >
    <FixedWidth>
      <span
        className="css-cb9msf-FixedWidth e1e1y5ql1"
      >
        <AnnotatedText
          meta={null}
          value="0x00007fff9300bf70"
        >
          <span>
            0x00007fff9300bf70
          </span>
        </AnnotatedText>
      </span>
    </FixedWidth>
    <Tooltip
      containerDisplayMode="inline-block"
      position="top"
      title="Hexadecimal"
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <Container
              aria-describedby="tooltip-123456"
              containerDisplayMode="inline-block"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <span
                aria-describedby="tooltip-123456"
                className="css-1y4rfpo-Container eowlwvy0"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <Toggle
                  onClick={[Function]}
                  size="xs"
                >
                  <IconSliders
                    className="css-5my71s-Toggle e1e1y5ql2"
                    onClick={[Function]}
                    size="xs"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "color": [Function],
                            "size": [Function],
                            "viewBox": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      className="css-5my71s-Toggle e1e1y5ql2"
                      css={
                        Object {
                          "map": undefined,
                          "name": "gkc929-IconSliders",
                          "next": undefined,
                          "styles": "transform:rotate(0deg);;label:IconSliders;",
                          "toString": [Function],
                        }
                      }
                      onClick={[Function]}
                      size="xs"
                    >
                      <ForwardRef(SvgIcon)
                        className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                        onClick={[Function]}
                        size="xs"
                      >
                        <svg
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          fill="currentColor"
                          height="12px"
                          onClick={[Function]}
                          viewBox="0 0 16 16"
                          width="12px"
                        >
                          <path
                            d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                          />
                          <path
                            d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                          />
                          <path
                            d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                          />
                          <path
                            d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </EmotionCssPropInternal>
                  </IconSliders>
                </Toggle>
              </span>
            </Container>
          </InnerReference>
        </Reference>
      </Manager>
    </Tooltip>
  </pre>,
  <InlinePre
    data-test-id="frame-registers-value"
  >
    <pre
      className="css-quozkg-InlinePre e1e1y5ql0"
      data-test-id="frame-registers-value"
    >
      <FixedWidth>
        <span
          className="css-cb9msf-FixedWidth e1e1y5ql1"
        >
          <AnnotatedText
            meta={null}
            value="0x0000000000000000"
          >
            <span>
              0x0000000000000000
            </span>
          </AnnotatedText>
        </span>
      </FixedWidth>
      <Tooltip
        containerDisplayMode="inline-block"
        position="top"
        title="Hexadecimal"
      >
        <Manager>
          <Reference>
            <InnerReference
              setReferenceNode={[Function]}
            >
              <Container
                aria-describedby="tooltip-123456"
                containerDisplayMode="inline-block"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <span
                  aria-describedby="tooltip-123456"
                  className="css-1y4rfpo-Container eowlwvy0"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <Toggle
                    onClick={[Function]}
                    size="xs"
                  >
                    <IconSliders
                      className="css-5my71s-Toggle e1e1y5ql2"
                      onClick={[Function]}
                      size="xs"
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "color": [Function],
                              "size": [Function],
                              "viewBox": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        className="css-5my71s-Toggle e1e1y5ql2"
                        css={
                          Object {
                            "map": undefined,
                            "name": "gkc929-IconSliders",
                            "next": undefined,
                            "styles": "transform:rotate(0deg);;label:IconSliders;",
                            "toString": [Function],
                          }
                        }
                        onClick={[Function]}
                        size="xs"
                      >
                        <ForwardRef(SvgIcon)
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          onClick={[Function]}
                          size="xs"
                        >
                          <svg
                            className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                            fill="currentColor"
                            height="12px"
                            onClick={[Function]}
                            viewBox="0 0 16 16"
                            width="12px"
                          >
                            <path
                              d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                            />
                            <path
                              d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                            />
                            <path
                              d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                            />
                            <path
                              d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </EmotionCssPropInternal>
                    </IconSliders>
                  </Toggle>
                </span>
              </Container>
            </InnerReference>
          </Reference>
        </Manager>
      </Tooltip>
    </pre>
  </InlinePre>,
  <pre
    className="css-quozkg-InlinePre e1e1y5ql0"
    data-test-id="frame-registers-value"
  >
    <FixedWidth>
      <span
        className="css-cb9msf-FixedWidth e1e1y5ql1"
      >
        <AnnotatedText
          meta={null}
          value="0x0000000000000000"
        >
          <span>
            0x0000000000000000
          </span>
        </AnnotatedText>
      </span>
    </FixedWidth>
    <Tooltip
      containerDisplayMode="inline-block"
      position="top"
      title="Hexadecimal"
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <Container
              aria-describedby="tooltip-123456"
              containerDisplayMode="inline-block"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <span
                aria-describedby="tooltip-123456"
                className="css-1y4rfpo-Container eowlwvy0"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <Toggle
                  onClick={[Function]}
                  size="xs"
                >
                  <IconSliders
                    className="css-5my71s-Toggle e1e1y5ql2"
                    onClick={[Function]}
                    size="xs"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "color": [Function],
                            "size": [Function],
                            "viewBox": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      className="css-5my71s-Toggle e1e1y5ql2"
                      css={
                        Object {
                          "map": undefined,
                          "name": "gkc929-IconSliders",
                          "next": undefined,
                          "styles": "transform:rotate(0deg);;label:IconSliders;",
                          "toString": [Function],
                        }
                      }
                      onClick={[Function]}
                      size="xs"
                    >
                      <ForwardRef(SvgIcon)
                        className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                        onClick={[Function]}
                        size="xs"
                      >
                        <svg
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          fill="currentColor"
                          height="12px"
                          onClick={[Function]}
                          viewBox="0 0 16 16"
                          width="12px"
                        >
                          <path
                            d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                          />
                          <path
                            d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                          />
                          <path
                            d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                          />
                          <path
                            d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </EmotionCssPropInternal>
                  </IconSliders>
                </Toggle>
              </span>
            </Container>
          </InnerReference>
        </Reference>
      </Manager>
    </Tooltip>
  </pre>,
  <InlinePre
    data-test-id="frame-registers-value"
  >
    <pre
      className="css-quozkg-InlinePre e1e1y5ql0"
      data-test-id="frame-registers-value"
    >
      <FixedWidth>
        <span
          className="css-cb9msf-FixedWidth e1e1y5ql1"
        >
          <AnnotatedText
            meta={null}
            value="0x0000000000000000"
          >
            <span>
              0x0000000000000000
            </span>
          </AnnotatedText>
        </span>
      </FixedWidth>
      <Tooltip
        containerDisplayMode="inline-block"
        position="top"
        title="Hexadecimal"
      >
        <Manager>
          <Reference>
            <InnerReference
              setReferenceNode={[Function]}
            >
              <Container
                aria-describedby="tooltip-123456"
                containerDisplayMode="inline-block"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <span
                  aria-describedby="tooltip-123456"
                  className="css-1y4rfpo-Container eowlwvy0"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <Toggle
                    onClick={[Function]}
                    size="xs"
                  >
                    <IconSliders
                      className="css-5my71s-Toggle e1e1y5ql2"
                      onClick={[Function]}
                      size="xs"
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "color": [Function],
                              "size": [Function],
                              "viewBox": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        className="css-5my71s-Toggle e1e1y5ql2"
                        css={
                          Object {
                            "map": undefined,
                            "name": "gkc929-IconSliders",
                            "next": undefined,
                            "styles": "transform:rotate(0deg);;label:IconSliders;",
                            "toString": [Function],
                          }
                        }
                        onClick={[Function]}
                        size="xs"
                      >
                        <ForwardRef(SvgIcon)
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          onClick={[Function]}
                          size="xs"
                        >
                          <svg
                            className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                            fill="currentColor"
                            height="12px"
                            onClick={[Function]}
                            viewBox="0 0 16 16"
                            width="12px"
                          >
                            <path
                              d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                            />
                            <path
                              d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                            />
                            <path
                              d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                            />
                            <path
                              d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </EmotionCssPropInternal>
                    </IconSliders>
                  </Toggle>
                </span>
              </Container>
            </InnerReference>
          </Reference>
        </Manager>
      </Tooltip>
    </pre>
  </InlinePre>,
  <pre
    className="css-quozkg-InlinePre e1e1y5ql0"
    data-test-id="frame-registers-value"
  >
    <FixedWidth>
      <span
        className="css-cb9msf-FixedWidth e1e1y5ql1"
      >
        <AnnotatedText
          meta={null}
          value="0x0000000000000000"
        >
          <span>
            0x0000000000000000
          </span>
        </AnnotatedText>
      </span>
    </FixedWidth>
    <Tooltip
      containerDisplayMode="inline-block"
      position="top"
      title="Hexadecimal"
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <Container
              aria-describedby="tooltip-123456"
              containerDisplayMode="inline-block"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <span
                aria-describedby="tooltip-123456"
                className="css-1y4rfpo-Container eowlwvy0"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <Toggle
                  onClick={[Function]}
                  size="xs"
                >
                  <IconSliders
                    className="css-5my71s-Toggle e1e1y5ql2"
                    onClick={[Function]}
                    size="xs"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "color": [Function],
                            "size": [Function],
                            "viewBox": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      className="css-5my71s-Toggle e1e1y5ql2"
                      css={
                        Object {
                          "map": undefined,
                          "name": "gkc929-IconSliders",
                          "next": undefined,
                          "styles": "transform:rotate(0deg);;label:IconSliders;",
                          "toString": [Function],
                        }
                      }
                      onClick={[Function]}
                      size="xs"
                    >
                      <ForwardRef(SvgIcon)
                        className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                        onClick={[Function]}
                        size="xs"
                      >
                        <svg
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          fill="currentColor"
                          height="12px"
                          onClick={[Function]}
                          viewBox="0 0 16 16"
                          width="12px"
                        >
                          <path
                            d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                          />
                          <path
                            d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                          />
                          <path
                            d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                          />
                          <path
                            d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </EmotionCssPropInternal>
                  </IconSliders>
                </Toggle>
              </span>
            </Container>
          </InnerReference>
        </Reference>
      </Manager>
    </Tooltip>
  </pre>,
]
`;

exports[`FrameRegisters should skip registers without a value 1`] = `
Array [
  <InlinePre
    data-test-id="frame-registers-value"
  >
    <pre
      className="css-quozkg-InlinePre e1e1y5ql0"
      data-test-id="frame-registers-value"
    >
      <FixedWidth>
        <span
          className="css-cb9msf-FixedWidth e1e1y5ql1"
        >
          <AnnotatedText
            meta={null}
            value="0x00007fff9300bf70"
          >
            <span>
              0x00007fff9300bf70
            </span>
          </AnnotatedText>
        </span>
      </FixedWidth>
      <Tooltip
        containerDisplayMode="inline-block"
        position="top"
        title="Hexadecimal"
      >
        <Manager>
          <Reference>
            <InnerReference
              setReferenceNode={[Function]}
            >
              <Container
                aria-describedby="tooltip-123456"
                containerDisplayMode="inline-block"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <span
                  aria-describedby="tooltip-123456"
                  className="css-1y4rfpo-Container eowlwvy0"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <Toggle
                    onClick={[Function]}
                    size="xs"
                  >
                    <IconSliders
                      className="css-5my71s-Toggle e1e1y5ql2"
                      onClick={[Function]}
                      size="xs"
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "color": [Function],
                              "size": [Function],
                              "viewBox": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        className="css-5my71s-Toggle e1e1y5ql2"
                        css={
                          Object {
                            "map": undefined,
                            "name": "gkc929-IconSliders",
                            "next": undefined,
                            "styles": "transform:rotate(0deg);;label:IconSliders;",
                            "toString": [Function],
                          }
                        }
                        onClick={[Function]}
                        size="xs"
                      >
                        <ForwardRef(SvgIcon)
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          onClick={[Function]}
                          size="xs"
                        >
                          <svg
                            className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                            fill="currentColor"
                            height="12px"
                            onClick={[Function]}
                            viewBox="0 0 16 16"
                            width="12px"
                          >
                            <path
                              d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                            />
                            <path
                              d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                            />
                            <path
                              d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                            />
                            <path
                              d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </EmotionCssPropInternal>
                    </IconSliders>
                  </Toggle>
                </span>
              </Container>
            </InnerReference>
          </Reference>
        </Manager>
      </Tooltip>
    </pre>
  </InlinePre>,
  <pre
    className="css-quozkg-InlinePre e1e1y5ql0"
    data-test-id="frame-registers-value"
  >
    <FixedWidth>
      <span
        className="css-cb9msf-FixedWidth e1e1y5ql1"
      >
        <AnnotatedText
          meta={null}
          value="0x00007fff9300bf70"
        >
          <span>
            0x00007fff9300bf70
          </span>
        </AnnotatedText>
      </span>
    </FixedWidth>
    <Tooltip
      containerDisplayMode="inline-block"
      position="top"
      title="Hexadecimal"
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <Container
              aria-describedby="tooltip-123456"
              containerDisplayMode="inline-block"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <span
                aria-describedby="tooltip-123456"
                className="css-1y4rfpo-Container eowlwvy0"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <Toggle
                  onClick={[Function]}
                  size="xs"
                >
                  <IconSliders
                    className="css-5my71s-Toggle e1e1y5ql2"
                    onClick={[Function]}
                    size="xs"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "color": [Function],
                            "size": [Function],
                            "viewBox": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      className="css-5my71s-Toggle e1e1y5ql2"
                      css={
                        Object {
                          "map": undefined,
                          "name": "gkc929-IconSliders",
                          "next": undefined,
                          "styles": "transform:rotate(0deg);;label:IconSliders;",
                          "toString": [Function],
                        }
                      }
                      onClick={[Function]}
                      size="xs"
                    >
                      <ForwardRef(SvgIcon)
                        className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                        onClick={[Function]}
                        size="xs"
                      >
                        <svg
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          fill="currentColor"
                          height="12px"
                          onClick={[Function]}
                          viewBox="0 0 16 16"
                          width="12px"
                        >
                          <path
                            d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                          />
                          <path
                            d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                          />
                          <path
                            d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                          />
                          <path
                            d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </EmotionCssPropInternal>
                  </IconSliders>
                </Toggle>
              </span>
            </Container>
          </InnerReference>
        </Reference>
      </Manager>
    </Tooltip>
  </pre>,
  <InlinePre
    data-test-id="frame-registers-value"
  >
    <pre
      className="css-quozkg-InlinePre e1e1y5ql0"
      data-test-id="frame-registers-value"
    >
      <FixedWidth>
        <span
          className="css-cb9msf-FixedWidth e1e1y5ql1"
        >
          <AnnotatedText
            meta={null}
            value="0x0000000000000000"
          >
            <span>
              0x0000000000000000
            </span>
          </AnnotatedText>
        </span>
      </FixedWidth>
      <Tooltip
        containerDisplayMode="inline-block"
        position="top"
        title="Hexadecimal"
      >
        <Manager>
          <Reference>
            <InnerReference
              setReferenceNode={[Function]}
            >
              <Container
                aria-describedby="tooltip-123456"
                containerDisplayMode="inline-block"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <span
                  aria-describedby="tooltip-123456"
                  className="css-1y4rfpo-Container eowlwvy0"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <Toggle
                    onClick={[Function]}
                    size="xs"
                  >
                    <IconSliders
                      className="css-5my71s-Toggle e1e1y5ql2"
                      onClick={[Function]}
                      size="xs"
                    >
                      <EmotionCssPropInternal
                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "color": [Function],
                              "size": [Function],
                              "viewBox": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        className="css-5my71s-Toggle e1e1y5ql2"
                        css={
                          Object {
                            "map": undefined,
                            "name": "gkc929-IconSliders",
                            "next": undefined,
                            "styles": "transform:rotate(0deg);;label:IconSliders;",
                            "toString": [Function],
                          }
                        }
                        onClick={[Function]}
                        size="xs"
                      >
                        <ForwardRef(SvgIcon)
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          onClick={[Function]}
                          size="xs"
                        >
                          <svg
                            className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                            fill="currentColor"
                            height="12px"
                            onClick={[Function]}
                            viewBox="0 0 16 16"
                            width="12px"
                          >
                            <path
                              d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                            />
                            <path
                              d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                            />
                            <path
                              d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                            />
                            <path
                              d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                            />
                            <path
                              d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </EmotionCssPropInternal>
                    </IconSliders>
                  </Toggle>
                </span>
              </Container>
            </InnerReference>
          </Reference>
        </Manager>
      </Tooltip>
    </pre>
  </InlinePre>,
  <pre
    className="css-quozkg-InlinePre e1e1y5ql0"
    data-test-id="frame-registers-value"
  >
    <FixedWidth>
      <span
        className="css-cb9msf-FixedWidth e1e1y5ql1"
      >
        <AnnotatedText
          meta={null}
          value="0x0000000000000000"
        >
          <span>
            0x0000000000000000
          </span>
        </AnnotatedText>
      </span>
    </FixedWidth>
    <Tooltip
      containerDisplayMode="inline-block"
      position="top"
      title="Hexadecimal"
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <Container
              aria-describedby="tooltip-123456"
              containerDisplayMode="inline-block"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <span
                aria-describedby="tooltip-123456"
                className="css-1y4rfpo-Container eowlwvy0"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                <Toggle
                  onClick={[Function]}
                  size="xs"
                >
                  <IconSliders
                    className="css-5my71s-Toggle e1e1y5ql2"
                    onClick={[Function]}
                    size="xs"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconSliders"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "color": [Function],
                            "size": [Function],
                            "viewBox": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      className="css-5my71s-Toggle e1e1y5ql2"
                      css={
                        Object {
                          "map": undefined,
                          "name": "gkc929-IconSliders",
                          "next": undefined,
                          "styles": "transform:rotate(0deg);;label:IconSliders;",
                          "toString": [Function],
                        }
                      }
                      onClick={[Function]}
                      size="xs"
                    >
                      <ForwardRef(SvgIcon)
                        className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                        onClick={[Function]}
                        size="xs"
                      >
                        <svg
                          className="e1e1y5ql2 css-1i97kmy-IconSliders-Toggle"
                          fill="currentColor"
                          height="12px"
                          onClick={[Function]}
                          viewBox="0 0 16 16"
                          width="12px"
                        >
                          <path
                            d="M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z"
                          />
                          <path
                            d="M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z"
                          />
                          <path
                            d="M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z"
                          />
                          <path
                            d="M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z"
                          />
                          <path
                            d="M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </EmotionCssPropInternal>
                  </IconSliders>
                </Toggle>
              </span>
            </Container>
          </InnerReference>
        </Reference>
      </Manager>
    </Tooltip>
  </pre>,
]
`;
