// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DropdownLink renders and anchors to left by default 1`] = `
<DropdownLink
  alwaysRenderMenu={true}
  anchorRight={false}
  caret={true}
  disabled={false}
  menuClasses=""
  onClose={[Function]}
  onOpen={[Function]}
  title="test"
  topLevelClasses="top-level-class"
>
  <DropdownMenu
    alwaysRenderMenu={true}
    closeOnEscape={true}
    keepMenuOpen={false}
    onClose={[Function]}
    onOpen={[Function]}
  >
    <span
      className="dropdown top-level-class"
    >
      <a
        className="dropdown-actor dropdown-toggle"
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        style={
          Object {
            "outline": "none",
          }
        }
      >
        <div
          className="dropdown-actor-title"
        >
          <span>
            test
          </span>
          <IconChevron
            direction="down"
            size="xs"
          >
            <EmotionCssPropInternal
              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "propTypes": Object {
                    "color": [Function],
                    "size": [Function],
                    "viewBox": [Function],
                  },
                  "render": [Function],
                }
              }
              css={
                Object {
                  "map": undefined,
                  "name": "7chgxg-IconChevron",
                  "next": undefined,
                  "styles": "transform:rotate(180deg);;label:IconChevron;",
                  "toString": [Function],
                }
              }
              size="xs"
            >
              <ForwardRef(SvgIcon)
                className="css-7chgxg-IconChevron"
                size="xs"
              >
                <svg
                  className="css-7chgxg-IconChevron"
                  fill="currentColor"
                  height="12px"
                  viewBox="0 0 16 16"
                  width="12px"
                >
                  <path
                    d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </EmotionCssPropInternal>
          </IconChevron>
        </div>
      </a>
      <ul
        className="dropdown-menu"
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div>
          1
        </div>
        <div>
          2
        </div>
      </ul>
    </span>
  </DropdownMenu>
</DropdownLink>
`;

exports[`DropdownLink renders and anchors to right 1`] = `
<DropdownLink
  alwaysRenderMenu={true}
  anchorRight={true}
  caret={true}
  disabled={false}
  menuClasses=""
  onClose={[Function]}
  onOpen={[Function]}
  title="test"
  topLevelClasses="top-level-class"
>
  <DropdownMenu
    alwaysRenderMenu={true}
    closeOnEscape={true}
    keepMenuOpen={false}
    onClose={[Function]}
    onOpen={[Function]}
  >
    <span
      className="dropdown top-level-class pull-right anchor-right"
    >
      <a
        className="dropdown-actor dropdown-menu-right dropdown-toggle"
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        style={
          Object {
            "outline": "none",
          }
        }
      >
        <div
          className="dropdown-actor-title"
        >
          <span>
            test
          </span>
          <IconChevron
            direction="down"
            size="xs"
          >
            <EmotionCssPropInternal
              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IconChevron"
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "propTypes": Object {
                    "color": [Function],
                    "size": [Function],
                    "viewBox": [Function],
                  },
                  "render": [Function],
                }
              }
              css={
                Object {
                  "map": undefined,
                  "name": "7chgxg-IconChevron",
                  "next": undefined,
                  "styles": "transform:rotate(180deg);;label:IconChevron;",
                  "toString": [Function],
                }
              }
              size="xs"
            >
              <ForwardRef(SvgIcon)
                className="css-7chgxg-IconChevron"
                size="xs"
              >
                <svg
                  className="css-7chgxg-IconChevron"
                  fill="currentColor"
                  height="12px"
                  viewBox="0 0 16 16"
                  width="12px"
                >
                  <path
                    d="M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </EmotionCssPropInternal>
          </IconChevron>
        </div>
      </a>
      <ul
        className="dropdown-menu"
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div>
          1
        </div>
        <div>
          2
        </div>
      </ul>
    </span>
  </DropdownMenu>
</DropdownLink>
`;
