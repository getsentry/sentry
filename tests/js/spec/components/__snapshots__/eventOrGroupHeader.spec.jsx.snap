// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventOrGroupHeader Event hides level tag 1`] = `
<withRouter(EventOrGroupHeader)
  data={
    Object {
      "culprit": undefined,
      "eventID": "eventID",
      "groupID": "groupID",
      "id": "id",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
      "type": "default",
    }
  }
  hideLevel={true}
  projectId="projectId"
>
  <EventOrGroupHeader
    data={
      Object {
        "culprit": undefined,
        "eventID": "eventID",
        "groupID": "groupID",
        "id": "id",
        "metadata": Object {
          "directive": "metadata directive",
          "message": "metadata message",
          "title": "metadata title",
          "type": "metadata type",
          "uri": "metadata uri",
          "value": "metadata value",
        },
        "type": "default",
      }
    }
    hideLevel={true}
    includeLink={true}
    location={
      Object {
        "query": Object {},
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
    projectId="projectId"
    router={
      Object {
        "createHref": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "isActive": [MockFunction],
        "listen": [MockFunction],
        "location": Object {
          "query": Object {},
        },
        "params": Object {
          "orgId": "org-slug",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
        "setRouteLeaveHook": [MockFunction],
      }
    }
    size="normal"
  >
    <div
      data-test-id="event-issue-header"
    >
      <Title
        size="normal"
      >
        <div
          className="css-xfcjv1-Title-truncateStyles eex8od0"
          size="normal"
        >
          <GlobalSelectionLink
            data-test-id={null}
            style={null}
            to={
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              }
            }
          >
            <Link
              data-test-id={null}
              onlyActiveOnIndex={false}
              style={null}
              to={
                Object {
                  "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                  "query": Object {
                    "_allp": 1,
                    "query": undefined,
                  },
                }
              }
            >
              <a
                data-test-id={null}
                onClick={[Function]}
                style={null}
              >
                <EventOrGroupTitle
                  data={
                    Object {
                      "culprit": undefined,
                      "eventID": "eventID",
                      "groupID": "groupID",
                      "id": "id",
                      "metadata": Object {
                        "directive": "metadata directive",
                        "message": "metadata message",
                        "title": "metadata title",
                        "type": "metadata type",
                        "uri": "metadata uri",
                        "value": "metadata value",
                      },
                      "type": "default",
                    }
                  }
                  hideLevel={true}
                  includeLink={true}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  projectId="projectId"
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "params": Object {
                        "orgId": "org-slug",
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  size="normal"
                  style={
                    Object {
                      "fontWeight": 600,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontWeight": 600,
                      }
                    }
                  >
                    <GuideAnchor
                      disabled={true}
                      position="bottom"
                      target="issue_title"
                    >
                      metadata title
                    </GuideAnchor>
                  </span>
                </EventOrGroupTitle>
              </a>
            </Link>
          </GlobalSelectionLink>
        </div>
      </Title>
    </div>
  </EventOrGroupHeader>
</withRouter(EventOrGroupHeader)>
`;

exports[`EventOrGroupHeader Event renders with \`type = csp\` 1`] = `
<withRouter(EventOrGroupHeader)
  data={
    Object {
      "culprit": undefined,
      "eventID": "eventID",
      "groupID": "groupID",
      "id": "id",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
      "type": "csp",
    }
  }
  params={
    Object {
      "orgId": "orgId",
    }
  }
>
  <EventOrGroupHeader
    data={
      Object {
        "culprit": undefined,
        "eventID": "eventID",
        "groupID": "groupID",
        "id": "id",
        "metadata": Object {
          "directive": "metadata directive",
          "message": "metadata message",
          "title": "metadata title",
          "type": "metadata type",
          "uri": "metadata uri",
          "value": "metadata value",
        },
        "type": "csp",
      }
    }
    includeLink={true}
    location={
      Object {
        "query": Object {},
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
    router={
      Object {
        "createHref": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "isActive": [MockFunction],
        "listen": [MockFunction],
        "location": Object {
          "query": Object {},
        },
        "params": Object {
          "orgId": "org-slug",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
        "setRouteLeaveHook": [MockFunction],
      }
    }
    size="normal"
  >
    <div
      data-test-id="event-issue-header"
    >
      <Title
        size="normal"
      >
        <div
          className="css-xfcjv1-Title-truncateStyles eex8od0"
          size="normal"
        >
          <GlobalSelectionLink
            data-test-id={null}
            style={null}
            to={
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              }
            }
          >
            <Link
              data-test-id={null}
              onlyActiveOnIndex={false}
              style={null}
              to={
                Object {
                  "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                  "query": Object {
                    "_allp": 1,
                    "query": undefined,
                  },
                }
              }
            >
              <a
                data-test-id={null}
                onClick={[Function]}
                style={null}
              >
                <EventOrGroupTitle
                  data={
                    Object {
                      "culprit": undefined,
                      "eventID": "eventID",
                      "groupID": "groupID",
                      "id": "id",
                      "metadata": Object {
                        "directive": "metadata directive",
                        "message": "metadata message",
                        "title": "metadata title",
                        "type": "metadata type",
                        "uri": "metadata uri",
                        "value": "metadata value",
                      },
                      "type": "csp",
                    }
                  }
                  includeLink={true}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "params": Object {
                        "orgId": "org-slug",
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  size="normal"
                  style={
                    Object {
                      "fontWeight": 600,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontWeight": 600,
                      }
                    }
                  >
                    <GuideAnchor
                      disabled={true}
                      position="bottom"
                      target="issue_title"
                    >
                      <span>
                        metadata directive
                      </span>
                    </GuideAnchor>
                    <Spacer>
                      <span
                        style={
                          Object {
                            "display": "inline-block",
                            "width": 10,
                          }
                        }
                      >
                         
                      </span>
                    </Spacer>
                    <em
                      title="metadata uri"
                    >
                      metadata uri
                    </em>
                    <br />
                  </span>
                </EventOrGroupTitle>
              </a>
            </Link>
          </GlobalSelectionLink>
        </div>
      </Title>
      <Message
        size="normal"
      >
        <div
          className="css-1ls6xj9-Message-truncateStyles eex8od2"
          size="normal"
        >
          metadata message
        </div>
      </Message>
    </div>
  </EventOrGroupHeader>
</withRouter(EventOrGroupHeader)>
`;

exports[`EventOrGroupHeader Event renders with \`type = default\` 1`] = `
<withRouter(EventOrGroupHeader)
  data={
    Object {
      "culprit": undefined,
      "eventID": "eventID",
      "groupID": "groupID",
      "id": "id",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
      "type": "default",
    }
  }
  params={
    Object {
      "orgId": "orgId",
    }
  }
>
  <EventOrGroupHeader
    data={
      Object {
        "culprit": undefined,
        "eventID": "eventID",
        "groupID": "groupID",
        "id": "id",
        "metadata": Object {
          "directive": "metadata directive",
          "message": "metadata message",
          "title": "metadata title",
          "type": "metadata type",
          "uri": "metadata uri",
          "value": "metadata value",
        },
        "type": "default",
      }
    }
    includeLink={true}
    location={
      Object {
        "query": Object {},
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
    router={
      Object {
        "createHref": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "isActive": [MockFunction],
        "listen": [MockFunction],
        "location": Object {
          "query": Object {},
        },
        "params": Object {
          "orgId": "org-slug",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
        "setRouteLeaveHook": [MockFunction],
      }
    }
    size="normal"
  >
    <div
      data-test-id="event-issue-header"
    >
      <Title
        size="normal"
      >
        <div
          className="css-xfcjv1-Title-truncateStyles eex8od0"
          size="normal"
        >
          <GlobalSelectionLink
            data-test-id={null}
            style={null}
            to={
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              }
            }
          >
            <Link
              data-test-id={null}
              onlyActiveOnIndex={false}
              style={null}
              to={
                Object {
                  "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                  "query": Object {
                    "_allp": 1,
                    "query": undefined,
                  },
                }
              }
            >
              <a
                data-test-id={null}
                onClick={[Function]}
                style={null}
              >
                <EventOrGroupTitle
                  data={
                    Object {
                      "culprit": undefined,
                      "eventID": "eventID",
                      "groupID": "groupID",
                      "id": "id",
                      "metadata": Object {
                        "directive": "metadata directive",
                        "message": "metadata message",
                        "title": "metadata title",
                        "type": "metadata type",
                        "uri": "metadata uri",
                        "value": "metadata value",
                      },
                      "type": "default",
                    }
                  }
                  includeLink={true}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "params": Object {
                        "orgId": "org-slug",
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  size="normal"
                  style={
                    Object {
                      "fontWeight": 600,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontWeight": 600,
                      }
                    }
                  >
                    <GuideAnchor
                      disabled={true}
                      position="bottom"
                      target="issue_title"
                    >
                      metadata title
                    </GuideAnchor>
                  </span>
                </EventOrGroupTitle>
              </a>
            </Link>
          </GlobalSelectionLink>
        </div>
      </Title>
    </div>
  </EventOrGroupHeader>
</withRouter(EventOrGroupHeader)>
`;

exports[`EventOrGroupHeader Event renders with \`type = error\` 1`] = `
<withRouter(EventOrGroupHeader)
  data={
    Object {
      "culprit": undefined,
      "eventID": "eventID",
      "groupID": "groupID",
      "id": "id",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
      "type": "error",
    }
  }
  params={
    Object {
      "orgId": "orgId",
    }
  }
>
  <EventOrGroupHeader
    data={
      Object {
        "culprit": undefined,
        "eventID": "eventID",
        "groupID": "groupID",
        "id": "id",
        "metadata": Object {
          "directive": "metadata directive",
          "message": "metadata message",
          "title": "metadata title",
          "type": "metadata type",
          "uri": "metadata uri",
          "value": "metadata value",
        },
        "type": "error",
      }
    }
    includeLink={true}
    location={
      Object {
        "query": Object {},
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
    router={
      Object {
        "createHref": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "isActive": [MockFunction],
        "listen": [MockFunction],
        "location": Object {
          "query": Object {},
        },
        "params": Object {
          "orgId": "org-slug",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
        "setRouteLeaveHook": [MockFunction],
      }
    }
    size="normal"
  >
    <div
      data-test-id="event-issue-header"
    >
      <Title
        size="normal"
      >
        <div
          className="css-xfcjv1-Title-truncateStyles eex8od0"
          size="normal"
        >
          <GlobalSelectionLink
            data-test-id={null}
            style={null}
            to={
              Object {
                "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              }
            }
          >
            <Link
              data-test-id={null}
              onlyActiveOnIndex={false}
              style={null}
              to={
                Object {
                  "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                  "query": Object {
                    "_allp": 1,
                    "query": undefined,
                  },
                }
              }
            >
              <a
                data-test-id={null}
                onClick={[Function]}
                style={null}
              >
                <EventOrGroupTitle
                  data={
                    Object {
                      "culprit": undefined,
                      "eventID": "eventID",
                      "groupID": "groupID",
                      "id": "id",
                      "metadata": Object {
                        "directive": "metadata directive",
                        "message": "metadata message",
                        "title": "metadata title",
                        "type": "metadata type",
                        "uri": "metadata uri",
                        "value": "metadata value",
                      },
                      "type": "error",
                    }
                  }
                  includeLink={true}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/groupID/events/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "params": Object {
                        "orgId": "org-slug",
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  size="normal"
                  style={
                    Object {
                      "fontWeight": 600,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontWeight": 600,
                      }
                    }
                  >
                    <GuideAnchor
                      disabled={true}
                      position="bottom"
                      target="issue_title"
                    >
                      metadata type
                    </GuideAnchor>
                  </span>
                </EventOrGroupTitle>
              </a>
            </Link>
          </GlobalSelectionLink>
        </div>
      </Title>
      <Message
        size="normal"
      >
        <div
          className="css-1ls6xj9-Message-truncateStyles eex8od2"
          size="normal"
        >
          metadata value
        </div>
      </Message>
    </div>
  </EventOrGroupHeader>
</withRouter(EventOrGroupHeader)>
`;

exports[`EventOrGroupHeader Group renders with \`type = csp\` 1`] = `
<withRouter(EventOrGroupHeader)
  data={
    Object {
      "culprit": "culprit",
      "id": "id",
      "level": "error",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
      "type": "csp",
    }
  }
  params={
    Object {
      "orgId": "orgId",
    }
  }
>
  <EventOrGroupHeader
    data={
      Object {
        "culprit": "culprit",
        "id": "id",
        "level": "error",
        "metadata": Object {
          "directive": "metadata directive",
          "message": "metadata message",
          "title": "metadata title",
          "type": "metadata type",
          "uri": "metadata uri",
          "value": "metadata value",
        },
        "type": "csp",
      }
    }
    includeLink={true}
    location={
      Object {
        "query": Object {},
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
    router={
      Object {
        "createHref": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "isActive": [MockFunction],
        "listen": [MockFunction],
        "location": Object {
          "query": Object {},
        },
        "params": Object {
          "orgId": "org-slug",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
        "setRouteLeaveHook": [MockFunction],
      }
    }
    size="normal"
  >
    <div
      data-test-id="event-issue-header"
    >
      <Title
        size="normal"
      >
        <div
          className="css-xfcjv1-Title-truncateStyles eex8od0"
          size="normal"
        >
          <GlobalSelectionLink
            data-test-id={null}
            style={null}
            to={
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              }
            }
          >
            <Link
              data-test-id={null}
              onlyActiveOnIndex={false}
              style={null}
              to={
                Object {
                  "pathname": "/organizations/org-slug/issues/id/",
                  "query": Object {
                    "_allp": 1,
                    "query": undefined,
                  },
                }
              }
            >
              <a
                data-test-id={null}
                onClick={[Function]}
                style={null}
              >
                <GroupLevel
                  level="error"
                >
                  <div
                    className="css-10kyqk5-GroupLevel eex8od4"
                  >
                    <Tooltip
                      containerDisplayMode="inline-block"
                      position="top"
                      title="Error level: Error"
                    >
                      <Manager>
                        <Reference>
                          <InnerReference
                            setReferenceNode={[Function]}
                          >
                            <span
                              aria-describedby="tooltip-123456"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            />
                          </InnerReference>
                        </Reference>
                      </Manager>
                    </Tooltip>
                  </div>
                </GroupLevel>
                <EventOrGroupTitle
                  data={
                    Object {
                      "culprit": "culprit",
                      "id": "id",
                      "level": "error",
                      "metadata": Object {
                        "directive": "metadata directive",
                        "message": "metadata message",
                        "title": "metadata title",
                        "type": "metadata type",
                        "uri": "metadata uri",
                        "value": "metadata value",
                      },
                      "type": "csp",
                    }
                  }
                  includeLink={true}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "params": Object {
                        "orgId": "org-slug",
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  size="normal"
                  style={
                    Object {
                      "fontWeight": 600,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontWeight": 600,
                      }
                    }
                  >
                    <GuideAnchor
                      disabled={true}
                      position="bottom"
                      target="issue_title"
                    >
                      <span>
                        metadata directive
                      </span>
                    </GuideAnchor>
                    <Spacer>
                      <span
                        style={
                          Object {
                            "display": "inline-block",
                            "width": 10,
                          }
                        }
                      >
                         
                      </span>
                    </Spacer>
                    <em
                      title="metadata uri"
                    >
                      metadata uri
                    </em>
                    <br />
                  </span>
                </EventOrGroupTitle>
              </a>
            </Link>
          </GlobalSelectionLink>
        </div>
      </Title>
      <Message
        size="normal"
      >
        <div
          className="css-1ls6xj9-Message-truncateStyles eex8od2"
          size="normal"
        >
          metadata message
        </div>
      </Message>
    </div>
  </EventOrGroupHeader>
</withRouter(EventOrGroupHeader)>
`;

exports[`EventOrGroupHeader Group renders with \`type = default\` 1`] = `
<withRouter(EventOrGroupHeader)
  data={
    Object {
      "culprit": "culprit",
      "id": "id",
      "level": "error",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
      "type": "default",
    }
  }
  params={
    Object {
      "orgId": "orgId",
    }
  }
>
  <EventOrGroupHeader
    data={
      Object {
        "culprit": "culprit",
        "id": "id",
        "level": "error",
        "metadata": Object {
          "directive": "metadata directive",
          "message": "metadata message",
          "title": "metadata title",
          "type": "metadata type",
          "uri": "metadata uri",
          "value": "metadata value",
        },
        "type": "default",
      }
    }
    includeLink={true}
    location={
      Object {
        "query": Object {},
      }
    }
    params={
      Object {
        "orgId": "org-slug",
      }
    }
    router={
      Object {
        "createHref": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "isActive": [MockFunction],
        "listen": [MockFunction],
        "location": Object {
          "query": Object {},
        },
        "params": Object {
          "orgId": "org-slug",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
        "setRouteLeaveHook": [MockFunction],
      }
    }
    size="normal"
  >
    <div
      data-test-id="event-issue-header"
    >
      <Title
        size="normal"
      >
        <div
          className="css-xfcjv1-Title-truncateStyles eex8od0"
          size="normal"
        >
          <GlobalSelectionLink
            data-test-id={null}
            style={null}
            to={
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              }
            }
          >
            <Link
              data-test-id={null}
              onlyActiveOnIndex={false}
              style={null}
              to={
                Object {
                  "pathname": "/organizations/org-slug/issues/id/",
                  "query": Object {
                    "_allp": 1,
                    "query": undefined,
                  },
                }
              }
            >
              <a
                data-test-id={null}
                onClick={[Function]}
                style={null}
              >
                <GroupLevel
                  level="error"
                >
                  <div
                    className="css-10kyqk5-GroupLevel eex8od4"
                  >
                    <Tooltip
                      containerDisplayMode="inline-block"
                      position="top"
                      title="Error level: Error"
                    >
                      <Manager>
                        <Reference>
                          <InnerReference
                            setReferenceNode={[Function]}
                          >
                            <span
                              aria-describedby="tooltip-123456"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            />
                          </InnerReference>
                        </Reference>
                      </Manager>
                    </Tooltip>
                  </div>
                </GroupLevel>
                <EventOrGroupTitle
                  data={
                    Object {
                      "culprit": "culprit",
                      "id": "id",
                      "level": "error",
                      "metadata": Object {
                        "directive": "metadata directive",
                        "message": "metadata message",
                        "title": "metadata title",
                        "type": "metadata type",
                        "uri": "metadata uri",
                        "value": "metadata value",
                      },
                      "type": "default",
                    }
                  }
                  includeLink={true}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "params": Object {
                        "orgId": "org-slug",
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  size="normal"
                  style={
                    Object {
                      "fontWeight": 600,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontWeight": 600,
                      }
                    }
                  >
                    <GuideAnchor
                      disabled={true}
                      position="bottom"
                      target="issue_title"
                    >
                      metadata title
                    </GuideAnchor>
                  </span>
                </EventOrGroupTitle>
              </a>
            </Link>
          </GlobalSelectionLink>
        </div>
      </Title>
      <Message
        size="normal"
      >
        <div
          className="css-1ls6xj9-Message-truncateStyles eex8od2"
          size="normal"
        >
          culprit
        </div>
      </Message>
    </div>
  </EventOrGroupHeader>
</withRouter(EventOrGroupHeader)>
`;

exports[`EventOrGroupHeader Group renders with \`type = error\` 1`] = `
<withRouter(EventOrGroupHeader)
  data={
    Object {
      "culprit": "culprit",
      "id": "id",
      "level": "error",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
      "type": "error",
    }
  }
  orgId="orgId"
>
  <EventOrGroupHeader
    data={
      Object {
        "culprit": "culprit",
        "id": "id",
        "level": "error",
        "metadata": Object {
          "directive": "metadata directive",
          "message": "metadata message",
          "title": "metadata title",
          "type": "metadata type",
          "uri": "metadata uri",
          "value": "metadata value",
        },
        "type": "error",
      }
    }
    includeLink={true}
    location={
      Object {
        "query": Object {},
      }
    }
    orgId="orgId"
    params={
      Object {
        "orgId": "org-slug",
      }
    }
    router={
      Object {
        "createHref": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "isActive": [MockFunction],
        "listen": [MockFunction],
        "location": Object {
          "query": Object {},
        },
        "params": Object {
          "orgId": "org-slug",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
        "setRouteLeaveHook": [MockFunction],
      }
    }
    size="normal"
  >
    <div
      data-test-id="event-issue-header"
    >
      <Title
        size="normal"
      >
        <div
          className="css-xfcjv1-Title-truncateStyles eex8od0"
          size="normal"
        >
          <GlobalSelectionLink
            data-test-id={null}
            style={null}
            to={
              Object {
                "pathname": "/organizations/org-slug/issues/id/",
                "query": Object {
                  "_allp": 1,
                  "query": undefined,
                },
              }
            }
          >
            <Link
              data-test-id={null}
              onlyActiveOnIndex={false}
              style={null}
              to={
                Object {
                  "pathname": "/organizations/org-slug/issues/id/",
                  "query": Object {
                    "_allp": 1,
                    "query": undefined,
                  },
                }
              }
            >
              <a
                data-test-id={null}
                onClick={[Function]}
                style={null}
              >
                <GroupLevel
                  level="error"
                >
                  <div
                    className="css-10kyqk5-GroupLevel eex8od4"
                  >
                    <Tooltip
                      containerDisplayMode="inline-block"
                      position="top"
                      title="Error level: Error"
                    >
                      <Manager>
                        <Reference>
                          <InnerReference
                            setReferenceNode={[Function]}
                          >
                            <span
                              aria-describedby="tooltip-123456"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                            />
                          </InnerReference>
                        </Reference>
                      </Manager>
                    </Tooltip>
                  </div>
                </GroupLevel>
                <EventOrGroupTitle
                  data={
                    Object {
                      "culprit": "culprit",
                      "id": "id",
                      "level": "error",
                      "metadata": Object {
                        "directive": "metadata directive",
                        "message": "metadata message",
                        "title": "metadata title",
                        "type": "metadata type",
                        "uri": "metadata uri",
                        "value": "metadata value",
                      },
                      "type": "error",
                    }
                  }
                  includeLink={true}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  orgId="orgId"
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "pathname": "/organizations/org-slug/issues/id/",
                              "query": Object {
                                "_allp": 1,
                                "query": undefined,
                              },
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "params": Object {
                        "orgId": "org-slug",
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  size="normal"
                  style={
                    Object {
                      "fontWeight": 600,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontWeight": 600,
                      }
                    }
                  >
                    <GuideAnchor
                      disabled={true}
                      position="bottom"
                      target="issue_title"
                    >
                      <span>
                        metadata type
                      </span>
                    </GuideAnchor>
                    <Spacer>
                      <span
                        style={
                          Object {
                            "display": "inline-block",
                            "width": 10,
                          }
                        }
                      >
                         
                      </span>
                    </Spacer>
                    <em
                      title="culprit"
                    >
                      culprit
                    </em>
                    <br />
                  </span>
                </EventOrGroupTitle>
              </a>
            </Link>
          </GlobalSelectionLink>
        </div>
      </Title>
      <Message
        size="normal"
      >
        <div
          className="css-1ls6xj9-Message-truncateStyles eex8od2"
          size="normal"
        >
          metadata value
        </div>
      </Message>
    </div>
  </EventOrGroupHeader>
</withRouter(EventOrGroupHeader)>
`;
