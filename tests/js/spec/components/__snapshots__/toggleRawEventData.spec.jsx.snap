// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventDataSection renders formatted 1`] = `
<EventDataSection
  event={
    Object {
      "culprit": undefined,
      "eventID": "eventID",
      "groupID": "groupID",
      "id": "id",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
    }
  }
  group={
    Object {
      "culprit": "culprit",
      "id": "id",
      "level": "error",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
    }
  }
  isCentered={false}
  raw={false}
  showPermalink={true}
  title="Additional Data"
  type="extra"
  wrapTitle={true}
>
  <DataSection
    className=""
  >
    <div
      className=" css-3rlrsb-DataSection e1z0bih40"
    >
      <SectionHeader
        id="extra"
        isCentered={false}
      >
        <div
          className="css-8d8cxx-SectionHeader e1fbjd862"
          id="extra"
        >
          <Permalink
            className="permalink"
            href="#extra"
          >
            <a
              className="permalink css-8q4au4-Permalink e1fbjd861"
              href="#extra"
            >
              <StyledIconAnchor>
                <IconAnchor
                  className="css-1x65iks-StyledIconAnchor e1fbjd860"
                >
                  <ForwardRef(SvgIcon)
                    className="css-1x65iks-StyledIconAnchor e1fbjd860"
                  >
                    <svg
                      className="css-1x65iks-StyledIconAnchor e1fbjd860"
                      fill="currentColor"
                      height="16px"
                      viewBox="0 0 16 16"
                      width="16px"
                    >
                      <path
                        d="M8,1.59a.31.31,0,1,0,.31.31A.31.31,0,0,0,8,1.59ZM6.19,1.9A1.81,1.81,0,1,1,8.75,3.55v2h4.66a.75.75,0,0,1,0,1.5H8.75v7.32a6.87,6.87,0,0,0,5.57-4.12.75.75,0,0,1,1.44.3v2.5a.75.75,0,0,1-1.5,0,8.38,8.38,0,0,1-12.52,0,.75.75,0,0,1-1.5,0v-2.5a.75.75,0,0,1,1.44-.3,6.87,6.87,0,0,0,5.57,4.12V7.05H2.59a.75.75,0,1,1,0-1.5H7.25v-2A1.81,1.81,0,0,1,6.19,1.9Z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </IconAnchor>
              </StyledIconAnchor>
              <h3>
                Additional Data
              </h3>
            </a>
          </Permalink>
          <ButtonBar
            active="formatted"
            merged={true}
          >
            <ButtonGrid
              gap={0}
              merged={true}
            >
              <div
                className="css-w5lncq-ButtonGrid e1iu08980"
              >
                <forwardRef<Button>
                  className="active"
                  key=".0"
                  onClick={[Function]}
                  priority="primary"
                  size="xsmall"
                >
                  <Button
                    align="center"
                    className="active"
                    disabled={false}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="primary"
                    size="xsmall"
                  >
                    <StyledButton
                      aria-disabled={false}
                      aria-label="Formatted"
                      className="active"
                      disabled={false}
                      forwardRef={null}
                      onClick={[Function]}
                      priority="primary"
                      role="button"
                      size="xsmall"
                    >
                      <Component
                        aria-disabled={false}
                        aria-label="Formatted"
                        className="active css-z8at1v-StyledButton edwq9my0"
                        forwardRef={null}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="Formatted"
                          className="active css-z8at1v-StyledButton edwq9my0"
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <ButtonLabel
                            align="center"
                            priority="primary"
                            size="xsmall"
                          >
                            <span
                              className="css-1dw46ju-ButtonLabel edwq9my1"
                            >
                              Formatted
                            </span>
                          </ButtonLabel>
                        </button>
                      </Component>
                    </StyledButton>
                  </Button>
                </forwardRef<Button>>
                <forwardRef<Button>
                  className=""
                  key=".1"
                  onClick={[Function]}
                  priority="default"
                  size="xsmall"
                >
                  <Button
                    align="center"
                    className=""
                    disabled={false}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="default"
                    size="xsmall"
                  >
                    <StyledButton
                      aria-disabled={false}
                      aria-label="Raw"
                      className=""
                      disabled={false}
                      forwardRef={null}
                      onClick={[Function]}
                      priority="default"
                      role="button"
                      size="xsmall"
                    >
                      <Component
                        aria-disabled={false}
                        aria-label="Raw"
                        className=" css-8od3q1-StyledButton edwq9my0"
                        forwardRef={null}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="Raw"
                          className=" css-8od3q1-StyledButton edwq9my0"
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <ButtonLabel
                            align="center"
                            priority="default"
                            size="xsmall"
                          >
                            <span
                              className="css-1dw46ju-ButtonLabel edwq9my1"
                            >
                              Raw
                            </span>
                          </ButtonLabel>
                        </button>
                      </Component>
                    </StyledButton>
                  </Button>
                </forwardRef<Button>>
              </div>
            </ButtonGrid>
          </ButtonBar>
        </div>
      </SectionHeader>
      <SectionContents>
        <div
          className="css-16dhebx-SectionContents e1fbjd863"
        />
      </SectionContents>
    </div>
  </DataSection>
</EventDataSection>
`;

exports[`EventDataSection renders raw 1`] = `
<EventDataSection
  event={
    Object {
      "culprit": undefined,
      "eventID": "eventID",
      "groupID": "groupID",
      "id": "id",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
    }
  }
  group={
    Object {
      "culprit": "culprit",
      "id": "id",
      "level": "error",
      "metadata": Object {
        "directive": "metadata directive",
        "message": "metadata message",
        "title": "metadata title",
        "type": "metadata type",
        "uri": "metadata uri",
        "value": "metadata value",
      },
    }
  }
  isCentered={false}
  raw={true}
  showPermalink={true}
  title="Additional Data"
  type="extra"
  wrapTitle={true}
>
  <DataSection
    className=""
  >
    <div
      className=" css-3rlrsb-DataSection e1z0bih40"
    >
      <SectionHeader
        id="extra"
        isCentered={false}
      >
        <div
          className="css-8d8cxx-SectionHeader e1fbjd862"
          id="extra"
        >
          <Permalink
            className="permalink"
            href="#extra"
          >
            <a
              className="permalink css-8q4au4-Permalink e1fbjd861"
              href="#extra"
            >
              <StyledIconAnchor>
                <IconAnchor
                  className="css-1x65iks-StyledIconAnchor e1fbjd860"
                >
                  <ForwardRef(SvgIcon)
                    className="css-1x65iks-StyledIconAnchor e1fbjd860"
                  >
                    <svg
                      className="css-1x65iks-StyledIconAnchor e1fbjd860"
                      fill="currentColor"
                      height="16px"
                      viewBox="0 0 16 16"
                      width="16px"
                    >
                      <path
                        d="M8,1.59a.31.31,0,1,0,.31.31A.31.31,0,0,0,8,1.59ZM6.19,1.9A1.81,1.81,0,1,1,8.75,3.55v2h4.66a.75.75,0,0,1,0,1.5H8.75v7.32a6.87,6.87,0,0,0,5.57-4.12.75.75,0,0,1,1.44.3v2.5a.75.75,0,0,1-1.5,0,8.38,8.38,0,0,1-12.52,0,.75.75,0,0,1-1.5,0v-2.5a.75.75,0,0,1,1.44-.3,6.87,6.87,0,0,0,5.57,4.12V7.05H2.59a.75.75,0,1,1,0-1.5H7.25v-2A1.81,1.81,0,0,1,6.19,1.9Z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </IconAnchor>
              </StyledIconAnchor>
              <h3>
                Additional Data
              </h3>
            </a>
          </Permalink>
          <ButtonBar
            active="raw"
            merged={true}
          >
            <ButtonGrid
              gap={0}
              merged={true}
            >
              <div
                className="css-w5lncq-ButtonGrid e1iu08980"
              >
                <forwardRef<Button>
                  className=""
                  key=".0"
                  onClick={[Function]}
                  priority="default"
                  size="xsmall"
                >
                  <Button
                    align="center"
                    className=""
                    disabled={false}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="default"
                    size="xsmall"
                  >
                    <StyledButton
                      aria-disabled={false}
                      aria-label="Formatted"
                      className=""
                      disabled={false}
                      forwardRef={null}
                      onClick={[Function]}
                      priority="default"
                      role="button"
                      size="xsmall"
                    >
                      <Component
                        aria-disabled={false}
                        aria-label="Formatted"
                        className=" css-8od3q1-StyledButton edwq9my0"
                        forwardRef={null}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="Formatted"
                          className=" css-8od3q1-StyledButton edwq9my0"
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <ButtonLabel
                            align="center"
                            priority="default"
                            size="xsmall"
                          >
                            <span
                              className="css-1dw46ju-ButtonLabel edwq9my1"
                            >
                              Formatted
                            </span>
                          </ButtonLabel>
                        </button>
                      </Component>
                    </StyledButton>
                  </Button>
                </forwardRef<Button>>
                <forwardRef<Button>
                  className="active"
                  key=".1"
                  onClick={[Function]}
                  priority="primary"
                  size="xsmall"
                >
                  <Button
                    align="center"
                    className="active"
                    disabled={false}
                    forwardRef={null}
                    onClick={[Function]}
                    priority="primary"
                    size="xsmall"
                  >
                    <StyledButton
                      aria-disabled={false}
                      aria-label="Raw"
                      className="active"
                      disabled={false}
                      forwardRef={null}
                      onClick={[Function]}
                      priority="primary"
                      role="button"
                      size="xsmall"
                    >
                      <Component
                        aria-disabled={false}
                        aria-label="Raw"
                        className="active css-z8at1v-StyledButton edwq9my0"
                        forwardRef={null}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <button
                          aria-disabled={false}
                          aria-label="Raw"
                          className="active css-z8at1v-StyledButton edwq9my0"
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <ButtonLabel
                            align="center"
                            priority="primary"
                            size="xsmall"
                          >
                            <span
                              className="css-1dw46ju-ButtonLabel edwq9my1"
                            >
                              Raw
                            </span>
                          </ButtonLabel>
                        </button>
                      </Component>
                    </StyledButton>
                  </Button>
                </forwardRef<Button>>
              </div>
            </ButtonGrid>
          </ButtonBar>
        </div>
      </SectionHeader>
      <SectionContents>
        <div
          className="css-16dhebx-SectionContents e1fbjd863"
        />
      </SectionContents>
    </div>
  </DataSection>
</EventDataSection>
`;

exports[`KeyValueList renders formatted 1`] = `
<KeyValueList
  data={
    Array [
      Array [
        "somestuff",
        Object {
          "andsomeotherstuff": "here",
        },
      ],
      Array [
        "plussomeotherstuff",
        "here",
      ],
      Array [
        "andthis",
        0,
      ],
    ]
  }
  isContextData={true}
  isSorted={true}
  longKeys={false}
  raw={false}
>
  <table
    className="table key-value"
  >
    <tbody>
      <tr
        key="andthis"
      >
        <TableData
          className="key"
          wide={false}
        >
          <td
            className="key css-11zjbn-TableData e1qulgln0"
          >
            andthis
          </td>
        </TableData>
        <td
          className="val"
        >
          <ContextData
            data={0}
            withAnnotatedText={false}
          >
            <pre
              className="val-string"
            >
              <span>
                0
              </span>
            </pre>
          </ContextData>
        </td>
      </tr>
      <tr
        key="plussomeotherstuff"
      >
        <TableData
          className="key"
          wide={false}
        >
          <td
            className="key css-11zjbn-TableData e1qulgln0"
          >
            plussomeotherstuff
          </td>
        </TableData>
        <td
          className="val"
        >
          <ContextData
            data="here"
            withAnnotatedText={false}
          >
            <pre
              className="val-string"
            >
              <span
                className="val-string"
                key="value"
              >
                here
              </span>
            </pre>
          </ContextData>
        </td>
      </tr>
      <tr
        key="somestuff"
      >
        <TableData
          className="key"
          wide={false}
        >
          <td
            className="key css-11zjbn-TableData e1qulgln0"
          >
            somestuff
          </td>
        </TableData>
        <td
          className="val"
        >
          <ContextData
            data={
              Object {
                "andsomeotherstuff": "here",
              }
            }
            withAnnotatedText={false}
          >
            <pre
              className="val-string"
            >
              <span
                className="val-dict"
              >
                <span
                  className="val-dict-marker"
                >
                  {
                </span>
                <ToggleWrap
                  highUp={true}
                  wrapClassName="val-dict-items"
                >
                  <span
                    className="val-dict-items"
                  >
                    <span
                      className="val-dict-pair"
                      key="andsomeotherstuff"
                    >
                      <span
                        className="val-dict-key"
                      >
                        <span
                          className="val-string"
                        >
                          andsomeotherstuff
                        </span>
                      </span>
                      <span
                        className="val-dict-col"
                      >
                        : 
                      </span>
                      <span
                        className="val-dict-value"
                      >
                        <span
                          className="val-string"
                          key="value"
                        >
                          here
                        </span>
                      </span>
                    </span>
                  </span>
                </ToggleWrap>
                <span
                  className="val-dict-marker"
                >
                  }
                </span>
              </span>
            </pre>
          </ContextData>
        </td>
      </tr>
    </tbody>
  </table>
</KeyValueList>
`;

exports[`KeyValueList renders raw 1`] = `
<KeyValueList
  data={
    Array [
      Array [
        "somestuff",
        Object {
          "andsomeotherstuff": "here",
        },
      ],
      Array [
        "plussomeotherstuff",
        "here",
      ],
      Array [
        "andthis",
        0,
      ],
    ]
  }
  isContextData={true}
  isSorted={true}
  longKeys={false}
  raw={true}
>
  <table
    className="table key-value"
  >
    <tbody>
      <tr
        key="andthis"
      >
        <TableData
          className="key"
          wide={false}
        >
          <td
            className="key css-11zjbn-TableData e1qulgln0"
          >
            andthis
          </td>
        </TableData>
        <td
          className="val"
        >
          <ContextData
            data="0"
            withAnnotatedText={false}
          >
            <pre
              className="val-string"
            >
              <span
                className="val-string"
                key="value"
              >
                0
              </span>
            </pre>
          </ContextData>
        </td>
      </tr>
      <tr
        key="plussomeotherstuff"
      >
        <TableData
          className="key"
          wide={false}
        >
          <td
            className="key css-11zjbn-TableData e1qulgln0"
          >
            plussomeotherstuff
          </td>
        </TableData>
        <td
          className="val"
        >
          <ContextData
            data="\\"here\\""
            withAnnotatedText={false}
          >
            <pre
              className="val-string"
            >
              <span
                className="val-string"
                key="value"
              >
                "here"
              </span>
            </pre>
          </ContextData>
        </td>
      </tr>
      <tr
        key="somestuff"
      >
        <TableData
          className="key"
          wide={false}
        >
          <td
            className="key css-11zjbn-TableData e1qulgln0"
          >
            somestuff
          </td>
        </TableData>
        <td
          className="val"
        >
          <ContextData
            data="{\\"andsomeotherstuff\\":\\"here\\"}"
            withAnnotatedText={false}
          >
            <pre
              className="val-string"
            >
              <span
                className="val-string"
                key="value"
              >
                {"andsomeotherstuff":"here"}
              </span>
            </pre>
          </ContextData>
        </td>
      </tr>
    </tbody>
  </table>
</KeyValueList>
`;
