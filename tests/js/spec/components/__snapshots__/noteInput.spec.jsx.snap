// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteInput renders 1`] = `
<withApi(NoteInput)
  group={
    Object {
      "project": Object {},
    }
  }
  memberList={Array []}
  sessionUser={Object {}}
>
  <NoteInput
    api={Client {}}
    group={
      Object {
        "project": Object {},
      }
    }
    memberList={Array []}
    sessionUser={Object {}}
  >
    <form
      className="activity-field"
      noValidate={true}
      onSubmit={[Function]}
    >
      <div
        className="activity-notes"
      >
        <NavTabs>
          <ul
            className="nav nav-tabs"
          >
            <li
              className="active"
            >
              <a
                onClick={[Function]}
              >
                Write
              </a>
            </li>
            <li
              className=""
            >
              <a
                onClick={[Function]}
              >
                Preview
              </a>
            </li>
            <li
              className="markdown"
            >
              <span
                className="icon-markdown"
              />
              <span
                className="supported"
              >
                Markdown supported
              </span>
            </li>
          </ul>
        </NavTabs>
        <withDefaultStyle(MentionsInput)
          autoFocus={true}
          displayTransform={[Function]}
          markup="**[sentry.strip:__type__]__display__**"
          onChange={[Function]}
          onKeyDown={[Function]}
          placeholder="Add details or updates to this event. 
Tag users with @, or teams with #"
          required={true}
          style={
            Object {
              "&multiLine": Object {
                "control": Object {
                  "fontFamily": "Rubik, Avenir Next, Helvetica Neue, sans-serif",
                },
                "highlighter": Object {
                  "padding": 20,
                },
                "input": Object {
                  "border": 0,
                  "minHeight": 140,
                  "outline": 0,
                  "overflow": "auto",
                  "padding": "15px 20px 0",
                },
              },
              "&singleLine": Object {
                "control": Object {
                  "display": "inline-block",
                  "width": 130,
                },
                "highlighter": Object {
                  "border": "2px inset transparent",
                  "padding": 1,
                },
                "input": Object {
                  "border": "2px inset",
                  "padding": 1,
                },
              },
              "control": Object {
                "backgroundColor": "#fff",
                "fontSize": 15,
                "fontWeight": "normal",
              },
              "input": Object {
                "margin": 0,
              },
              "suggestions": Object {
                "item": Object {
                  "&focused": Object {
                    "backgroundColor": "#f8f6f9",
                  },
                  "borderBottom": "1px solid rgba(0,0,0,0.15)",
                  "padding": "5px 15px",
                },
                "list": Object {
                  "backgroundColor": "white",
                  "border": "1px solid rgba(0,0,0,0.15)",
                  "fontSize": 12,
                  "maxHeight": 150,
                  "overflow": "auto",
                },
              },
            }
          }
          value=""
        >
          <MentionsInput
            autoFocus={true}
            displayTransform={[Function]}
            markup="**[sentry.strip:__type__]__display__**"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            onSelect={[Function]}
            placeholder="Add details or updates to this event. 
Tag users with @, or teams with #"
            required={true}
            singleLine={false}
            style={[Function]}
            value=""
          >
            <div
              style={
                Object {
                  "overflowY": "visible",
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "fontFamily": "Rubik, Avenir Next, Helvetica Neue, sans-serif",
                    "fontSize": 15,
                    "fontWeight": "normal",
                  }
                }
              >
                <withDefaultStyle(Highlighter)
                  displayTransform={[Function]}
                  inputStyle={
                    Object {
                      "backgroundColor": "transparent",
                      "border": 0,
                      "bottom": 0,
                      "boxSizing": "border-box",
                      "display": "block",
                      "height": "100%",
                      "margin": 0,
                      "minHeight": 140,
                      "outline": 0,
                      "overflow": "auto",
                      "padding": "15px 20px 0",
                      "position": "absolute",
                      "resize": "none",
                      "top": 0,
                      "width": "100%",
                    }
                  }
                  markup="**[sentry.strip:__type__]__display__**"
                  onCaretPositionChange={[Function]}
                  selection={
                    Object {
                      "end": null,
                      "start": null,
                    }
                  }
                  singleLine={false}
                  style={[Function]}
                  value=""
                >
                  <Highlighter
                    displayTransform={[Function]}
                    inputStyle={
                      Object {
                        "backgroundColor": "transparent",
                        "border": 0,
                        "bottom": 0,
                        "boxSizing": "border-box",
                        "display": "block",
                        "height": "100%",
                        "margin": 0,
                        "minHeight": 140,
                        "outline": 0,
                        "overflow": "auto",
                        "padding": "15px 20px 0",
                        "position": "absolute",
                        "resize": "none",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                    markup="**[sentry.strip:__type__]__display__**"
                    onCaretPositionChange={[Function]}
                    selection={
                      Object {
                        "end": null,
                        "start": null,
                      }
                    }
                    singleLine={false}
                    style={[Function]}
                    value=""
                  >
                    <div
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "border": 0,
                          "bottom": 0,
                          "boxSizing": "border-box",
                          "color": "transparent",
                          "display": "block",
                          "height": "100%",
                          "margin": 0,
                          "minHeight": 140,
                          "outline": 0,
                          "overflow": "hidden",
                          "padding": 20,
                          "position": "relative",
                          "resize": "none",
                          "top": 0,
                          "whiteSpace": "pre-wrap",
                          "width": "inherit",
                          "wordWrap": "break-word",
                        }
                      }
                    >
                       
                    </div>
                  </Highlighter>
                </withDefaultStyle(Highlighter)>
                <textarea
                  autoFocus={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onCompositionEnd={[Function]}
                  onCompositionStart={[Function]}
                  onKeyDown={[Function]}
                  onSelect={[Function]}
                  placeholder="Add details or updates to this event. 
Tag users with @, or teams with #"
                  required={true}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "border": 0,
                      "bottom": 0,
                      "boxSizing": "border-box",
                      "display": "block",
                      "height": "100%",
                      "margin": 0,
                      "minHeight": 140,
                      "outline": 0,
                      "overflow": "auto",
                      "padding": "15px 20px 0",
                      "position": "absolute",
                      "resize": "none",
                      "top": 0,
                      "width": "100%",
                    }
                  }
                  value=""
                />
              </div>
            </div>
          </MentionsInput>
        </withDefaultStyle(MentionsInput)>
        <div
          className="activity-actions"
        >
          <button
            className="btn btn-default"
            disabled={false}
            type="submit"
          >
            Post Comment
          </button>
        </div>
      </div>
    </form>
  </NoteInput>
</withApi(NoteInput)>
`;
