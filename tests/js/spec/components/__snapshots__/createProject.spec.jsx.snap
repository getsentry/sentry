// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateProject should block if you have access to no teams 1`] = `
<Fragment>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      Create a new Project
    </PageHeading>
    <HelpText>
      Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
    </HelpText>
    <PlatformPicker
      platform=""
      setPlatform={[Function]}
      showOther={true}
    />
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <div>
        <FormLabel>
          Give your project a name
        </FormLabel>
        <ProjectNameInput>
          <ProjectPlatformIcon
            monoTone={true}
            platform=""
          />
          <input
            autoComplete="off"
            label="Project Name"
            name="name"
            onChange={[Function]}
            placeholder="Project name"
            type="text"
            value=""
          />
        </ProjectNameInput>
      </div>
      <div>
        <FormLabel>
          Assign a Team
        </FormLabel>
        <TeamSelectInput>
          <SelectControl
            clearable={false}
            height={36}
            multiple={false}
            name="select-team"
            onChange={[Function]}
            options={Array []}
            placeholder="Select a Team"
            value={0}
          />
          <Tooltip
            containerDisplayMode="inline-block"
            position="top"
            title="Create a team"
          >
            <Button
              align="center"
              borderless={true}
              data-test-id="create-team"
              disabled={false}
              icon="icon-circle-add"
              onClick={[Function]}
              type="button"
            />
          </Tooltip>
        </TeamSelectInput>
      </div>
      <div>
        <Button
          align="center"
          data-test-id="create-project"
          disabled={true}
          priority="primary"
        >
          Create Project
        </Button>
      </div>
    </CreateProjectForm>
  </div>
</Fragment>
`;

exports[`CreateProject should deal with incorrect platform name if its provided by url 1`] = `
<CreateProject
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <h1
        className="css-14dms5l-PageHeading e1bz0f4q0"
      >
        Create a new Project
      </h1>
    </PageHeading>
    <HelpText>
      <p
        className="css-15uvbvk-HelpText e2gtsme5"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform=""
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-xl0stt-NavContainer exv4dm80"
        >
          <CategoryNav>
            <NavTabs
              className="css-5tazcq-CategoryNav exv4dm82"
            >
              <ul
                className="nav nav-tabs css-5tazcq-CategoryNav exv4dm82"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-1wjcdh-SearchBar-inputStyles exv4dm81"
            >
              <InlineSvg
                src="icon-search"
              >
                <ForwardRef
                  className="css-qmmkxg-InlineSvg enyz4ql0"
                  src="icon-search"
                >
                  <svg
                    className="css-qmmkxg-InlineSvg enyz4ql0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </ForwardRef>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value=""
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-d5crqi-PlatformList exv4dm83"
        >
          <PlatformCard
            data-test-id="platform-csharp"
            key="csharp"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "csharp",
                "language": "csharp",
                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                "name": "C#",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-csharp"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "csharp",
                  "language": "csharp",
                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                  "name": "C#",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-csharp"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="csharp"
                >
                  <div
                    className="css-1cwsgcj-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  C#
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-elixir"
            key="elixir"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "elixir",
                "language": "elixir",
                "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                "name": "Elixir",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-elixir"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "elixir",
                  "language": "elixir",
                  "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                  "name": "Elixir",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-elixir"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="elixir"
                >
                  <div
                    className="css-25odvi-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Elixir
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-java"
            key="java"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "java",
                "language": "java",
                "link": "https://docs.getsentry.com/hosted/clients/java/",
                "name": "Java",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-java"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "java",
                  "language": "java",
                  "link": "https://docs.getsentry.com/hosted/clients/java/",
                  "name": "Java",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-java"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="java"
                >
                  <div
                    className="css-dchggh-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Java
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-angular"
            key="javascript-angular"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-angular",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                "name": "Angular",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-javascript-angular"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-angular",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                  "name": "Angular",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-javascript-angular"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-angular"
                >
                  <div
                    className="css-1t3okop-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Angular
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript"
            key="javascript"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                "name": "JavaScript",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-javascript"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                  "name": "JavaScript",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-javascript"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript"
                >
                  <div
                    className="css-rxfgzv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  JavaScript
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-react"
            key="javascript-react"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-react",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                "name": "React",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-javascript-react"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-react",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                  "name": "React",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-javascript-react"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-react"
                >
                  <div
                    className="css-1w8ely8-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node-express"
            key="node-express"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node-express",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                "name": "Express",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-node-express"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node-express",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                  "name": "Express",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-node-express"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node-express"
                >
                  <div
                    className="css-t8a266-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Express
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node"
            key="node"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/",
                "name": "Node.js",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-node"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/",
                  "name": "Node.js",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-node"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node"
                >
                  <div
                    className="css-t8a266-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Node.js
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-laravel"
            key="php-laravel"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-laravel",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                "name": "Laravel",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-php-laravel"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-laravel",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                  "name": "Laravel",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-php-laravel"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-laravel"
                >
                  <div
                    className="css-n7loea-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Laravel
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php"
            key="php"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/",
                "name": "PHP",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-php"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/",
                  "name": "PHP",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-php"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php"
                >
                  <div
                    className="css-6n3zj9-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  PHP
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-symfony2"
            key="php-symfony2"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-symfony2",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                "name": "Symfony2",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-php-symfony2"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-symfony2",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                  "name": "Symfony2",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-php-symfony2"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-symfony2"
                >
                  <div
                    className="css-6n3zj9-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Symfony2
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-django"
            key="python-django"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-django",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                "name": "Django",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-python-django"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-django",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                  "name": "Django",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-python-django"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-django"
                >
                  <div
                    className="css-13yxgfk-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Django
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-flask"
            key="python-flask"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-flask",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                "name": "Flask",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-python-flask"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-flask",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                  "name": "Flask",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-python-flask"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-flask"
                >
                  <div
                    className="css-134gpxv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Flask
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python"
            key="python"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/",
                "name": "Python",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-python"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/",
                  "name": "Python",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-python"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python"
                >
                  <div
                    className="css-i2lo8m-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Python
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-react-native"
            key="react-native"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "react-native",
                "language": "react-native",
                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                "name": "React-Native",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-react-native"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "react-native",
                  "language": "react-native",
                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                  "name": "React-Native",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-react-native"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="react-native"
                >
                  <div
                    className="css-79er81-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React-Native
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby-rails"
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rails"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rails"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rails"
                >
                  <div
                    className="css-1953k9-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby"
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-ruby"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-ruby"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby"
                >
                  <div
                    className="css-doe5jv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Ruby
                </h3>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <form
        className="css-ub4hd-CreateProjectForm e2gtsme0"
        onSubmit={[Function]}
      >
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel e2gtsme1"
            >
              Give your project a name
            </div>
          </FormLabel>
          <ProjectNameInput>
            <div
              className="css-1pb9wns-ProjectNameInput-inputStyles e2gtsme3"
            >
              <ProjectPlatformIcon
                monoTone={true}
                platform=""
              >
                <div
                  className="css-1787wsr-PlatformIconTile-ProjectPlatformIcon e2gtsme2"
                />
              </ProjectPlatformIcon>
              <input
                autoComplete="off"
                label="Project Name"
                name="name"
                onChange={[Function]}
                placeholder="Project name"
                type="text"
                value=""
              />
            </div>
          </ProjectNameInput>
        </div>
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel e2gtsme1"
            >
              Assign a Team
            </div>
          </FormLabel>
          <TeamSelectInput>
            <div
              className="css-75pel-TeamSelectInput e2gtsme4"
            >
              <SelectControl
                clearable={false}
                height={36}
                multiple={false}
                name="select-team"
                onChange={[Function]}
                options={Array []}
                placeholder="Select a Team"
                value={0}
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  backspaceRemoves={false}
                  clearable={false}
                  deleteRemoves={false}
                  height={36}
                  multiple={false}
                  name="select-team"
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Select a Team"
                  value={0}
                >
                  <ForwardRef(SelectPicker)
                    arrowRenderer={[Function]}
                    backspaceRemoves={false}
                    className="css-5srpa7-StyledSelect eho28m20"
                    clearable={false}
                    deleteRemoves={false}
                    height={36}
                    multiple={false}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      backspaceRemoves={false}
                      className="css-5srpa7-StyledSelect eho28m20"
                      clearable={false}
                      deleteRemoves={false}
                      forwardedRef={null}
                      height={36}
                      multiple={false}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={false}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        className="css-5srpa7-StyledSelect eho28m20"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={false}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        height={36}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        multiple={false}
                        name="select-team"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={Array []}
                        pageSize={5}
                        placeholder="Select a Team"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value={0}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select css-5srpa7-StyledSelect eho28m20 is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <div
                              className="Select-multi-value-wrapper"
                              id="react-select-5--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select a Team
                              </div>
                              <AutosizeInput
                                aria-activedescendant="react-select-5--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              >
                                <div
                                  className="Select-input"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <input
                                    aria-activedescendant="react-select-5--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    style={
                                      Object {
                                        "boxSizing": "content-box",
                                        "width": "5px",
                                      }
                                    }
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </div>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="icon-arrow-down"
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </SelectPicker>
                  </ForwardRef(SelectPicker)>
                </StyledSelect>
              </SelectControl>
              <Tooltip
                containerDisplayMode="inline-block"
                position="top"
                title="Create a team"
              >
                <Manager>
                  <Reference>
                    <InnerReference
                      setReferenceNode={[Function]}
                    >
                      <Container
                        aria-describedby="tooltip-123456"
                        containerDisplayMode="inline-block"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          aria-describedby="tooltip-123456"
                          className="css-1vf31z4-Container eowlwvy0"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          <Button
                            align="center"
                            borderless={true}
                            data-test-id="create-team"
                            disabled={false}
                            icon="icon-circle-add"
                            onClick={[Function]}
                            type="button"
                          >
                            <StyledButton
                              aria-disabled={false}
                              borderless={true}
                              data-test-id="create-team"
                              disabled={false}
                              onClick={[Function]}
                              role="button"
                              type="button"
                            >
                              <ForwardRef
                                aria-disabled={false}
                                borderless={true}
                                className="css-15prtgk-StyledButton-getColors edwq9my0"
                                data-test-id="create-team"
                                disabled={false}
                                onClick={[Function]}
                                role="button"
                                type="button"
                              >
                                <button
                                  aria-disabled={false}
                                  className="css-15prtgk-StyledButton-getColors edwq9my0"
                                  data-test-id="create-team"
                                  onClick={[Function]}
                                  role="button"
                                  type="button"
                                >
                                  <ButtonLabel
                                    align="center"
                                    borderless={true}
                                  >
                                    <Component
                                      align="center"
                                      borderless={true}
                                      className="css-1bqncjo-ButtonLabel edwq9my1"
                                    >
                                      <span
                                        className="css-1bqncjo-ButtonLabel edwq9my1"
                                      >
                                        <Icon
                                          hasChildren={false}
                                        >
                                          <Component
                                            className="css-ljhpxy-Icon edwq9my2"
                                            hasChildren={false}
                                          >
                                            <span
                                              className="css-ljhpxy-Icon edwq9my2"
                                            >
                                              <StyledInlineSvg
                                                size="14px"
                                                src="icon-circle-add"
                                              >
                                                <ForwardRef
                                                  className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                                  size="14px"
                                                  src="icon-circle-add"
                                                >
                                                  <svg
                                                    className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                                    height="14px"
                                                    viewBox={Object {}}
                                                    width="14px"
                                                  >
                                                    <use
                                                      href="#test"
                                                      xlinkHref="#test"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledInlineSvg>
                                            </span>
                                          </Component>
                                        </Icon>
                                      </span>
                                    </Component>
                                  </ButtonLabel>
                                </button>
                              </ForwardRef>
                            </StyledButton>
                          </Button>
                        </span>
                      </Container>
                    </InnerReference>
                  </Reference>
                </Manager>
              </Tooltip>
            </div>
          </TeamSelectInput>
        </div>
        <div>
          <Button
            align="center"
            data-test-id="create-project"
            disabled={true}
            priority="primary"
          >
            <StyledButton
              aria-disabled={true}
              aria-label="Create Project"
              data-test-id="create-project"
              disabled={true}
              onClick={[Function]}
              priority="primary"
              role="button"
            >
              <ForwardRef
                aria-disabled={true}
                aria-label="Create Project"
                className="css-pbzt2j-StyledButton-getColors edwq9my0"
                data-test-id="create-project"
                disabled={true}
                onClick={[Function]}
                priority="primary"
                role="button"
              >
                <button
                  aria-disabled={true}
                  aria-label="Create Project"
                  className="css-pbzt2j-StyledButton-getColors edwq9my0"
                  data-test-id="create-project"
                  onClick={[Function]}
                  role="button"
                >
                  <ButtonLabel
                    align="center"
                    priority="primary"
                  >
                    <Component
                      align="center"
                      className="css-oo1m2a-ButtonLabel edwq9my1"
                      priority="primary"
                    >
                      <span
                        className="css-oo1m2a-ButtonLabel edwq9my1"
                      >
                        Create Project
                      </span>
                    </Component>
                  </ButtonLabel>
                </button>
              </ForwardRef>
            </StyledButton>
          </Button>
        </div>
      </form>
    </CreateProjectForm>
  </div>
</CreateProject>
`;

exports[`CreateProject should fill in platform name if its provided by url 1`] = `
<CreateProject
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <h1
        className="css-14dms5l-PageHeading e1bz0f4q0"
      >
        Create a new Project
      </h1>
    </PageHeading>
    <HelpText>
      <p
        className="css-15uvbvk-HelpText e2gtsme5"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform="ruby"
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-xl0stt-NavContainer exv4dm80"
        >
          <CategoryNav>
            <NavTabs
              className="css-5tazcq-CategoryNav exv4dm82"
            >
              <ul
                className="nav nav-tabs css-5tazcq-CategoryNav exv4dm82"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-1wjcdh-SearchBar-inputStyles exv4dm81"
            >
              <InlineSvg
                src="icon-search"
              >
                <ForwardRef
                  className="css-qmmkxg-InlineSvg enyz4ql0"
                  src="icon-search"
                >
                  <svg
                    className="css-qmmkxg-InlineSvg enyz4ql0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </ForwardRef>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value="ruby"
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-d5crqi-PlatformList exv4dm83"
        >
          <PlatformCard
            data-test-id="platform-ruby-rack"
            key="ruby-rack"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rack",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
                "name": "Rack",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rack"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rack",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
                  "name": "Rack",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rack"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rack"
                >
                  <div
                    className="css-doe5jv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rack
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby-rails"
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rails"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rails"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rails"
                >
                  <div
                    className="css-1953k9-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby"
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={true}
          >
            <Component
              className="css-d8uoxq-PlatformCard exv4dm86"
              data-test-id="platform-ruby"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={true}
            >
              <div
                className="css-d8uoxq-PlatformCard exv4dm86"
                data-test-id="platform-ruby"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby"
                >
                  <div
                    className="css-doe5jv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Ruby
                </h3>
                <ClearButton
                  onClick={[Function]}
                >
                  <Component
                    className="css-9ldjwa-ClearButton exv4dm85"
                    onClick={[Function]}
                  >
                    <Button
                      align="center"
                      borderless={true}
                      className="css-9ldjwa-ClearButton exv4dm85"
                      disabled={false}
                      icon="icon-circle-close"
                      onClick={[Function]}
                      size="xsmall"
                    >
                      <StyledButton
                        aria-disabled={false}
                        borderless={true}
                        className="css-9ldjwa-ClearButton exv4dm85"
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <ForwardRef
                          aria-disabled={false}
                          borderless={true}
                          className="exv4dm85 css-1mo3p70-StyledButton-getColors-ClearButton edwq9my0"
                          disabled={false}
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <button
                            aria-disabled={false}
                            className="exv4dm85 css-1mo3p70-StyledButton-getColors-ClearButton edwq9my0"
                            onClick={[Function]}
                            role="button"
                            size="xsmall"
                          >
                            <ButtonLabel
                              align="center"
                              borderless={true}
                              size="xsmall"
                            >
                              <Component
                                align="center"
                                borderless={true}
                                className="css-17lag4c-ButtonLabel edwq9my1"
                                size="xsmall"
                              >
                                <span
                                  className="css-17lag4c-ButtonLabel edwq9my1"
                                >
                                  <Icon
                                    hasChildren={false}
                                    size="xsmall"
                                  >
                                    <Component
                                      className="css-ljhpxy-Icon edwq9my2"
                                      hasChildren={false}
                                      size="xsmall"
                                    >
                                      <span
                                        className="css-ljhpxy-Icon edwq9my2"
                                        size="xsmall"
                                      >
                                        <StyledInlineSvg
                                          size="12px"
                                          src="icon-circle-close"
                                        >
                                          <ForwardRef
                                            className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                            size="12px"
                                            src="icon-circle-close"
                                          >
                                            <svg
                                              className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                              height="12px"
                                              viewBox={Object {}}
                                              width="12px"
                                            >
                                              <use
                                                href="#test"
                                                xlinkHref="#test"
                                              />
                                            </svg>
                                          </ForwardRef>
                                        </StyledInlineSvg>
                                      </span>
                                    </Component>
                                  </Icon>
                                </span>
                              </Component>
                            </ButtonLabel>
                          </button>
                        </ForwardRef>
                      </StyledButton>
                    </Button>
                  </Component>
                </ClearButton>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <form
        className="css-ub4hd-CreateProjectForm e2gtsme0"
        onSubmit={[Function]}
      >
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel e2gtsme1"
            >
              Give your project a name
            </div>
          </FormLabel>
          <ProjectNameInput>
            <div
              className="css-1pb9wns-ProjectNameInput-inputStyles e2gtsme3"
            >
              <ProjectPlatformIcon
                monoTone={true}
                platform="ruby"
              >
                <div
                  className="css-1gs8cc4-PlatformIconTile-ProjectPlatformIcon e2gtsme2"
                />
              </ProjectPlatformIcon>
              <input
                autoComplete="off"
                label="Project Name"
                name="name"
                onChange={[Function]}
                placeholder="Project name"
                type="text"
                value="Ruby"
              />
            </div>
          </ProjectNameInput>
        </div>
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel e2gtsme1"
            >
              Assign a Team
            </div>
          </FormLabel>
          <TeamSelectInput>
            <div
              className="css-75pel-TeamSelectInput e2gtsme4"
            >
              <SelectControl
                clearable={false}
                height={36}
                multiple={false}
                name="select-team"
                onChange={[Function]}
                options={Array []}
                placeholder="Select a Team"
                value={0}
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  backspaceRemoves={false}
                  clearable={false}
                  deleteRemoves={false}
                  height={36}
                  multiple={false}
                  name="select-team"
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Select a Team"
                  value={0}
                >
                  <ForwardRef(SelectPicker)
                    arrowRenderer={[Function]}
                    backspaceRemoves={false}
                    className="css-5srpa7-StyledSelect eho28m20"
                    clearable={false}
                    deleteRemoves={false}
                    height={36}
                    multiple={false}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      backspaceRemoves={false}
                      className="css-5srpa7-StyledSelect eho28m20"
                      clearable={false}
                      deleteRemoves={false}
                      forwardedRef={null}
                      height={36}
                      multiple={false}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={false}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        className="css-5srpa7-StyledSelect eho28m20"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={false}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        height={36}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        multiple={false}
                        name="select-team"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={Array []}
                        pageSize={5}
                        placeholder="Select a Team"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value={0}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select css-5srpa7-StyledSelect eho28m20 is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <div
                              className="Select-multi-value-wrapper"
                              id="react-select-4--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select a Team
                              </div>
                              <AutosizeInput
                                aria-activedescendant="react-select-4--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              >
                                <div
                                  className="Select-input"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <input
                                    aria-activedescendant="react-select-4--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    style={
                                      Object {
                                        "boxSizing": "content-box",
                                        "width": "5px",
                                      }
                                    }
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </div>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="icon-arrow-down"
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </SelectPicker>
                  </ForwardRef(SelectPicker)>
                </StyledSelect>
              </SelectControl>
              <Tooltip
                containerDisplayMode="inline-block"
                position="top"
                title="Create a team"
              >
                <Manager>
                  <Reference>
                    <InnerReference
                      setReferenceNode={[Function]}
                    >
                      <Container
                        aria-describedby="tooltip-123456"
                        containerDisplayMode="inline-block"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          aria-describedby="tooltip-123456"
                          className="css-1vf31z4-Container eowlwvy0"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          <Button
                            align="center"
                            borderless={true}
                            data-test-id="create-team"
                            disabled={false}
                            icon="icon-circle-add"
                            onClick={[Function]}
                            type="button"
                          >
                            <StyledButton
                              aria-disabled={false}
                              borderless={true}
                              data-test-id="create-team"
                              disabled={false}
                              onClick={[Function]}
                              role="button"
                              type="button"
                            >
                              <ForwardRef
                                aria-disabled={false}
                                borderless={true}
                                className="css-15prtgk-StyledButton-getColors edwq9my0"
                                data-test-id="create-team"
                                disabled={false}
                                onClick={[Function]}
                                role="button"
                                type="button"
                              >
                                <button
                                  aria-disabled={false}
                                  className="css-15prtgk-StyledButton-getColors edwq9my0"
                                  data-test-id="create-team"
                                  onClick={[Function]}
                                  role="button"
                                  type="button"
                                >
                                  <ButtonLabel
                                    align="center"
                                    borderless={true}
                                  >
                                    <Component
                                      align="center"
                                      borderless={true}
                                      className="css-1bqncjo-ButtonLabel edwq9my1"
                                    >
                                      <span
                                        className="css-1bqncjo-ButtonLabel edwq9my1"
                                      >
                                        <Icon
                                          hasChildren={false}
                                        >
                                          <Component
                                            className="css-ljhpxy-Icon edwq9my2"
                                            hasChildren={false}
                                          >
                                            <span
                                              className="css-ljhpxy-Icon edwq9my2"
                                            >
                                              <StyledInlineSvg
                                                size="14px"
                                                src="icon-circle-add"
                                              >
                                                <ForwardRef
                                                  className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                                  size="14px"
                                                  src="icon-circle-add"
                                                >
                                                  <svg
                                                    className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                                    height="14px"
                                                    viewBox={Object {}}
                                                    width="14px"
                                                  >
                                                    <use
                                                      href="#test"
                                                      xlinkHref="#test"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledInlineSvg>
                                            </span>
                                          </Component>
                                        </Icon>
                                      </span>
                                    </Component>
                                  </ButtonLabel>
                                </button>
                              </ForwardRef>
                            </StyledButton>
                          </Button>
                        </span>
                      </Container>
                    </InnerReference>
                  </Reference>
                </Manager>
              </Tooltip>
            </div>
          </TeamSelectInput>
        </div>
        <div>
          <Button
            align="center"
            data-test-id="create-project"
            disabled={true}
            priority="primary"
          >
            <StyledButton
              aria-disabled={true}
              aria-label="Create Project"
              data-test-id="create-project"
              disabled={true}
              onClick={[Function]}
              priority="primary"
              role="button"
            >
              <ForwardRef
                aria-disabled={true}
                aria-label="Create Project"
                className="css-pbzt2j-StyledButton-getColors edwq9my0"
                data-test-id="create-project"
                disabled={true}
                onClick={[Function]}
                priority="primary"
                role="button"
              >
                <button
                  aria-disabled={true}
                  aria-label="Create Project"
                  className="css-pbzt2j-StyledButton-getColors edwq9my0"
                  data-test-id="create-project"
                  onClick={[Function]}
                  role="button"
                >
                  <ButtonLabel
                    align="center"
                    priority="primary"
                  >
                    <Component
                      align="center"
                      className="css-oo1m2a-ButtonLabel edwq9my1"
                      priority="primary"
                    >
                      <span
                        className="css-oo1m2a-ButtonLabel edwq9my1"
                      >
                        Create Project
                      </span>
                    </Component>
                  </ButtonLabel>
                </button>
              </ForwardRef>
            </StyledButton>
          </Button>
        </div>
      </form>
    </CreateProjectForm>
  </div>
</CreateProject>
`;

exports[`CreateProject should fill in project name if its empty when platform is chosen 1`] = `
<CreateProject
  api={
    Client {
      "_chain": [Function],
      "_wrapRequest": [Function],
      "bulkUpdate": [Function],
      "handleRequestError": [Function],
      "hasProjectBeenRenamed": [Function],
    }
  }
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <h1
        className="css-14dms5l-PageHeading e1bz0f4q0"
      >
        Create a new Project
      </h1>
    </PageHeading>
    <HelpText>
      <p
        className="css-15uvbvk-HelpText e2gtsme5"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform="csharp"
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-xl0stt-NavContainer exv4dm80"
        >
          <CategoryNav>
            <NavTabs
              className="css-5tazcq-CategoryNav exv4dm82"
            >
              <ul
                className="nav nav-tabs css-5tazcq-CategoryNav exv4dm82"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-1wjcdh-SearchBar-inputStyles exv4dm81"
            >
              <InlineSvg
                src="icon-search"
              >
                <ForwardRef
                  className="css-qmmkxg-InlineSvg enyz4ql0"
                  src="icon-search"
                >
                  <svg
                    className="css-qmmkxg-InlineSvg enyz4ql0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </ForwardRef>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value=""
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-d5crqi-PlatformList exv4dm83"
        >
          <PlatformCard
            data-test-id="platform-csharp"
            key="csharp"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "csharp",
                "language": "csharp",
                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                "name": "C#",
                "type": "language",
              }
            }
            selected={true}
          >
            <Component
              className="css-d8uoxq-PlatformCard exv4dm86"
              data-test-id="platform-csharp"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "csharp",
                  "language": "csharp",
                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                  "name": "C#",
                  "type": "language",
                }
              }
              selected={true}
            >
              <div
                className="css-d8uoxq-PlatformCard exv4dm86"
                data-test-id="platform-csharp"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="csharp"
                >
                  <div
                    className="css-1cwsgcj-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  C#
                </h3>
                <ClearButton
                  onClick={[Function]}
                >
                  <Component
                    className="css-9ldjwa-ClearButton exv4dm85"
                    onClick={[Function]}
                  >
                    <Button
                      align="center"
                      borderless={true}
                      className="css-9ldjwa-ClearButton exv4dm85"
                      disabled={false}
                      icon="icon-circle-close"
                      onClick={[Function]}
                      size="xsmall"
                    >
                      <StyledButton
                        aria-disabled={false}
                        borderless={true}
                        className="css-9ldjwa-ClearButton exv4dm85"
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <ForwardRef
                          aria-disabled={false}
                          borderless={true}
                          className="exv4dm85 css-1mo3p70-StyledButton-getColors-ClearButton edwq9my0"
                          disabled={false}
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <button
                            aria-disabled={false}
                            className="exv4dm85 css-1mo3p70-StyledButton-getColors-ClearButton edwq9my0"
                            onClick={[Function]}
                            role="button"
                            size="xsmall"
                          >
                            <ButtonLabel
                              align="center"
                              borderless={true}
                              size="xsmall"
                            >
                              <Component
                                align="center"
                                borderless={true}
                                className="css-17lag4c-ButtonLabel edwq9my1"
                                size="xsmall"
                              >
                                <span
                                  className="css-17lag4c-ButtonLabel edwq9my1"
                                >
                                  <Icon
                                    hasChildren={false}
                                    size="xsmall"
                                  >
                                    <Component
                                      className="css-ljhpxy-Icon edwq9my2"
                                      hasChildren={false}
                                      size="xsmall"
                                    >
                                      <span
                                        className="css-ljhpxy-Icon edwq9my2"
                                        size="xsmall"
                                      >
                                        <StyledInlineSvg
                                          size="12px"
                                          src="icon-circle-close"
                                        >
                                          <ForwardRef
                                            className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                            size="12px"
                                            src="icon-circle-close"
                                          >
                                            <svg
                                              className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                              height="12px"
                                              viewBox={Object {}}
                                              width="12px"
                                            >
                                              <use
                                                href="#test"
                                                xlinkHref="#test"
                                              />
                                            </svg>
                                          </ForwardRef>
                                        </StyledInlineSvg>
                                      </span>
                                    </Component>
                                  </Icon>
                                </span>
                              </Component>
                            </ButtonLabel>
                          </button>
                        </ForwardRef>
                      </StyledButton>
                    </Button>
                  </Component>
                </ClearButton>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-elixir"
            key="elixir"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "elixir",
                "language": "elixir",
                "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                "name": "Elixir",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-elixir"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "elixir",
                  "language": "elixir",
                  "link": "https://docs.getsentry.com/hosted/clients/elixir/",
                  "name": "Elixir",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-elixir"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="elixir"
                >
                  <div
                    className="css-25odvi-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Elixir
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-java"
            key="java"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "java",
                "language": "java",
                "link": "https://docs.getsentry.com/hosted/clients/java/",
                "name": "Java",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-java"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "java",
                  "language": "java",
                  "link": "https://docs.getsentry.com/hosted/clients/java/",
                  "name": "Java",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-java"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="java"
                >
                  <div
                    className="css-dchggh-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Java
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-angular"
            key="javascript-angular"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-angular",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                "name": "Angular",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-javascript-angular"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-angular",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                  "name": "Angular",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-javascript-angular"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-angular"
                >
                  <div
                    className="css-1t3okop-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Angular
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript"
            key="javascript"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                "name": "JavaScript",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-javascript"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                  "name": "JavaScript",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-javascript"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript"
                >
                  <div
                    className="css-rxfgzv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  JavaScript
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-javascript-react"
            key="javascript-react"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-react",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                "name": "React",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-javascript-react"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-react",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                  "name": "React",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-javascript-react"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="javascript-react"
                >
                  <div
                    className="css-1w8ely8-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node-express"
            key="node-express"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node-express",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                "name": "Express",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-node-express"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node-express",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                  "name": "Express",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-node-express"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node-express"
                >
                  <div
                    className="css-t8a266-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Express
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-node"
            key="node"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/",
                "name": "Node.js",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-node"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/",
                  "name": "Node.js",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-node"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="node"
                >
                  <div
                    className="css-t8a266-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Node.js
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-laravel"
            key="php-laravel"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-laravel",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                "name": "Laravel",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-php-laravel"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-laravel",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                  "name": "Laravel",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-php-laravel"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-laravel"
                >
                  <div
                    className="css-n7loea-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Laravel
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php"
            key="php"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/",
                "name": "PHP",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-php"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/",
                  "name": "PHP",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-php"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php"
                >
                  <div
                    className="css-6n3zj9-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  PHP
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-php-symfony2"
            key="php-symfony2"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-symfony2",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                "name": "Symfony2",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-php-symfony2"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-symfony2",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                  "name": "Symfony2",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-php-symfony2"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="php-symfony2"
                >
                  <div
                    className="css-6n3zj9-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Symfony2
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-django"
            key="python-django"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-django",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                "name": "Django",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-python-django"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-django",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                  "name": "Django",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-python-django"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-django"
                >
                  <div
                    className="css-13yxgfk-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Django
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python-flask"
            key="python-flask"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-flask",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                "name": "Flask",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-python-flask"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-flask",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                  "name": "Flask",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-python-flask"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python-flask"
                >
                  <div
                    className="css-134gpxv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Flask
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-python"
            key="python"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/",
                "name": "Python",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-python"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/",
                  "name": "Python",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-python"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="python"
                >
                  <div
                    className="css-i2lo8m-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Python
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-react-native"
            key="react-native"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "react-native",
                "language": "react-native",
                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                "name": "React-Native",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-react-native"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "react-native",
                  "language": "react-native",
                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                  "name": "React-Native",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-react-native"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="react-native"
                >
                  <div
                    className="css-79er81-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  React-Native
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby-rails"
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-ruby-rails"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-ruby-rails"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby-rails"
                >
                  <div
                    className="css-1953k9-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            data-test-id="platform-ruby"
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-1y7hwtx-PlatformCard exv4dm86"
              data-test-id="platform-ruby"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-1y7hwtx-PlatformCard exv4dm86"
                data-test-id="platform-ruby"
                onClick={[Function]}
              >
                <StyledPlatformIconTile
                  platform="ruby"
                >
                  <div
                    className="css-doe5jv-PlatformIconTile-getColorStyles-StyledPlatformIconTile exv4dm84"
                  />
                </StyledPlatformIconTile>
                <h3>
                  Ruby
                </h3>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <form
        className="css-ub4hd-CreateProjectForm e2gtsme0"
        onSubmit={[Function]}
      >
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel e2gtsme1"
            >
              Give your project a name
            </div>
          </FormLabel>
          <ProjectNameInput>
            <div
              className="css-1pb9wns-ProjectNameInput-inputStyles e2gtsme3"
            >
              <ProjectPlatformIcon
                monoTone={true}
                platform="csharp"
              >
                <div
                  className="css-n6b9il-PlatformIconTile-ProjectPlatformIcon e2gtsme2"
                />
              </ProjectPlatformIcon>
              <input
                autoComplete="off"
                label="Project Name"
                name="name"
                onChange={[Function]}
                placeholder="Project name"
                type="text"
                value="another"
              />
            </div>
          </ProjectNameInput>
        </div>
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel e2gtsme1"
            >
              Assign a Team
            </div>
          </FormLabel>
          <TeamSelectInput>
            <div
              className="css-75pel-TeamSelectInput e2gtsme4"
            >
              <SelectControl
                clearable={false}
                height={36}
                multiple={false}
                name="select-team"
                onChange={[Function]}
                options={Array []}
                placeholder="Select a Team"
                value={0}
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  backspaceRemoves={false}
                  clearable={false}
                  deleteRemoves={false}
                  height={36}
                  multiple={false}
                  name="select-team"
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Select a Team"
                  value={0}
                >
                  <ForwardRef(SelectPicker)
                    arrowRenderer={[Function]}
                    backspaceRemoves={false}
                    className="css-5srpa7-StyledSelect eho28m20"
                    clearable={false}
                    deleteRemoves={false}
                    height={36}
                    multiple={false}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      backspaceRemoves={false}
                      className="css-5srpa7-StyledSelect eho28m20"
                      clearable={false}
                      deleteRemoves={false}
                      forwardedRef={null}
                      height={36}
                      multiple={false}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={false}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        className="css-5srpa7-StyledSelect eho28m20"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={false}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        height={36}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        multiple={false}
                        name="select-team"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={Array []}
                        pageSize={5}
                        placeholder="Select a Team"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value={0}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select css-5srpa7-StyledSelect eho28m20 is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <div
                              className="Select-multi-value-wrapper"
                              id="react-select-3--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select a Team
                              </div>
                              <AutosizeInput
                                aria-activedescendant="react-select-3--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              >
                                <div
                                  className="Select-input"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <input
                                    aria-activedescendant="react-select-3--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    style={
                                      Object {
                                        "boxSizing": "content-box",
                                        "width": "5px",
                                      }
                                    }
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </div>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="icon-arrow-down"
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </SelectPicker>
                  </ForwardRef(SelectPicker)>
                </StyledSelect>
              </SelectControl>
              <Tooltip
                containerDisplayMode="inline-block"
                position="top"
                title="Create a team"
              >
                <Manager>
                  <Reference>
                    <InnerReference
                      setReferenceNode={[Function]}
                    >
                      <Container
                        aria-describedby="tooltip-123456"
                        containerDisplayMode="inline-block"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          aria-describedby="tooltip-123456"
                          className="css-1vf31z4-Container eowlwvy0"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          <Button
                            align="center"
                            borderless={true}
                            data-test-id="create-team"
                            disabled={false}
                            icon="icon-circle-add"
                            onClick={[Function]}
                            type="button"
                          >
                            <StyledButton
                              aria-disabled={false}
                              borderless={true}
                              data-test-id="create-team"
                              disabled={false}
                              onClick={[Function]}
                              role="button"
                              type="button"
                            >
                              <ForwardRef
                                aria-disabled={false}
                                borderless={true}
                                className="css-15prtgk-StyledButton-getColors edwq9my0"
                                data-test-id="create-team"
                                disabled={false}
                                onClick={[Function]}
                                role="button"
                                type="button"
                              >
                                <button
                                  aria-disabled={false}
                                  className="css-15prtgk-StyledButton-getColors edwq9my0"
                                  data-test-id="create-team"
                                  onClick={[Function]}
                                  role="button"
                                  type="button"
                                >
                                  <ButtonLabel
                                    align="center"
                                    borderless={true}
                                  >
                                    <Component
                                      align="center"
                                      borderless={true}
                                      className="css-1bqncjo-ButtonLabel edwq9my1"
                                    >
                                      <span
                                        className="css-1bqncjo-ButtonLabel edwq9my1"
                                      >
                                        <Icon
                                          hasChildren={false}
                                        >
                                          <Component
                                            className="css-ljhpxy-Icon edwq9my2"
                                            hasChildren={false}
                                          >
                                            <span
                                              className="css-ljhpxy-Icon edwq9my2"
                                            >
                                              <StyledInlineSvg
                                                size="14px"
                                                src="icon-circle-add"
                                              >
                                                <ForwardRef
                                                  className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                                  size="14px"
                                                  src="icon-circle-add"
                                                >
                                                  <svg
                                                    className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
                                                    height="14px"
                                                    viewBox={Object {}}
                                                    width="14px"
                                                  >
                                                    <use
                                                      href="#test"
                                                      xlinkHref="#test"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledInlineSvg>
                                            </span>
                                          </Component>
                                        </Icon>
                                      </span>
                                    </Component>
                                  </ButtonLabel>
                                </button>
                              </ForwardRef>
                            </StyledButton>
                          </Button>
                        </span>
                      </Container>
                    </InnerReference>
                  </Reference>
                </Manager>
              </Tooltip>
            </div>
          </TeamSelectInput>
        </div>
        <div>
          <Button
            align="center"
            data-test-id="create-project"
            disabled={true}
            priority="primary"
          >
            <StyledButton
              aria-disabled={true}
              aria-label="Create Project"
              data-test-id="create-project"
              disabled={true}
              onClick={[Function]}
              priority="primary"
              role="button"
            >
              <ForwardRef
                aria-disabled={true}
                aria-label="Create Project"
                className="css-pbzt2j-StyledButton-getColors edwq9my0"
                data-test-id="create-project"
                disabled={true}
                onClick={[Function]}
                priority="primary"
                role="button"
              >
                <button
                  aria-disabled={true}
                  aria-label="Create Project"
                  className="css-pbzt2j-StyledButton-getColors edwq9my0"
                  data-test-id="create-project"
                  onClick={[Function]}
                  role="button"
                >
                  <ButtonLabel
                    align="center"
                    priority="primary"
                  >
                    <Component
                      align="center"
                      className="css-oo1m2a-ButtonLabel edwq9my1"
                      priority="primary"
                    >
                      <span
                        className="css-oo1m2a-ButtonLabel edwq9my1"
                      >
                        Create Project
                      </span>
                    </Component>
                  </ButtonLabel>
                </button>
              </ForwardRef>
            </StyledButton>
          </Button>
        </div>
      </form>
    </CreateProjectForm>
  </div>
</CreateProject>
`;
