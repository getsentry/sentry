// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsLayout renders 1`] = `
<SettingsLayout
  route={Object {}}
  router={
    Object {
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "isActive": [MockFunction],
      "listen": [MockFunction],
      "location": Object {
        "query": Object {},
      },
      "push": [MockFunction],
      "replace": [MockFunction],
      "setRouteLeaveHook": [MockFunction],
    }
  }
  routes={Array []}
>
  <SettingsColumn>
    <div
      className="css-d651c0-SettingsColumn e1b6kfpa0"
    >
      <SettingsHeader>
        <div
          className="css-fft2j9-SettingsHeader ef5h6dg0"
        >
          <HeaderContent>
            <div
              className="css-1i2soxm-HeaderContent e1b6kfpa1"
            >
              <StyledSettingsBreadcrumb
                route={Object {}}
                routes={Array []}
              >
                <ConnectedSettingsBreadcrumb
                  className="css-wocd58-StyledSettingsBreadcrumb e1b6kfpa3"
                  route={Object {}}
                  routes={Array []}
                >
                  <SettingsBreadcrumb
                    className="css-wocd58-StyledSettingsBreadcrumb e1b6kfpa3"
                    pathMap={Object {}}
                    route={Object {}}
                    routes={Array []}
                  >
                    <Breadcrumbs
                      className="css-wocd58-StyledSettingsBreadcrumb e1b6kfpa3"
                    >
                      <div
                        className="e1b6kfpa3 css-1b850an-Breadcrumbs-StyledSettingsBreadcrumb e18utnk41"
                      />
                    </Breadcrumbs>
                  </SettingsBreadcrumb>
                </ConnectedSettingsBreadcrumb>
              </StyledSettingsBreadcrumb>
              <StyledSettingsSearch
                router={
                  Object {
                    "createHref": [MockFunction],
                    "go": [MockFunction],
                    "goBack": [MockFunction],
                    "goForward": [MockFunction],
                    "isActive": [MockFunction],
                    "listen": [MockFunction],
                    "location": Object {
                      "query": Object {},
                    },
                    "push": [MockFunction],
                    "replace": [MockFunction],
                    "setRouteLeaveHook": [MockFunction],
                  }
                }
                routes={Array []}
              >
                <SettingsSearch
                  className="css-15huhx-StyledSettingsSearch e1x2mkfj0"
                  router={
                    Object {
                      "createHref": [MockFunction],
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction],
                      "location": Object {
                        "query": Object {},
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                  routes={Array []}
                >
                  <withRouter(Search)
                    className="css-15huhx-StyledSettingsSearch e1x2mkfj0"
                    entryPoint="settings_search"
                    maxResults={10}
                    minSearch={1}
                    renderInput={[Function]}
                    router={
                      Object {
                        "createHref": [MockFunction],
                        "go": [MockFunction],
                        "goBack": [MockFunction],
                        "goForward": [MockFunction],
                        "isActive": [MockFunction],
                        "listen": [MockFunction],
                        "location": Object {
                          "query": Object {},
                        },
                        "push": [MockFunction],
                        "replace": [MockFunction],
                        "setRouteLeaveHook": [MockFunction],
                      }
                    }
                    routes={Array []}
                  >
                    <Search
                      className="css-15huhx-StyledSettingsSearch e1x2mkfj0"
                      closeOnSelect={true}
                      entryPoint="settings_search"
                      location={
                        Object {
                          "query": Object {},
                        }
                      }
                      maxResults={10}
                      minSearch={1}
                      renderInput={[Function]}
                      renderItem={[Function]}
                      router={
                        Object {
                          "createHref": [MockFunction],
                          "go": [MockFunction],
                          "goBack": [MockFunction],
                          "goForward": [MockFunction],
                          "isActive": [MockFunction],
                          "listen": [MockFunction],
                          "location": Object {
                            "query": Object {},
                          },
                          "push": [MockFunction],
                          "replace": [MockFunction],
                          "setRouteLeaveHook": [MockFunction],
                        }
                      }
                      sources={
                        Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ]
                      }
                    >
                      <AutoComplete
                        closeOnSelect={true}
                        defaultHighlightedIndex={0}
                        disabled={false}
                        inputIsActor={true}
                        itemToString={[Function]}
                        onSelect={[Function]}
                        shouldSelectWithEnter={true}
                        shouldSelectWithTab={false}
                      >
                        <DropdownMenu
                          closeOnEscape={true}
                          isOpen={false}
                          keepMenuOpen={false}
                          onClickOutside={[Function]}
                        >
                          <SearchWrapper>
                            <div
                              className="css-7gnmdq-SearchWrapper ed7560h1"
                            >
                              <SearchInputWrapper>
                                <div
                                  className="css-17mgn7r-SearchInputWrapper e1x2mkfj1"
                                >
                                  <SearchInputIcon
                                    size="14px"
                                  >
                                    <IconSearch
                                      className="css-13jqhe-SearchInputIcon e1x2mkfj2"
                                      size="14px"
                                    >
                                      <ForwardRef(SvgIcon)
                                        className="css-13jqhe-SearchInputIcon e1x2mkfj2"
                                        size="14px"
                                      >
                                        <svg
                                          className="css-13jqhe-SearchInputIcon e1x2mkfj2"
                                          fill="currentColor"
                                          height="14px"
                                          viewBox="0 0 16 16"
                                          width="14px"
                                        >
                                          <path
                                            d="M6,12A6,6,0,1,1,12,6,6,6,0,0,1,6,12ZM6,1.54A4.46,4.46,0,1,0,10.45,6,4.46,4.46,0,0,0,6,1.54Z"
                                          />
                                          <path
                                            d="M15.2,16a.74.74,0,0,1-.53-.22L9.14,10.2A.75.75,0,0,1,10.2,9.14l5.53,5.53a.75.75,0,0,1,0,1.06A.74.74,0,0,1,15.2,16Z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </IconSearch>
                                  </SearchInputIcon>
                                  <SearchInput
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    placeholder="Search"
                                    style={
                                      Object {
                                        "outline": "none",
                                      }
                                    }
                                    type="text"
                                    value=""
                                  >
                                    <input
                                      className="css-7shak6-SearchInput e1x2mkfj3"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      placeholder="Search"
                                      style={
                                        Object {
                                          "outline": "none",
                                        }
                                      }
                                      type="text"
                                      value=""
                                    />
                                  </SearchInput>
                                </div>
                              </SearchInputWrapper>
                            </div>
                          </SearchWrapper>
                        </DropdownMenu>
                      </AutoComplete>
                    </Search>
                  </withRouter(Search)>
                </SettingsSearch>
              </StyledSettingsSearch>
            </div>
          </HeaderContent>
        </div>
      </SettingsHeader>
      <MaxWidthContainer>
        <div
          className="css-wm0ppo-MaxWidthContainer e1b6kfpa4"
        >
          <NavMask
            isVisible={false}
            onClick={[Function]}
          >
            <div
              className="css-12l0uwt-NavMask e1b6kfpa6"
              onClick={[Function]}
            />
          </NavMask>
          <Content>
            <div
              className="css-1qa7uz4-Content e1b6kfpa7"
            />
          </Content>
        </div>
      </MaxWidthContainer>
    </div>
  </SettingsColumn>
</SettingsLayout>
`;
