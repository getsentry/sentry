// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IntegrationDetailsModal renders simple integration 1`] = `
<IntegrationDetailsModal
  closeModal={[MockFunction]}
  onAddIntegration={[MockFunction]}
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  provider={
    Object {
      "canAdd": true,
      "config": Array [],
      "externalIssues": Array [],
      "features": Array [],
      "key": "github",
      "metadata": Object {
        "aspects": Object {
          "alerts": Array [
            Object {
              "text": "This is a an alert example",
              "type": "warning",
            },
          ],
        },
        "author": "Morty",
        "description": "*markdown* formatted _description_",
        "features": Array [
          Object {
            "description": "*markdown* feature description",
          },
        ],
        "issue_url": "http://example.com/integration_issue_url",
        "noun": "Installation",
        "source_url": "http://example.com/integration_source_url",
      },
      "name": "GitHub",
      "setupDialog": Object {
        "height": 100,
        "url": "/github-integration-setup-uri/",
        "width": 100,
      },
      "slug": "github",
    }
  }
>
  <Styled(div)
    alignItems="center"
    mb={2}
  >
    <div
      className="css-15was0r"
    >
      <PluginIcon
        pluginId="github"
        size={50}
      >
        <div
          className="css-1fxjk4u-PluginIcon e7e65lm0"
          size={50}
        />
      </PluginIcon>
      <Styled(div)
        alignItems="flex-start"
        flexDirection="column"
        justifyContent="center"
        pl={1}
      >
        <div
          className="css-ivx1eb"
        >
          <ProviderName
            data-test-id="provider-name"
          >
            <Component
              className="css-1x4y9gk-ProviderName exuwfuv1"
              data-test-id="provider-name"
            >
              <Styled(div)
                className="css-1x4y9gk-ProviderName exuwfuv1"
                data-test-id="provider-name"
              >
                <div
                  className="exuwfuv1 css-1qwjpp2-ProviderName"
                  data-test-id="provider-name"
                >
                  GitHub Integration
                </div>
              </Styled(div)>
            </Component>
          </ProviderName>
          <Styled(div)>
            <div
              className="css-4cffwv"
            >
              0
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
    </div>
  </Styled(div)>
  <Description
    dangerouslySetInnerHTML={
      Object {
        "__html": "<p><em>markdown</em> formatted <em>description</em></p>
",
      }
    }
  >
    <div
      className="css-i3aitc-Description exuwfuv2"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p><em>markdown</em> formatted <em>description</em></p>
",
        }
      }
    />
  </Description>
  <generateFeaturesList
    features={
      Array [
        Object {
          "description": <span
            dangerouslySetInnerHTML={
              Object {
                "__html": "<em>markdown</em> feature description",
              }
            }
          />,
          "featureGate": undefined,
        },
      ]
    }
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "org:integrations",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    provider={
      Object {
        "canAdd": true,
        "config": Array [],
        "externalIssues": Array [],
        "features": Array [],
        "key": "github",
        "metadata": Object {
          "aspects": Object {
            "alerts": Array [
              Object {
                "text": "This is a an alert example",
                "type": "warning",
              },
            ],
          },
          "author": "Morty",
          "description": "*markdown* formatted _description_",
          "features": Array [
            Object {
              "description": "*markdown* feature description",
            },
          ],
          "issue_url": "http://example.com/integration_issue_url",
          "noun": "Installation",
          "source_url": "http://example.com/integration_source_url",
        },
        "name": "GitHub",
        "setupDialog": Object {
          "height": 100,
          "url": "/github-integration-setup-uri/",
          "width": 100,
        },
        "slug": "github",
      }
    }
  >
    <ul>
      <li
        key="0"
      >
        <span
          dangerouslySetInnerHTML={
            Object {
              "__html": "<em>markdown</em> feature description",
            }
          }
        />
      </li>
    </ul>
  </generateFeaturesList>
  <Metadata>
    <div
      className="css-17nk6hv-Metadata exuwfuv3"
    >
      <AuthorName
        flex={1}
      >
        <div
          className="css-qvtq0x-AuthorName exuwfuv4"
        >
          By Morty
        </div>
      </AuthorName>
      <Styled(div)>
        <div
          className="css-vurnku"
        >
          <ForwardRef
            href="http://example.com/integration_source_url"
          >
            <a
              href="http://example.com/integration_source_url"
              rel="noreferrer noopener"
              target="_blank"
            >
              View Source
            </a>
          </ForwardRef>
          <ForwardRef
            href="http://example.com/integration_issue_url"
          >
            <a
              href="http://example.com/integration_issue_url"
              rel="noreferrer noopener"
              target="_blank"
            >
              Report Issue
            </a>
          </ForwardRef>
        </div>
      </Styled(div)>
    </div>
  </Metadata>
  <Alert
    iconSize="24px"
    key="0"
    type="warning"
  >
    <Component
      className="css-bcq0ox-Alert ejthpj82"
      iconSize="24px"
      type="warning"
    >
      <div
        className="ref-warning css-bcq0ox-Alert ejthpj82"
      >
        <StyledTextBlock>
          <div
            className="css-1n7zgo7-TextBlock-StyledTextBlock ejthpj81"
          >
            <span
              dangerouslySetInnerHTML={
                Object {
                  "__html": "This is a an alert example",
                }
              }
            />
          </div>
        </StyledTextBlock>
      </div>
    </Component>
  </Alert>
  <generateIntegrationFeatures
    features={
      Array [
        Object {
          "description": <span
            dangerouslySetInnerHTML={
              Object {
                "__html": "<em>markdown</em> feature description",
              }
            }
          />,
          "featureGate": undefined,
        },
      ]
    }
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "org:integrations",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
  >
    <div
      className="modal-footer"
    >
      <forwardRef<Button>
        data-test-id="cancel-button"
        onClick={[MockFunction]}
        size="small"
      >
        <Button
          align="center"
          data-test-id="cancel-button"
          disabled={false}
          forwardRef={null}
          onClick={[MockFunction]}
          size="small"
        >
          <StyledButton
            aria-disabled={false}
            aria-label="Cancel"
            data-test-id="cancel-button"
            disabled={false}
            forwardRef={null}
            onClick={[Function]}
            role="button"
            size="small"
          >
            <Component
              aria-disabled={false}
              aria-label="Cancel"
              className="css-12ogwys-StyledButton edwq9my0"
              data-test-id="cancel-button"
              forwardRef={null}
              onClick={[Function]}
              role="button"
              size="small"
            >
              <button
                aria-disabled={false}
                aria-label="Cancel"
                className="css-12ogwys-StyledButton edwq9my0"
                data-test-id="cancel-button"
                onClick={[Function]}
                role="button"
                size="small"
              >
                <ButtonLabel
                  align="center"
                  size="small"
                >
                  <Component
                    align="center"
                    className="css-19gcr2f-ButtonLabel edwq9my1"
                    size="small"
                  >
                    <span
                      className="css-19gcr2f-ButtonLabel edwq9my1"
                    >
                      Cancel
                    </span>
                  </Component>
                </ButtonLabel>
              </button>
            </Component>
          </StyledButton>
        </Button>
      </forwardRef<Button>>
      <WithOrganizationMockWrapper
        access={
          Array [
            "org:integrations",
          ]
        }
        organization={
          Object {
            "access": Array [
              "org:read",
              "org:write",
              "org:admin",
              "org:integrations",
              "project:read",
              "project:write",
              "project:admin",
              "team:read",
              "team:write",
              "team:admin",
            ],
            "features": Array [],
            "id": "3",
            "name": "Organization Name",
            "onboardingTasks": Array [],
            "projects": Array [],
            "scrapeJavaScript": true,
            "slug": "org-slug",
            "status": Object {
              "id": "active",
              "name": "active",
            },
            "teams": Array [],
          }
        }
      >
        <withConfig(Access)
          access={
            Array [
              "org:integrations",
            ]
          }
          organization={
            Object {
              "access": Array [
                "org:read",
                "org:write",
                "org:admin",
                "org:integrations",
                "project:read",
                "project:write",
                "project:admin",
                "team:read",
                "team:write",
                "team:admin",
              ],
              "features": Array [],
              "id": "3",
              "name": "Organization Name",
              "onboardingTasks": Array [],
              "projects": Array [],
              "scrapeJavaScript": true,
              "slug": "org-slug",
              "status": Object {
                "id": "active",
                "name": "active",
              },
              "teams": Array [],
            }
          }
        >
          <Access
            access={
              Array [
                "org:integrations",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
            isSuperuser={false}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "org:integrations",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "active",
                  "name": "active",
                },
                "teams": Array [],
              }
            }
            renderNoAccessMessage={false}
            requireAll={true}
          >
            <Tooltip
              containerDisplayMode="inline-block"
              disabled={true}
              position="top"
              title="You must be an organization owner, manager or admin to install this."
            >
              <AddButton
                data-test-id="add-button"
                disabled={false}
                organization={
                  Object {
                    "access": Array [
                      "org:read",
                      "org:write",
                      "org:admin",
                      "org:integrations",
                      "project:read",
                      "project:write",
                      "project:admin",
                      "team:read",
                      "team:write",
                      "team:admin",
                    ],
                    "features": Array [],
                    "id": "3",
                    "name": "Organization Name",
                    "onboardingTasks": Array [],
                    "projects": Array [],
                    "scrapeJavaScript": true,
                    "slug": "org-slug",
                    "status": Object {
                      "id": "active",
                      "name": "active",
                    },
                    "teams": Array [],
                  }
                }
              >
                <AddIntegrationButton
                  data-test-id="add-button"
                  disabled={false}
                  onAddIntegration={[Function]}
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "org:integrations",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "active",
                        "name": "active",
                      },
                      "teams": Array [],
                    }
                  }
                  priority="primary"
                  provider={
                    Object {
                      "canAdd": true,
                      "config": Array [],
                      "externalIssues": Array [],
                      "features": Array [],
                      "key": "github",
                      "metadata": Object {
                        "aspects": Object {
                          "alerts": Array [
                            Object {
                              "text": "This is a an alert example",
                              "type": "warning",
                            },
                          ],
                        },
                        "author": "Morty",
                        "description": "*markdown* formatted _description_",
                        "features": Array [
                          Object {
                            "description": "*markdown* feature description",
                          },
                        ],
                        "issue_url": "http://example.com/integration_issue_url",
                        "noun": "Installation",
                        "source_url": "http://example.com/integration_source_url",
                      },
                      "name": "GitHub",
                      "setupDialog": Object {
                        "height": 100,
                        "url": "/github-integration-setup-uri/",
                        "width": 100,
                      },
                      "slug": "github",
                    }
                  }
                  size="small"
                  style={
                    Object {
                      "marginLeft": "8px",
                    }
                  }
                >
                  <Tooltip
                    containerDisplayMode="inline-block"
                    disabled={true}
                    position="top"
                    title="Integration cannot be added on Sentry. Enable this integration via the GitHub instance."
                  >
                    <AddIntegration
                      onInstall={[Function]}
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "org:integrations",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "active",
                            "name": "active",
                          },
                          "teams": Array [],
                        }
                      }
                      provider={
                        Object {
                          "canAdd": true,
                          "config": Array [],
                          "externalIssues": Array [],
                          "features": Array [],
                          "key": "github",
                          "metadata": Object {
                            "aspects": Object {
                              "alerts": Array [
                                Object {
                                  "text": "This is a an alert example",
                                  "type": "warning",
                                },
                              ],
                            },
                            "author": "Morty",
                            "description": "*markdown* formatted _description_",
                            "features": Array [
                              Object {
                                "description": "*markdown* feature description",
                              },
                            ],
                            "issue_url": "http://example.com/integration_issue_url",
                            "noun": "Installation",
                            "source_url": "http://example.com/integration_source_url",
                          },
                          "name": "GitHub",
                          "setupDialog": Object {
                            "height": 100,
                            "url": "/github-integration-setup-uri/",
                            "width": 100,
                          },
                          "slug": "github",
                        }
                      }
                    >
                      <forwardRef<Button>
                        data-test-id="add-button"
                        disabled={false}
                        onClick={[Function]}
                        priority="primary"
                        size="small"
                        style={
                          Object {
                            "marginLeft": "8px",
                          }
                        }
                      >
                        <Button
                          align="center"
                          data-test-id="add-button"
                          disabled={false}
                          forwardRef={null}
                          onClick={[Function]}
                          priority="primary"
                          size="small"
                          style={
                            Object {
                              "marginLeft": "8px",
                            }
                          }
                        >
                          <StyledButton
                            aria-disabled={false}
                            aria-label="Add Installation"
                            data-test-id="add-button"
                            disabled={false}
                            forwardRef={null}
                            onClick={[Function]}
                            priority="primary"
                            role="button"
                            size="small"
                            style={
                              Object {
                                "marginLeft": "8px",
                              }
                            }
                          >
                            <Component
                              aria-disabled={false}
                              aria-label="Add Installation"
                              className="css-z8at1v-StyledButton edwq9my0"
                              data-test-id="add-button"
                              forwardRef={null}
                              onClick={[Function]}
                              role="button"
                              size="small"
                              style={
                                Object {
                                  "marginLeft": "8px",
                                }
                              }
                            >
                              <button
                                aria-disabled={false}
                                aria-label="Add Installation"
                                className="css-z8at1v-StyledButton edwq9my0"
                                data-test-id="add-button"
                                onClick={[Function]}
                                role="button"
                                size="small"
                                style={
                                  Object {
                                    "marginLeft": "8px",
                                  }
                                }
                              >
                                <ButtonLabel
                                  align="center"
                                  priority="primary"
                                  size="small"
                                >
                                  <Component
                                    align="center"
                                    className="css-19gcr2f-ButtonLabel edwq9my1"
                                    priority="primary"
                                    size="small"
                                  >
                                    <span
                                      className="css-19gcr2f-ButtonLabel edwq9my1"
                                    >
                                      Add Installation
                                    </span>
                                  </Component>
                                </ButtonLabel>
                              </button>
                            </Component>
                          </StyledButton>
                        </Button>
                      </forwardRef<Button>>
                    </AddIntegration>
                  </Tooltip>
                </AddIntegrationButton>
              </AddButton>
            </Tooltip>
          </Access>
        </withConfig(Access)>
      </WithOrganizationMockWrapper>
    </div>
  </generateIntegrationFeatures>
</IntegrationDetailsModal>
`;
