// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Docs Search Modal can open help search modal and complete a search 1`] = `
<DropdownBox
  className="css-1nf7i25-dropdownStyle"
>
  <div
    className="css-idf3ke-DropdownBox-dropdownStyle ed7560h0"
  >
    <SearchResultWrapper
      highlighted={true}
      key="Doc result 1-0"
      onClick={[Function]}
    >
      <Component
        className="css-1a9oeco-SearchResultWrapper-SearchResultWrapper e12rx3zt0"
        highlighted={true}
        onClick={[Function]}
      >
        <div
          className="css-1a9oeco-SearchResultWrapper-SearchResultWrapper e12rx3zt0"
          onClick={[Function]}
        >
          <withRouter(SearchResult)
            highlighted={true}
            item={
              Object {
                "description": "Doc result 1 description",
                "resultIcon": <DocsBadge />,
                "resultType": "doc",
                "sourceType": "help",
                "title": "Doc result 1",
                "to": "https://docs.sentry.io/doc_result",
              }
            }
            matches={
              Array [
                Object {
                  "indices": Array [],
                  "key": "title",
                  "value": "Doc result 1",
                },
                Object {
                  "indices": Array [],
                  "key": "description",
                  "value": "Doc result 1 description",
                },
              ]
            }
          >
            <SearchResult
              highlighted={true}
              item={
                Object {
                  "description": "Doc result 1 description",
                  "resultIcon": <DocsBadge />,
                  "resultType": "doc",
                  "sourceType": "help",
                  "title": "Doc result 1",
                  "to": "https://docs.sentry.io/doc_result",
                }
              }
              location={
                Object {
                  "query": Object {},
                }
              }
              matches={
                Array [
                  Object {
                    "indices": Array [],
                    "key": "title",
                    "value": "Doc result 1",
                  },
                  Object {
                    "indices": Array [],
                    "key": "description",
                    "value": "Doc result 1 description",
                  },
                ]
              }
              params={
                Object {
                  "orgId": "org-slug",
                }
              }
              router={
                Object {
                  "createHref": [MockFunction],
                  "go": [MockFunction],
                  "goBack": [MockFunction],
                  "goForward": [MockFunction],
                  "isActive": [MockFunction],
                  "listen": [MockFunction],
                  "location": Object {
                    "query": Object {},
                  },
                  "params": Object {
                    "orgId": "org-slug",
                  },
                  "push": [MockFunction],
                  "replace": [MockFunction],
                  "setRouteLeaveHook": [MockFunction],
                }
              }
            >
              <Wrapper>
                <div
                  className="css-1gjt7pu-Wrapper e1deq8q73"
                >
                  <Content>
                    <div
                      className="css-174kchf-Content e1deq8q74"
                    >
                      <div>
                        <SearchTitle>
                          <span
                            className="css-jyrvax-SearchTitle e1deq8q70"
                          >
                            <span
                              key="0"
                            >
                              Doc result 1
                            </span>
                          </span>
                        </SearchTitle>
                      </div>
                      <SearchDetail>
                        <div
                          className="css-17e2h30-SearchDetail e1deq8q71"
                        >
                          <span
                            key="0"
                          >
                            Doc result 1 description
                          </span>
                        </div>
                      </SearchDetail>
                    </div>
                  </Content>
                  <DocsBadge>
                    <Component
                      className="css-ekzoaq-DocsBadge ekxyuw11"
                    >
                      <ResultIcon
                        className="css-ekzoaq-DocsBadge ekxyuw11"
                      >
                        <div
                          className="ekxyuw11 css-f5te32-ResultIcon-DocsBadge ekxyuw10"
                        >
                          docs
                        </div>
                      </ResultIcon>
                    </Component>
                  </DocsBadge>
                </div>
              </Wrapper>
            </SearchResult>
          </withRouter(SearchResult)>
        </div>
      </Component>
    </SearchResultWrapper>
    <SearchResultWrapper
      highlighted={false}
      key="FAQ result 1-1"
      onClick={[Function]}
    >
      <Component
        className="css-hmbjwn-SearchResultWrapper e12rx3zt0"
        highlighted={false}
        onClick={[Function]}
      >
        <div
          className="css-hmbjwn-SearchResultWrapper e12rx3zt0"
          onClick={[Function]}
        >
          <withRouter(SearchResult)
            highlighted={false}
            item={
              Object {
                "description": "FAQ result 1 description",
                "resultIcon": <FaqsBadge />,
                "resultType": "faq",
                "sourceType": "help",
                "title": "FAQ result 1",
                "to": "https://help.sentry.io/hc/en-us/articles/undefined",
              }
            }
            matches={
              Array [
                Object {
                  "indices": Array [],
                  "key": "title",
                  "value": "FAQ result 1",
                },
                Object {
                  "indices": Array [],
                  "key": "description",
                  "value": "FAQ result 1 description",
                },
              ]
            }
          >
            <SearchResult
              highlighted={false}
              item={
                Object {
                  "description": "FAQ result 1 description",
                  "resultIcon": <FaqsBadge />,
                  "resultType": "faq",
                  "sourceType": "help",
                  "title": "FAQ result 1",
                  "to": "https://help.sentry.io/hc/en-us/articles/undefined",
                }
              }
              location={
                Object {
                  "query": Object {},
                }
              }
              matches={
                Array [
                  Object {
                    "indices": Array [],
                    "key": "title",
                    "value": "FAQ result 1",
                  },
                  Object {
                    "indices": Array [],
                    "key": "description",
                    "value": "FAQ result 1 description",
                  },
                ]
              }
              params={
                Object {
                  "orgId": "org-slug",
                }
              }
              router={
                Object {
                  "createHref": [MockFunction],
                  "go": [MockFunction],
                  "goBack": [MockFunction],
                  "goForward": [MockFunction],
                  "isActive": [MockFunction],
                  "listen": [MockFunction],
                  "location": Object {
                    "query": Object {},
                  },
                  "params": Object {
                    "orgId": "org-slug",
                  },
                  "push": [MockFunction],
                  "replace": [MockFunction],
                  "setRouteLeaveHook": [MockFunction],
                }
              }
            >
              <Wrapper>
                <div
                  className="css-1gjt7pu-Wrapper e1deq8q73"
                >
                  <Content>
                    <div
                      className="css-174kchf-Content e1deq8q74"
                    >
                      <div>
                        <SearchTitle>
                          <span
                            className="css-jyrvax-SearchTitle e1deq8q70"
                          >
                            <span
                              key="0"
                            >
                              FAQ result 1
                            </span>
                          </span>
                        </SearchTitle>
                      </div>
                      <SearchDetail>
                        <div
                          className="css-17e2h30-SearchDetail e1deq8q71"
                        >
                          <span
                            key="0"
                          >
                            FAQ result 1 description
                          </span>
                        </div>
                      </SearchDetail>
                    </div>
                  </Content>
                  <FaqsBadge>
                    <Component
                      className="css-1ghhjdv-FaqsBadge ekxyuw12"
                    >
                      <ResultIcon
                        className="css-1ghhjdv-FaqsBadge ekxyuw12"
                      >
                        <div
                          className="ekxyuw12 css-1p74sld-ResultIcon-FaqsBadge ekxyuw10"
                        >
                          faqs
                        </div>
                      </ResultIcon>
                    </Component>
                  </FaqsBadge>
                </div>
              </Wrapper>
            </SearchResult>
          </withRouter(SearchResult)>
        </div>
      </Component>
    </SearchResultWrapper>
  </div>
</DropdownBox>
`;
