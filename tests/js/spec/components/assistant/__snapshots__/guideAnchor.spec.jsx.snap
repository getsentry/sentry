// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GuideAnchor renders, advances, and finishes 1`] = `
<GuideAnchor
  target="target 1"
>
  <ForwardRef(render)>
    <Hovercard
      body={
        <ForwardRef(render)>
          <ForwardRef(render)>
            <ForwardRef(render)>
              title 1
            </ForwardRef(render)>
            <ForwardRef(render)
              data-test-id="close-button"
              href="#"
              onClick={[Function]}
            >
              <ForwardRef(render) />
            </ForwardRef(render)>
          </ForwardRef(render)>
          <ForwardRef(render)>
            <div
              dangerouslySetInnerHTML={
                Object {
                  "__html": "abc",
                }
              }
            />
            <ForwardRef(render)>
              <div>
                <ForwardRef
                  onClick={[Function]}
                  priority="success"
                  size="small"
                >
                  Next
                   →
                </ForwardRef>
              </div>
            </ForwardRef(render)>
          </ForwardRef(render)>
        </ForwardRef(render)>
      }
      bodyClassName="css-1engxaj"
      displayTimeout={100}
      position="top"
      show={true}
      tipColor="#3EA573"
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <span
              aria-describedby="hovercard-123456"
            >
              <span />
            </span>
          </InnerReference>
        </Reference>
        <Portal
          containerInfo={
            <div
              id="hovercard-portal"
            >
              <div
                class="hovercard css-1iq6s4e-StyledHovercard e38w1je0"
                id="hovercard-123456"
                style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
              >
                <div
                  class="css-fb6op-Body e38w1je2"
                >
                  <div
                    class="css-hhb7wa-GuideContainer e130o4350"
                  >
                    <div
                      class="css-oc5lxq-GuideInputRow e130o4352"
                    >
                      <div
                        class="css-nw97la-StyledTitle e130o4353"
                      >
                        title 1
                      </div>
                      <a
                        class="css-1tis8wt-CloseLink e130o4351"
                        data-test-id="close-button"
                        href="#"
                      >
                        <svg
                          class="ernuchp3 css-1kfzr4j-InlineSvg-CloseIcon enyz4ql0"
                          height="1em"
                          viewBox="[object Object]"
                          width="1em"
                        >
                          <use
                            href="#test"
                            xlink:href="#test"
                          />
                        </svg>
                      </a>
                    </div>
                    <div
                      class="css-qwocdy-StyledContent e130o4354"
                    >
                      <div>
                        abc
                      </div>
                      <div
                        class="css-m56sce-Actions e130o4355"
                      >
                        <div>
                          <button
                            aria-disabled="false"
                            class="css-1a9qzq-StyledButton edwq9my0"
                            role="button"
                          >
                            <span
                              class="css-19gcr2f-ButtonLabel edwq9my1"
                            >
                              Next
                               →
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <span
                  class="css-8y7441-HovercardArrow e38w1je3"
                />
              </div>
            </div>
          }
        >
          <Popper
            modifiers={
              Object {
                "hide": Object {
                  "enabled": false,
                },
                "preventOverflow": Object {
                  "boundariesElement": "viewport",
                  "enabled": true,
                  "padding": 10,
                },
              }
            }
            placement="top"
          >
            <InnerPopper
              eventsEnabled={true}
              modifiers={
                Object {
                  "hide": Object {
                    "enabled": false,
                  },
                  "preventOverflow": Object {
                    "boundariesElement": "viewport",
                    "enabled": true,
                    "padding": 10,
                  },
                }
              }
              placement="top"
              positionFixed={false}
              referenceElement={
                <span
                  aria-describedby="hovercard-123456"
                >
                  <span />
                </span>
              }
            >
              <StyledHovercard
                className="hovercard"
                id="hovercard-123456"
                style={
                  Object {
                    "left": 0,
                    "opacity": 0,
                    "pointerEvents": "none",
                    "position": "absolute",
                    "top": 0,
                  }
                }
                visible={true}
                withHeader={false}
              >
                <div
                  className="hovercard css-1iq6s4e-StyledHovercard e38w1je0"
                  id="hovercard-123456"
                  style={
                    Object {
                      "left": 0,
                      "opacity": 0,
                      "pointerEvents": "none",
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                >
                  <Body
                    className="css-1engxaj"
                  >
                    <div
                      className="css-fb6op-Body e38w1je2"
                    >
                      <GuideContainer>
                        <div
                          className="css-hhb7wa-GuideContainer e130o4350"
                        >
                          <GuideInputRow>
                            <div
                              className="css-oc5lxq-GuideInputRow e130o4352"
                            >
                              <StyledTitle>
                                <div
                                  className="css-nw97la-StyledTitle e130o4353"
                                >
                                  title 1
                                </div>
                              </StyledTitle>
                              <CloseLink
                                data-test-id="close-button"
                                href="#"
                                onClick={[Function]}
                              >
                                <a
                                  className="css-1tis8wt-CloseLink e130o4351"
                                  data-test-id="close-button"
                                  href="#"
                                  onClick={[Function]}
                                >
                                  <CloseIcon>
                                    <Component
                                      className="css-1j72m2y-CloseIcon ernuchp3"
                                    >
                                      <InlineSvg
                                        className="css-1j72m2y-CloseIcon ernuchp3"
                                        src="icon-close-lg"
                                      >
                                        <ForwardRef
                                          className="ernuchp3 css-1kfzr4j-InlineSvg-CloseIcon enyz4ql0"
                                          src="icon-close-lg"
                                        >
                                          <svg
                                            className="ernuchp3 css-1kfzr4j-InlineSvg-CloseIcon enyz4ql0"
                                            height="1em"
                                            viewBox={Object {}}
                                            width="1em"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </ForwardRef>
                                      </InlineSvg>
                                    </Component>
                                  </CloseIcon>
                                </a>
                              </CloseLink>
                            </div>
                          </GuideInputRow>
                          <StyledContent>
                            <div
                              className="css-qwocdy-StyledContent e130o4354"
                            >
                              <div
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "abc",
                                  }
                                }
                              />
                              <Actions>
                                <div
                                  className="css-m56sce-Actions e130o4355"
                                >
                                  <div>
                                    <forwardRef<Button>
                                      onClick={[Function]}
                                      priority="success"
                                      size="small"
                                    >
                                      <Button
                                        align="center"
                                        disabled={false}
                                        forwardRef={null}
                                        onClick={[Function]}
                                        priority="success"
                                        size="small"
                                      >
                                        <StyledButton
                                          aria-disabled={false}
                                          disabled={false}
                                          forwardRef={null}
                                          onClick={[Function]}
                                          priority="success"
                                          role="button"
                                          size="small"
                                        >
                                          <Component
                                            aria-disabled={false}
                                            className="css-1a9qzq-StyledButton edwq9my0"
                                            forwardRef={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="small"
                                          >
                                            <button
                                              aria-disabled={false}
                                              className="css-1a9qzq-StyledButton edwq9my0"
                                              onClick={[Function]}
                                              role="button"
                                              size="small"
                                            >
                                              <ButtonLabel
                                                align="center"
                                                priority="success"
                                                size="small"
                                              >
                                                <Component
                                                  align="center"
                                                  className="css-19gcr2f-ButtonLabel edwq9my1"
                                                  priority="success"
                                                  size="small"
                                                >
                                                  <span
                                                    className="css-19gcr2f-ButtonLabel edwq9my1"
                                                  >
                                                    Next
                                                     →
                                                  </span>
                                                </Component>
                                              </ButtonLabel>
                                            </button>
                                          </Component>
                                        </StyledButton>
                                      </Button>
                                    </forwardRef<Button>>
                                  </div>
                                </div>
                              </Actions>
                            </div>
                          </StyledContent>
                        </div>
                      </GuideContainer>
                    </div>
                  </Body>
                  <HovercardArrow
                    style={Object {}}
                    tipColor="#3EA573"
                  >
                    <span
                      className="css-8y7441-HovercardArrow e38w1je3"
                      style={Object {}}
                    />
                  </HovercardArrow>
                </div>
              </StyledHovercard>
            </InnerPopper>
          </Popper>
        </Portal>
      </Manager>
    </Hovercard>
  </ForwardRef(render)>
</GuideAnchor>
`;

exports[`GuideAnchor renders, advances, and finishes 2`] = `
<GuideAnchor
  target="target 2"
>
  <ForwardRef(render)>
    <Hovercard
      body={
        <ForwardRef(render)>
          <ForwardRef(render)>
            <ForwardRef(render)>
              title 2
            </ForwardRef(render)>
          </ForwardRef(render)>
          <ForwardRef(render)>
            <div
              dangerouslySetInnerHTML={
                Object {
                  "__html": "xyz",
                }
              }
            />
            <ForwardRef(render)>
              <div>
                <ForwardRef
                  onClick={[Function]}
                  priority="success"
                  size="small"
                >
                  Done
                </ForwardRef>
              </div>
            </ForwardRef(render)>
          </ForwardRef(render)>
        </ForwardRef(render)>
      }
      bodyClassName="css-1engxaj"
      displayTimeout={100}
      position="top"
      show={true}
      tipColor="#3EA573"
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <span
              aria-describedby="hovercard-123456"
            >
              <span />
            </span>
          </InnerReference>
        </Reference>
        <Portal
          containerInfo={
            <div
              id="hovercard-portal"
            >
              <div
                class="hovercard css-1iq6s4e-StyledHovercard e38w1je0"
                id="hovercard-123456"
                style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
              >
                <div
                  class="css-fb6op-Body e38w1je2"
                >
                  <div
                    class="css-hhb7wa-GuideContainer e130o4350"
                  >
                    <div
                      class="css-oc5lxq-GuideInputRow e130o4352"
                    >
                      <div
                        class="css-nw97la-StyledTitle e130o4353"
                      >
                        title 2
                      </div>
                    </div>
                    <div
                      class="css-qwocdy-StyledContent e130o4354"
                    >
                      <div>
                        xyz
                      </div>
                      <div
                        class="css-m56sce-Actions e130o4355"
                      >
                        <div>
                          <button
                            aria-disabled="false"
                            aria-label="Done"
                            class="css-1a9qzq-StyledButton edwq9my0"
                            role="button"
                          >
                            <span
                              class="css-19gcr2f-ButtonLabel edwq9my1"
                            >
                              Done
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <span
                  class="css-8y7441-HovercardArrow e38w1je3"
                />
              </div>
            </div>
          }
        >
          <Popper
            modifiers={
              Object {
                "hide": Object {
                  "enabled": false,
                },
                "preventOverflow": Object {
                  "boundariesElement": "viewport",
                  "enabled": true,
                  "padding": 10,
                },
              }
            }
            placement="top"
          >
            <InnerPopper
              eventsEnabled={true}
              modifiers={
                Object {
                  "hide": Object {
                    "enabled": false,
                  },
                  "preventOverflow": Object {
                    "boundariesElement": "viewport",
                    "enabled": true,
                    "padding": 10,
                  },
                }
              }
              placement="top"
              positionFixed={false}
              referenceElement={
                <span
                  aria-describedby="hovercard-123456"
                >
                  <span />
                </span>
              }
            >
              <StyledHovercard
                className="hovercard"
                id="hovercard-123456"
                style={
                  Object {
                    "left": 0,
                    "opacity": 0,
                    "pointerEvents": "none",
                    "position": "absolute",
                    "top": 0,
                  }
                }
                visible={true}
                withHeader={false}
              >
                <div
                  className="hovercard css-1iq6s4e-StyledHovercard e38w1je0"
                  id="hovercard-123456"
                  style={
                    Object {
                      "left": 0,
                      "opacity": 0,
                      "pointerEvents": "none",
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                >
                  <Body
                    className="css-1engxaj"
                  >
                    <div
                      className="css-fb6op-Body e38w1je2"
                    >
                      <GuideContainer>
                        <div
                          className="css-hhb7wa-GuideContainer e130o4350"
                        >
                          <GuideInputRow>
                            <div
                              className="css-oc5lxq-GuideInputRow e130o4352"
                            >
                              <StyledTitle>
                                <div
                                  className="css-nw97la-StyledTitle e130o4353"
                                >
                                  title 2
                                </div>
                              </StyledTitle>
                            </div>
                          </GuideInputRow>
                          <StyledContent>
                            <div
                              className="css-qwocdy-StyledContent e130o4354"
                            >
                              <div
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "xyz",
                                  }
                                }
                              />
                              <Actions>
                                <div
                                  className="css-m56sce-Actions e130o4355"
                                >
                                  <div>
                                    <forwardRef<Button>
                                      onClick={[Function]}
                                      priority="success"
                                      size="small"
                                    >
                                      <Button
                                        align="center"
                                        disabled={false}
                                        forwardRef={null}
                                        onClick={[Function]}
                                        priority="success"
                                        size="small"
                                      >
                                        <StyledButton
                                          aria-disabled={false}
                                          aria-label="Done"
                                          disabled={false}
                                          forwardRef={null}
                                          onClick={[Function]}
                                          priority="success"
                                          role="button"
                                          size="small"
                                        >
                                          <Component
                                            aria-disabled={false}
                                            aria-label="Done"
                                            className="css-1a9qzq-StyledButton edwq9my0"
                                            forwardRef={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="small"
                                          >
                                            <button
                                              aria-disabled={false}
                                              aria-label="Done"
                                              className="css-1a9qzq-StyledButton edwq9my0"
                                              onClick={[Function]}
                                              role="button"
                                              size="small"
                                            >
                                              <ButtonLabel
                                                align="center"
                                                priority="success"
                                                size="small"
                                              >
                                                <Component
                                                  align="center"
                                                  className="css-19gcr2f-ButtonLabel edwq9my1"
                                                  priority="success"
                                                  size="small"
                                                >
                                                  <span
                                                    className="css-19gcr2f-ButtonLabel edwq9my1"
                                                  >
                                                    Done
                                                  </span>
                                                </Component>
                                              </ButtonLabel>
                                            </button>
                                          </Component>
                                        </StyledButton>
                                      </Button>
                                    </forwardRef<Button>>
                                  </div>
                                </div>
                              </Actions>
                            </div>
                          </StyledContent>
                        </div>
                      </GuideContainer>
                    </div>
                  </Body>
                  <HovercardArrow
                    style={Object {}}
                    tipColor="#3EA573"
                  >
                    <span
                      className="css-8y7441-HovercardArrow e38w1je3"
                      style={Object {}}
                    />
                  </HovercardArrow>
                </div>
              </StyledHovercard>
            </InnerPopper>
          </Popper>
        </Portal>
      </Manager>
    </Hovercard>
  </ForwardRef(render)>
</GuideAnchor>
`;
