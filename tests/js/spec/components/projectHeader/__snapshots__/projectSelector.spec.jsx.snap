// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectSelector render() can filter projects by project name 1`] = `
<ProjectSelector
  organization={
    Object {
      "access": Array [],
      "features": Array [
        "new-teams",
      ],
      "id": "org",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [
        Object {
          "hasAccess": true,
          "id": "test-project",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "test-project",
          "teams": Array [
            Object {
              "id": "test-team",
              "isMember": true,
              "name": "Team Name",
              "slug": "test-team",
            },
          ],
        },
        Object {
          "hasAccess": true,
          "id": "another-project",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "another-project",
          "teams": Array [
            Object {
              "id": "test-team",
              "isMember": true,
              "name": "Team Name",
              "slug": "test-team",
            },
          ],
        },
      ],
      "scrapeJavaScript": true,
      "slug": "org",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [
        Object {
          "id": "test-team",
          "isMember": true,
          "name": "Team Name",
          "slug": "test-team",
        },
      ],
    }
  }
  projectId=""
>
  <div
    className="project-select"
  >
    <h3>
      <span
        onClick={[Function]}
        role="button"
        style={
          Object {
            "cursor": "pointer",
          }
        }
      >
        Select a project
      </span>
      <DropdownLink
        alwaysRenderMenu={false}
        anchorRight={false}
        caret={true}
        disabled={false}
        isOpen={true}
        onClose={[Function]}
        onOpen={[Function]}
        title=""
        topLevelClasses="project-dropdown"
      >
        <DropdownMenu
          alwaysRenderMenu={false}
          isOpen={true}
          keepMenuOpen={false}
          onClose={[Function]}
          onOpen={[Function]}
        >
          <span
            className="dropdown project-dropdown open"
          >
            <a
              className="dropdown-actor dropdown-toggle hover"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <div
                className="dropdown-actor-title"
              >
                <span />
                <i
                  className="icon-arrow-down"
                />
              </div>
            </a>
            <ul
              className="dropdown-menu"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <li
                className="project-filter"
                key="_filter"
              >
                <input
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  placeholder="Filter projects"
                  type="text"
                  value="another"
                />
              </li>
              <MenuItem
                className=""
                href="/org/another-project/"
                key="another-project"
                linkClassName=""
              >
                <li
                  className=""
                  href={null}
                  role="presentation"
                  title={null}
                >
                  <a
                    className=""
                    href="/org/another-project/"
                    onClick={[Function]}
                    tabIndex="-1"
                  >
                    <ProjectRow>
                      <div
                        className="css-130agdj-ProjectRow et07ovj0"
                      >
                        <IdBadge
                          avatarProps={
                            Object {
                              "consistentWidth": true,
                            }
                          }
                          avatarSize={16}
                          displayName={
                            <span>
                              
                              <strong
                                className="highlight"
                              >
                                another
                              </strong>
                              -project
                            </span>
                          }
                          project={
                            Object {
                              "hasAccess": true,
                              "id": "another-project",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name",
                              "slug": "another-project",
                              "teams": Array [
                                Object {
                                  "id": "test-team",
                                  "isMember": true,
                                  "name": "Team Name",
                                  "slug": "test-team",
                                },
                              ],
                            }
                          }
                        >
                          <InlineErrorBoundary
                            mini={true}
                          >
                            <ErrorBoundary
                              className="css-otlbo1-InlineErrorBoundary e83vi020"
                              mini={true}
                            >
                              <ProjectBadge
                                avatarProps={
                                  Object {
                                    "consistentWidth": true,
                                  }
                                }
                                avatarSize={16}
                                displayName={
                                  <span>
                                    
                                    <strong
                                      className="highlight"
                                    >
                                      another
                                    </strong>
                                    -project
                                  </span>
                                }
                                hideAvatar={false}
                                hideOverflow={true}
                                project={
                                  Object {
                                    "hasAccess": true,
                                    "id": "another-project",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Project Name",
                                    "slug": "another-project",
                                    "teams": Array [
                                      Object {
                                        "id": "test-team",
                                        "isMember": true,
                                        "name": "Team Name",
                                        "slug": "test-team",
                                      },
                                    ],
                                  }
                                }
                              >
                                <BaseBadge
                                  avatarProps={
                                    Object {
                                      "consistentWidth": true,
                                    }
                                  }
                                  avatarSize={16}
                                  displayName={
                                    <span>
                                      
                                      <strong
                                        className="highlight"
                                      >
                                        another
                                      </strong>
                                      -project
                                    </span>
                                  }
                                  hideAvatar={false}
                                  project={
                                    Object {
                                      "hasAccess": true,
                                      "id": "another-project",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "another-project",
                                      "teams": Array [
                                        Object {
                                          "id": "test-team",
                                          "isMember": true,
                                          "name": "Team Name",
                                          "slug": "test-team",
                                        },
                                      ],
                                    }
                                  }
                                >
                                  <Flex
                                    align="center"
                                  >
                                    <Base
                                      align="center"
                                      className="css-5ipae5"
                                    >
                                      <div
                                        className="css-5ipae5"
                                        is={null}
                                      >
                                        <StyledAvatar
                                          className="css-0"
                                          consistentWidth={true}
                                          project={
                                            Object {
                                              "hasAccess": true,
                                              "id": "another-project",
                                              "isBookmarked": false,
                                              "isMember": true,
                                              "name": "Project Name",
                                              "slug": "another-project",
                                              "teams": Array [
                                                Object {
                                                  "id": "test-team",
                                                  "isMember": true,
                                                  "name": "Team Name",
                                                  "slug": "test-team",
                                                },
                                              ],
                                            }
                                          }
                                          size={16}
                                        >
                                          <Avatar
                                            className="css-robds0-StyledAvatar e165dl3i0"
                                            consistentWidth={true}
                                            hasTooltip={false}
                                            project={
                                              Object {
                                                "hasAccess": true,
                                                "id": "another-project",
                                                "isBookmarked": false,
                                                "isMember": true,
                                                "name": "Project Name",
                                                "slug": "another-project",
                                                "teams": Array [
                                                  Object {
                                                    "id": "test-team",
                                                    "isMember": true,
                                                    "name": "Team Name",
                                                    "slug": "test-team",
                                                  },
                                                ],
                                              }
                                            }
                                            size={16}
                                          >
                                            <ProjectAvatar
                                              className="css-robds0-StyledAvatar e165dl3i0"
                                              consistentWidth={true}
                                              hasTooltip={false}
                                              project={
                                                Object {
                                                  "hasAccess": true,
                                                  "id": "another-project",
                                                  "isBookmarked": false,
                                                  "isMember": true,
                                                  "name": "Project Name",
                                                  "slug": "another-project",
                                                  "teams": Array [
                                                    Object {
                                                      "id": "test-team",
                                                      "isMember": true,
                                                      "name": "Team Name",
                                                      "slug": "test-team",
                                                    },
                                                  ],
                                                }
                                              }
                                              size={16}
                                            >
                                              <PlatformList
                                                className="css-robds0-StyledAvatar e165dl3i0"
                                                consistentWidth={true}
                                                direction="right"
                                                hasTooltip={false}
                                                max={3}
                                                platforms={Array []}
                                                size={16}
                                              >
                                                <PlatformIcons
                                                  consistentWidth={true}
                                                  direction="right"
                                                  max={3}
                                                  size={16}
                                                >
                                                  <div
                                                    className="css-10kccj9-PlatformIcons ezvce7z0"
                                                    direction="right"
                                                    max={3}
                                                    size={16}
                                                  >
                                                    <StyledPlatformIcon
                                                      platform="default"
                                                      size={16}
                                                    >
                                                      <Component
                                                        className="css-htodfm-StyledPlatformIcon ezvce7z1"
                                                        platform="default"
                                                        size={16}
                                                      >
                                                        <Platformicon
                                                          className="css-htodfm-StyledPlatformIcon ezvce7z1"
                                                          platform="default"
                                                          size="16px"
                                                        >
                                                          <img
                                                            className="css-htodfm-StyledPlatformIcon ezvce7z1"
                                                            height="16px"
                                                            src={
                                                              Object {
                                                                "default": Object {
                                                                  "id": "test",
                                                                  "viewBox": Object {},
                                                                },
                                                              }
                                                            }
                                                            width="16px"
                                                          />
                                                        </Platformicon>
                                                      </Component>
                                                    </StyledPlatformIcon>
                                                  </div>
                                                </PlatformIcons>
                                              </PlatformList>
                                            </ProjectAvatar>
                                          </Avatar>
                                        </StyledAvatar>
                                        <DisplayNameAndDescription>
                                          <Base
                                            className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
                                          >
                                            <div
                                              className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
                                              is={null}
                                            >
                                              <div
                                                data-test-id="badge-display-name"
                                              >
                                                <span>
                                                  <strong
                                                    className="highlight"
                                                  >
                                                    another
                                                  </strong>
                                                  -project
                                                </span>
                                              </div>
                                            </div>
                                          </Base>
                                        </DisplayNameAndDescription>
                                      </div>
                                    </Base>
                                  </Flex>
                                </BaseBadge>
                              </ProjectBadge>
                            </ErrorBoundary>
                          </InlineErrorBoundary>
                        </IdBadge>
                      </div>
                    </ProjectRow>
                  </a>
                </li>
              </MenuItem>
            </ul>
          </span>
        </DropdownMenu>
      </DropdownLink>
    </h3>
  </div>
</ProjectSelector>
`;

exports[`ProjectSelector render() can filter projects by team name/project name 1`] = `
<ProjectSelector
  organization={
    Object {
      "access": Array [],
      "features": Array [
        "new-teams",
      ],
      "id": "org",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [
        Object {
          "hasAccess": true,
          "id": "test-project",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "test-project",
          "teams": Array [
            Object {
              "id": "test-team",
              "isMember": true,
              "name": "Team Name",
              "slug": "test-team",
            },
          ],
        },
        Object {
          "hasAccess": true,
          "id": "another-project",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "another-project",
          "teams": Array [
            Object {
              "id": "test-team",
              "isMember": true,
              "name": "Team Name",
              "slug": "test-team",
            },
          ],
        },
      ],
      "scrapeJavaScript": true,
      "slug": "org",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [
        Object {
          "id": "test-team",
          "isMember": true,
          "name": "Team Name",
          "slug": "test-team",
        },
      ],
    }
  }
  projectId=""
>
  <div
    className="project-select"
  >
    <h3>
      <span
        onClick={[Function]}
        role="button"
        style={
          Object {
            "cursor": "pointer",
          }
        }
      >
        Select a project
      </span>
      <DropdownLink
        alwaysRenderMenu={false}
        anchorRight={false}
        caret={true}
        disabled={false}
        isOpen={true}
        onClose={[Function]}
        onOpen={[Function]}
        title=""
        topLevelClasses="project-dropdown"
      >
        <DropdownMenu
          alwaysRenderMenu={false}
          isOpen={true}
          keepMenuOpen={false}
          onClose={[Function]}
          onOpen={[Function]}
        >
          <span
            className="dropdown project-dropdown open"
          >
            <a
              className="dropdown-actor dropdown-toggle hover"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <div
                className="dropdown-actor-title"
              >
                <span />
                <i
                  className="icon-arrow-down"
                />
              </div>
            </a>
            <ul
              className="dropdown-menu"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <li
                className="project-filter"
                key="_filter"
              >
                <input
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  placeholder="Filter projects"
                  type="text"
                  value="TEST"
                />
              </li>
              <MenuItem
                className=""
                href="/org/test-project/"
                key="test-project"
                linkClassName=""
              >
                <li
                  className=""
                  href={null}
                  role="presentation"
                  title={null}
                >
                  <a
                    className=""
                    href="/org/test-project/"
                    onClick={[Function]}
                    tabIndex="-1"
                  >
                    <ProjectRow>
                      <div
                        className="css-130agdj-ProjectRow et07ovj0"
                      >
                        <IdBadge
                          avatarProps={
                            Object {
                              "consistentWidth": true,
                            }
                          }
                          avatarSize={16}
                          displayName={
                            <span>
                              
                              <strong
                                className="highlight"
                              >
                                test
                              </strong>
                              -project
                            </span>
                          }
                          project={
                            Object {
                              "hasAccess": true,
                              "id": "test-project",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name",
                              "slug": "test-project",
                              "teams": Array [
                                Object {
                                  "id": "test-team",
                                  "isMember": true,
                                  "name": "Team Name",
                                  "slug": "test-team",
                                },
                              ],
                            }
                          }
                        >
                          <InlineErrorBoundary
                            mini={true}
                          >
                            <ErrorBoundary
                              className="css-otlbo1-InlineErrorBoundary e83vi020"
                              mini={true}
                            >
                              <ProjectBadge
                                avatarProps={
                                  Object {
                                    "consistentWidth": true,
                                  }
                                }
                                avatarSize={16}
                                displayName={
                                  <span>
                                    
                                    <strong
                                      className="highlight"
                                    >
                                      test
                                    </strong>
                                    -project
                                  </span>
                                }
                                hideAvatar={false}
                                hideOverflow={true}
                                project={
                                  Object {
                                    "hasAccess": true,
                                    "id": "test-project",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Project Name",
                                    "slug": "test-project",
                                    "teams": Array [
                                      Object {
                                        "id": "test-team",
                                        "isMember": true,
                                        "name": "Team Name",
                                        "slug": "test-team",
                                      },
                                    ],
                                  }
                                }
                              >
                                <BaseBadge
                                  avatarProps={
                                    Object {
                                      "consistentWidth": true,
                                    }
                                  }
                                  avatarSize={16}
                                  displayName={
                                    <span>
                                      
                                      <strong
                                        className="highlight"
                                      >
                                        test
                                      </strong>
                                      -project
                                    </span>
                                  }
                                  hideAvatar={false}
                                  project={
                                    Object {
                                      "hasAccess": true,
                                      "id": "test-project",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "test-project",
                                      "teams": Array [
                                        Object {
                                          "id": "test-team",
                                          "isMember": true,
                                          "name": "Team Name",
                                          "slug": "test-team",
                                        },
                                      ],
                                    }
                                  }
                                >
                                  <Flex
                                    align="center"
                                  >
                                    <Base
                                      align="center"
                                      className="css-5ipae5"
                                    >
                                      <div
                                        className="css-5ipae5"
                                        is={null}
                                      >
                                        <StyledAvatar
                                          className="css-0"
                                          consistentWidth={true}
                                          project={
                                            Object {
                                              "hasAccess": true,
                                              "id": "test-project",
                                              "isBookmarked": false,
                                              "isMember": true,
                                              "name": "Project Name",
                                              "slug": "test-project",
                                              "teams": Array [
                                                Object {
                                                  "id": "test-team",
                                                  "isMember": true,
                                                  "name": "Team Name",
                                                  "slug": "test-team",
                                                },
                                              ],
                                            }
                                          }
                                          size={16}
                                        >
                                          <Avatar
                                            className="css-robds0-StyledAvatar e165dl3i0"
                                            consistentWidth={true}
                                            hasTooltip={false}
                                            project={
                                              Object {
                                                "hasAccess": true,
                                                "id": "test-project",
                                                "isBookmarked": false,
                                                "isMember": true,
                                                "name": "Project Name",
                                                "slug": "test-project",
                                                "teams": Array [
                                                  Object {
                                                    "id": "test-team",
                                                    "isMember": true,
                                                    "name": "Team Name",
                                                    "slug": "test-team",
                                                  },
                                                ],
                                              }
                                            }
                                            size={16}
                                          >
                                            <ProjectAvatar
                                              className="css-robds0-StyledAvatar e165dl3i0"
                                              consistentWidth={true}
                                              hasTooltip={false}
                                              project={
                                                Object {
                                                  "hasAccess": true,
                                                  "id": "test-project",
                                                  "isBookmarked": false,
                                                  "isMember": true,
                                                  "name": "Project Name",
                                                  "slug": "test-project",
                                                  "teams": Array [
                                                    Object {
                                                      "id": "test-team",
                                                      "isMember": true,
                                                      "name": "Team Name",
                                                      "slug": "test-team",
                                                    },
                                                  ],
                                                }
                                              }
                                              size={16}
                                            >
                                              <PlatformList
                                                className="css-robds0-StyledAvatar e165dl3i0"
                                                consistentWidth={true}
                                                direction="right"
                                                hasTooltip={false}
                                                max={3}
                                                platforms={Array []}
                                                size={16}
                                              >
                                                <PlatformIcons
                                                  consistentWidth={true}
                                                  direction="right"
                                                  max={3}
                                                  size={16}
                                                >
                                                  <div
                                                    className="css-10kccj9-PlatformIcons ezvce7z0"
                                                    direction="right"
                                                    max={3}
                                                    size={16}
                                                  >
                                                    <StyledPlatformIcon
                                                      platform="default"
                                                      size={16}
                                                    >
                                                      <Component
                                                        className="css-htodfm-StyledPlatformIcon ezvce7z1"
                                                        platform="default"
                                                        size={16}
                                                      >
                                                        <Platformicon
                                                          className="css-htodfm-StyledPlatformIcon ezvce7z1"
                                                          platform="default"
                                                          size="16px"
                                                        >
                                                          <img
                                                            className="css-htodfm-StyledPlatformIcon ezvce7z1"
                                                            height="16px"
                                                            src={
                                                              Object {
                                                                "default": Object {
                                                                  "id": "test",
                                                                  "viewBox": Object {},
                                                                },
                                                              }
                                                            }
                                                            width="16px"
                                                          />
                                                        </Platformicon>
                                                      </Component>
                                                    </StyledPlatformIcon>
                                                  </div>
                                                </PlatformIcons>
                                              </PlatformList>
                                            </ProjectAvatar>
                                          </Avatar>
                                        </StyledAvatar>
                                        <DisplayNameAndDescription>
                                          <Base
                                            className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
                                          >
                                            <div
                                              className="css-1eifx5k-DisplayNameAndDescription e165dl3i1"
                                              is={null}
                                            >
                                              <div
                                                data-test-id="badge-display-name"
                                              >
                                                <span>
                                                  <strong
                                                    className="highlight"
                                                  >
                                                    test
                                                  </strong>
                                                  -project
                                                </span>
                                              </div>
                                            </div>
                                          </Base>
                                        </DisplayNameAndDescription>
                                      </div>
                                    </Base>
                                  </Flex>
                                </BaseBadge>
                              </ProjectBadge>
                            </ErrorBoundary>
                          </InlineErrorBoundary>
                        </IdBadge>
                      </div>
                    </ProjectRow>
                  </a>
                </li>
              </MenuItem>
            </ul>
          </span>
        </DropdownMenu>
      </DropdownLink>
    </h3>
  </div>
</ProjectSelector>
`;

exports[`ProjectSelector render() lists projects and has filter 1`] = `
<div
  className="project-select"
>
  <h3>
    <span
      onClick={[Function]}
      role="button"
      style={
        Object {
          "cursor": "pointer",
        }
      }
    >
      Select a project
    </span>
    <DropdownLink
      alwaysRenderMenu={false}
      anchorRight={false}
      caret={true}
      disabled={false}
      isOpen={false}
      onClose={[Function]}
      onOpen={[Function]}
      title=""
      topLevelClasses="project-dropdown"
    >
      <li
        className="project-filter"
        key="_filter"
      >
        <input
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="Filter projects"
          type="text"
          value=""
        />
      </li>
      <MenuItem
        className=""
        href="/org/test-project/"
        key="test-project"
        linkClassName=""
      >
        <ProjectRow>
          <IdBadge
            avatarProps={
              Object {
                "consistentWidth": true,
              }
            }
            avatarSize={16}
            displayName={
              <span>
                test-project
              </span>
            }
            project={
              Object {
                "hasAccess": true,
                "id": "test-project",
                "isBookmarked": false,
                "isMember": true,
                "name": "Project Name",
                "slug": "test-project",
                "teams": Array [
                  Object {
                    "id": "test-team",
                    "isMember": true,
                    "name": "Team Name",
                    "slug": "test-team",
                  },
                ],
              }
            }
          />
        </ProjectRow>
      </MenuItem>
      <MenuItem
        className=""
        href="/org/another-project/"
        key="another-project"
        linkClassName=""
      >
        <ProjectRow>
          <IdBadge
            avatarProps={
              Object {
                "consistentWidth": true,
              }
            }
            avatarSize={16}
            displayName={
              <span>
                another-project
              </span>
            }
            project={
              Object {
                "hasAccess": true,
                "id": "another-project",
                "isBookmarked": false,
                "isMember": true,
                "name": "Project Name",
                "slug": "another-project",
                "teams": Array [
                  Object {
                    "id": "test-team",
                    "isMember": true,
                    "name": "Team Name",
                    "slug": "test-team",
                  },
                ],
              }
            }
          />
        </ProjectRow>
      </MenuItem>
    </DropdownLink>
  </h3>
</div>
`;

exports[`ProjectSelector render() should show empty message and create project button, when no projects and has "project:write" access 1`] = `
<div
  className="project-select"
>
  <h3>
    <span
      onClick={[Function]}
      role="button"
      style={
        Object {
          "cursor": "pointer",
        }
      }
    >
      Select a project
    </span>
    <DropdownLink
      alwaysRenderMenu={false}
      anchorRight={false}
      caret={true}
      disabled={false}
      isOpen={false}
      onClose={[Function]}
      onOpen={[Function]}
      title=""
      topLevelClasses="project-dropdown is-empty"
    >
      <MenuItem
        className="empty-projects-item"
        key="empty-message"
        noAnchor={true}
      >
        <div
          className="empty-message"
        >
          You have no projects.
        </div>
      </MenuItem>
      <MenuItem
        divider={true}
        key="divider"
      />
      <MenuItem
        className="empty-projects-item"
        key="create-project"
        noAnchor={true}
      >
        <a
          className="btn btn-primary btn-block"
          href="/organizations/org-slug/projects/new/"
        >
          Create project
        </a>
      </MenuItem>
    </DropdownLink>
  </h3>
</div>
`;

exports[`ProjectSelector render() should show empty message with no projects button, when no projects, and has no "project:write" access 1`] = `
<div
  className="project-select"
>
  <h3>
    <span
      onClick={[Function]}
      role="button"
      style={
        Object {
          "cursor": "pointer",
        }
      }
    >
      Select a project
    </span>
    <DropdownLink
      alwaysRenderMenu={false}
      anchorRight={false}
      caret={true}
      disabled={false}
      isOpen={false}
      onClose={[Function]}
      onOpen={[Function]}
      title=""
      topLevelClasses="project-dropdown is-empty"
    >
      <MenuItem
        className="empty-projects-item"
        key="empty-message"
        noAnchor={true}
      >
        <div
          className="empty-message"
        >
          You have no projects.
        </div>
      </MenuItem>
    </DropdownLink>
  </h3>
</div>
`;

exports[`ProjectSelector render() shows empty filter message when filtering has no results 1`] = `
<ProjectSelector
  organization={
    Object {
      "access": Array [],
      "features": Array [
        "new-teams",
      ],
      "id": "org",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [
        Object {
          "hasAccess": true,
          "id": "test-project",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "test-project",
          "teams": Array [
            Object {
              "id": "test-team",
              "isMember": true,
              "name": "Team Name",
              "slug": "test-team",
            },
          ],
        },
        Object {
          "hasAccess": true,
          "id": "another-project",
          "isBookmarked": false,
          "isMember": true,
          "name": "Project Name",
          "slug": "another-project",
          "teams": Array [
            Object {
              "id": "test-team",
              "isMember": true,
              "name": "Team Name",
              "slug": "test-team",
            },
          ],
        },
      ],
      "scrapeJavaScript": true,
      "slug": "org",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [
        Object {
          "id": "test-team",
          "isMember": true,
          "name": "Team Name",
          "slug": "test-team",
        },
      ],
    }
  }
  projectId=""
>
  <div
    className="project-select"
  >
    <h3>
      <span
        onClick={[Function]}
        role="button"
        style={
          Object {
            "cursor": "pointer",
          }
        }
      >
        Select a project
      </span>
      <DropdownLink
        alwaysRenderMenu={false}
        anchorRight={false}
        caret={true}
        disabled={false}
        isOpen={true}
        onClose={[Function]}
        onOpen={[Function]}
        title=""
        topLevelClasses="project-dropdown is-empty"
      >
        <DropdownMenu
          alwaysRenderMenu={false}
          isOpen={true}
          keepMenuOpen={false}
          onClose={[Function]}
          onOpen={[Function]}
        >
          <span
            className="dropdown project-dropdown is-empty open"
          >
            <a
              className="dropdown-actor dropdown-toggle hover"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <div
                className="dropdown-actor-title"
              >
                <span />
                <i
                  className="icon-arrow-down"
                />
              </div>
            </a>
            <ul
              className="dropdown-menu"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <li
                className="project-filter"
                key="_filter"
              >
                <input
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  placeholder="Filter projects"
                  type="text"
                  value="Foo"
                />
              </li>
              <MenuItem
                className="empty-projects-item"
                key="empty-message"
                noAnchor={true}
              >
                <li
                  className="empty-projects-item"
                  href={null}
                  role="presentation"
                  title={null}
                >
                  <div
                    className="empty-message"
                  >
                    No projects found
                  </div>
                </li>
              </MenuItem>
            </ul>
          </span>
        </DropdownMenu>
      </DropdownLink>
    </h3>
  </div>
</ProjectSelector>
`;
