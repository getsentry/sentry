---
created: '2024-11-08T19:20:58.097547+00:00'
creator: sentry
source: tests/sentry/grouping/test_grouphash_metadata.py
---
hash_basis: stacktrace
hashing_metadata: {
  "num_stacktraces": 1,
  "stacktrace_location": "exception",
  "stacktrace_type": "system"
}
---
contributing variants:
  system*
    hash: "48a275d290e688b23878080257c9adc3"
    component:
      system*
        exception*
          stacktrace*
            frame*
              function*
                "RtlUserThreadStart"
            frame*
              function*
                "BaseThreadInitThunk"
            frame*
              function*
                "TppWorkerThread"
            frame*
              function*
                "TppWorkpExecuteCallback"
            frame*
              function*
                "HTTP_THREAD_POOL::_StaticWorkItemCallback"
            frame*
              function*
                "HTTP_ASYNC_OVERLAPPED::OnWorkItem"
            frame*
              function*
                "WEBIO_REQUEST::OnIoComplete"
            frame*
              function*
                "HTTP_USER_REQUEST::OnSendRequest"
            frame*
              function*
                "HTTP_BASE_OBJECT::Dereference"
            frame*
              function*
                "destructor'"
            frame*
              function*
                "HTTP_USER_REQUEST::~HTTP_USER_REQUEST"
            frame*
              function*
                "destructor'"
            frame*
              function*
                "RtlFreeHeap"
            frame*
              function*
                "memset"
            frame*
              function*
                "RtlpFreeUserBlock"
            frame*
              function*
                "RtlpFreeUserBlockToHeap"
            frame*
              function*
                "RtlFreeHeap"
            frame*
              function*
                "RtlpFreeHeapInternal"
            frame*
              function*
                "RtlpFreeHeap"
            frame*
              function*
                "RtlEnterCriticalSection"
            frame*
              function*
                "RtlpEnterCriticalSectionContended"
            frame*
              function*
                "RtlpWaitOnCriticalSection"
            frame*
              function*
                "RtlpWaitOnAddress"
            frame*
              function*
                "RtlpOptimizeWaitOnAddressWaitList"
