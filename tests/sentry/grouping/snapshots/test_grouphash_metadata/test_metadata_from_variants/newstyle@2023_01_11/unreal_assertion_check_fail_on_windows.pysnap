---
created: '2025-02-19T15:24:52.403064+00:00'
creator: sentry
source: tests/sentry/grouping/test_grouphash_metadata.py
---
hash_basis: stacktrace
hashing_metadata: {
  "num_stacktraces": 1,
  "stacktrace_location": "exception",
  "stacktrace_type": "system"
}
---
metrics with tags: {
  "grouping.grouphashmetadata.event_hash_basis": {
    "hash_basis": "stacktrace",
    "is_hybrid_fingerprint": "False"
  },
  "grouping.grouphashmetadata.event_hashing_metadata.stacktrace": {
    "chained_exception": "False",
    "stacktrace_location": "exception",
    "stacktrace_type": "system"
  }
}
---
contributing variants:
  system*
    hash: "d0669f63f03ddaec66ac8b9f4e3e449d"
    contributing component: exception
    component:
      system*
        exception*
          stacktrace*
            frame*
              function*
                "WinMain"
            frame*
              function*
                "LaunchWindowsStartup"
            frame*
              function*
                "GuardedMainWrapper"
            frame*
              function*
                "GuardedMain"
            frame*
              function*
                "FEngineLoop::Tick"
            frame*
              function*
                "FWindowsPlatformApplicationMisc::PumpMessages"
            frame*
              function*
                "DispatchMessageWorker"
            frame*
              function*
                "FWindowsApplication::AppWndProc"
            frame*
              function*
                "FWindowsApplication::ProcessMessage"
            frame*
              function*
                "FWindowsApplication::DeferMessage"
            frame*
              function*
                "FWindowsApplication::ProcessDeferredMessage"
            frame*
              function*
                "FSlateApplication::OnMouseUp"
            frame*
              function*
                "FSlateApplication::ProcessMouseButtonUpEvent"
            frame*
              function*
                "FSlateApplication::RoutePointerUpEvent"
            frame*
              function*
                "SharedPointerInternals::NewIntrusiveReferenceController<T>"
            frame*
              function*
                "SButton::OnMouseButtonUp"
            frame*
              function*
                "SButton::ExecuteOnClick"
            frame*
              function*
                "TBaseUObjectMethodDelegateInstance<T>::Execute"
            frame*
              function*
                "UButton::SlateHandleClicked"
            frame*
              function*
                "TMulticastScriptDelegate<T>::ProcessMulticastDelegate<T>"
            frame*
              function*
                "UObject::ProcessEvent"
            frame*
              function*
                "UFunction::Invoke"
            frame*
              function*
                "UObject::ProcessInternal"
            frame*
              function*
                "ProcessLocalScriptFunction"
            frame*
              function*
                "ProcessLocalFunction"
            frame*
              function*
                "ProcessScriptFunction<T>"
            frame*
              function*
                "ProcessLocalScriptFunction"
            frame*
              function*
                "UObject::execCallMathFunction"
            frame*
              filename*
                "sentryplaygroundutils.gen.cpp"
              function*
                "USentryPlaygroundUtils::execTerminate"
            frame*
              filename*
                "sentryplaygroundutils.cpp"
              function*
                "USentryPlaygroundUtils::Terminate"
            frame*
              function*
                "FDebug::CheckVerifyFailedImpl2"
            frame*
              function*
                "FDebug::AssertFailed"
            frame*
              function*
                "FOutputDevice::LogfImpl"
            frame*
              filename*
                "sentryoutputdeviceerror.cpp"
              function*
                "FSentryOutputDeviceError::Serialize"
            frame*
              function*
                "FWindowsErrorOutputDevice::Serialize"
            frame*
              function*
                "RaiseException"
