---
created: '2024-11-20T21:26:17.101132+00:00'
creator: sentry
source: tests/sentry/grouping/test_grouphash_metadata.py
---
hash_basis: stacktrace
hashing_metadata: {
  "num_stacktraces": 1,
  "stacktrace_location": "exception",
  "stacktrace_type": "system"
}
---
metrics with tags: {
  "grouping.grouphashmetadata.event_hash_basis": {
    "hash_basis": "stacktrace",
    "is_hybrid_fingerprint": "False"
  },
  "grouping.grouphashmetadata.event_hashing_metadata.stacktrace": {
    "chained_exception": "False",
    "stacktrace_location": "exception",
    "stacktrace_type": "system"
  }
}
---
contributing variants:
  system*
    hash: "0edbd7ed5321de5d698621b306f6b8e2"
    component:
      system*
        exception*
          stacktrace*
            frame*
              module*
                "app/utils/handleXhrErrorResponse"
              context-line*
                "      Sentry.withScope(scope => {"
            frame*
              module*
                "@sentry/minimal/esm/index"
              context-line*
                "    callOnHub('withScope', callback);"
            frame*
              module*
                "@sentry/minimal/esm/index"
              context-line*
                "        return hub[method].apply(hub, __spread(args));"
            frame*
              module*
                "@sentry/hub/esm/hub"
              context-line*
                "            callback(scope);"
            frame*
              module*
                "app/utils/handleXhrErrorResponse"
              context-line*
                "        Sentry.captureException(new Error(message));"
          type*
            "Error"
