---
created: '2024-11-08T19:20:34.628560+00:00'
creator: sentry
source: tests/sentry/grouping/test_grouphash_metadata.py
---
hash_basis: stacktrace
hashing_metadata: {
  "num_stacktraces": 1,
  "stacktrace_location": "exception",
  "stacktrace_type": "in_app"
}
---
contributing variants:
  app*
    hash: "7e5b9ebe8c869ab99af044367bf7d347"
    component:
      app*
        exception*
          stacktrace*
            frame*
              module*
                "app/components/lazyLoad"
              context-line*
                "      this.setState({"
            frame*
              module*
                "app/views/groupDetails/shared/groupEventDetails"
              context-line*
                "    this.fetchData();"
            frame*
              module*
                "app/views/groupDetails/shared/groupEventDetails"
              context-line*
                "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
            frame*
              module*
                "app/api"
              context-line*
                "    const preservedError = new Error();"
          type*
            "NotFoundError"
  system*
    hash: "6e03a501145e36faab4fa152bb3b6a62"
    component:
      system*
        exception*
          stacktrace*
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
              context-line*
                "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
              context-line*
                "    var info = gen[key](arg);"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
              context-line*
                "        var record = tryCatch(innerFn, self, context);"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
              context-line*
                "      return { type: \"normal\", arg: fn.call(obj, arg) };"
            frame*
              module*
                "app/components/lazyLoad"
              context-line*
                "      this.setState({"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
              function*
                "setState"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
              function*
                "enqueueSetState"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
              function*
                "tag"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
              function*
                "Yg"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
              function*
                "Xg"
            frame*
              module*
                "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
              function*
                "ih"
            frame*
              module*
                "app/views/groupDetails/shared/groupEventDetails"
              context-line*
                "    this.fetchData();"
            frame*
              module*
                "app/views/groupDetails/shared/groupEventDetails"
              context-line*
                "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
            frame*
              module*
                "app/api"
              context-line*
                "    const preservedError = new Error();"
          type*
            "NotFoundError"
