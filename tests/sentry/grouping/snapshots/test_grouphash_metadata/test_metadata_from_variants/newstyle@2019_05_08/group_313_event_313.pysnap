---
created: '2025-02-26T00:31:53.035524+00:00'
creator: sentry
source: tests/sentry/grouping/test_grouphash_metadata.py
---
hash_basis: stacktrace
hashing_metadata: {
  "num_stacktraces": 1,
  "stacktrace_location": "exception",
  "stacktrace_type": "system"
}
---
metrics with tags: {
  "grouping.grouphashmetadata.event_hash_basis": {
    "hash_basis": "stacktrace",
    "is_hybrid_fingerprint": "False"
  },
  "grouping.grouphashmetadata.event_hashing_metadata.stacktrace": {
    "chained_exception": "False",
    "stacktrace_location": "exception",
    "stacktrace_type": "system"
  }
}
---
contributing variants:
  system*
    hash: "57d5f9c178ebe1364226ed6c90d30174"
    contributing component: exception
    component:
      system*
        exception*
          stacktrace*
            frame*
              function*
                "start"
            frame*
              function*
                "stripped_application_code"
            frame*
              filename*
                "functional"
              function*
                "std::__1::function<T>::operator()"
            frame*
              filename*
                "functional"
              function*
                "std::__1::__function::__value_func<T>::operator()"
            frame*
              filename*
                "functional"
              function*
                "std::__1::__function::__func<T>::operator()"
            frame*
              filename*
                "functional"
              function*
                "std::__1::__function::__alloc_func<T>::operator()"
            frame*
              filename*
                "__functional_base"
              function*
                "std::__1::__invoke_void_return_wrapper<T>::__call<T>"
            frame*
              filename*
                "type_traits"
              function*
                "std::__1::__invoke<T>"
            frame*
              filename*
                "initialize.cpp"
              function*
                "MZ::`anonymous namespace'::lambda::operator()"
            frame*
              function*
                "stripped_application_code"
            frame*
              function*
                "_objc_msgSend_uncached"
            frame*
              function*
                "lookUpImpOrForward"
            frame*
              function*
                "initializeAndMaybeRelock"
            frame*
              function*
                "initializeNonMetaClass"
            frame*
              function*
                "CALLING_SOME_+initialize_METHOD"
            frame*
              function*
                "stripped_application_code"
            frame*
              function*
                "dlopen"
            frame*
              function*
                "dlopen_internal"
            frame*
              function*
                "__report_load"
            frame*
              function*
                "__report_load.cold.1"
            frame*
              function*
                "abort"
            frame*
              function*
                "__abort"
            frame*
              function*
                "__pthread_kill"
