---
created: '2024-11-20T21:26:25.548878+00:00'
creator: sentry
source: tests/sentry/grouping/test_grouphash_metadata.py
---
hash_basis: stacktrace
hashing_metadata: {
  "num_stacktraces": 1,
  "stacktrace_location": "exception",
  "stacktrace_type": "system"
}
---
metrics with tags: {
  "grouping.grouphashmetadata.event_hash_basis": {
    "hash_basis": "stacktrace",
    "is_hybrid_fingerprint": "False"
  },
  "grouping.grouphashmetadata.event_hashing_metadata.stacktrace": {
    "chained_exception": "False",
    "stacktrace_location": "exception",
    "stacktrace_type": "system"
  }
}
---
contributing variants:
  system*
    hash: "e4714f9479fea40111888ca143e02d8f"
    component:
      system*
        exception*
          stacktrace*
            frame* (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
              function*
                "start"
            frame*
              function*
                "stripped_application_code"
            frame*
              function*
                "-[NSApplication run]"
            frame*
              function*
                "-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]"
            frame*
              function*
                "_DPSNextEvent"
            frame*
              function*
                "_BlockUntilNextEventMatchingListInModeWithFilter"
            frame*
              function*
                "ReceiveNextEventCommon"
            frame*
              function*
                "RunCurrentEventLoopInMode"
            frame*
              function*
                "CFRunLoopRunSpecific"
            frame*
              function*
                "__CFRunLoopRun"
            frame*
              function*
                "__CFRunLoopDoSources0"
            frame*
              function*
                "__CFRunLoopDoSource0"
            frame*
              function*
                "__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__"
            frame*
              function*
                "__NSThreadPerformPerform"
            frame*
              function*
                "stripped_application_code"
            frame*
              function*
                "-[NSView displayIfNeeded]"
            frame*
              function*
                "-[_NSOpenGLViewBackingLayer display]"
            frame*
              function*
                "stripped_application_code"
            frame*
              function*
                "-[NSOpenGLContext flushBuffer]"
            frame*
              function*
                "CGLFlushDrawable"
            frame*
              function*
                "glSwap_Exec"
            frame*
              function*
                "gldPresentFramebufferData"
            frame*
              function*
                "SwapFlush"
            frame*
              function*
                "intelSubmitCommands"
            frame*
              function*
                "IntelCommandBuffer::getNew"
            frame*
              function*
                "gpusSubmitDataBuffers"
            frame*
              function*
                "gpusKillClientExt"
            frame*
              function*
                "gpusGenerateCrashLog"
            frame*
              function*
                "gpusGenerateCrashLog.cold.1"
            frame* (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
              function*
                "abort"
            frame*
              function*
                "stripped_application_code"
            frame* (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
              function*
                "_sigtramp"
            frame*
              function*
                "stripped_application_code"
            frame*
              function*
                "NSRunAlertPanel"
            frame*
              function*
                "_NSTryRunModal"
            frame*
              function*
                "CA::Transaction::commit"
            frame*
              function*
                "CA::Context::commit_transaction"
            frame*
              function*
                "CA::Layer::display_if_needed"
            frame*
              function*
                "-[_NSOpenGLViewBackingLayer display]"
            frame*
              function*
                "stripped_application_code"
            frame*
              function*
                "CGLTexImageIOSurface2D"
            frame*
              function*
                "CGLDescribeRenderer"
            frame*
              function*
                "gliSetInteger"
            frame*
              function*
                "gldFlushObject"
            frame*
              function*
                "intelSubmitCommands"
            frame*
              function*
                "IntelCommandBuffer::getNew"
            frame*
              function*
                "gpusSubmitDataBuffers"
            frame*
              function*
                "gpusKillClientExt"
            frame*
              function*
                "gpusGenerateCrashLog"
            frame*
              function*
                "gpusGenerateCrashLog.cold.1"
            frame* (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
              function*
                "abort"
            frame* (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
              function*
                "__pthread_kill"
