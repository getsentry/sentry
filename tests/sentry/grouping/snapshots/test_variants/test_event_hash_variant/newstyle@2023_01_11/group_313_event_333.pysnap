---
created: '2023-02-01T08:22:06.989168Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: null
  component:
    app (exception of system takes precedence)
      exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
        stacktrace
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "start"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "functional"
            function*
              "std::__1::function<T>::operator()"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "functional"
            function*
              "std::__1::__function::__value_func<T>::operator()"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "functional"
            function*
              "std::__1::__function::__func<T>::operator()"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "functional"
            function*
              "std::__1::__function::__alloc_func<T>::operator()"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "__functional_base"
            function*
              "std::__1::__invoke_void_return_wrapper<T>::__call<T>"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "type_traits"
            function*
              "std::__1::__invoke<T>"
          frame (non app frame)
            filename*
              "initialize.cpp"
            function*
              "MZ::`anonymous namespace'::lambda::operator()"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_objc_msgSend_uncached"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "lookUpImpOrForward"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "initializeAndMaybeRelock"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "initializeNonMetaClass"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "CALLING_SOME_+initialize_METHOD"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (marked as prefix frame by stack trace rule (category:load +sentinel +prefix))
            function*
              "dlopen"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "dlopen_internal"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "dyld::runInitializers"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "ImageLoader::runInitializers"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "ImageLoader::processInitializers"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "ImageLoader::recursiveInitialization"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "ImageLoaderMachO::doInitialization"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "ImageLoaderMachO::doModInitFunctions"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "__report_load"
          frame (marked as prefix frame by stack trace rule (category:throw +prefix ^-group))
            function*
              "abort"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "__abort"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "__pthread_kill"
        type (ignored because exception is synthetic)
          "0x00000000 / 0x00000000"
        value* (stripped common values)
          "Fatal Error: <hex> / <hex>"
--------------------------------------------------------------------------
system:
  hash: "8be5979a334287a1b47457228f1d4612"
  component:
    system*
      exception*
        stacktrace*
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            function*
              "start"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "functional"
            function*
              "std::__1::function<T>::operator()"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "functional"
            function*
              "std::__1::__function::__value_func<T>::operator()"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "functional"
            function*
              "std::__1::__function::__func<T>::operator()"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "functional"
            function*
              "std::__1::__function::__alloc_func<T>::operator()"
          frame (ignored by stack trace rule (category:internals -group))
            filename*
              "__functional_base"
            function*
              "std::__1::__invoke_void_return_wrapper<T>::__call<T>"
          frame (ignored by stack trace rule (category:internals -group))
            filename*
              "type_traits"
            function*
              "std::__1::__invoke<T>"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "initialize.cpp"
            function*
              "MZ::`anonymous namespace'::lambda::operator()"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "_objc_msgSend_uncached"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "lookUpImpOrForward"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "initializeAndMaybeRelock"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "initializeNonMetaClass"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "CALLING_SOME_+initialize_METHOD"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame* (marked as prefix frame by stack trace rule (category:load +sentinel +prefix))
            function*
              "dlopen"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "dlopen_internal"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "dyld::runInitializers"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "ImageLoader::runInitializers"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "ImageLoader::processInitializers"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "ImageLoader::recursiveInitialization"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "ImageLoaderMachO::doInitialization"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "ImageLoaderMachO::doModInitFunctions"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "__report_load"
          frame* (marked as prefix frame by stack trace rule (category:throw +prefix ^-group))
            function*
              "abort"
          frame (ignored by stack trace rule (category:throw +prefix ^-group))
            function*
              "__abort"
          frame (ignored by stack trace rule (category:throw +prefix ^-group))
            function*
              "__pthread_kill"
        type (ignored because exception is synthetic)
          "0x00000000 / 0x00000000"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: <hex> / <hex>"
