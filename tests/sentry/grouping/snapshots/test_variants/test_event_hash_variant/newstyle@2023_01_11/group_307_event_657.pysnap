---
created: '2024-10-24T14:19:51.968492+00:00'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: null
  component:
    app (exception of system takes precedence)
      exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
        stacktrace (ignored because it contains no in-app frames)
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (non app frame)
            function*
              "stripped_application_code"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / EXC_I386_GPFLT"
        value*
          "Fatal Error: EXC_BAD_ACCESS / EXC_I386_GPFLT"
--------------------------------------------------------------------------
system:
  hash: "aeed765d29d1a60cb094f66d2cd8efb2"
  component:
    system*
      exception*
        stacktrace*
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            function*
              "stripped_application_code"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / EXC_I386_GPFLT"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXC_BAD_ACCESS / EXC_I386_GPFLT"
