---
created: '2024-09-06T10:48:36.808444+00:00'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: null
  component:
    app (exception of app-depth-1/app-depth-2/app-depth-3/app-depth-4/app-depth-max/system takes precedence)
      threads (thread has no stacktrace)
--------------------------------------------------------------------------
app-depth-1:
  hash: "e002eefcebcc5e920bcddc9c81a06470"
  component:
    app-depth-1*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::something::nested::Foo<T>::crash"
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
--------------------------------------------------------------------------
app-depth-2:
  hash: "f0a8645562acd4cde0096d53ab69f9ac"
  component:
    app-depth-2*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::crash"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::something::nested::Foo<T>::crash"
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
--------------------------------------------------------------------------
app-depth-3:
  hash: "102ff7b3fc873a8b1728ddbdffbaab81"
  component:
    app-depth-3*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::crash"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::something::nested::Foo<T>::crash"
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
--------------------------------------------------------------------------
app-depth-4:
  hash: "3b9ea09c02c81c1c6e5884c1fadcdda0"
  component:
    app-depth-4*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "main"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::crash"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::something::nested::Foo<T>::crash"
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
--------------------------------------------------------------------------
app-depth-max:
  hash: "3b9ea09c02c81c1c6e5884c1fadcdda0"
  component:
    app-depth-max*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "main"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::crash"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::something::nested::Foo<T>::crash"
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
--------------------------------------------------------------------------
system:
  hash: "3b9ea09c02c81c1c6e5884c1fadcdda0"
  component:
    system*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "main"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::crash"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "(anonymous namespace)::something::nested::Foo<T>::crash"
        type (ignored because exception is synthetic)
          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
