---
created: '2021-06-23T18:06:09.439847Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app-depth-1:
  hash: "989aaa994181faf8b1df77c0d7e0d85f"
  tree_label: "abort | stripped_application_code"
  component:
    app-depth-1*
      exception*
        stacktrace*
          frame* (marked as prefix frame by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "abort"
            package (ignored because function takes precedence)
              "ucrtbase.dll"
          frame*
            function*
              "stripped_application_code"
        type (ignored because exception is synthetic)
          "0x40000015 / 0x00000001"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: <hex> / <hex>"
--------------------------------------------------------------------------
app-depth-max:
  hash: "8a62fbea1511325fb930366d547f0afa"
  tree_label: "<entire stacktrace>"
  component:
    app-depth-max*
      exception*
        stacktrace*
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            function*
              "RtlUserThreadStart"
            package (ignored because function takes precedence)
              "ntdll.dll"
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            function*
              "BaseThreadInitThunk"
            package (ignored because function takes precedence)
              "kernel32.dll"
          frame*
            function*
              "TppWorkerThread"
            package (ignored because function takes precedence)
              "ntdll.dll"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "RtlpTpWorkCallback"
            package (ignored because function takes precedence)
              "ntdll.dll"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename (discarded native filename for grouping stability)
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename (discarded native filename for grouping stability)
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame*
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:internals -group))
            filename (discarded native filename for grouping stability)
              "xtree"
            function*
              "std::_Tree<T>::insert<T>"
          frame (ignored by stack trace rule (category:internals -group))
            filename (discarded native filename for grouping stability)
              "xtree"
            function*
              "std::_Tree<T>::_Emplace"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename (discarded native filename for grouping stability)
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame* (marked as prefix frame by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "abort"
            package (ignored because function takes precedence)
              "ucrtbase.dll"
          frame (ignored by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "raise"
            package (ignored because function takes precedence)
              "ucrtbase.dll"
          frame (ignored by stack trace rule (category:throw +sentinel +prefix ^-group))
            filename (discarded native filename for grouping stability)
              "crashpad_client_win.cc"
            function*
              "crashpad::`anonymous namespace'::HandleAbortSignal"
        type (ignored because exception is synthetic)
          "0x40000015 / 0x00000001"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: <hex> / <hex>"
--------------------------------------------------------------------------
system:
  hash: "8a62fbea1511325fb930366d547f0afa"
  tree_label: "<entire stacktrace>"
  component:
    system*
      exception*
        stacktrace*
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            function*
              "RtlUserThreadStart"
            package (ignored because function takes precedence)
              "ntdll.dll"
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            function*
              "BaseThreadInitThunk"
            package (ignored because function takes precedence)
              "kernel32.dll"
          frame*
            function*
              "TppWorkerThread"
            package (ignored because function takes precedence)
              "ntdll.dll"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "RtlpTpWorkCallback"
            package (ignored because function takes precedence)
              "ntdll.dll"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename (discarded native filename for grouping stability)
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename (discarded native filename for grouping stability)
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame*
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:internals -group))
            filename (discarded native filename for grouping stability)
              "xtree"
            function*
              "std::_Tree<T>::insert<T>"
          frame (ignored by stack trace rule (category:internals -group))
            filename (discarded native filename for grouping stability)
              "xtree"
            function*
              "std::_Tree<T>::_Emplace"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename (discarded native filename for grouping stability)
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame*
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame (ignored due to recursion)
            function*
              "stripped_application_code"
          frame* (marked as prefix frame by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "abort"
            package (ignored because function takes precedence)
              "ucrtbase.dll"
          frame (ignored by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "raise"
            package (ignored because function takes precedence)
              "ucrtbase.dll"
          frame (ignored by stack trace rule (category:throw +sentinel +prefix ^-group))
            filename (discarded native filename for grouping stability)
              "crashpad_client_win.cc"
            function*
              "crashpad::`anonymous namespace'::HandleAbortSignal"
        type (ignored because exception is synthetic)
          "0x40000015 / 0x00000001"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: <hex> / <hex>"
