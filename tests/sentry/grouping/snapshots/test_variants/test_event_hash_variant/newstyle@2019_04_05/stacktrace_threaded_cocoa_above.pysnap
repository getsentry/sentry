---
created: '2023-12-12T15:38:22.210281Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: "27b89bf1859fc369c2a84d89fa5d1a4a"
  component:
    app*
      exception*
        stacktrace*
          frame*
            function*
              "main"
          frame*
            function* (isolated function)
              "unicorn"
          frame (non app frame)
            function*
              "UIApplicationMain"
          frame (non app frame)
            function*
              "-[UIApplication _run]"
          frame (non app frame)
            function*
              "GSEventRunModal"
          frame (non app frame)
            function*
              "CFRunLoopRunSpecific"
          frame (non app frame)
            function*
              "__CFRunLoopRun"
          frame (non app frame)
            function*
              "__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_main_queue_callback_4CF$VARIANT$armv81"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_main_queue_drain"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_client_callout"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_call_block_and_release"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MainScheduler.scheduleInternal<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Observable<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CurrentThreadScheduler.schedule<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Do.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ConcatCompletable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingle.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsMaybe.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Catch.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Map.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CompactMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCount.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ElementAt.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.subscribeInner"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AnonymousObservable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PrimitiveSequenceType<T>.create"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FileListDataProviderShim.refresh"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SortedFileListDataProviderShim.fetchAllEntries"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObserverType.onNext"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ReplayBufferBase.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObservableType<T>.asHomeItems.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sequence.compactMap<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "FileListEntry.asHomeItem.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FudgeFileEntry.asHomeFile"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileEntry metadataLoader]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileMetadataLoader initWithFilePath:withUserID:metadataManager:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataManagerV2 cachedNoContentsMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataDatabase currentMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeDatabaseQueryQueue waitAndRunSynchronousNonMutatingSingleQuery:]"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_semaphore_wait_slow"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_sema4_wait$VARIANT$armv81"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "semaphore_wait_trap"
        type*
          "App Hanging"
      threads (exception of app/system takes precedence)
        stacktrace*
          frame*
            function*
              "main"
          frame*
            function* (isolated function)
              "unicorn"
          frame (non app frame)
            function*
              "UIApplicationMain"
          frame (non app frame)
            function*
              "-[UIApplication _run]"
          frame (non app frame)
            function*
              "GSEventRunModal"
          frame (non app frame)
            function*
              "CFRunLoopRunSpecific"
          frame (non app frame)
            function*
              "__CFRunLoopRun"
          frame (non app frame)
            function*
              "__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_main_queue_callback_4CF$VARIANT$armv81"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_main_queue_drain"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_client_callout"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_call_block_and_release"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MainScheduler.scheduleInternal<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Observable<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CurrentThreadScheduler.schedule<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Do.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ConcatCompletable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingle.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsMaybe.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Catch.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Map.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CompactMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCount.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ElementAt.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.subscribeInner"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AnonymousObservable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PrimitiveSequenceType<T>.create"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FileListDataProviderShim.refresh"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SortedFileListDataProviderShim.fetchAllEntries"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObserverType.onNext"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ReplayBufferBase.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObservableType<T>.asHomeItems.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sequence.compactMap<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "FileListEntry.asHomeItem.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FudgeFileEntry.asHomeFile"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileEntry metadataLoader]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileMetadataLoader initWithFilePath:withUserID:metadataManager:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataManagerV2 cachedNoContentsMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataDatabase currentMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeDatabaseQueryQueue waitAndRunSynchronousNonMutatingSingleQuery:]"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_semaphore_wait_slow"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "_dispatch_sema4_wait$VARIANT$armv81"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "semaphore_wait_trap"
--------------------------------------------------------------------------
system:
  hash: "6a86653d7445135a0f488edcd1e42701"
  component:
    system*
      exception*
        stacktrace*
          frame*
            function*
              "main"
          frame*
            function* (isolated function)
              "unicorn"
          frame*
            function*
              "UIApplicationMain"
          frame*
            function*
              "-[UIApplication _run]"
          frame*
            function*
              "GSEventRunModal"
          frame*
            function*
              "CFRunLoopRunSpecific"
          frame*
            function*
              "__CFRunLoopRun"
          frame*
            function*
              "__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__"
          frame*
            function*
              "_dispatch_main_queue_callback_4CF$VARIANT$armv81"
          frame*
            function*
              "_dispatch_main_queue_drain"
          frame*
            function*
              "_dispatch_client_callout"
          frame*
            function*
              "_dispatch_call_block_and_release"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MainScheduler.scheduleInternal<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Observable<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CurrentThreadScheduler.schedule<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Do.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ConcatCompletable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingle.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsMaybe.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Catch.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Map.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CompactMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCount.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ElementAt.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.subscribeInner"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AnonymousObservable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PrimitiveSequenceType<T>.create"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FileListDataProviderShim.refresh"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SortedFileListDataProviderShim.fetchAllEntries"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObserverType.onNext"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ReplayBufferBase.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObservableType<T>.asHomeItems.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sequence.compactMap<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "FileListEntry.asHomeItem.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FudgeFileEntry.asHomeFile"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileEntry metadataLoader]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileMetadataLoader initWithFilePath:withUserID:metadataManager:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataManagerV2 cachedNoContentsMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataDatabase currentMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeDatabaseQueryQueue waitAndRunSynchronousNonMutatingSingleQuery:]"
          frame*
            function*
              "_dispatch_semaphore_wait_slow"
          frame*
            function*
              "_dispatch_sema4_wait$VARIANT$armv81"
          frame*
            function*
              "semaphore_wait_trap"
        type*
          "App Hanging"
      threads (exception of app/system takes precedence)
        stacktrace*
          frame*
            function*
              "main"
          frame*
            function* (isolated function)
              "unicorn"
          frame*
            function*
              "UIApplicationMain"
          frame*
            function*
              "-[UIApplication _run]"
          frame*
            function*
              "GSEventRunModal"
          frame*
            function*
              "CFRunLoopRunSpecific"
          frame*
            function*
              "__CFRunLoopRun"
          frame*
            function*
              "__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__"
          frame*
            function*
              "_dispatch_main_queue_callback_4CF$VARIANT$armv81"
          frame*
            function*
              "_dispatch_main_queue_drain"
          frame*
            function*
              "_dispatch_client_callout"
          frame*
            function*
              "_dispatch_call_block_and_release"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MainScheduler.scheduleInternal<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Observable<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CurrentThreadScheduler.schedule<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Do.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ConcatCompletable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FlatMap.run<T>"
          frame (ignored due to recursion)
            function* (isolated function)
              "FlatMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.run"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingle.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsMaybe.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Catch.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Map.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CompactMap.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCount.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ElementAt.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "TakeCountSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "CatchSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AsSingleSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MergeSink.subscribeInner"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Producer.subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "AnonymousObservable.run<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PrimitiveSequenceType<T>.create"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FileListDataProviderShim.refresh"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SortedFileListDataProviderShim.fetchAllEntries"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObserverType.onNext"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "BehaviorSubject<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "PublishSubject.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "thunk for closure"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ReplayBufferBase.synchronized_subscribe<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "DistinctUntilChangedSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "SubscribeOnSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sink.forwardOn"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "MapSink.on"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "ObservableType<T>.asHomeItems.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "Sequence.compactMap<T>"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "FileListEntry.asHomeItem.getter"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function* (isolated function)
              "FudgeFileEntry.asHomeFile"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileEntry metadataLoader]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeUserFileMetadataLoader initWithFilePath:withUserID:metadataManager:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataManagerV2 cachedNoContentsMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeMetadataDatabase currentMetadataForPath:]"
          frame* (marked in-app by stack trace rule (family:native package:**/containers/bundle/application/** +app))
            function*
              "-[FudgeDatabaseQueryQueue waitAndRunSynchronousNonMutatingSingleQuery:]"
          frame*
            function*
              "_dispatch_semaphore_wait_slow"
          frame*
            function*
              "_dispatch_sema4_wait$VARIANT$armv81"
          frame*
            function*
              "semaphore_wait_trap"
