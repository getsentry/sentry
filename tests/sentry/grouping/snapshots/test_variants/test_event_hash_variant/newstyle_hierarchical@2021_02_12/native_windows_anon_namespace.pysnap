---
created: '2021-08-04T15:53:49.760127Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app-depth-1:
  hash: "f616e8228d88e28dce01fbd04c53487d"
  tree_label: "`anonymous namespace'::crash"
  component:
    app-depth-1*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::crash"
        type (ignored because exception is synthetic)
          "EXCEPTION_ACCESS_VIOLATION_WRITE"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
--------------------------------------------------------------------------
app-depth-2:
  hash: "8e1e6add5d343d84489b957df999f941"
  tree_label: "`anonymous namespace'::crash | `anonymous namespace'::start"
  component:
    app-depth-2*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::crash"
        type (ignored because exception is synthetic)
          "EXCEPTION_ACCESS_VIOLATION_WRITE"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
--------------------------------------------------------------------------
app-depth-3:
  hash: "3df8bc242dfdc7460b42fa529422630f"
  tree_label: "`anonymous namespace'::crash | `anonymous namespace'::start | main"
  component:
    app-depth-3*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "main"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::crash"
        type (ignored because exception is synthetic)
          "EXCEPTION_ACCESS_VIOLATION_WRITE"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
--------------------------------------------------------------------------
app-depth-max:
  hash: "3df8bc242dfdc7460b42fa529422630f"
  tree_label: "`anonymous namespace'::crash | `anonymous namespace'::start | main"
  component:
    app-depth-max*
      exception*
        stacktrace*
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "main"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::crash"
        type (ignored because exception is synthetic)
          "EXCEPTION_ACCESS_VIOLATION_WRITE"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
--------------------------------------------------------------------------
system:
  hash: "c75e8a96cb616fe8a9a45e384e6607c5"
  tree_label: "`anonymous namespace'::crash | `anonymous namespace'::start | main"
  component:
    system*
      exception*
        stacktrace*
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            filename (discarded native filename for grouping stability)
              "exe_common.inl"
            function*
              "__scrt_common_main_seh"
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            filename (discarded native filename for grouping stability)
              "exe_common.inl"
            function*
              "invoke_main"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "main"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::start"
          frame*
            filename (discarded native filename for grouping stability)
              "main.cpp"
            function*
              "`anonymous namespace'::crash"
        type*
          "EXCEPTION_ACCESS_VIOLATION_WRITE"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
