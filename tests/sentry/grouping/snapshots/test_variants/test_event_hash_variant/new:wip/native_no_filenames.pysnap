---
created: '2019-03-15T11:58:33.283037Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: None
  component:
    app (exception of system takes precedence)
      exception (ignored because hash matches system variant)
        stacktrace
          frame
            function (function name is used only if module or filename are available)
              u'_main'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'std::rt::lang_start'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'std::rt::lang_start_internal'
          frame
            function (function name is used only if module or filename are available)
              u'___rust_maybe_catch_panic'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'std::panicking::try::do_call'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'std::rt::lang_start::{{closure}}'
          frame
            function (function name is used only if module or filename are available)
              u'log_demo::main'
          frame
            function (function name is used only if module or filename are available)
              u'log::__private_api_log'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'<sentry::integrations::log::Logger as log::Log>::log'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'sentry::hub::Hub::with_active'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'sentry::hub::Hub::with'
          frame (non app frame)
            function (function name is used only if module or filename are available)
              u'sentry::hub::Hub::with_active::{{closure}}'
        type*
          u'log_demo'
--------------------------------------------------------------------------
system:
  hash: 'fed4f6eb500e04f59e97d31e8743ec8f'
  component:
    system*
      exception*
        stacktrace
          frame
            function (function name is used only if module or filename are available)
              u'_main'
          frame
            function (function name is used only if module or filename are available)
              u'std::rt::lang_start'
          frame
            function (function name is used only if module or filename are available)
              u'std::rt::lang_start_internal'
          frame
            function (function name is used only if module or filename are available)
              u'___rust_maybe_catch_panic'
          frame
            function (function name is used only if module or filename are available)
              u'std::panicking::try::do_call'
          frame
            function (function name is used only if module or filename are available)
              u'std::rt::lang_start::{{closure}}'
          frame
            function (function name is used only if module or filename are available)
              u'log_demo::main'
          frame
            function (function name is used only if module or filename are available)
              u'log::__private_api_log'
          frame
            function (function name is used only if module or filename are available)
              u'<sentry::integrations::log::Logger as log::Log>::log'
          frame
            function (function name is used only if module or filename are available)
              u'sentry::hub::Hub::with_active'
          frame
            function (function name is used only if module or filename are available)
              u'sentry::hub::Hub::with'
          frame
            function (function name is used only if module or filename are available)
              u'sentry::hub::Hub::with_active::{{closure}}'
        type*
          u'log_demo'
