---
created: '2025-10-07T20:41:49.128980+00:00'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: null
  contributing component: null
  hint: ignored because system exception takes precedence
  root_component:
    app (ignored because system exception takes precedence)
      exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
        stacktrace (ignored because it contains no in-app frames)
          frame (marked out of app by the client)
            function*
              "CUseCountedObject<T>::UCDestroy"
          frame (marked out of app by the client)
            function*
              "CContext::LUCBeginLayerDestruction"
          frame (marked out of app by the client)
            function*
              "NDXGI::CDevice::DestroyDriverInstance"
          frame (marked out of app by the client)
            function*
              "OpenAdapter10"
          frame (marked out of app by the client)
          frame (marked out of app by the client)
        type (ignored because exception is synthetic)
          "EXCEPTION_ACCESS_VIOLATION_READ"
        value*
          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_READ"
--------------------------------------------------------------------------
system:
  hash: "c85e23e804b52ea4b9f290ba838e77a0"
  contributing component: exception
  hint: None
  root_component:
    system*
      exception*
        stacktrace*
          frame*
            function*
              "CUseCountedObject<T>::UCDestroy"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "CContext::LUCBeginLayerDestruction"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "NDXGI::CDevice::DestroyDriverInstance"
          frame (ignored by stack trace rule (category:internals -group))
            function*
              "OpenAdapter10"
          frame
          frame (ignored due to recursion)
        type (ignored because exception is synthetic)
          "EXCEPTION_ACCESS_VIOLATION_READ"
        value (ignored because stacktrace takes precedence)
          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_READ"
