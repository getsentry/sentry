from sentry.testutils import TestCase
from sentry.testutils.helpers import with_feature
from requests.exceptions import Timeout
from sentry.shared_integrations.exceptions import ClientError

class TestSentryAppDisable(TestCase):
    def setUp(self):
        self.sentry_app = self.create_sentry_app(
            name="Test App",
            organization=self.project.organization,
            events=["issue.resolved", "issue.ignored", "issue.assigned"],
        )
        self.sentry_app.update(status=SentryAppStatus.UNPUBLISHED)

        self.install = self.create_sentry_app_installation(
            organization=self.project.organization, slug=self.sentry_app.slug
        )

        self.issue = self.create_group(project=self.project)
        self.buffer = IntegrationBuffer(self.sentry_app)

    def test_saves_error_if_webhook_request_fails(self):
        data = {"issue": serialize(self.issue)}

        with pytest.raises(ClientError):
            send_webhooks(
                installation=self.install, event="issue.assigned", data=data, actor=self.user
            )
        requests = self.buffer.get_requests()
        requests_count = len(requests)
        first_request = requests[0]

        assert safe_urlopen.called
        assert requests_count == 1
        assert first_request["response_code"] == 400
        assert first_request["event_type"] == "issue.assigned"
        assert first_request["organization_id"] == self.install.organization_id
