{
  "openapi": "3.0.1",
  "info": {
    "title": "API Reference",
    "description": "Sentry Public API",
    "termsOfService": "http://sentry.io/terms/",
    "contact": {
      "email": "partners@sentry.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v0"
  },
  "servers": [
    {
      "url": "https://sentry.io/"
    }
  ],
  "tags": [
    {
      "name": "Teams",
      "description": "Endpoints for teams",
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/teams/&template=api_error_template.md"
      }
    },
    {
      "name": "Organizations",
      "description": "Endpoints for organizations",
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/organizations/&template=api_error_template.md"
      }
    },
    {
      "name": "Projects",
      "description": "Endpoints for projects",
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/projects/&template=api_error_template.md"
      }
    },
    {
      "name": "Events",
      "x-sidebar-name": "Events & Issues",
      "description": "Endpoints for events and issues",
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/events/&template=api_error_template.md"
      }
    },
    {
      "name": "Releases",
      "description": "Endpoints for releases",
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/releases/&template=api_error_template.md"
      }
    }
  ],
  "paths": {
    "/api/0/organizations/{organization_slug}/teams/": {
      "get": {
        "tags": ["Teams"],
        "description": "Returns a list of teams bound to a organization.",
        "operationId": "List an Organization's Teams",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization for which the teams should be listed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "avatar",
                      "dateCreated",
                      "hasAccess",
                      "id",
                      "isMember",
                      "isPending",
                      "memberCount",
                      "name",
                      "projects",
                      "slug"
                    ],
                    "properties": {
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "avatarType": {
                            "type": "string"
                          },
                          "avatarUuid": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "isPending": {
                        "type": "boolean"
                      },
                      "memberCount": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      },
                      "projects": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "avatar",
                            "color",
                            "dateCreated",
                            "features",
                            "firstEvent",
                            "hasAccess",
                            "id",
                            "isBookmarked",
                            "isInternal",
                            "isMember",
                            "isPublic",
                            "name",
                            "platform",
                            "slug",
                            "status"
                          ],
                          "properties": {
                            "avatar": {
                              "type": "object",
                              "properties": {
                                "avatarType": {
                                  "type": "string"
                                },
                                "avatarUuid": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            },
                            "color": {
                              "type": "string"
                            },
                            "dateCreated": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "features": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "firstEvent": {
                              "type": "string",
                              "nullable": true
                            },
                            "hasAccess": {
                              "type": "boolean"
                            },
                            "id": {
                              "type": "string"
                            },
                            "isBookmarked": {
                              "type": "boolean"
                            },
                            "isInternal": {
                              "type": "boolean"
                            },
                            "isMember": {
                              "type": "boolean"
                            },
                            "isPublic": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "platform": {
                              "type": "string",
                              "nullable": true
                            },
                            "slug": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "disabled",
                                "pending_deletion",
                                "deletion_in_progress"
                              ]
                            }
                          }
                        }
                      },
                      "slug": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:20:08.115Z",
                    "hasAccess": true,
                    "id": "3",
                    "isMember": true,
                    "isPending": false,
                    "memberCount": 1,
                    "name": "Ancient Gabelers",
                    "projects": [],
                    "slug": "ancient-gabelers"
                  },
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:19:55.114Z",
                    "hasAccess": true,
                    "id": "2",
                    "isMember": true,
                    "isPending": false,
                    "memberCount": 1,
                    "name": "Powerful Abolitionist",
                    "projects": [
                      {
                        "avatar": {
                          "avatarType": "letter_avatar",
                          "avatarUuid": null
                        },
                        "color": "#bf5b3f",
                        "dateCreated": "2018-11-06T21:19:58.536Z",
                        "features": [
                          "releases",
                          "sample-events",
                          "minidump",
                          "servicehooks",
                          "rate-limits",
                          "data-forwarding"
                        ],
                        "firstEvent": null,
                        "hasAccess": true,
                        "id": "3",
                        "isBookmarked": false,
                        "isInternal": false,
                        "isMember": true,
                        "isPublic": false,
                        "name": "Prime Mover",
                        "platform": null,
                        "slug": "prime-mover",
                        "status": "active"
                      },
                      {
                        "avatar": {
                          "avatarType": "letter_avatar",
                          "avatarUuid": null
                        },
                        "color": "#3fbf7f",
                        "dateCreated": "2018-11-06T21:19:55.121Z",
                        "features": [
                          "releases",
                          "sample-events",
                          "minidump",
                          "servicehooks",
                          "rate-limits",
                          "data-forwarding"
                        ],
                        "firstEvent": null,
                        "hasAccess": true,
                        "id": "2",
                        "isBookmarked": false,
                        "isInternal": false,
                        "isMember": true,
                        "isPublic": false,
                        "name": "Pump Station",
                        "platform": null,
                        "slug": "pump-station",
                        "status": "active"
                      },
                      {
                        "avatar": {
                          "avatarType": "letter_avatar",
                          "avatarUuid": null
                        },
                        "color": "#bf6e3f",
                        "dateCreated": "2018-11-06T21:20:08.064Z",
                        "features": [
                          "servicehooks",
                          "sample-events",
                          "data-forwarding",
                          "rate-limits",
                          "minidump"
                        ],
                        "firstEvent": null,
                        "hasAccess": true,
                        "id": "4",
                        "isBookmarked": false,
                        "isInternal": false,
                        "isMember": true,
                        "isPublic": false,
                        "name": "The Spoiled Yoghurt",
                        "platform": null,
                        "slug": "the-spoiled-yoghurt",
                        "status": "active"
                      }
                    ],
                    "slug": "powerful-abolitionist"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Permission Denied"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["team:read"]
          }
        ]
      },
      "post": {
        "tags": ["Teams"],
        "description": "Create a new team bound to an organization. Only the name of the team is needed to create it, the slug can be auto generated.",
        "operationId": "Create a New Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team should be created for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the team.",
                    "example": "Ancient Gabelers"
                  },
                  "slug": {
                    "type": "string",
                    "description": "The optional slug for this team. If not provided it will be auto generated from the name.",
                    "example": "ancient-gabelers"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "avatar",
                    "dateCreated",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug"
                  ],
                  "properties": {
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "memberCount": 0,
                  "name": "Ancient Gabelers",
                  "isMember": false,
                  "hasAccess": true,
                  "isPending": false,
                  "dateCreated": "2020-08-19T21:46:47.877073Z",
                  "id": "542610",
                  "avatar": {
                    "avatarUuid": null,
                    "avatarType": "letter_avatar"
                  },
                  "slug": "ancient-gabelers"
                }
              }
            }
          },
          "400": {
            "description": "Bad input"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Team slug already exists"
          }
        },
        "security": [
          {
            "auth_token": ["team:write"]
          }
        ]
      }
    },
    "/api/0/teams/{organization_slug}/{team_slug}/": {
      "get": {
        "tags": ["Teams"],
        "description": "Return details on an individual team.",
        "operationId": "Retrieve a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "avatar",
                    "dateCreated",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug",
                    "organization"
                  ],
                  "properties": {
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "organization": {
                      "type": "object",
                      "required": [
                        "avatar",
                        "dateCreated",
                        "id",
                        "isEarlyAdopter",
                        "name",
                        "require2FA",
                        "slug",
                        "status"
                      ],
                      "properties": {
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "id": {
                          "type": "string"
                        },
                        "isEarlyAdopter": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "require2FA": {
                          "type": "boolean"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "required": ["id", "name"],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "dateCreated": "2018-11-06T21:19:55.114Z",
                  "hasAccess": true,
                  "id": "2",
                  "isMember": true,
                  "isPending": false,
                  "memberCount": 1,
                  "name": "Powerful Abolitionist",
                  "organization": {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:19:55.101Z",
                    "id": "2",
                    "isEarlyAdopter": false,
                    "name": "The Interstellar Jurisdiction",
                    "require2FA": false,
                    "slug": "the-interstellar-jurisdiction",
                    "status": {
                      "id": "active",
                      "name": "active"
                    }
                  },
                  "slug": "powerful-abolitionist"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": ["team:read"]
          }
        ]
      },
      "put": {
        "tags": ["Teams"],
        "description": "Update various attributes and configurable settings for the given team.",
        "operationId": "Update a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the team.",
                    "example": "The Inflated Philosophers"
                  },
                  "slug": {
                    "type": "string",
                    "description": "A new slug for the team. It has to be unique and available.",
                    "example": "the-inflated-philosophers"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "avatar",
                    "dateCreated",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug"
                  ],
                  "properties": {
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "avatar": {
                    "avatarType": "letter_avatar"
                  },
                  "dateCreated": "2018-11-06T21:20:08.115Z",
                  "hasAccess": true,
                  "id": "3",
                  "isMember": false,
                  "isPending": false,
                  "memberCount": 1,
                  "name": "The Inflated Philosophers",
                  "slug": "the-inflated-philosophers"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": ["team:write"]
          }
        ]
      },
      "delete": {
        "tags": ["Teams"],
        "description": "Schedules a team for deletion.\n\nNote: Deletion happens asynchronously and therefore is not immediate. However once deletion has begun the state of a project changes and will be hidden from most public views.",
        "operationId": "Delete a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": ["team:admin"]
          }
        ]
      }
    },
    "/api/0/teams/{organization_slug}/{team_slug}/projects/": {
      "get": {
        "tags": ["Teams"],
        "description": "Return a list of projects bound to a team.",
        "operationId": "List a Team's Projects",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "features",
                      "firstEvent",
                      "hasAccess",
                      "id",
                      "isBookmarked",
                      "isMember",
                      "name",
                      "platform",
                      "slug",
                      "team",
                      "teams",
                      "latestDeploys"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "firstEvent": {
                        "type": "string",
                        "nullable": true
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "slug": {
                        "type": "string"
                      },
                      "team": {
                        "type": "object",
                        "required": ["id", "name", "slug"],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": ["id", "name", "slug"],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "latestDeploys": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "slug": "the-spoiled-yoghurt",
                    "name": "The Spoiled Yoghurt",
                    "hasAccess": true,
                    "teams": [
                      {
                        "id": "542609",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      }
                    ],
                    "platform": null,
                    "firstEvent": null,
                    "isMember": false,
                    "team": {
                      "id": "542609",
                      "name": "Powerful Abolitionist",
                      "slug": "powerful-abolitionist"
                    },
                    "dateCreated": "2020-08-20T14:36:34.171255Z",
                    "isBookmarked": false,
                    "id": "5398494",
                    "latestDeploys": null,
                    "features": [
                      "custom-inbound-filters",
                      "discard-groups",
                      "rate-limits",
                      "data-forwarding",
                      "similarity-view",
                      "issue-alerts-targeting",
                      "servicehooks",
                      "minidump",
                      "similarity-indexing"
                    ]
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "post": {
        "tags": ["Teams"],
        "description": "Create a new project bound to a team.",
        "operationId": "Create a New Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to create a new project for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name for the new project.",
                    "example": "The Spoiled Yoghurt"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Optional slug for the new project. If not provided a slug is generated from the name.",
                    "example": "the-spoiled-yoghurt"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "avatar",
                    "color",
                    "dateCreated",
                    "features",
                    "firstEvent",
                    "hasAccess",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "name",
                    "platform",
                    "slug",
                    "status"
                  ],
                  "properties": {
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "color": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "nullable": true
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "pending_deletion",
                        "deletion_in_progress"
                      ]
                    }
                  }
                },
                "example": {
                  "status": "active",
                  "name": "The Spoiled Yoghurt",
                  "color": "#bf6e3f",
                  "isInternal": false,
                  "isPublic": false,
                  "slug": "the-spoiled-yoghurt",
                  "platform": null,
                  "hasAccess": true,
                  "firstEvent": null,
                  "avatar": {
                    "avatarUuid": null,
                    "avatarType": "letter_avatar"
                  },
                  "isMember": false,
                  "dateCreated": "2020-08-20T14:36:34.171255Z",
                  "isBookmarked": false,
                  "id": "5398494",
                  "features": [
                    "custom-inbound-filters",
                    "discard-groups",
                    "rate-limits",
                    "data-forwarding",
                    "similarity-view",
                    "issue-alerts-targeting",
                    "servicehooks",
                    "minidump",
                    "similarity-indexing"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          },
          "409": {
            "description": "Team already exists"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      }
    },
    "/api/0/teams/{organization_slug}/{team_slug}/stats/": {
      "get": {
        "tags": ["Teams"],
        "summary": "Caution: this endpoint may change in the future without notice.",
        "description": "Return a set of points representing a normalized timestamp and the number of events seen in the period.\n\nQuery ranges are limited to Sentry’s configured time-series resolutions.",
        "operationId": "Retrieve Event Counts for a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stat",
            "in": "query",
            "description": "The name of the stat to query `(\"received\", \"rejected\")`.",
            "schema": {
              "type": "string",
              "enum": ["received", "rejected"]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "A timestamp to set the start of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "A timestamp to set the end of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "An explicit resolution to search for (one of `10s`, `1h`, and `1d`).",
            "schema": {
              "type": "string",
              "enum": ["10s", "1h", "1d"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": [
                  [1541455200, 3302],
                  [1541458800, 3832],
                  [1541462400, 3669],
                  [1541466000, 3533],
                  [1541469600, 3499],
                  [1541473200, 3201],
                  [1541476800, 3769],
                  [1541480400, 2706],
                  [1541484000, 2698],
                  [1541487600, 3747],
                  [1541491200, 3261],
                  [1541494800, 2860],
                  [1541498400, 4350],
                  [1541502000, 2924],
                  [1541505600, 3389],
                  [1541509200, 2931],
                  [1541512800, 3132],
                  [1541516400, 3213],
                  [1541520000, 3650],
                  [1541523600, 3096],
                  [1541527200, 3845],
                  [1541530800, 3545],
                  [1541534400, 2880],
                  [1541538000, 4057]
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": ["team:read"]
          }
        ]
      }
    },
    "/api/0/organizations/": {
      "get": {
        "tags": ["Organizations"],
        "description": "Return a list of organizations available to the authenticated session.  This is particularly useful for requests with an user bound context.  For API key based requests this will only return the organization that belongs to the key.",
        "operationId": "List Your Organizations",
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "description": "Restrict results to organizations in which you are an organization owner.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "avatar",
                      "dateCreated",
                      "id",
                      "isEarlyAdopter",
                      "name",
                      "require2FA",
                      "slug",
                      "status"
                    ],
                    "properties": {
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "avatarType": {
                            "type": "string"
                          },
                          "avatarUuid": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isEarlyAdopter": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "require2FA": {
                        "type": "boolean"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status": {
                        "type": "object",
                        "required": ["id", "name"],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:19:55.101Z",
                    "id": "2",
                    "isEarlyAdopter": false,
                    "name": "The Interstellar Jurisdiction",
                    "require2FA": false,
                    "slug": "the-interstellar-jurisdiction",
                    "status": {
                      "id": "active",
                      "name": "active"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/eventids/{event_id}/": {
      "get": {
        "tags": ["Organizations"],
        "description": "This resolves an event ID to the project slug and internal issue ID and internal event ID.",
        "operationId": "Resolve an Event ID",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "event",
                    "eventId",
                    "groupId",
                    "organizationSlug",
                    "projectSlug"
                  ],
                  "properties": {
                    "event": {
                      "type": "object",
                      "required": [
                        "_meta",
                        "context",
                        "contexts",
                        "dateCreated",
                        "dateReceived",
                        "dist",
                        "entries",
                        "errors",
                        "eventID",
                        "fingerprints",
                        "groupID",
                        "id",
                        "message",
                        "metadata",
                        "packages",
                        "platform",
                        "sdk",
                        "size",
                        "tags",
                        "type",
                        "user",
                        "title"
                      ],
                      "properties": {
                        "_meta": {
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "string",
                              "nullable": true
                            },
                            "contexts": {
                              "type": "object",
                              "nullable": true
                            },
                            "entries": {
                              "type": "object"
                            },
                            "message": {
                              "type": "string",
                              "nullable": true
                            },
                            "packages": {
                              "type": "string",
                              "nullable": true
                            },
                            "sdk": {
                              "type": "string",
                              "nullable": true
                            },
                            "tags": {
                              "type": "object"
                            },
                            "user": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "context": {
                          "type": "object",
                          "properties": {
                            "emptyList": {
                              "type": "array",
                              "items": {}
                            },
                            "emptyMap": {
                              "type": "object"
                            },
                            "length": {
                              "type": "integer"
                            },
                            "results": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "session": {
                              "type": "object",
                              "properties": {
                                "foo": {
                                  "type": "string"
                                }
                              }
                            },
                            "unauthorized": {
                              "type": "boolean"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "contexts": {
                          "type": "object"
                        },
                        "dateCreated": {
                          "type": "string"
                        },
                        "dateReceived": {
                          "type": "string"
                        },
                        "dist": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "required": ["type", "data"],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": ["values"],
                                    "properties": {
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "category",
                                            "level",
                                            "event_id",
                                            "timestamp",
                                            "data",
                                            "message",
                                            "type"
                                          ],
                                          "properties": {
                                            "category": {
                                              "type": "string"
                                            },
                                            "level": {
                                              "type": "string"
                                            },
                                            "event_id": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "timestamp": {
                                              "type": "string",
                                              "format": "date-time"
                                            },
                                            "data": {
                                              "type": "object",
                                              "nullable": true
                                            },
                                            "message": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": ["type", "data"],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": [
                                      "fragment",
                                      "cookies",
                                      "inferredContentType",
                                      "env",
                                      "headers",
                                      "url",
                                      "query",
                                      "data",
                                      "method"
                                    ],
                                    "properties": {
                                      "fragment": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "cookies": {
                                        "type": "array",
                                        "nullable": true,
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "inferredContentType": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "env": {
                                        "type": "object",
                                        "nullable": true,
                                        "properties": {
                                          "ENV": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "query": {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "data": {
                                        "type": "object",
                                        "nullable": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": ["type", "data"],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": ["formatted"],
                                    "properties": {
                                      "formatted": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": ["type", "data"],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": [
                                      "excOmitted",
                                      "hasSystemFrames",
                                      "values"
                                    ],
                                    "properties": {
                                      "excOmitted": {
                                        "type": "array",
                                        "nullable": true,
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "hasSystemFrames": {
                                        "type": "boolean"
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "stacktrace",
                                            "module",
                                            "rawStacktrace",
                                            "mechanism",
                                            "threadId",
                                            "value",
                                            "type"
                                          ],
                                          "properties": {
                                            "stacktrace": {
                                              "type": "object",
                                              "nullable": true,
                                              "required": [
                                                "frames",
                                                "framesOmitted",
                                                "registers",
                                                "hasSystemFrames"
                                              ],
                                              "properties": {
                                                "frames": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "function",
                                                      "errors",
                                                      "colNo",
                                                      "vars",
                                                      "package",
                                                      "absPath",
                                                      "inApp",
                                                      "lineNo",
                                                      "module",
                                                      "filename",
                                                      "platform",
                                                      "instructionAddr",
                                                      "context",
                                                      "symbolAddr",
                                                      "trust",
                                                      "symbol"
                                                    ],
                                                    "properties": {
                                                      "function": {
                                                        "type": "string"
                                                      },
                                                      "errors": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "colNo": {
                                                        "type": "integer",
                                                        "nullable": true
                                                      },
                                                      "vars": {
                                                        "type": "object",
                                                        "nullable": true
                                                      },
                                                      "package": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "absPath": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "inApp": {
                                                        "type": "boolean"
                                                      },
                                                      "lineNo": {
                                                        "type": "integer"
                                                      },
                                                      "module": {
                                                        "type": "string"
                                                      },
                                                      "filename": {
                                                        "type": "string"
                                                      },
                                                      "platform": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "instructionAddr": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "context": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "array",
                                                          "items": {
                                                            "oneOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "symbolAddr": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "trust": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "symbol": {
                                                        "type": "string",
                                                        "nullable": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "framesOmitted": {
                                                  "type": "string",
                                                  "nullable": true
                                                },
                                                "registers": {
                                                  "type": "string",
                                                  "nullable": true
                                                },
                                                "hasSystemFrames": {
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "module": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "rawStacktrace": {
                                              "type": "object",
                                              "nullable": true
                                            },
                                            "mechanism": {
                                              "type": "object",
                                              "nullable": true,
                                              "properties": {
                                                "type": {
                                                  "type": "string"
                                                },
                                                "handled": {
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "threadId": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "errors": {
                          "type": "array",
                          "items": {}
                        },
                        "eventID": {
                          "type": "string"
                        },
                        "fingerprints": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "groupID": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        },
                        "packages": {
                          "type": "object",
                          "properties": {
                            "my.package": {
                              "type": "string"
                            }
                          }
                        },
                        "platform": {
                          "type": "string"
                        },
                        "sdk": {
                          "type": "object",
                          "nullable": true
                        },
                        "size": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_meta": {
                                "type": "string",
                                "nullable": true
                              },
                              "key": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "username",
                            "name",
                            "ip_address",
                            "email",
                            "data",
                            "id"
                          ],
                          "properties": {
                            "username": {
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "ip_address": {
                              "type": "string",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "data": {
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "isStaff": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "title": {
                          "type": "string"
                        }
                      }
                    },
                    "eventId": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string"
                    },
                    "organizationSlug": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "event": {
                    "_meta": {
                      "context": null,
                      "contexts": null,
                      "entries": {},
                      "message": null,
                      "packages": null,
                      "sdk": null,
                      "tags": {},
                      "user": null
                    },
                    "context": {
                      "emptyList": [],
                      "emptyMap": {},
                      "length": 10837790,
                      "results": [1, 2, 3, 4, 5],
                      "session": {
                        "foo": "bar"
                      },
                      "unauthorized": false,
                      "url": "http://example.org/foo/bar/"
                    },
                    "contexts": {},
                    "dateCreated": "2018-11-06T21:19:55Z",
                    "dateReceived": "2018-11-06T21:19:55Z",
                    "dist": null,
                    "entries": [
                      {
                        "type": "request",
                        "data": {
                          "fragment": null,
                          "cookies": [],
                          "inferredContentType": null,
                          "env": null,
                          "headers": [
                            [
                              "User-Agent",
                              "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"
                            ]
                          ],
                          "url": "http://example.com/foo",
                          "query": [],
                          "data": null,
                          "method": null
                        }
                      }
                    ],
                    "errors": [],
                    "eventID": "9fac2ceed9344f2bbfdd1fdacb0ed9b1",
                    "fingerprints": ["c4a4d06bc314205bb3b6bdb612dde7f1"],
                    "groupID": "1",
                    "id": "1",
                    "message": "",
                    "title": "This is an example Python exception",
                    "metadata": {
                      "title": "This is an example Python exception"
                    },
                    "packages": {
                      "my.package": "1.0.0"
                    },
                    "platform": "python",
                    "sdk": null,
                    "size": 7055,
                    "tags": [
                      {
                        "_meta": null,
                        "key": "browser",
                        "value": "Chrome 28.0"
                      },
                      {
                        "_meta": null,
                        "key": "device",
                        "value": "Other"
                      },
                      {
                        "_meta": null,
                        "key": "level",
                        "value": "error"
                      },
                      {
                        "_meta": null,
                        "key": "os",
                        "value": "Windows 8"
                      },
                      {
                        "_meta": null,
                        "key": "release",
                        "value": "17642328ead24b51867165985996d04b29310337"
                      },
                      {
                        "_meta": null,
                        "key": "url",
                        "value": "http://example.com/foo"
                      },
                      {
                        "_meta": null,
                        "key": "user",
                        "value": "id:1"
                      }
                    ],
                    "type": "default",
                    "user": {
                      "data": {},
                      "email": "sentry@example.com",
                      "id": "1",
                      "ip_address": "127.0.0.1",
                      "name": "Sentry",
                      "username": "sentry"
                    }
                  },
                  "eventId": "1",
                  "groupId": "1",
                  "organizationSlug": "the-interstellar-jurisdiction",
                  "projectSlug": "pump-station"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/": {
      "get": {
        "tags": ["Organizations"],
        "description": "Return details on an individual organization including various details such as membership access, features, and teams.",
        "operationId": "Retrieve an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "access",
                    "allowSharedIssues",
                    "availableRoles",
                    "avatar",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultRole",
                    "enhancedPrivacy",
                    "experiments",
                    "features",
                    "id",
                    "isDefault",
                    "isEarlyAdopter",
                    "name",
                    "onboardingTasks",
                    "openMembership",
                    "pendingAccessRequests",
                    "projects",
                    "quota",
                    "require2FA",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "teams",
                    "trustedRelays"
                  ],
                  "properties": {
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowSharedIssues": {
                      "type": "boolean"
                    },
                    "availableRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "defaultRole": {
                      "type": "string"
                    },
                    "enhancedPrivacy": {
                      "type": "boolean"
                    },
                    "experiments": {
                      "type": "object"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "isEarlyAdopter": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "onboardingTasks": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "openMembership": {
                      "type": "boolean"
                    },
                    "pendingAccessRequests": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "dateCreated",
                          "firstEvent",
                          "hasAccess",
                          "id",
                          "isBookmarked",
                          "isMember",
                          "latestDeploys",
                          "name",
                          "platform",
                          "platforms",
                          "slug",
                          "team",
                          "teams"
                        ],
                        "properties": {
                          "dateCreated": {
                            "type": "string"
                          },
                          "firstEvent": {
                            "type": "string",
                            "nullable": true
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isBookmarked": {
                            "type": "boolean"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "latestDeploys": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "nullable": true
                          },
                          "platforms": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "slug": {
                            "type": "string"
                          },
                          "team": {
                            "type": "object",
                            "required": ["id", "name", "slug"],
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          },
                          "teams": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": ["id", "name", "slug"],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "slug": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "quota": {
                      "type": "object"
                    },
                    "require2FA": {
                      "type": "boolean"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "storeCrashReports": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "avatar",
                          "dateCreated",
                          "hasAccess",
                          "id",
                          "isMember",
                          "isPending",
                          "memberCount",
                          "name",
                          "slug"
                        ],
                        "properties": {
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "isPending": {
                            "type": "boolean"
                          },
                          "memberCount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "trustedRelays": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "access": [],
                  "allowSharedIssues": true,
                  "availableRoles": [
                    {
                      "id": "member",
                      "name": "Member"
                    },
                    {
                      "id": "admin",
                      "name": "Admin"
                    },
                    {
                      "id": "manager",
                      "name": "Manager"
                    },
                    {
                      "id": "owner",
                      "name": "Owner"
                    }
                  ],
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "dataScrubber": false,
                  "dataScrubberDefaults": false,
                  "dateCreated": "2018-11-06T21:19:55.101Z",
                  "defaultRole": "member",
                  "enhancedPrivacy": false,
                  "experiments": {},
                  "features": [
                    "new-teams",
                    "shared-issues",
                    "new-issue-ui",
                    "repos",
                    "open-membership",
                    "invite-members",
                    "sso-saml2",
                    "sso-basic",
                    "suggested-commits"
                  ],
                  "id": "2",
                  "isDefault": false,
                  "isEarlyAdopter": false,
                  "name": "The Interstellar Jurisdiction",
                  "onboardingTasks": [
                    {
                      "data": {},
                      "dateCompleted": "2018-11-06T21:20:08.089Z",
                      "status": "complete",
                      "task": 1,
                      "user": ""
                    }
                  ],
                  "openMembership": true,
                  "pendingAccessRequests": 0,
                  "projects": [
                    {
                      "dateCreated": "2018-11-06T21:19:58.536Z",
                      "firstEvent": null,
                      "hasAccess": true,
                      "id": "3",
                      "isBookmarked": false,
                      "isMember": true,
                      "latestDeploys": null,
                      "name": "Prime Mover",
                      "platform": null,
                      "platforms": [],
                      "slug": "prime-mover",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ]
                    },
                    {
                      "dateCreated": "2018-11-06T21:19:55.121Z",
                      "firstEvent": null,
                      "hasAccess": true,
                      "id": "2",
                      "isBookmarked": false,
                      "isMember": true,
                      "latestDeploys": null,
                      "name": "Pump Station",
                      "platform": null,
                      "platforms": [],
                      "slug": "pump-station",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ]
                    },
                    {
                      "dateCreated": "2018-11-06T21:20:08.064Z",
                      "firstEvent": null,
                      "hasAccess": true,
                      "id": "4",
                      "isBookmarked": false,
                      "isMember": true,
                      "latestDeploys": null,
                      "name": "The Spoiled Yoghurt",
                      "platform": null,
                      "platforms": [],
                      "slug": "the-spoiled-yoghurt",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ]
                    }
                  ],
                  "quota": {
                    "accountLimit": 0,
                    "maxRate": 0,
                    "maxRateInterval": 60,
                    "projectLimit": 100
                  },
                  "require2FA": false,
                  "safeFields": [],
                  "scrapeJavaScript": true,
                  "scrubIPAddresses": false,
                  "sensitiveFields": [],
                  "slug": "the-interstellar-jurisdiction",
                  "status": {
                    "id": "active",
                    "name": "active"
                  },
                  "storeCrashReports": 0,
                  "teams": [
                    {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:20:08.115Z",
                      "hasAccess": true,
                      "id": "3",
                      "isMember": true,
                      "isPending": false,
                      "memberCount": 1,
                      "name": "Ancient Gabelers",
                      "slug": "ancient-gabelers"
                    },
                    {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.114Z",
                      "hasAccess": true,
                      "id": "2",
                      "isMember": true,
                      "isPending": false,
                      "memberCount": 1,
                      "name": "Powerful Abolitionist",
                      "slug": "powerful-abolitionist"
                    }
                  ],
                  "trustedRelays": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      },
      "put": {
        "tags": ["Organizations"],
        "description": "Update various attributes and configurable settings for the given organization.",
        "operationId": "Update an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "An optional new name for the organization.",
                    "example": "Impeccably Designated"
                  },
                  "slug": {
                    "type": "string",
                    "description": "An optional new slug for the organization. Needs to be available and unique.",
                    "example": "impeccably-designated"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "access",
                    "allowSharedIssues",
                    "availableRoles",
                    "avatar",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultRole",
                    "enhancedPrivacy",
                    "experiments",
                    "features",
                    "id",
                    "isDefault",
                    "isEarlyAdopter",
                    "name",
                    "onboardingTasks",
                    "openMembership",
                    "pendingAccessRequests",
                    "projects",
                    "quota",
                    "require2FA",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "teams",
                    "trustedRelays"
                  ],
                  "properties": {
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowSharedIssues": {
                      "type": "boolean"
                    },
                    "availableRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "defaultRole": {
                      "type": "string"
                    },
                    "enhancedPrivacy": {
                      "type": "boolean"
                    },
                    "experiments": {
                      "type": "object"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "isEarlyAdopter": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "onboardingTasks": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "openMembership": {
                      "type": "boolean"
                    },
                    "pendingAccessRequests": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "dateCreated",
                          "firstEvent",
                          "hasAccess",
                          "id",
                          "isBookmarked",
                          "isMember",
                          "latestDeploys",
                          "name",
                          "platform",
                          "platforms",
                          "slug",
                          "team",
                          "teams"
                        ],
                        "properties": {
                          "dateCreated": {
                            "type": "string"
                          },
                          "firstEvent": {
                            "type": "string",
                            "nullable": true
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isBookmarked": {
                            "type": "boolean"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "latestDeploys": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "nullable": true
                          },
                          "platforms": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "slug": {
                            "type": "string"
                          },
                          "team": {
                            "type": "object",
                            "required": ["id", "name", "slug"],
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          },
                          "teams": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": ["id", "name", "slug"],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "slug": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "quota": {
                      "type": "object"
                    },
                    "require2FA": {
                      "type": "boolean"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "storeCrashReports": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "avatar",
                          "dateCreated",
                          "hasAccess",
                          "id",
                          "isMember",
                          "isPending",
                          "memberCount",
                          "name",
                          "slug"
                        ],
                        "properties": {
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "isPending": {
                            "type": "boolean"
                          },
                          "memberCount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "trustedRelays": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "access": [],
                  "allowSharedIssues": true,
                  "availableRoles": [
                    {
                      "id": "member",
                      "name": "Member"
                    },
                    {
                      "id": "admin",
                      "name": "Admin"
                    },
                    {
                      "id": "manager",
                      "name": "Manager"
                    },
                    {
                      "id": "owner",
                      "name": "Owner"
                    }
                  ],
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "dataScrubber": false,
                  "dataScrubberDefaults": false,
                  "dateCreated": "2018-11-06T21:20:19.548Z",
                  "defaultRole": "member",
                  "enhancedPrivacy": false,
                  "experiments": {},
                  "features": [
                    "new-teams",
                    "shared-issues",
                    "new-issue-ui",
                    "repos",
                    "open-membership",
                    "invite-members",
                    "sso-saml2",
                    "sso-basic",
                    "suggested-commits"
                  ],
                  "id": "3",
                  "isDefault": false,
                  "isEarlyAdopter": false,
                  "name": "Impeccably Designated",
                  "onboardingTasks": [],
                  "openMembership": true,
                  "pendingAccessRequests": 0,
                  "projects": [],
                  "quota": {
                    "accountLimit": 0,
                    "maxRate": 0,
                    "maxRateInterval": 60,
                    "projectLimit": 100
                  },
                  "require2FA": false,
                  "safeFields": [],
                  "scrapeJavaScript": true,
                  "scrubIPAddresses": false,
                  "sensitiveFields": [],
                  "slug": "impeccably-designated",
                  "status": {
                    "id": "active",
                    "name": "active"
                  },
                  "storeCrashReports": 0,
                  "teams": [],
                  "trustedRelays": []
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org:write"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/projects/": {
      "get": {
        "tags": ["Organizations"],
        "description": "Return a list of projects bound to a organization.",
        "operationId": "List an Organization's Projects",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization for which the projects should be listed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "firstEvent",
                      "hasAccess",
                      "id",
                      "isBookmarked",
                      "isMember",
                      "latestDeploys",
                      "name",
                      "platform",
                      "platforms",
                      "slug",
                      "team",
                      "teams"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "firstEvent": {
                        "type": "string",
                        "nullable": true
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "latestDeploys": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "platforms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "slug": {
                        "type": "string"
                      },
                      "team": {
                        "type": "object",
                        "required": ["id", "name", "slug"],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": ["id", "name", "slug"],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "firstEvent": null,
                    "hasAccess": true,
                    "id": "3",
                    "isBookmarked": false,
                    "isMember": true,
                    "latestDeploys": null,
                    "name": "Prime Mover",
                    "platform": null,
                    "platforms": [],
                    "slug": "prime-mover",
                    "team": {
                      "id": "2",
                      "name": "Powerful Abolitionist",
                      "slug": "powerful-abolitionist"
                    },
                    "teams": [
                      {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/repos/": {
      "get": {
        "tags": ["Organizations"],
        "description": "Return a list of version control repositories for a given organization.",
        "operationId": "List an Organization's Repositories",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The organization short name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["dateCreated", "id", "name"],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "3",
                    "name": "sentry/sentry"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/repos/{repo_id}/commits/": {
      "get": {
        "tags": ["Organizations"],
        "description": "Return a list of commits for a given repository.",
        "operationId": "List a Repository's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The organization short name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_id",
            "in": "path",
            "description": "The repository ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["dateCreated", "id", "message"],
                    "properties": {
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "acbafc639127fd89d10f474520104517ff1d709e",
                    "message": "Initial commit from Create Next App"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/stats/": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Caution: this endpoint may change in the future without notice.",
        "description": "Return a set of points representing a normalized timestamp and the number of events seen in the period.",
        "operationId": "Retrieve Event Counts for an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stat",
            "in": "query",
            "description": "The name of the stat to query `(\"received\", \"rejected\", \"blacklisted\")`.",
            "schema": {
              "type": "string",
              "enum": ["received", "rejected", "blacklisted"]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "A timestamp to set the start of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "A timestamp to set the end of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "An explicit resolution to search for (one of `10s`, `1h`, and `1d`).",
            "schema": {
              "type": "string",
              "enum": ["10s", "1h", "1d"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": [
                  [1541455200, 8264],
                  [1541458800, 6564],
                  [1541462400, 8652],
                  [1541466000, 7436],
                  [1541469600, 8127],
                  [1541473200, 7643],
                  [1541476800, 6518],
                  [1541480400, 6752],
                  [1541484000, 6559],
                  [1541487600, 7039],
                  [1541491200, 7384],
                  [1541494800, 6265],
                  [1541498400, 8390],
                  [1541502000, 6393],
                  [1541505600, 7298],
                  [1541509200, 7422],
                  [1541512800, 5603],
                  [1541516400, 6846],
                  [1541520000, 8886],
                  [1541523600, 6544],
                  [1541527200, 8812],
                  [1541530800, 8172],
                  [1541534400, 5733],
                  [1541538000, 9435]
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/users/": {
      "get": {
        "tags": ["Organizations"],
        "description": "Return a list of users that belong to a given organization.",
        "operationId": "List an Organization's Users",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "description": "Restrict results to users who have access to a given project ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "user",
                      "roleName",
                      "expired",
                      "id",
                      "projects",
                      "name",
                      "role",
                      "flags",
                      "email",
                      "pending"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "required": [
                          "username",
                          "lastLogin",
                          "isSuperuser",
                          "isManaged",
                          "lastActive",
                          "isStaff",
                          "id",
                          "isActive",
                          "has2fa",
                          "name",
                          "avatarUrl",
                          "dateJoined",
                          "emails",
                          "avatar",
                          "hasPasswordAuth",
                          "email"
                        ],
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "lastLogin": {
                            "type": "string"
                          },
                          "isSuperuser": {
                            "type": "boolean"
                          },
                          "isManaged": {
                            "type": "boolean"
                          },
                          "lastActive": {
                            "type": "string"
                          },
                          "isStaff": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isActive": {
                            "type": "boolean"
                          },
                          "has2fa": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatarUrl": {
                            "type": "string"
                          },
                          "dateJoined": {
                            "type": "string"
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "is_verified": {
                                  "type": "boolean"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "hasPasswordAuth": {
                            "type": "boolean"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "roleName": {
                        "type": "string"
                      },
                      "expired": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "projects": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "owner",
                          "manager",
                          "admin",
                          "member",
                          "billing"
                        ]
                      },
                      "flags": {
                        "type": "object",
                        "properties": {
                          "sso: linked": {
                            "type": "boolean"
                          },
                          "sso: invalid": {
                            "type": "boolean"
                          }
                        }
                      },
                      "email": {
                        "type": "string"
                      },
                      "pending": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2019-05-09T18:06:01.728Z",
                    "user": {
                      "username": "testEmail@test.com",
                      "lastLogin": "2019-09-16T02:56:06.806Z",
                      "isSuperuser": false,
                      "isManaged": false,
                      "lastActive": "2019-10-08T15:05:38.715Z",
                      "isStaff": false,
                      "id": "433307",
                      "isActive": true,
                      "has2fa": false,
                      "name": "OtherTest McTestuser",
                      "avatarUrl": "https:  //secure.gravatar.com/avatar/1eb103c0e899f372a85eb0a44f0a0f42?s=32&d=mm",
                      "dateJoined": "2019-05-09T18:06:01.443Z",
                      "emails": [
                        {
                          "is_verified": true,
                          "id": "468229",
                          "email": "testEmail@test.com"
                        }
                      ],
                      "avatar": {
                        "avatarUuid": null,
                        "avatarType": "letter_avatar"
                      },
                      "hasPasswordAuth": false,
                      "email": "testEmail@test.com"
                    },
                    "roleName": "Organization Owner",
                    "expired": false,
                    "id": "9376061",
                    "projects": ["buggy-sentry-project"],
                    "name": "OtherTest McTestuser",
                    "role": "owner",
                    "flags": {
                      "sso: linked": false,
                      "sso: invalid": false
                    },
                    "email": "testEmail@test.com",
                    "pending": false
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/shortids/{short_id}/": {
      "get": {
        "tags": ["Organizations"],
        "description": "This resolves a short ID to the project slug and internal issue ID.",
        "operationId": "Resolve a Short ID",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the short ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_id",
            "in": "path",
            "description": "The short ID to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "organizationSlug",
                    "projectSlug",
                    "shortId",
                    "group",
                    "groupId"
                  ],
                  "properties": {
                    "organizationSlug": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "shortId": {
                      "type": "string"
                    },
                    "group": {
                      "type": "object",
                      "required": [
                        "lastSeen",
                        "numComments",
                        "userCount",
                        "culprit",
                        "title",
                        "id",
                        "assignedTo",
                        "logger",
                        "type",
                        "annotations",
                        "metadata",
                        "status",
                        "subscriptionDetails",
                        "isPublic",
                        "hasSeen",
                        "shortId",
                        "shareId",
                        "firstSeen",
                        "count",
                        "permalink",
                        "level",
                        "isSubscribed",
                        "isBookmarked",
                        "project",
                        "statusDetails"
                      ],
                      "properties": {
                        "lastSeen": {
                          "type": "string"
                        },
                        "numComments": {
                          "type": "integer"
                        },
                        "userCount": {
                          "type": "integer"
                        },
                        "culprit": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "assignedTo": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "logger": {
                          "type": "string",
                          "nullable": true
                        },
                        "type": {
                          "type": "string"
                        },
                        "annotations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "function": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "filename": {
                              "type": "string"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["resolved", "unresolved", "ignored"]
                        },
                        "subscriptionDetails": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "reason": {
                              "type": "string"
                            }
                          }
                        },
                        "isPublic": {
                          "type": "boolean"
                        },
                        "hasSeen": {
                          "type": "boolean"
                        },
                        "shortId": {
                          "type": "string"
                        },
                        "shareId": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstSeen": {
                          "type": "string"
                        },
                        "count": {
                          "type": "string"
                        },
                        "permalink": {
                          "type": "string"
                        },
                        "level": {
                          "type": "string"
                        },
                        "isSubscribed": {
                          "type": "boolean"
                        },
                        "isBookmarked": {
                          "type": "boolean"
                        },
                        "project": {
                          "type": "object",
                          "properties": {
                            "slug": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "statusDetails": {
                          "type": "object"
                        }
                      }
                    },
                    "groupId": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "group": {
                    "annotations": [],
                    "assignedTo": null,
                    "count": "1",
                    "culprit": "raven.scripts.runner in main",
                    "firstSeen": "2018-11-06T21:19:55Z",
                    "hasSeen": false,
                    "id": "1",
                    "isBookmarked": false,
                    "isPublic": false,
                    "isSubscribed": true,
                    "lastSeen": "2018-11-06T21:19:55Z",
                    "level": "error",
                    "logger": null,
                    "metadata": {
                      "title": "This is an example Python exception"
                    },
                    "numComments": 0,
                    "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                    "project": {
                      "id": "2",
                      "name": "Pump Station",
                      "slug": "pump-station"
                    },
                    "shareId": null,
                    "shortId": "PUMP-STATION-1",
                    "status": "unresolved",
                    "statusDetails": {},
                    "subscriptionDetails": null,
                    "title": "This is an example Python exception",
                    "type": "default",
                    "userCount": 0
                  },
                  "groupId": "1",
                  "organizationSlug": "the-interstellar-jurisdiction",
                  "projectSlug": "pump-station",
                  "shortId": "PUMP-STATION-1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["org: read"]
          }
        ]
      }
    },
    "/api/0/projects/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return a list of projects available to the authenticated session.",
        "operationId": "List your Projects",
        "parameters": [
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "avatar",
                      "color",
                      "dateCreated",
                      "features",
                      "firstEvent",
                      "hasAccess",
                      "id",
                      "isBookmarked",
                      "isInternal",
                      "isMember",
                      "isPublic",
                      "name",
                      "organization",
                      "platform",
                      "slug",
                      "status"
                    ],
                    "properties": {
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "avatarType": {
                            "type": "string"
                          },
                          "avatarUuid": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "color": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "firstEvent": {
                        "type": "string",
                        "nullable": true
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isInternal": {
                        "type": "boolean"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organization": {
                        "type": "object",
                        "required": [
                          "avatar",
                          "dateCreated",
                          "id",
                          "isEarlyAdopter",
                          "name",
                          "require2FA",
                          "slug",
                          "status"
                        ],
                        "properties": {
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isEarlyAdopter": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "require2FA": {
                            "type": "boolean"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "status": {
                            "type": "object",
                            "required": ["id", "name"],
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "active",
                          "disabled",
                          "pending_deletion",
                          "deletion_in_progress"
                        ]
                      }
                    }
                  }
                },
                "example": [
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "color": "#bf6e3f",
                    "dateCreated": "2018-11-06T21:20:08.064Z",
                    "features": [
                      "servicehooks",
                      "sample-events",
                      "data-forwarding",
                      "rate-limits",
                      "minidump"
                    ],
                    "firstEvent": null,
                    "hasAccess": true,
                    "id": "4",
                    "isBookmarked": false,
                    "isInternal": false,
                    "isMember": true,
                    "isPublic": false,
                    "name": "The Spoiled Yoghurt",
                    "organization": {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.101Z",
                      "id": "2",
                      "isEarlyAdopter": false,
                      "name": "The Interstellar Jurisdiction",
                      "require2FA": false,
                      "slug": "the-interstellar-jurisdiction",
                      "status": {
                        "id": "active",
                        "name": "active"
                      }
                    },
                    "platform": null,
                    "slug": "the-spoiled-yoghurt",
                    "status": "active"
                  },
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "color": "#bf5b3f",
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "features": [
                      "releases",
                      "sample-events",
                      "minidump",
                      "servicehooks",
                      "rate-limits",
                      "data-forwarding"
                    ],
                    "firstEvent": null,
                    "hasAccess": true,
                    "id": "3",
                    "isBookmarked": false,
                    "isInternal": false,
                    "isMember": true,
                    "isPublic": false,
                    "name": "Prime Mover",
                    "organization": {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.101Z",
                      "id": "2",
                      "isEarlyAdopter": false,
                      "name": "The Interstellar Jurisdiction",
                      "require2FA": false,
                      "slug": "the-interstellar-jurisdiction",
                      "status": {
                        "id": "active",
                        "name": "active"
                      }
                    },
                    "platform": null,
                    "slug": "prime-mover",
                    "status": "active"
                  },
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "color": "#3fbf7f",
                    "dateCreated": "2018-11-06T21:19:55.121Z",
                    "features": [
                      "releases",
                      "sample-events",
                      "minidump",
                      "servicehooks",
                      "rate-limits",
                      "data-forwarding"
                    ],
                    "firstEvent": null,
                    "hasAccess": true,
                    "id": "2",
                    "isBookmarked": false,
                    "isInternal": false,
                    "isMember": true,
                    "isPublic": false,
                    "name": "Pump Station",
                    "organization": {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.101Z",
                      "id": "2",
                      "isEarlyAdopter": false,
                      "name": "The Interstellar Jurisdiction",
                      "require2FA": false,
                      "slug": "the-interstellar-jurisdiction",
                      "status": {
                        "id": "active",
                        "name": "active"
                      }
                    },
                    "platform": null,
                    "slug": "pump-station",
                    "status": "active"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return details on an individual project.",
        "operationId": "Retrieve a Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the project belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "allowedDomains",
                    "avatar",
                    "color",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultEnvironment",
                    "digestsMaxDelay",
                    "digestsMinDelay",
                    "features",
                    "firstEvent",
                    "hasAccess",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "latestRelease",
                    "name",
                    "options",
                    "organization",
                    "platform",
                    "platforms",
                    "processingIssues",
                    "relayPiiConfig",
                    "resolveAge",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "securityToken",
                    "securityTokenHeader",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "subjectPrefix",
                    "subjectTemplate",
                    "team",
                    "teams",
                    "verifySSL"
                  ],
                  "properties": {
                    "allowedDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "color": {
                      "type": "string"
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "defaultEnvironment": {
                      "type": "string",
                      "nullable": true
                    },
                    "digestsMaxDelay": {
                      "type": "integer"
                    },
                    "digestsMinDelay": {
                      "type": "integer"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "nullable": true
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "latestRelease": {
                      "type": "object",
                      "required": [
                        "authors",
                        "commitCount",
                        "data",
                        "dateCreated",
                        "dateReleased",
                        "deployCount",
                        "firstEvent",
                        "lastCommit",
                        "lastDeploy",
                        "lastEvent",
                        "newGroups",
                        "owner",
                        "projects",
                        "ref",
                        "shortVersion",
                        "url",
                        "version"
                      ],
                      "properties": {
                        "authors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "commitCount": {
                          "type": "integer"
                        },
                        "data": {
                          "type": "object"
                        },
                        "dateCreated": {
                          "type": "string"
                        },
                        "dateReleased": {
                          "type": "string",
                          "nullable": true
                        },
                        "deployCount": {
                          "type": "integer"
                        },
                        "firstEvent": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastCommit": {
                          "type": "object",
                          "nullable": true
                        },
                        "lastDeploy": {
                          "type": "object",
                          "nullable": true
                        },
                        "lastEvent": {
                          "type": "string",
                          "nullable": true
                        },
                        "newGroups": {
                          "type": "integer"
                        },
                        "owner": {
                          "type": "string",
                          "nullable": true
                        },
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ref": {
                          "type": "string",
                          "nullable": true
                        },
                        "shortVersion": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "feedback:branding": {
                          "type": "boolean"
                        },
                        "filters:blacklisted_ips": {
                          "type": "string"
                        },
                        "filters:error_messages": {
                          "type": "string"
                        },
                        "filters:releases": {
                          "type": "string"
                        },
                        "sentry:csp_ignored_sources": {
                          "type": "string"
                        },
                        "sentry:csp_ignored_sources_defaults": {
                          "type": "boolean"
                        },
                        "sentry:reprocessing_active": {
                          "type": "boolean"
                        }
                      }
                    },
                    "organization": {
                      "type": "object",
                      "required": [
                        "avatar",
                        "dateCreated",
                        "id",
                        "isEarlyAdopter",
                        "name",
                        "require2FA",
                        "slug",
                        "status"
                      ],
                      "properties": {
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "id": {
                          "type": "string"
                        },
                        "isEarlyAdopter": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "require2FA": {
                          "type": "boolean"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "required": ["id", "name"],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "plugins": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "assets",
                          "author",
                          "canDisable",
                          "contexts",
                          "description",
                          "doc",
                          "enabled",
                          "hasConfiguration",
                          "id",
                          "isTestable",
                          "metadata",
                          "name",
                          "resourceLinks",
                          "shortName",
                          "slug",
                          "status",
                          "type",
                          "version"
                        ],
                        "properties": {
                          "assets": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "author": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            }
                          },
                          "canDisable": {
                            "type": "boolean"
                          },
                          "contexts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "description": {
                            "type": "string"
                          },
                          "doc": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "hasConfiguration": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isTestable": {
                            "type": "boolean"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "name": {
                            "type": "string"
                          },
                          "resourceLinks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "shortName": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "processingIssues": {
                      "type": "integer"
                    },
                    "relayPiiConfig": {
                      "type": "string",
                      "nullable": true
                    },
                    "resolveAge": {
                      "type": "integer"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "securityToken": {
                      "type": "string"
                    },
                    "securityTokenHeader": {
                      "type": "string",
                      "nullable": true
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "storeCrashReports": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "subjectPrefix": {
                      "type": "string"
                    },
                    "subjectTemplate": {
                      "type": "string"
                    },
                    "team": {
                      "type": "object",
                      "required": ["id", "name", "slug"],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["id", "name", "slug"],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "verifySSL": {
                      "type": "boolean"
                    }
                  }
                },
                "example": {
                  "allowedDomains": ["*"],
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "color": "#3fbf7f",
                  "dataScrubber": true,
                  "dataScrubberDefaults": true,
                  "dateCreated": "2018-11-06T21:19:55.121Z",
                  "defaultEnvironment": null,
                  "digestsMaxDelay": 1800,
                  "digestsMinDelay": 300,
                  "features": [
                    "releases",
                    "sample-events",
                    "minidump",
                    "servicehooks",
                    "rate-limits",
                    "data-forwarding"
                  ],
                  "firstEvent": null,
                  "hasAccess": true,
                  "id": "2",
                  "isBookmarked": false,
                  "isInternal": false,
                  "isMember": true,
                  "isPublic": false,
                  "latestRelease": {
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:20:08.033Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": null,
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": null,
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Pump Station",
                        "slug": "pump-station"
                      }
                    ],
                    "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                    "shortVersion": "2.0rc2",
                    "url": null,
                    "version": "2.0rc2"
                  },
                  "name": "Pump Station",
                  "options": {
                    "feedback:branding": true,
                    "filters:blacklisted_ips": "",
                    "filters:error_messages": "",
                    "filters:releases": "",
                    "sentry:csp_ignored_sources": "",
                    "sentry:csp_ignored_sources_defaults": true,
                    "sentry:reprocessing_active": false
                  },
                  "organization": {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:19:55.101Z",
                    "id": "2",
                    "isEarlyAdopter": false,
                    "name": "The Interstellar Jurisdiction",
                    "require2FA": false,
                    "slug": "the-interstellar-jurisdiction",
                    "status": {
                      "id": "active",
                      "name": "active"
                    }
                  },
                  "platform": null,
                  "platforms": [],
                  "plugins": [
                    {
                      "assets": [],
                      "author": {
                        "name": "Sentry Team",
                        "url": "https://github.com/getsentry/sentry"
                      },
                      "canDisable": true,
                      "contexts": [],
                      "description": "Integrates web hooks.",
                      "doc": "",
                      "enabled": false,
                      "hasConfiguration": true,
                      "id": "webhooks",
                      "isTestable": true,
                      "metadata": {},
                      "name": "WebHooks",
                      "resourceLinks": [
                        {
                          "title": "Bug Tracker",
                          "url": "https://github.com/getsentry/sentry/issues"
                        },
                        {
                          "title": "Source",
                          "url": "https://github.com/getsentry/sentry"
                        }
                      ],
                      "shortName": "WebHooks",
                      "slug": "webhooks",
                      "status": "unknown",
                      "type": "notification",
                      "version": "9.1.0.dev0"
                    }
                  ],
                  "processingIssues": 0,
                  "relayPiiConfig": null,
                  "resolveAge": 0,
                  "safeFields": [],
                  "scrapeJavaScript": true,
                  "scrubIPAddresses": false,
                  "securityToken": "c3072787e20911e8a37988e9fe5cab71",
                  "securityTokenHeader": null,
                  "sensitiveFields": [],
                  "slug": "pump-station",
                  "status": "active",
                  "storeCrashReports": false,
                  "subjectPrefix": "[Sentry] ",
                  "subjectTemplate": "$shortID - $title",
                  "team": {
                    "id": "2",
                    "name": "Powerful Abolitionist",
                    "slug": "powerful-abolitionist"
                  },
                  "teams": [
                    {
                      "id": "2",
                      "name": "Powerful Abolitionist",
                      "slug": "powerful-abolitionist"
                    }
                  ],
                  "verifySSL": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "put": {
        "tags": ["Projects"],
        "description": "Update various attributes and configurable settings for the given project.  Only supplied values are updated.",
        "operationId": "Update a Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the project belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the project.",
                    "example": "Plane Proxy"
                  },
                  "slug": {
                    "type": "string",
                    "description": "The new slug for the project.",
                    "example": "plane-proxy"
                  },
                  "team": {
                    "type": "string",
                    "description": "The slug of new team for the project. Note, will be deprecated soon when multiple teams can have access to a project.",
                    "example": "the-inflated-philosophers"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The new platform for the project.",
                    "example": "javascript"
                  },
                  "isBookmarked": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the bookmark flag."
                  },
                  "digestsMinDelay": {
                    "type": "integer",
                    "description": ""
                  },
                  "digestsMaxDelay": {
                    "type": "integer",
                    "description": ""
                  }
                }
              },
              "example": {
                "name": "Plane Proxy",
                "platform": "javascript",
                "slug": "plane-proxy"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "allowedDomains",
                    "avatar",
                    "color",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultEnvironment",
                    "digestsMaxDelay",
                    "digestsMinDelay",
                    "features",
                    "firstEvent",
                    "hasAccess",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "latestRelease",
                    "name",
                    "options",
                    "organization",
                    "platform",
                    "platforms",
                    "processingIssues",
                    "relayPiiConfig",
                    "resolveAge",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "securityToken",
                    "securityTokenHeader",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "subjectPrefix",
                    "subjectTemplate",
                    "team",
                    "teams",
                    "verifySSL"
                  ],
                  "properties": {
                    "allowedDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "color": {
                      "type": "string"
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "defaultEnvironment": {
                      "type": "string",
                      "nullable": true
                    },
                    "digestsMaxDelay": {
                      "type": "integer"
                    },
                    "digestsMinDelay": {
                      "type": "integer"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "nullable": true
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "latestRelease": {
                      "type": "object",
                      "required": [
                        "authors",
                        "commitCount",
                        "data",
                        "dateCreated",
                        "dateReleased",
                        "deployCount",
                        "firstEvent",
                        "lastCommit",
                        "lastDeploy",
                        "lastEvent",
                        "newGroups",
                        "owner",
                        "projects",
                        "ref",
                        "shortVersion",
                        "url",
                        "version"
                      ],
                      "properties": {
                        "authors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "commitCount": {
                          "type": "integer"
                        },
                        "data": {
                          "type": "object"
                        },
                        "dateCreated": {
                          "type": "string"
                        },
                        "dateReleased": {
                          "type": "string",
                          "nullable": true
                        },
                        "deployCount": {
                          "type": "integer"
                        },
                        "firstEvent": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastCommit": {
                          "type": "object",
                          "nullable": true
                        },
                        "lastDeploy": {
                          "type": "object",
                          "nullable": true
                        },
                        "lastEvent": {
                          "type": "string",
                          "nullable": true
                        },
                        "newGroups": {
                          "type": "integer"
                        },
                        "owner": {
                          "type": "string",
                          "nullable": true
                        },
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ref": {
                          "type": "string",
                          "nullable": true
                        },
                        "shortVersion": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "feedback:branding": {
                          "type": "boolean"
                        },
                        "filters:blacklisted_ips": {
                          "type": "string"
                        },
                        "filters:error_messages": {
                          "type": "string"
                        },
                        "filters:releases": {
                          "type": "string"
                        },
                        "sentry:csp_ignored_sources": {
                          "type": "string"
                        },
                        "sentry:csp_ignored_sources_defaults": {
                          "type": "boolean"
                        },
                        "sentry:reprocessing_active": {
                          "type": "boolean"
                        }
                      }
                    },
                    "organization": {
                      "type": "object",
                      "required": [
                        "avatar",
                        "dateCreated",
                        "id",
                        "isEarlyAdopter",
                        "name",
                        "require2FA",
                        "slug",
                        "status"
                      ],
                      "properties": {
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "id": {
                          "type": "string"
                        },
                        "isEarlyAdopter": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "require2FA": {
                          "type": "boolean"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "required": ["id", "name"],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "plugins": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "assets",
                          "author",
                          "canDisable",
                          "contexts",
                          "description",
                          "doc",
                          "enabled",
                          "hasConfiguration",
                          "id",
                          "isTestable",
                          "metadata",
                          "name",
                          "resourceLinks",
                          "shortName",
                          "slug",
                          "status",
                          "type",
                          "version"
                        ],
                        "properties": {
                          "assets": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "author": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            }
                          },
                          "canDisable": {
                            "type": "boolean"
                          },
                          "contexts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "description": {
                            "type": "string"
                          },
                          "doc": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "hasConfiguration": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isTestable": {
                            "type": "boolean"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "name": {
                            "type": "string"
                          },
                          "resourceLinks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "shortName": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "processingIssues": {
                      "type": "integer"
                    },
                    "relayPiiConfig": {
                      "type": "string",
                      "nullable": true
                    },
                    "resolveAge": {
                      "type": "integer"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "securityToken": {
                      "type": "string"
                    },
                    "securityTokenHeader": {
                      "type": "string",
                      "nullable": true
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "storeCrashReports": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "subjectPrefix": {
                      "type": "string"
                    },
                    "subjectTemplate": {
                      "type": "string"
                    },
                    "team": {
                      "type": "object",
                      "required": ["id", "name", "slug"],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["id", "name", "slug"],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "verifySSL": {
                      "type": "boolean"
                    }
                  }
                },
                "example": {
                  "allowedDomains": [
                    "http://example.com",
                    "http://example.invalid"
                  ],
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "color": "#bf803f",
                  "dataScrubber": true,
                  "dataScrubberDefaults": true,
                  "dateCreated": "2018-11-06T21:20:19.624Z",
                  "defaultEnvironment": null,
                  "digestsMaxDelay": 1800,
                  "digestsMinDelay": 300,
                  "features": [
                    "releases",
                    "sample-events",
                    "minidump",
                    "servicehooks",
                    "rate-limits",
                    "data-forwarding"
                  ],
                  "firstEvent": null,
                  "hasAccess": true,
                  "id": "5",
                  "isBookmarked": false,
                  "isInternal": false,
                  "isMember": true,
                  "isPublic": false,
                  "latestRelease": {
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:20:19.645Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": "2018-11-06T21:20:19.718Z",
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": "2018-11-06T21:20:19.718Z",
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Plane Proxy",
                        "slug": "plane-proxy"
                      }
                    ],
                    "ref": null,
                    "shortVersion": "21c04bd",
                    "url": null,
                    "version": "21c04bd8fa23cfd85f5f5867f18efd2cf13247bc"
                  },
                  "name": "Plane Proxy",
                  "options": {
                    "feedback:branding": true,
                    "filters:blacklisted_ips": "",
                    "filters:error_messages": "",
                    "filters:releases": "",
                    "sentry:csp_ignored_sources": "",
                    "sentry:csp_ignored_sources_defaults": true,
                    "sentry:reprocessing_active": false
                  },
                  "organization": {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:19:55.101Z",
                    "id": "2",
                    "isEarlyAdopter": false,
                    "name": "The Interstellar Jurisdiction",
                    "require2FA": false,
                    "slug": "the-interstellar-jurisdiction",
                    "status": {
                      "id": "active",
                      "name": "active"
                    }
                  },
                  "platform": "javascript",
                  "platforms": [],
                  "plugins": [
                    {
                      "assets": [],
                      "author": {
                        "name": "Sentry Team",
                        "url": "https://github.com/getsentry/sentry"
                      },
                      "canDisable": true,
                      "contexts": [],
                      "description": "Integrates web hooks.",
                      "doc": "",
                      "enabled": false,
                      "hasConfiguration": true,
                      "id": "webhooks",
                      "isTestable": true,
                      "metadata": {},
                      "name": "WebHooks",
                      "resourceLinks": [
                        {
                          "title": "Bug Tracker",
                          "url": "https://github.com/getsentry/sentry/issues"
                        },
                        {
                          "title": "Source",
                          "url": "https://github.com/getsentry/sentry"
                        }
                      ],
                      "shortName": "WebHooks",
                      "slug": "webhooks",
                      "status": "unknown",
                      "type": "notification",
                      "version": "9.1.0.dev0"
                    }
                  ],
                  "processingIssues": 0,
                  "relayPiiConfig": null,
                  "resolveAge": 0,
                  "safeFields": [],
                  "scrapeJavaScript": true,
                  "scrubIPAddresses": false,
                  "securityToken": "c55a4bdce20911e88eed88e9fe5cab71",
                  "securityTokenHeader": null,
                  "sensitiveFields": [],
                  "slug": "plane-proxy",
                  "status": "active",
                  "storeCrashReports": false,
                  "subjectPrefix": "[Sentry] ",
                  "subjectTemplate": "$shortID - $title",
                  "team": {
                    "id": "2",
                    "name": "Powerful Abolitionist",
                    "slug": "powerful-abolitionist"
                  },
                  "teams": [
                    {
                      "id": "2",
                      "name": "Powerful Abolitionist",
                      "slug": "powerful-abolitionist"
                    }
                  ],
                  "verifySSL": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      },
      "delete": {
        "tags": ["Projects"],
        "description": "Schedules a project for deletion.\n\nDeletion happens asynchronously and therefore is not immediate.\nHowever once deletion has begun the state of a project changes and\nwill be hidden from most public views.",
        "operationId": "Delete a Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the project belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "security": [
          {
            "auth_token": ["project:admin"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/files/dsyms/": {
      "get": {
        "tags": ["Projects"],
        "description": "Retrieve a list of debug information files for a given project.",
        "operationId": "List a Project's Debug Information Files",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the file belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to list the DIFs of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "post": {
        "tags": ["Projects"],
        "description": "Upload a new debug information file for the given release.\n\nUnlike other API requests, files must be uploaded using the\ntraditional multipart/form-data content-type.\n\nThe file uploaded is a zip archive of an Apple .dSYM folder which\ncontains the individual debug images.  Uploading through this endpoint\nwill create different files for the contained images.",
        "operationId": "Upload a New File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the project belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to upload a file to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The multipart encoded file.",
                    "example": "debug.zip"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      },
      "delete": {
        "tags": ["Projects"],
        "description": "Delete a debug information file for a given project.",
        "operationId": "Delete a Specific Project's Debug Information File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the file belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to delete the DIF.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the DIF to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:admin"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/users/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return a list of users seen within this project.",
        "operationId": "List a Project's Users",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Limit results to users matching the given query. Prefixes should be used to suggest the field to match on: `id`, `email`, `username`, `ip`. For example, `query=email:foo@example.com`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["dateCreated", "id", "username", "email"],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string",
                        "nullable": true
                      },
                      "email": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2020-07-16T00:50:40.342174Z",
                    "id": "21077833046",
                    "username": "sentry",
                    "email": "sentry@example.com"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/tags/{key}/values/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return a list of values associated with this key.  The `query`\nparameter can be used to to perform a \"contains\" match on\nvalues.",
        "operationId": "List a Tag's Values",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The tag key to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["name"],
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "mint_choco"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/stats/": {
      "get": {
        "tags": ["Projects"],
        "summary": "Caution: this endpoint may change in the future without notice.",
        "description": "Return a set of points representing a normalized timestamp and the\nnumber of events seen in the period.\n\nQuery ranges are limited to Sentry's configured time-series resolutions.",
        "operationId": "Retrieve Event Counts for a Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stat",
            "in": "query",
            "description": "The name of the stat to query `(\"received\", \"rejected\", \"blacklisted\", \"generated\")`.",
            "schema": {
              "type": "string",
              "enum": ["received", "rejected", "blacklisted", "generated"]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "A timestamp to set the start of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "A timestamp to set the end of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "An explicit resolution to search for (one of `10s`, `1h`, and `1d`).",
            "schema": {
              "type": "string",
              "enum": ["10s", "1h", "1d"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": [
                  [1541455200, 1184],
                  [1541458800, 1410],
                  [1541462400, 1440],
                  [1541466000, 1682],
                  [1541469600, 1203],
                  [1541473200, 497],
                  [1541476800, 661],
                  [1541480400, 1481],
                  [1541484000, 678],
                  [1541487600, 1857],
                  [1541491200, 819],
                  [1541494800, 1013],
                  [1541498400, 1883],
                  [1541502000, 1450],
                  [1541505600, 1102],
                  [1541509200, 1317],
                  [1541512800, 1017],
                  [1541516400, 813],
                  [1541520000, 1189],
                  [1541523600, 496],
                  [1541527200, 1936],
                  [1541530800, 1405],
                  [1541534400, 617],
                  [1541538000, 1533]
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/user-feedback/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return a list of user feedback items within this project.",
        "operationId": "List a Project's User Feedback",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "comments",
                      "dateCreated",
                      "email",
                      "event",
                      "eventID",
                      "id",
                      "issue",
                      "name",
                      "user"
                    ],
                    "properties": {
                      "comments": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "event": {
                        "type": "object",
                        "properties": {
                          "eventID": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "eventID": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "issue": {
                        "type": "object",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "user": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "comments": "It broke!",
                    "dateCreated": "2018-11-06T21:20:11.468Z",
                    "email": "jane@example.com",
                    "event": {
                      "eventID": "14bad9a2e3774046977a21440ddb39b2",
                      "id": null
                    },
                    "eventID": "14bad9a2e3774046977a21440ddb39b2",
                    "id": "1",
                    "issue": null,
                    "name": "Jane Smith",
                    "user": null
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "post": {
        "tags": ["Projects"],
        "description": "Submit and associate user feedback with an issue.\n\nFeedback must be received by the server no more than 30 minutes after the event was saved.\n\nAdditionally, within 5 minutes of submitting feedback it may also be overwritten. This is useful in situations where you may need to retry sending a request due to network failures.\n\nIf feedback is rejected due to a mutability threshold, a 409 status code will be returned.\n\nNote: Feedback may be submitted with DSN authentication (see auth documentation).",
        "operationId": "Submit User Feedback",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["event_id", "name", "email", "comments"],
                "type": "object",
                "properties": {
                  "event_id": {
                    "type": "string",
                    "description": "The event ID.",
                    "example": "14bad9a2e3774046977a21440ddb39b2"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name.",
                    "example": "Jane Smith"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address.",
                    "example": "jane@example.com"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments supplied by user.",
                    "example": "It broke!"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "comments",
                    "dateCreated",
                    "email",
                    "event",
                    "eventID",
                    "id",
                    "issue",
                    "name",
                    "user"
                  ],
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "eventID": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "eventID": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "issue": {
                      "type": "object",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "comments": "It broke!",
                  "dateCreated": "2018-11-06T21:20:11.468Z",
                  "email": "jane@example.com",
                  "event": {
                    "eventID": "14bad9a2e3774046977a21440ddb39b2",
                    "id": null
                  },
                  "eventID": "14bad9a2e3774046977a21440ddb39b2",
                  "id": "1",
                  "issue": null,
                  "name": "Jane Smith",
                  "user": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          },
          {
            "dsn": []
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/keys/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return a list of client keys bound to a project.",
        "operationId": "List a Project's Client Keys",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "browserSdk",
                      "browserSdkVersion",
                      "dateCreated",
                      "dsn",
                      "id",
                      "isActive",
                      "label",
                      "name",
                      "projectId",
                      "public",
                      "rateLimit",
                      "secret"
                    ],
                    "properties": {
                      "browserSdk": {
                        "type": "object",
                        "properties": {
                          "choices": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "browserSdkVersion": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string"
                      },
                      "dsn": {
                        "type": "object",
                        "required": [
                          "cdn",
                          "csp",
                          "minidump",
                          "public",
                          "secret",
                          "security"
                        ],
                        "properties": {
                          "cdn": {
                            "type": "string"
                          },
                          "csp": {
                            "type": "string"
                          },
                          "minidump": {
                            "type": "string"
                          },
                          "public": {
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "security": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "label": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "projectId": {
                        "type": "integer"
                      },
                      "public": {
                        "type": "string"
                      },
                      "rateLimit": {
                        "type": "string",
                        "nullable": true
                      },
                      "secret": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "browserSdk": {
                      "choices": [
                        ["latest", "latest"],
                        ["4.x", "4.x"]
                      ]
                    },
                    "browserSdkVersion": "4.x",
                    "dateCreated": "2018-11-06T21:20:07.941Z",
                    "dsn": {
                      "cdn": "https://sentry.io/js-sdk-loader/cec9dfceb0b74c1c9a5e3c135585f364.min.js",
                      "csp": "https://sentry.io/api/2/csp-report/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364",
                      "minidump": "https://sentry.io/api/2/minidump/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364",
                      "public": "https://cec9dfceb0b74c1c9a5e3c135585f364@sentry.io/2",
                      "secret": "https://cec9dfceb0b74c1c9a5e3c135585f364:4f6a592349e249c5906918393766718d@sentry.io/2",
                      "security": "https://sentry.io/api/2/security/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364"
                    },
                    "id": "cec9dfceb0b74c1c9a5e3c135585f364",
                    "isActive": true,
                    "label": "Fabulous Key",
                    "name": "Fabulous Key",
                    "projectId": 2,
                    "public": "cec9dfceb0b74c1c9a5e3c135585f364",
                    "rateLimit": null,
                    "secret": "4f6a592349e249c5906918393766718d"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "post": {
        "tags": ["Projects"],
        "description": "Create a new client key bound to a project.  The key's secret and public key are generated by the server.",
        "operationId": "Create a New Client Key",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name for the new key.",
                    "example": "Fabulous Key"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "browserSdk",
                    "browserSdkVersion",
                    "dateCreated",
                    "dsn",
                    "id",
                    "isActive",
                    "label",
                    "name",
                    "projectId",
                    "public",
                    "rateLimit",
                    "secret"
                  ],
                  "properties": {
                    "browserSdk": {
                      "type": "object",
                      "properties": {
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "browserSdkVersion": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dsn": {
                      "type": "object",
                      "required": [
                        "cdn",
                        "csp",
                        "minidump",
                        "public",
                        "secret",
                        "security"
                      ],
                      "properties": {
                        "cdn": {
                          "type": "string"
                        },
                        "csp": {
                          "type": "string"
                        },
                        "minidump": {
                          "type": "string"
                        },
                        "public": {
                          "type": "string"
                        },
                        "secret": {
                          "type": "string"
                        },
                        "security": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "label": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "public": {
                      "type": "string"
                    },
                    "rateLimit": {
                      "type": "string",
                      "nullable": true
                    },
                    "secret": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "browserSdk": {
                    "choices": [
                      ["latest", "latest"],
                      ["4.x", "4.x"]
                    ]
                  },
                  "browserSdkVersion": "4.x",
                  "dateCreated": "2018-11-06T21:20:07.941Z",
                  "dsn": {
                    "cdn": "https://sentry.io/js-sdk-loader/cec9dfceb0b74c1c9a5e3c135585f364.min.js",
                    "csp": "https://sentry.io/api/2/csp-report/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364",
                    "minidump": "https://sentry.io/api/2/minidump/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364",
                    "public": "https://cec9dfceb0b74c1c9a5e3c135585f364@sentry.io/2",
                    "secret": "https://cec9dfceb0b74c1c9a5e3c135585f364:4f6a592349e249c5906918393766718d@sentry.io/2",
                    "security": "https://sentry.io/api/2/security/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364"
                  },
                  "id": "cec9dfceb0b74c1c9a5e3c135585f364",
                  "isActive": true,
                  "label": "Fabulous Key",
                  "name": "Fabulous Key",
                  "projectId": 2,
                  "public": "cec9dfceb0b74c1c9a5e3c135585f364",
                  "rateLimit": null,
                  "secret": "4f6a592349e249c5906918393766718d"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/keys/{key_id}/": {
      "put": {
        "tags": ["Projects"],
        "description": "Update a client key.  This can be used to rename a key.",
        "operationId": "Update a Client Key",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "The ID of the key to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the client key.",
                    "example": "Fluffy Key"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "browserSdk",
                    "browserSdkVersion",
                    "dateCreated",
                    "dsn",
                    "id",
                    "isActive",
                    "label",
                    "name",
                    "projectId",
                    "public",
                    "rateLimit",
                    "secret"
                  ],
                  "properties": {
                    "browserSdk": {
                      "type": "object",
                      "properties": {
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "browserSdkVersion": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dsn": {
                      "type": "object",
                      "required": [
                        "cdn",
                        "csp",
                        "minidump",
                        "public",
                        "secret",
                        "security"
                      ],
                      "properties": {
                        "cdn": {
                          "type": "string"
                        },
                        "csp": {
                          "type": "string"
                        },
                        "minidump": {
                          "type": "string"
                        },
                        "public": {
                          "type": "string"
                        },
                        "secret": {
                          "type": "string"
                        },
                        "security": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "label": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "public": {
                      "type": "string"
                    },
                    "rateLimit": {
                      "type": "string",
                      "nullable": true
                    },
                    "secret": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "browserSdk": {
                    "choices": [
                      ["latest", "latest"],
                      ["4.x", "4.x"]
                    ]
                  },
                  "browserSdkVersion": "4.x",
                  "dateCreated": "2018-11-06T21:20:07.941Z",
                  "dsn": {
                    "cdn": "https://sentry.io/js-sdk-loader/cec9dfceb0b74c1c9a5e3c135585f364.min.js",
                    "csp": "https://sentry.io/api/2/csp-report/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364",
                    "minidump": "https://sentry.io/api/2/minidump/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364",
                    "public": "https://cec9dfceb0b74c1c9a5e3c135585f364@sentry.io/2",
                    "secret": "https://cec9dfceb0b74c1c9a5e3c135585f364:4f6a592349e249c5906918393766718d@sentry.io/2",
                    "security": "https://sentry.io/api/2/security/?sentry_key=cec9dfceb0b74c1c9a5e3c135585f364"
                  },
                  "id": "cec9dfceb0b74c1c9a5e3c135585f364",
                  "isActive": true,
                  "label": "Fluffy Key",
                  "name": "Fluffy Key",
                  "projectId": 2,
                  "public": "cec9dfceb0b74c1c9a5e3c135585f364",
                  "rateLimit": null,
                  "secret": "4f6a592349e249c5906918393766718d"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      },
      "delete": {
        "tags": ["Projects"],
        "description": "Delete a client key.",
        "operationId": "Delete a Client Key",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "The ID of the key to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "security": [
          {
            "auth_token": ["project:admin"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/hooks/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return a list of service hooks bound to a project.",
        "operationId": "List a Project's Service Hooks",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "events",
                      "id",
                      "secret",
                      "status",
                      "url"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "secret": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:20:08.143Z",
                    "events": ["event.alert", "event.created"],
                    "id": "4f9d73e63b7144ecb8944c41620a090b",
                    "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                    "status": "active",
                    "url": "https://example.com/sentry-hook"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "You do not have that feature enabled"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "post": {
        "tags": ["Projects"],
        "description": "Register a new service hook on a project.\n\nEvents include:\n\n- event.alert: An alert is generated for an event (via rules).\n- event.created: A new event has been processed.\n\nThis endpoint requires the 'servicehooks' feature to be enabled for your project.",
        "operationId": "Register a New Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["url", "events"],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL for the webhook.",
                    "example": "https://example.com/sentry-hook"
                  },
                  "events": {
                    "type": "array",
                    "description": "The events to subscribe to.",
                    "example": ["event.alert", "event.created"],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "dateCreated",
                    "events",
                    "id",
                    "secret",
                    "status",
                    "url"
                  ],
                  "properties": {
                    "dateCreated": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:08.143Z",
                  "events": ["event.alert", "event.created"],
                  "id": "4f9d73e63b7144ecb8944c41620a090b",
                  "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                  "status": "active",
                  "url": "https://example.com/sentry-hook"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "You do not have that feature enabled"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/hooks/{hook_id}/": {
      "get": {
        "tags": ["Projects"],
        "description": "Return a service hook bound to a project.",
        "operationId": "Retrieve a Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hook_id",
            "in": "path",
            "description": "The GUID of the service hook.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "dateCreated",
                    "events",
                    "id",
                    "secret",
                    "status",
                    "url"
                  ],
                  "properties": {
                    "dateCreated": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:08.143Z",
                  "events": ["event.alert", "event.created"],
                  "id": "4f9d73e63b7144ecb8944c41620a090b",
                  "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                  "status": "active",
                  "url": "https://example.com/sentry-hook"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "put": {
        "tags": ["Projects"],
        "description": "Update a service hook.",
        "operationId": "Update a Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hook_id",
            "in": "path",
            "description": "The GUID of the service hook.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["url", "events"],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL for the webhook.",
                    "example": "https://example.com/sentry-hook"
                  },
                  "events": {
                    "type": "array",
                    "description": "The events to subscribe to.",
                    "example": ["event.alert", "event.created"],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "dateCreated",
                    "events",
                    "id",
                    "secret",
                    "status",
                    "url"
                  ],
                  "properties": {
                    "dateCreated": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:08.143Z",
                  "events": ["event.alert", "event.created"],
                  "id": "4f9d73e63b7144ecb8944c41620a090b",
                  "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                  "status": "active",
                  "url": "https://example.com/sentry-hook"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      },
      "delete": {
        "tags": ["Projects"],
        "description": "Remove a service hook.",
        "operationId": "Remove a Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hook_id",
            "in": "path",
            "description": "The GUID of the service hook.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:admin"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/events/{event_id}/": {
      "get": {
        "tags": ["Events"],
        "description": "Return details on an individual event.",
        "operationId": "Retrieve an Event for a Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the event belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "The ID of the event to retrieve (either the numeric primary-key or the hexadecimal ID as reported by the client)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "eventID",
                    "dist",
                    "userReport",
                    "previousEventID",
                    "message",
                    "id",
                    "size",
                    "errors",
                    "platform",
                    "nextEventID",
                    "type",
                    "metadata",
                    "tags",
                    "dateCreated",
                    "dateReceived",
                    "user",
                    "entries",
                    "packages",
                    "sdk",
                    "_meta",
                    "contexts",
                    "fingerprints",
                    "context",
                    "release",
                    "groupID",
                    "title"
                  ],
                  "properties": {
                    "eventID": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "userReport": {
                      "type": "object",
                      "nullable": true
                    },
                    "previousEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string"
                    },
                    "nextEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": ["type", "value"],
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": ["title"],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "_meta": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dateReceived": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "username",
                        "name",
                        "ip_address",
                        "email",
                        "data",
                        "id"
                      ],
                      "properties": {
                        "username": {
                          "type": "string",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "ip_address": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "data": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "isStaff": {
                              "type": "boolean"
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": ["values"],
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "category",
                                        "level",
                                        "event_id",
                                        "timestamp",
                                        "data",
                                        "message",
                                        "type"
                                      ],
                                      "properties": {
                                        "category": {
                                          "type": "string"
                                        },
                                        "level": {
                                          "type": "string"
                                        },
                                        "event_id": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "message": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "fragment",
                                  "cookies",
                                  "inferredContentType",
                                  "env",
                                  "headers",
                                  "url",
                                  "query",
                                  "data",
                                  "method"
                                ],
                                "properties": {
                                  "fragment": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "cookies": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "inferredContentType": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "env": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "ENV": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "query": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "data": {
                                    "type": "object",
                                    "nullable": true
                                  },
                                  "method": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": ["formatted"],
                                "properties": {
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "excOmitted",
                                  "hasSystemFrames",
                                  "values"
                                ],
                                "properties": {
                                  "excOmitted": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "hasSystemFrames": {
                                    "type": "boolean"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "stacktrace",
                                        "module",
                                        "rawStacktrace",
                                        "mechanism",
                                        "threadId",
                                        "value",
                                        "type"
                                      ],
                                      "properties": {
                                        "stacktrace": {
                                          "type": "object",
                                          "nullable": true,
                                          "required": [
                                            "frames",
                                            "framesOmitted",
                                            "registers",
                                            "hasSystemFrames"
                                          ],
                                          "properties": {
                                            "frames": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "function",
                                                  "errors",
                                                  "colNo",
                                                  "vars",
                                                  "package",
                                                  "absPath",
                                                  "inApp",
                                                  "lineNo",
                                                  "module",
                                                  "filename",
                                                  "platform",
                                                  "instructionAddr",
                                                  "context",
                                                  "symbolAddr",
                                                  "trust",
                                                  "symbol"
                                                ],
                                                "properties": {
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "errors": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "colNo": {
                                                    "type": "integer",
                                                    "nullable": true
                                                  },
                                                  "vars": {
                                                    "type": "object",
                                                    "nullable": true
                                                  },
                                                  "package": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "absPath": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "inApp": {
                                                    "type": "boolean"
                                                  },
                                                  "lineNo": {
                                                    "type": "integer"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "type": "string"
                                                  },
                                                  "platform": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "instructionAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "context": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "symbolAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "trust": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "symbol": {
                                                    "type": "string",
                                                    "nullable": true
                                                  }
                                                }
                                              }
                                            },
                                            "framesOmitted": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "registers": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "hasSystemFrames": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "module": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "rawStacktrace": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "mechanism": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "handled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "threadId": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "packages": {
                      "type": "object"
                    },
                    "sdk": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_meta": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "string",
                          "nullable": true
                        },
                        "context": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "object"
                        },
                        "contexts": {
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        },
                        "packages": {
                          "type": "string",
                          "nullable": true
                        },
                        "tags": {
                          "type": "object"
                        },
                        "sdk": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "contexts": {
                      "type": "object"
                    },
                    "fingerprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object"
                    },
                    "release": {
                      "type": "object",
                      "required": [
                        "authors",
                        "commitCount",
                        "data",
                        "dateCreated",
                        "dateReleased",
                        "deployCount",
                        "firstEvent",
                        "lastCommit",
                        "lastDeploy",
                        "lastEvent",
                        "newGroups",
                        "owner",
                        "projects",
                        "ref",
                        "shortVersion",
                        "version",
                        "url"
                      ],
                      "properties": {
                        "authors": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "commitCount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "data": {
                          "type": "object"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dateReleased": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "deployCount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "firstEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "lastCommit": {
                          "type": "object",
                          "nullable": true
                        },
                        "lastDeploy": {
                          "type": "object",
                          "required": [
                            "environment",
                            "name",
                            "dateStarted",
                            "dateFinished",
                            "url",
                            "id"
                          ],
                          "properties": {
                            "environment": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "dateStarted": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateFinished": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "lastEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "newGroups": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "owner": {
                          "type": "object",
                          "nullable": true
                        },
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ref": {
                          "type": "string",
                          "nullable": true
                        },
                        "shortVersion": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                  "dist": null,
                  "userReport": null,
                  "previousEventID": null,
                  "message": "",
                  "title": "This is an example Python exception",
                  "id": "9999aaafcc8b46d797c23c6077c6ff01",
                  "size": 107762,
                  "errors": [
                    {
                      "data": {
                        "column": 8,
                        "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                        "row": 15
                      },
                      "message": "Invalid location in sourcemap",
                      "type": "js_invalid_sourcemap_location"
                    }
                  ],
                  "platform": "javascript",
                  "nextEventID": "99f9e199e9a74a14bfef6196ad741619",
                  "type": "error",
                  "metadata": {
                    "type": "ForbiddenError",
                    "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                  },
                  "tags": [
                    {
                      "value": "Chrome 83.0.4103",
                      "key": "browser",
                      "_meta": null
                    },
                    {
                      "value": "Chrome",
                      "key": "browser.name",
                      "_meta": null
                    },
                    {
                      "value": "prod",
                      "key": "environment",
                      "_meta": null
                    },
                    {
                      "value": "yes",
                      "key": "handled",
                      "_meta": null
                    },
                    {
                      "value": "error",
                      "key": "level",
                      "_meta": null
                    },
                    {
                      "value": "generic",
                      "key": "mechanism",
                      "_meta": null
                    }
                  ],
                  "dateCreated": "2020-06-17T22:26:56.098086Z",
                  "dateReceived": "2020-06-17T22:26:56.428721Z",
                  "user": {
                    "username": null,
                    "name": "Hell Boy",
                    "ip_address": "192.168.1.1",
                    "email": "hell@boy.cat",
                    "data": {
                      "isStaff": false
                    },
                    "id": "550747"
                  },
                  "entries": [
                    {
                      "type": "exception",
                      "data": {
                        "values": [
                          {
                            "stacktrace": {
                              "frames": [
                                {
                                  "function": "ignoreOnError",
                                  "errors": null,
                                  "colNo": 23,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "inApp": false,
                                  "lineNo": 71,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [66, "            }"],
                                    [
                                      67,
                                      "            // Attempt to invoke user-land function"
                                    ],
                                    [
                                      68,
                                      "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                    ],
                                    [
                                      69,
                                      "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                    ],
                                    [
                                      70,
                                      "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                    ],
                                    [
                                      71,
                                      "            return fn.apply(this, wrappedArguments);"
                                    ],
                                    [
                                      72,
                                      "            // tslint:enable:no-unsafe-any"
                                    ],
                                    [73, "        }"],
                                    [74, "        catch (ex) {"],
                                    [75, "            ignoreNextOnError();"],
                                    [
                                      76,
                                      "            withScope(function (scope) {"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": "apply",
                                  "errors": null,
                                  "colNo": 24,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "inApp": false,
                                  "lineNo": 74,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [69, "     */"],
                                    [
                                      70,
                                      "    triggerAsync: function triggerAsync() {"
                                    ],
                                    [71, "        var args = arguments,"],
                                    [72, "            me = this;"],
                                    [73, "        _.nextTick(function () {"],
                                    [
                                      74,
                                      "            me.trigger.apply(me, args);"
                                    ],
                                    [75, "        });"],
                                    [76, "    },"],
                                    [77, ""],
                                    [78, "    /**"],
                                    [
                                      79,
                                      "     * Wraps the trigger mechanism with a deferral function."
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "module": null,
                            "rawStacktrace": {
                              "frames": [
                                {
                                  "function": "a",
                                  "errors": null,
                                  "colNo": 88800,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 81,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [76, "/*!"],
                                    [77, "  Copyright (c) 2018 Jed Watson."],
                                    [
                                      78,
                                      "  Licensed under the MIT License (MIT), see"
                                    ],
                                    [
                                      79,
                                      "  http://jedwatson.github.io/react-select"
                                    ],
                                    [80, "*/"],
                                    [
                                      81,
                                      "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                    ],
                                    [82, "/*!"],
                                    [83, " * JavaScript Cookie v2.2.1"],
                                    [
                                      84,
                                      " * https://github.com/js-cookie/js-cookie"
                                    ],
                                    [85, " *"],
                                    [
                                      86,
                                      " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": null,
                                  "errors": null,
                                  "colNo": 149484,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 119,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [114, "/* @license"],
                                    [115, "Papa Parse"],
                                    [116, "v5.2.0"],
                                    [117, "https://github.com/mholt/PapaParse"],
                                    [118, "License: MIT"],
                                    [
                                      119,
                                      "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                    ],
                                    [120, "/**!"],
                                    [
                                      121,
                                      " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                    ],
                                    [122, " * @version 1.16.1"],
                                    [123, " * @license"],
                                    [
                                      124,
                                      " * Copyright (c) 2016 Federico Zivolo and contributors"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "mechanism": {
                              "type": "generic",
                              "handled": true
                            },
                            "threadId": null,
                            "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                            "type": "ForbiddenError"
                          }
                        ],
                        "excOmitted": null,
                        "hasSystemFrames": true
                      }
                    },
                    {
                      "type": "breadcrumbs",
                      "data": {
                        "values": [
                          {
                            "category": "tracing",
                            "level": "debug",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.266586Z",
                            "data": null,
                            "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                            "type": "debug"
                          },
                          {
                            "category": "xhr",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.619446Z",
                            "data": {
                              "url": "/api/0/internal/health/",
                              "status_code": 200,
                              "method": "GET"
                            },
                            "message": null,
                            "type": "http"
                          },
                          {
                            "category": "sentry.transaction",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.945016Z",
                            "data": null,
                            "message": "7787a027f3fb46c985aaa2287b3f4d09",
                            "type": "default"
                          }
                        ]
                      }
                    },
                    {
                      "type": "request",
                      "data": {
                        "fragment": null,
                        "cookies": [],
                        "inferredContentType": null,
                        "env": null,
                        "headers": [
                          [
                            "User-Agent",
                            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                          ]
                        ],
                        "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                        "query": [["project", "5236886"]],
                        "data": null,
                        "method": null
                      }
                    }
                  ],
                  "packages": {},
                  "sdk": {
                    "version": "5.17.0",
                    "name": "sentry.javascript.browser"
                  },
                  "_meta": {
                    "user": null,
                    "context": null,
                    "entries": {},
                    "contexts": null,
                    "message": null,
                    "packages": null,
                    "tags": {},
                    "sdk": null
                  },
                  "contexts": {
                    "ForbiddenError": {
                      "status": 403,
                      "statusText": "Forbidden",
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "type": "default"
                    },
                    "browser": {
                      "version": "83.0.4103",
                      "type": "browser",
                      "name": "Chrome"
                    },
                    "os": {
                      "version": "10",
                      "type": "os",
                      "name": "Windows"
                    },
                    "trace": {
                      "span_id": "83db1ad17e67dfe7",
                      "type": "trace",
                      "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                      "op": "navigation"
                    },
                    "organization": {
                      "type": "default",
                      "id": "323938",
                      "slug": "hellboy-meowmeow"
                    }
                  },
                  "fingerprints": ["fbe908cc63d63ea9763fd84cb6bad177"],
                  "context": {
                    "resp": {
                      "status": 403,
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "name": "ForbiddenError",
                      "statusText": "Forbidden",
                      "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                      "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                    }
                  },
                  "release": {
                    "dateReleased": "2020-06-17T19:21:02.186004Z",
                    "newGroups": 4,
                    "commitCount": 11,
                    "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                    "data": {},
                    "lastDeploy": {
                      "name": "b65bc521378269d3eaefdc964f8ef56621414943 to prod",
                      "url": null,
                      "environment": "prod",
                      "dateStarted": null,
                      "dateFinished": "2020-06-17T19:20:55.641748Z",
                      "id": "6883490"
                    },
                    "deployCount": 1,
                    "dateCreated": "2020-06-17T18:45:31.042157Z",
                    "lastEvent": "2020-07-08T21:21:21Z",
                    "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "firstEvent": "2020-06-17T22:25:14Z",
                    "lastCommit": {
                      "repository": {
                        "status": "active",
                        "integrationId": "2933",
                        "externalSlug": "getsentry/getsentry",
                        "name": "getsentry/getsentry",
                        "provider": {
                          "id": "integrations:github",
                          "name": "GitHub"
                        },
                        "url": "https://github.com/getsentry/getsentry",
                        "id": "2",
                        "dateCreated": "2016-10-10T21:36:45.373994Z"
                      },
                      "releases": [
                        {
                          "dateReleased": "2020-06-23T13:26:18.427090Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/staging/2077/",
                          "dateCreated": "2020-06-23T13:22:50.420265Z",
                          "version": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "shortVersion": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "ref": "perf/source-maps-test"
                        },
                        {
                          "dateReleased": "2020-06-17T19:21:02.186004Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                          "dateCreated": "2020-06-17T18:45:31.042157Z",
                          "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "ref": "master"
                        }
                      ],
                      "dateCreated": "2020-06-17T18:43:37Z",
                      "message": "feat(billing): Get a lot of money",
                      "id": "b65bc521378269d3eaefdc964f8ef56621414943"
                    },
                    "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "authors": [
                      {
                        "username": "a37a1b4520ce46cea147ae2885a4e7e7",
                        "lastLogin": "2020-09-14T22:34:55.550640Z",
                        "isSuperuser": false,
                        "isManaged": false,
                        "experiments": {},
                        "lastActive": "2020-09-15T22:13:20.503880Z",
                        "isStaff": false,
                        "id": "655784",
                        "isActive": true,
                        "has2fa": false,
                        "name": "hell.boy@sentry.io",
                        "avatarUrl": "https://secure.gravatar.com/avatar/eaa22e25b3a984659420831a77e4874e?s=32&d=mm",
                        "dateJoined": "2020-04-20T16:21:25.365772Z",
                        "emails": [
                          {
                            "is_verified": false,
                            "id": "784574",
                            "email": "hellboy@gmail.com"
                          },
                          {
                            "is_verified": true,
                            "id": "749185",
                            "email": "hell.boy@sentry.io"
                          }
                        ],
                        "avatar": {
                          "avatarUuid": null,
                          "avatarType": "letter_avatar"
                        },
                        "hasPasswordAuth": false,
                        "email": "hell.boy@sentry.io"
                      }
                    ],
                    "owner": null,
                    "ref": "master",
                    "projects": [
                      {
                        "name": "Sentry CSP",
                        "slug": "sentry-csp"
                      },
                      {
                        "name": "Backend",
                        "slug": "sentry"
                      },
                      {
                        "name": "Frontend",
                        "slug": "javascript"
                      }
                    ]
                  },
                  "groupID": "1341191803"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/events/": {
      "get": {
        "tags": ["Events"],
        "description": "Return a list of events bound to a project.",
        "operationId": "List a Project's Events",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the groups belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the groups belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full",
            "in": "query",
            "description": "If this is set to true then the event payload will include the full event body, including the stacktrace. \nSet to true to enable.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "eventID",
                      "tags",
                      "dateCreated",
                      "user",
                      "message",
                      "id",
                      "platform",
                      "event.type",
                      "groupID",
                      "title"
                    ],
                    "properties": {
                      "eventID": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "dateCreated": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "username",
                          "name",
                          "ip_address",
                          "email",
                          "data",
                          "id"
                        ],
                        "properties": {
                          "username": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "ip_address": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "data": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "isStaff": {
                                "type": "boolean"
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "message": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string"
                      },
                      "event.type": {
                        "type": "string"
                      },
                      "groupID": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "eventID": "9fac2ceed9344f2bbfdd1fdacb0ed9b1",
                    "tags": [
                      {
                        "key": "browser",
                        "value": "Chrome 60.0"
                      },
                      {
                        "key": "device",
                        "value": "Other"
                      },
                      {
                        "key": "environment",
                        "value": "production"
                      },
                      {
                        "value": "fatal",
                        "key": "level"
                      },
                      {
                        "key": "os",
                        "value": "Mac OS X 10.12.6"
                      },
                      {
                        "value": "CPython 2.7.16",
                        "key": "runtime"
                      },
                      {
                        "key": "release",
                        "value": "17642328ead24b51867165985996d04b29310337"
                      },
                      {
                        "key": "server_name",
                        "value": "web1.example.com"
                      }
                    ],
                    "dateCreated": "2020-09-11T17:46:36Z",
                    "user": null,
                    "message": "",
                    "title": "This is an example Python exception",
                    "id": "dfb1a2d057194e76a4186cc8a5271553",
                    "platform": "python",
                    "event.type": "error",
                    "groupID": "1889724436"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/issues/": {
      "get": {
        "tags": ["Events"],
        "description": "Return a list of issues (groups) bound to a project.  All parameters are supplied as query string parameters. \n\n A default query of ``is:unresolved`` is applied. To return results with other statuses send an new query value (i.e. ``?query=`` for all results).\n\nThe ``statsPeriod`` parameter can be used to select the timeline stats which should be present. Possible values are: ``\"\"`` (disable),``\"24h\"``, ``\"14d\"``",
        "operationId": "List a Project's Issues",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statsPeriod",
            "in": "query",
            "description": "An optional stat period (can be one of `\"24h\"`, `\"14d\"`, and `\"\"`).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortIdLookup",
            "in": "query",
            "description": "If this is set to true then short IDs are looked up by this function as well. This can cause the return value of the function to return an event issue of a different project which is why this is an opt-in. Set to 1 to enable.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "An optional Sentry structured search query. If not provided an implied `\"is:unresolved\"` is assumed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "lastSeen",
                      "numComments",
                      "userCount",
                      "culprit",
                      "title",
                      "id",
                      "assignedTo",
                      "logger",
                      "stats",
                      "type",
                      "annotations",
                      "metadata",
                      "status",
                      "subscriptionDetails",
                      "isPublic",
                      "hasSeen",
                      "shortId",
                      "shareId",
                      "firstSeen",
                      "count",
                      "permalink",
                      "level",
                      "isSubscribed",
                      "isBookmarked",
                      "project",
                      "statusDetails"
                    ],
                    "properties": {
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "assignedTo": {
                        "type": "object",
                        "nullable": true
                      },
                      "count": {
                        "type": "string"
                      },
                      "culprit": {
                        "type": "string"
                      },
                      "firstSeen": {
                        "type": "string"
                      },
                      "hasSeen": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "isSubscribed": {
                        "type": "boolean"
                      },
                      "lastSeen": {
                        "type": "string"
                      },
                      "level": {
                        "type": "string"
                      },
                      "logger": {
                        "type": "string",
                        "nullable": true
                      },
                      "metadata": {
                        "oneOf": [
                          {
                            "type": "object",
                            "required": ["filename", "type", "value"],
                            "properties": {
                              "filename": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["title"],
                            "properties": {
                              "title": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "numComments": {
                        "type": "integer"
                      },
                      "permalink": {
                        "type": "string"
                      },
                      "project": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      },
                      "shareId": {
                        "type": "string",
                        "nullable": true
                      },
                      "shortId": {
                        "type": "string"
                      },
                      "stats": {
                        "type": "object",
                        "properties": {
                          "24h": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": ["resolved", "unresolved", "ignored"]
                      },
                      "statusDetails": {
                        "type": "object"
                      },
                      "subscriptionDetails": {
                        "type": "object",
                        "nullable": true
                      },
                      "title": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "userCount": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "annotations": [],
                    "assignedTo": null,
                    "count": "1",
                    "culprit": "raven.scripts.runner in main",
                    "firstSeen": "2018-11-06T21:19:55Z",
                    "hasSeen": false,
                    "id": "1",
                    "isBookmarked": false,
                    "isPublic": false,
                    "isSubscribed": true,
                    "lastSeen": "2018-11-06T21:19:55Z",
                    "level": "error",
                    "logger": null,
                    "metadata": {
                      "title": "This is an example Python exception"
                    },
                    "numComments": 0,
                    "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                    "project": {
                      "id": "2",
                      "name": "Pump Station",
                      "slug": "pump-station"
                    },
                    "shareId": null,
                    "shortId": "PUMP-STATION-1",
                    "stats": {
                      "24h": [
                        [1541455200, 473],
                        [1541458800, 914],
                        [1541462400, 991],
                        [1541466000, 925],
                        [1541469600, 881],
                        [1541473200, 182],
                        [1541476800, 490],
                        [1541480400, 820],
                        [1541484000, 322],
                        [1541487600, 836],
                        [1541491200, 565],
                        [1541494800, 758],
                        [1541498400, 880],
                        [1541502000, 677],
                        [1541505600, 381],
                        [1541509200, 814],
                        [1541512800, 329],
                        [1541516400, 446],
                        [1541520000, 731],
                        [1541523600, 111],
                        [1541527200, 926],
                        [1541530800, 772],
                        [1541534400, 400],
                        [1541538000, 943]
                      ]
                    },
                    "status": "unresolved",
                    "statusDetails": {},
                    "subscriptionDetails": null,
                    "title": "This is an example Python exception",
                    "type": "default",
                    "userCount": 0
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["project:read"]
          }
        ]
      },
      "put": {
        "tags": ["Events"],
        "description": "Bulk mutate various attributes on issues.  The list of issues to modify is given through the `id` query parameter.  It is repeated for each issue that should be modified.\n\n- For non-status updates, the `id` query parameter is required.\n- For status updates, the `id` query parameter may be omitted\nfor a batch \"update all\" query.\n- An optional `status` query parameter may be used to restrict\nmutations to only events with the given status.\n\nThe following attributes can be modified and are supplied as JSON object in the body:\n\nIf any ids are out of scope this operation will succeed without any data mutation.",
        "operationId": "Bulk Mutate a List of Issues",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "A list of IDs of the issues to be mutated. This parameter shall be repeated for each issue. It is optional only if a status is mutated in which case an implicit update all is assumed.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Optionally limits the query to issues of the specified status. Valid values are `\"resolved\"`, `\"unresolved\"` and `\"ignored\"`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The new status for the issues. Valid values are `\"resolved\"`, `\"resolvedInNextRelease\"`, `\"unresolved\"`, and `\"ignored\"`.",
                    "example": "unresolved"
                  },
                  "statusDetails": {
                    "type": "object",
                    "properties": {
                      "inRelease": {
                        "type": "string"
                      },
                      "inNextRelease": {
                        "type": "boolean"
                      },
                      "inCommit": {
                        "type": "string"
                      },
                      "ignoreDuration": {
                        "type": "integer"
                      },
                      "ignoreCount": {
                        "type": "integer"
                      },
                      "ignoreWindow": {
                        "type": "integer"
                      },
                      "ignoreUserCount": {
                        "type": "integer"
                      },
                      "ignoreUserWindow": {
                        "type": "integer"
                      }
                    },
                    "description": "Additional details about the resolution. Valid values are `\"inRelease\"`, `\"inNextRelease\"`, `\"inCommit\"`, `\"ignoreDuration\"`, `\"ignoreCount\"`, `\"ignoreWindow\"`, `\"ignoreUserCount\"`, and `\"ignoreUserWindow\"`."
                  },
                  "ignoreDuration": {
                    "type": "integer",
                    "description": "The number of minutes to ignore this issue."
                  },
                  "isPublic": {
                    "type": "boolean",
                    "description": "Sets the issue to public or private.",
                    "example": false
                  },
                  "merge": {
                    "type": "boolean",
                    "description": "Allows to merge or unmerge different issues."
                  },
                  "assignedTo": {
                    "type": "string",
                    "description": "The actor id (or username) of the user or team that should be assigned to this issue."
                  },
                  "hasSeen": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the flag that indicates if the user has seen the event."
                  },
                  "isBookmarked": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the bookmark flag."
                  }
                }
              },
              "example": {
                "isPublic": false,
                "status": "unresolved"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["isPublic", "status", "statusDetails"],
                  "properties": {
                    "isPublic": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["resolved", "unresolved", "ignored"]
                    },
                    "statusDetails": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "isPublic": false,
                  "status": "unresolved",
                  "statusDetails": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["project:write"]
          }
        ]
      },
      "delete": {
        "tags": ["Events"],
        "description": "Permanently remove the given issues. The list of issues to modify is given through the `id` query parameter.  It is repeated for each issue that should be removed.\n\nOnly queries by 'id' are accepted.\n\nIf any ids are out of scope this operation will succeed without any data mutation.",
        "operationId": "Bulk Remove a List of Issues",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "A list of IDs of the issues to be removed. This parameter shall be repeated for each issue.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "security": [
          {
            "auth_token": ["project:admin"]
          }
        ]
      }
    },
    "/api/0/issues/{issue_id}/tags/{key}/values/": {
      "get": {
        "tags": ["Events"],
        "description": "Returns details for given tag key related to an issue.",
        "operationId": "List a Tag's Values Related to an Issue",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The tag key to look the values up for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["key", "value"],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "key": "ice_cream",
                    "value": "mint_choco"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["event:read"]
          }
        ]
      }
    },
    "/api/0/issues/{issue_id}/tags/{key}/": {
      "get": {
        "tags": ["Events"],
        "description": "Returns details for given tag key related to an issue.",
        "operationId": "Retrieve Tag Details",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The tag key to look the values up for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["key", "totalValues"],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "totalValues": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "key": "ice_cream",
                  "totalValues": 6
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["event:read"]
          }
        ]
      }
    },
    "/api/0/issues/{issue_id}/hashes/": {
      "get": {
        "tags": ["Events"],
        "description": "This endpoint lists an issue's hashes, which are the generated checksums used to aggregate individual events.",
        "operationId": "List an Issue's Hashes",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "&cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its' sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "latestEvent": {
                        "type": "object",
                        "required": [
                          "eventID",
                          "dist",
                          "message",
                          "id",
                          "size",
                          "errors",
                          "platform",
                          "type",
                          "metadata",
                          "tags",
                          "dateCreated",
                          "dateReceived",
                          "user",
                          "entries",
                          "packages",
                          "sdk",
                          "_meta",
                          "contexts",
                          "fingerprints",
                          "context",
                          "groupID",
                          "title"
                        ],
                        "properties": {
                          "eventID": {
                            "type": "string"
                          },
                          "dist": {
                            "type": "string",
                            "nullable": true
                          },
                          "message": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "data": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "platform": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "metadata": {
                            "oneOf": [
                              {
                                "type": "object",
                                "required": ["type", "value"],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": ["title"],
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "_meta": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string"
                          },
                          "dateReceived": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "username",
                              "name",
                              "ip_address",
                              "email",
                              "data",
                              "id"
                            ],
                            "properties": {
                              "username": {
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "type": "string",
                                "nullable": true
                              },
                              "ip_address": {
                                "type": "string",
                                "nullable": true
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "data": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "isStaff": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": ["type", "data"],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": ["values"],
                                      "properties": {
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "category",
                                              "level",
                                              "event_id",
                                              "timestamp",
                                              "data",
                                              "message",
                                              "type"
                                            ],
                                            "properties": {
                                              "category": {
                                                "type": "string"
                                              },
                                              "level": {
                                                "type": "string"
                                              },
                                              "event_id": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "timestamp": {
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "data": {
                                                "type": "object",
                                                "nullable": true
                                              },
                                              "message": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": ["type", "data"],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "fragment",
                                        "cookies",
                                        "inferredContentType",
                                        "env",
                                        "headers",
                                        "url",
                                        "query",
                                        "data",
                                        "method"
                                      ],
                                      "properties": {
                                        "fragment": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "cookies": {
                                          "type": "array",
                                          "nullable": true,
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "inferredContentType": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "env": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "ENV": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "headers": {
                                          "type": "array",
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "query": {
                                          "type": "array",
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "method": {
                                          "type": "string",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": ["type", "data"],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": ["formatted"],
                                      "properties": {
                                        "formatted": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": ["type", "data"],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "excOmitted",
                                        "hasSystemFrames",
                                        "values"
                                      ],
                                      "properties": {
                                        "excOmitted": {
                                          "type": "array",
                                          "nullable": true,
                                          "items": {
                                            "type": "integer"
                                          }
                                        },
                                        "hasSystemFrames": {
                                          "type": "boolean"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "stacktrace",
                                              "module",
                                              "rawStacktrace",
                                              "mechanism",
                                              "threadId",
                                              "value",
                                              "type"
                                            ],
                                            "properties": {
                                              "stacktrace": {
                                                "type": "object",
                                                "nullable": true,
                                                "required": [
                                                  "frames",
                                                  "framesOmitted",
                                                  "registers",
                                                  "hasSystemFrames"
                                                ],
                                                "properties": {
                                                  "frames": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "function",
                                                        "errors",
                                                        "colNo",
                                                        "vars",
                                                        "package",
                                                        "absPath",
                                                        "inApp",
                                                        "lineNo",
                                                        "module",
                                                        "filename",
                                                        "platform",
                                                        "instructionAddr",
                                                        "context",
                                                        "symbolAddr",
                                                        "trust",
                                                        "symbol"
                                                      ],
                                                      "properties": {
                                                        "function": {
                                                          "type": "string"
                                                        },
                                                        "errors": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "colNo": {
                                                          "type": "integer",
                                                          "nullable": true
                                                        },
                                                        "vars": {
                                                          "type": "object",
                                                          "nullable": true
                                                        },
                                                        "package": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "absPath": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "inApp": {
                                                          "type": "boolean"
                                                        },
                                                        "lineNo": {
                                                          "type": "integer"
                                                        },
                                                        "module": {
                                                          "type": "string"
                                                        },
                                                        "filename": {
                                                          "type": "string"
                                                        },
                                                        "platform": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "instructionAddr": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "context": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "array",
                                                            "items": {
                                                              "oneOf": [
                                                                {
                                                                  "type": "integer"
                                                                },
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        "symbolAddr": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "trust": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "symbol": {
                                                          "type": "string",
                                                          "nullable": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "framesOmitted": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "registers": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "hasSystemFrames": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "module": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "rawStacktrace": {
                                                "type": "object",
                                                "nullable": true
                                              },
                                              "mechanism": {
                                                "type": "object",
                                                "nullable": true,
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "handled": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "threadId": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "value": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "packages": {
                            "type": "object"
                          },
                          "sdk": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "string",
                                "nullable": true
                              },
                              "context": {
                                "type": "string",
                                "nullable": true
                              },
                              "entries": {
                                "type": "object"
                              },
                              "contexts": {
                                "type": "string",
                                "nullable": true
                              },
                              "message": {
                                "type": "string",
                                "nullable": true
                              },
                              "packages": {
                                "type": "string",
                                "nullable": true
                              },
                              "tags": {
                                "type": "object"
                              },
                              "sdk": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "contexts": {
                            "type": "object"
                          },
                          "fingerprints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "context": {
                            "type": "object"
                          },
                          "groupID": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "9999aaaaca8b46d797c23c6077c6ff01",
                    "latestEvent": {
                      "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                      "dist": null,
                      "message": "",
                      "title": "This is an example Python exception",
                      "id": "9999aaafcc8b46d797c23c6077c6ff01",
                      "size": 107762,
                      "errors": [
                        {
                          "data": {
                            "column": 8,
                            "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                            "row": 15
                          },
                          "message": "Invalid location in sourcemap",
                          "type": "js_invalid_sourcemap_location"
                        }
                      ],
                      "platform": "javascript",
                      "type": "error",
                      "metadata": {
                        "type": "ForbiddenError",
                        "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                      },
                      "tags": [
                        {
                          "value": "Chrome 83.0.4103",
                          "key": "browser",
                          "_meta": null
                        },
                        {
                          "value": "Chrome",
                          "key": "browser.name",
                          "_meta": null
                        },
                        {
                          "value": "prod",
                          "key": "environment",
                          "_meta": null
                        },
                        {
                          "value": "yes",
                          "key": "handled",
                          "_meta": null
                        },
                        {
                          "value": "error",
                          "key": "level",
                          "_meta": null
                        },
                        {
                          "value": "generic",
                          "key": "mechanism",
                          "_meta": null
                        }
                      ],
                      "dateCreated": "2020-06-17T22:26:56.098086Z",
                      "dateReceived": "2020-06-17T22:26:56.428721Z",
                      "user": {
                        "username": null,
                        "name": "Hell Boy",
                        "ip_address": "192.168.1.1",
                        "email": "hell@boy.cat",
                        "data": {
                          "isStaff": false
                        },
                        "id": "550747"
                      },
                      "entries": [
                        {
                          "type": "exception",
                          "data": {
                            "values": [
                              {
                                "stacktrace": {
                                  "frames": [
                                    {
                                      "function": "ignoreOnError",
                                      "errors": null,
                                      "colNo": 23,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                      "inApp": false,
                                      "lineNo": 71,
                                      "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                      "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [66, "            }"],
                                        [
                                          67,
                                          "            // Attempt to invoke user-land function"
                                        ],
                                        [
                                          68,
                                          "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                        ],
                                        [
                                          69,
                                          "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                        ],
                                        [
                                          70,
                                          "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                        ],
                                        [
                                          71,
                                          "            return fn.apply(this, wrappedArguments);"
                                        ],
                                        [
                                          72,
                                          "            // tslint:enable:no-unsafe-any"
                                        ],
                                        [73, "        }"],
                                        [74, "        catch (ex) {"],
                                        [
                                          75,
                                          "            ignoreNextOnError();"
                                        ],
                                        [
                                          76,
                                          "            withScope(function (scope) {"
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    },
                                    {
                                      "function": "apply",
                                      "errors": null,
                                      "colNo": 24,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                      "inApp": false,
                                      "lineNo": 74,
                                      "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                      "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [69, "     */"],
                                        [
                                          70,
                                          "    triggerAsync: function triggerAsync() {"
                                        ],
                                        [71, "        var args = arguments,"],
                                        [72, "            me = this;"],
                                        [
                                          73,
                                          "        _.nextTick(function () {"
                                        ],
                                        [
                                          74,
                                          "            me.trigger.apply(me, args);"
                                        ],
                                        [75, "        });"],
                                        [76, "    },"],
                                        [77, ""],
                                        [78, "    /**"],
                                        [
                                          79,
                                          "     * Wraps the trigger mechanism with a deferral function."
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    }
                                  ],
                                  "framesOmitted": null,
                                  "registers": null,
                                  "hasSystemFrames": true
                                },
                                "module": null,
                                "rawStacktrace": {
                                  "frames": [
                                    {
                                      "function": "a",
                                      "errors": null,
                                      "colNo": 88800,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "inApp": false,
                                      "lineNo": 81,
                                      "module": null,
                                      "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [76, "/*!"],
                                        [
                                          77,
                                          "  Copyright (c) 2018 Jed Watson."
                                        ],
                                        [
                                          78,
                                          "  Licensed under the MIT License (MIT), see"
                                        ],
                                        [
                                          79,
                                          "  http://jedwatson.github.io/react-select"
                                        ],
                                        [80, "*/"],
                                        [
                                          81,
                                          "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                        ],
                                        [82, "/*!"],
                                        [83, " * JavaScript Cookie v2.2.1"],
                                        [
                                          84,
                                          " * https://github.com/js-cookie/js-cookie"
                                        ],
                                        [85, " *"],
                                        [
                                          86,
                                          " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    },
                                    {
                                      "function": null,
                                      "errors": null,
                                      "colNo": 149484,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "inApp": false,
                                      "lineNo": 119,
                                      "module": null,
                                      "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [114, "/* @license"],
                                        [115, "Papa Parse"],
                                        [116, "v5.2.0"],
                                        [
                                          117,
                                          "https://github.com/mholt/PapaParse"
                                        ],
                                        [118, "License: MIT"],
                                        [
                                          119,
                                          "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                        ],
                                        [120, "/**!"],
                                        [
                                          121,
                                          " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                        ],
                                        [122, " * @version 1.16.1"],
                                        [123, " * @license"],
                                        [
                                          124,
                                          " * Copyright (c) 2016 Federico Zivolo and contributors"
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    }
                                  ],
                                  "framesOmitted": null,
                                  "registers": null,
                                  "hasSystemFrames": true
                                },
                                "mechanism": {
                                  "type": "generic",
                                  "handled": true
                                },
                                "threadId": null,
                                "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                                "type": "ForbiddenError"
                              }
                            ],
                            "excOmitted": null,
                            "hasSystemFrames": true
                          }
                        },
                        {
                          "type": "breadcrumbs",
                          "data": {
                            "values": [
                              {
                                "category": "tracing",
                                "level": "debug",
                                "event_id": null,
                                "timestamp": "2020-06-17T22:26:55.266586Z",
                                "data": null,
                                "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                                "type": "debug"
                              },
                              {
                                "category": "xhr",
                                "level": "info",
                                "event_id": null,
                                "timestamp": "2020-06-17T22:26:55.619446Z",
                                "data": {
                                  "url": "/api/0/internal/health/",
                                  "status_code": 200,
                                  "method": "GET"
                                },
                                "message": null,
                                "type": "http"
                              },
                              {
                                "category": "sentry.transaction",
                                "level": "info",
                                "event_id": null,
                                "timestamp": "2020-06-17T22:26:55.945016Z",
                                "data": null,
                                "message": "7787a027f3fb46c985aaa2287b3f4d09",
                                "type": "default"
                              }
                            ]
                          }
                        },
                        {
                          "type": "request",
                          "data": {
                            "fragment": null,
                            "cookies": [],
                            "inferredContentType": null,
                            "env": null,
                            "headers": [
                              [
                                "User-Agent",
                                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                              ]
                            ],
                            "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                            "query": [["project", "5236886"]],
                            "data": null,
                            "method": null
                          }
                        }
                      ],
                      "packages": {},
                      "sdk": {
                        "version": "5.17.0",
                        "name": "sentry.javascript.browser"
                      },
                      "_meta": {
                        "user": null,
                        "context": null,
                        "entries": {},
                        "contexts": null,
                        "message": null,
                        "packages": null,
                        "tags": {},
                        "sdk": null
                      },
                      "contexts": {
                        "ForbiddenError": {
                          "status": 403,
                          "statusText": "Forbidden",
                          "responseJSON": {
                            "detail": "You do not have permission to perform this action."
                          },
                          "type": "default"
                        },
                        "browser": {
                          "version": "83.0.4103",
                          "type": "browser",
                          "name": "Chrome"
                        },
                        "os": {
                          "version": "10",
                          "type": "os",
                          "name": "Windows"
                        },
                        "trace": {
                          "span_id": "83db1ad17e67dfe7",
                          "type": "trace",
                          "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                          "op": "navigation"
                        },
                        "organization": {
                          "type": "default",
                          "id": "323938",
                          "slug": "hellboy-meowmeow"
                        }
                      },
                      "fingerprints": ["fbe908cc63d63ea9763fd84cb6bad177"],
                      "context": {
                        "resp": {
                          "status": 403,
                          "responseJSON": {
                            "detail": "You do not have permission to perform this action."
                          },
                          "name": "ForbiddenError",
                          "statusText": "Forbidden",
                          "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                          "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                        }
                      },
                      "groupID": "1341191803"
                    }
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["event:read"]
          }
        ]
      }
    },
    "/api/0/issues/{issue_id}/events/oldest/": {
      "get": {
        "tags": ["Events"],
        "description": "Retrieves the details of the oldest event for an issue.",
        "operationId": "Retrieve the Oldest Event for an Issue",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "eventID",
                    "dist",
                    "userReport",
                    "previousEventID",
                    "message",
                    "id",
                    "size",
                    "errors",
                    "platform",
                    "nextEventID",
                    "type",
                    "metadata",
                    "tags",
                    "dateCreated",
                    "dateReceived",
                    "user",
                    "entries",
                    "packages",
                    "sdk",
                    "_meta",
                    "contexts",
                    "fingerprints",
                    "context",
                    "release",
                    "groupID",
                    "title"
                  ],
                  "properties": {
                    "eventID": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "userReport": {
                      "type": "object",
                      "nullable": true
                    },
                    "previousEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string"
                    },
                    "nextEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": ["type", "value"],
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": ["title"],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "_meta": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dateReceived": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "username",
                        "name",
                        "ip_address",
                        "email",
                        "data",
                        "id"
                      ],
                      "properties": {
                        "username": {
                          "type": "string",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "ip_address": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "data": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "isStaff": {
                              "type": "boolean"
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": ["values"],
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "category",
                                        "level",
                                        "event_id",
                                        "timestamp",
                                        "data",
                                        "message",
                                        "type"
                                      ],
                                      "properties": {
                                        "category": {
                                          "type": "string"
                                        },
                                        "level": {
                                          "type": "string"
                                        },
                                        "event_id": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "message": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "fragment",
                                  "cookies",
                                  "inferredContentType",
                                  "env",
                                  "headers",
                                  "url",
                                  "query",
                                  "data",
                                  "method"
                                ],
                                "properties": {
                                  "fragment": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "cookies": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "inferredContentType": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "env": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "ENV": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "query": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "data": {
                                    "type": "object",
                                    "nullable": true
                                  },
                                  "method": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": ["formatted"],
                                "properties": {
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "excOmitted",
                                  "hasSystemFrames",
                                  "values"
                                ],
                                "properties": {
                                  "excOmitted": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "hasSystemFrames": {
                                    "type": "boolean"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "stacktrace",
                                        "module",
                                        "rawStacktrace",
                                        "mechanism",
                                        "threadId",
                                        "value",
                                        "type"
                                      ],
                                      "properties": {
                                        "stacktrace": {
                                          "type": "object",
                                          "nullable": true,
                                          "required": [
                                            "frames",
                                            "framesOmitted",
                                            "registers",
                                            "hasSystemFrames"
                                          ],
                                          "properties": {
                                            "frames": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "function",
                                                  "errors",
                                                  "colNo",
                                                  "vars",
                                                  "package",
                                                  "absPath",
                                                  "inApp",
                                                  "lineNo",
                                                  "module",
                                                  "filename",
                                                  "platform",
                                                  "instructionAddr",
                                                  "context",
                                                  "symbolAddr",
                                                  "trust",
                                                  "symbol"
                                                ],
                                                "properties": {
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "errors": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "colNo": {
                                                    "type": "integer",
                                                    "nullable": true
                                                  },
                                                  "vars": {
                                                    "type": "object",
                                                    "nullable": true
                                                  },
                                                  "package": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "absPath": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "inApp": {
                                                    "type": "boolean"
                                                  },
                                                  "lineNo": {
                                                    "type": "integer"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "type": "string"
                                                  },
                                                  "platform": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "instructionAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "context": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "symbolAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "trust": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "symbol": {
                                                    "type": "string",
                                                    "nullable": true
                                                  }
                                                }
                                              }
                                            },
                                            "framesOmitted": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "registers": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "hasSystemFrames": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "module": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "rawStacktrace": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "mechanism": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "handled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "threadId": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "packages": {
                      "type": "object"
                    },
                    "sdk": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_meta": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "string",
                          "nullable": true
                        },
                        "context": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "object"
                        },
                        "contexts": {
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        },
                        "packages": {
                          "type": "string",
                          "nullable": true
                        },
                        "tags": {
                          "type": "object"
                        },
                        "sdk": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "contexts": {
                      "type": "object"
                    },
                    "fingerprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object"
                    },
                    "release": {
                      "type": "object",
                      "required": [
                        "authors",
                        "commitCount",
                        "data",
                        "dateCreated",
                        "dateReleased",
                        "deployCount",
                        "firstEvent",
                        "lastCommit",
                        "lastDeploy",
                        "lastEvent",
                        "newGroups",
                        "owner",
                        "projects",
                        "ref",
                        "shortVersion",
                        "version",
                        "url"
                      ],
                      "properties": {
                        "authors": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "commitCount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "data": {
                          "type": "object"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dateReleased": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "deployCount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "firstEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "lastCommit": {
                          "type": "object",
                          "nullable": true
                        },
                        "lastDeploy": {
                          "type": "object",
                          "required": [
                            "environment",
                            "name",
                            "dateStarted",
                            "dateFinished",
                            "url",
                            "id"
                          ],
                          "properties": {
                            "environment": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "dateStarted": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateFinished": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "lastEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "newGroups": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "owner": {
                          "type": "object",
                          "nullable": true
                        },
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ref": {
                          "type": "string",
                          "nullable": true
                        },
                        "shortVersion": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                  "dist": null,
                  "userReport": null,
                  "previousEventID": null,
                  "message": "",
                  "title": "This is an example Python exception",
                  "id": "9999aaafcc8b46d797c23c6077c6ff01",
                  "size": 107762,
                  "errors": [
                    {
                      "data": {
                        "column": 8,
                        "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                        "row": 15
                      },
                      "message": "Invalid location in sourcemap",
                      "type": "js_invalid_sourcemap_location"
                    }
                  ],
                  "platform": "javascript",
                  "nextEventID": "99f9e199e9a74a14bfef6196ad741619",
                  "type": "error",
                  "metadata": {
                    "type": "ForbiddenError",
                    "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                  },
                  "tags": [
                    {
                      "value": "Chrome 83.0.4103",
                      "key": "browser",
                      "_meta": null
                    },
                    {
                      "value": "Chrome",
                      "key": "browser.name",
                      "_meta": null
                    },
                    {
                      "value": "prod",
                      "key": "environment",
                      "_meta": null
                    },
                    {
                      "value": "yes",
                      "key": "handled",
                      "_meta": null
                    },
                    {
                      "value": "error",
                      "key": "level",
                      "_meta": null
                    },
                    {
                      "value": "generic",
                      "key": "mechanism",
                      "_meta": null
                    }
                  ],
                  "dateCreated": "2020-06-17T22:26:56.098086Z",
                  "dateReceived": "2020-06-17T22:26:56.428721Z",
                  "user": {
                    "username": null,
                    "name": "Hell Boy",
                    "ip_address": "192.168.1.1",
                    "email": "hell@boy.cat",
                    "data": {
                      "isStaff": false
                    },
                    "id": "550747"
                  },
                  "entries": [
                    {
                      "type": "exception",
                      "data": {
                        "values": [
                          {
                            "stacktrace": {
                              "frames": [
                                {
                                  "function": "ignoreOnError",
                                  "errors": null,
                                  "colNo": 23,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "inApp": false,
                                  "lineNo": 71,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [66, "            }"],
                                    [
                                      67,
                                      "            // Attempt to invoke user-land function"
                                    ],
                                    [
                                      68,
                                      "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                    ],
                                    [
                                      69,
                                      "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                    ],
                                    [
                                      70,
                                      "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                    ],
                                    [
                                      71,
                                      "            return fn.apply(this, wrappedArguments);"
                                    ],
                                    [
                                      72,
                                      "            // tslint:enable:no-unsafe-any"
                                    ],
                                    [73, "        }"],
                                    [74, "        catch (ex) {"],
                                    [75, "            ignoreNextOnError();"],
                                    [
                                      76,
                                      "            withScope(function (scope) {"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": "apply",
                                  "errors": null,
                                  "colNo": 24,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "inApp": false,
                                  "lineNo": 74,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [69, "     */"],
                                    [
                                      70,
                                      "    triggerAsync: function triggerAsync() {"
                                    ],
                                    [71, "        var args = arguments,"],
                                    [72, "            me = this;"],
                                    [73, "        _.nextTick(function () {"],
                                    [
                                      74,
                                      "            me.trigger.apply(me, args);"
                                    ],
                                    [75, "        });"],
                                    [76, "    },"],
                                    [77, ""],
                                    [78, "    /**"],
                                    [
                                      79,
                                      "     * Wraps the trigger mechanism with a deferral function."
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "module": null,
                            "rawStacktrace": {
                              "frames": [
                                {
                                  "function": "a",
                                  "errors": null,
                                  "colNo": 88800,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 81,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [76, "/*!"],
                                    [77, "  Copyright (c) 2018 Jed Watson."],
                                    [
                                      78,
                                      "  Licensed under the MIT License (MIT), see"
                                    ],
                                    [
                                      79,
                                      "  http://jedwatson.github.io/react-select"
                                    ],
                                    [80, "*/"],
                                    [
                                      81,
                                      "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                    ],
                                    [82, "/*!"],
                                    [83, " * JavaScript Cookie v2.2.1"],
                                    [
                                      84,
                                      " * https://github.com/js-cookie/js-cookie"
                                    ],
                                    [85, " *"],
                                    [
                                      86,
                                      " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": null,
                                  "errors": null,
                                  "colNo": 149484,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 119,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [114, "/* @license"],
                                    [115, "Papa Parse"],
                                    [116, "v5.2.0"],
                                    [117, "https://github.com/mholt/PapaParse"],
                                    [118, "License: MIT"],
                                    [
                                      119,
                                      "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                    ],
                                    [120, "/**!"],
                                    [
                                      121,
                                      " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                    ],
                                    [122, " * @version 1.16.1"],
                                    [123, " * @license"],
                                    [
                                      124,
                                      " * Copyright (c) 2016 Federico Zivolo and contributors"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "mechanism": {
                              "type": "generic",
                              "handled": true
                            },
                            "threadId": null,
                            "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                            "type": "ForbiddenError"
                          }
                        ],
                        "excOmitted": null,
                        "hasSystemFrames": true
                      }
                    },
                    {
                      "type": "breadcrumbs",
                      "data": {
                        "values": [
                          {
                            "category": "tracing",
                            "level": "debug",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.266586Z",
                            "data": null,
                            "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                            "type": "debug"
                          },
                          {
                            "category": "xhr",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.619446Z",
                            "data": {
                              "url": "/api/0/internal/health/",
                              "status_code": 200,
                              "method": "GET"
                            },
                            "message": null,
                            "type": "http"
                          },
                          {
                            "category": "sentry.transaction",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.945016Z",
                            "data": null,
                            "message": "7787a027f3fb46c985aaa2287b3f4d09",
                            "type": "default"
                          }
                        ]
                      }
                    },
                    {
                      "type": "request",
                      "data": {
                        "fragment": null,
                        "cookies": [],
                        "inferredContentType": null,
                        "env": null,
                        "headers": [
                          [
                            "User-Agent",
                            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                          ]
                        ],
                        "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                        "query": [["project", "5236886"]],
                        "data": null,
                        "method": null
                      }
                    }
                  ],
                  "packages": {},
                  "sdk": {
                    "version": "5.17.0",
                    "name": "sentry.javascript.browser"
                  },
                  "_meta": {
                    "user": null,
                    "context": null,
                    "entries": {},
                    "contexts": null,
                    "message": null,
                    "packages": null,
                    "tags": {},
                    "sdk": null
                  },
                  "contexts": {
                    "ForbiddenError": {
                      "status": 403,
                      "statusText": "Forbidden",
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "type": "default"
                    },
                    "browser": {
                      "version": "83.0.4103",
                      "type": "browser",
                      "name": "Chrome"
                    },
                    "os": {
                      "version": "10",
                      "type": "os",
                      "name": "Windows"
                    },
                    "trace": {
                      "span_id": "83db1ad17e67dfe7",
                      "type": "trace",
                      "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                      "op": "navigation"
                    },
                    "organization": {
                      "type": "default",
                      "id": "323938",
                      "slug": "hellboy-meowmeow"
                    }
                  },
                  "fingerprints": ["fbe908cc63d63ea9763fd84cb6bad177"],
                  "context": {
                    "resp": {
                      "status": 403,
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "name": "ForbiddenError",
                      "statusText": "Forbidden",
                      "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                      "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                    }
                  },
                  "release": {
                    "dateReleased": "2020-06-17T19:21:02.186004Z",
                    "newGroups": 4,
                    "commitCount": 11,
                    "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                    "data": {},
                    "lastDeploy": {
                      "name": "b65bc521378269d3eaefdc964f8ef56621414943 to prod",
                      "url": null,
                      "environment": "prod",
                      "dateStarted": null,
                      "dateFinished": "2020-06-17T19:20:55.641748Z",
                      "id": "6883490"
                    },
                    "deployCount": 1,
                    "dateCreated": "2020-06-17T18:45:31.042157Z",
                    "lastEvent": "2020-07-08T21:21:21Z",
                    "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "firstEvent": "2020-06-17T22:25:14Z",
                    "lastCommit": {
                      "repository": {
                        "status": "active",
                        "integrationId": "2933",
                        "externalSlug": "getsentry/getsentry",
                        "name": "getsentry/getsentry",
                        "provider": {
                          "id": "integrations:github",
                          "name": "GitHub"
                        },
                        "url": "https://github.com/getsentry/getsentry",
                        "id": "2",
                        "dateCreated": "2016-10-10T21:36:45.373994Z"
                      },
                      "releases": [
                        {
                          "dateReleased": "2020-06-23T13:26:18.427090Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/staging/2077/",
                          "dateCreated": "2020-06-23T13:22:50.420265Z",
                          "version": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "shortVersion": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "ref": "perf/source-maps-test"
                        },
                        {
                          "dateReleased": "2020-06-17T19:21:02.186004Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                          "dateCreated": "2020-06-17T18:45:31.042157Z",
                          "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "ref": "master"
                        }
                      ],
                      "dateCreated": "2020-06-17T18:43:37Z",
                      "message": "feat(billing): Get a lot of money",
                      "id": "b65bc521378269d3eaefdc964f8ef56621414943"
                    },
                    "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "authors": [
                      {
                        "username": "a37a1b4520ce46cea147ae2885a4e7e7",
                        "lastLogin": "2020-09-14T22:34:55.550640Z",
                        "isSuperuser": false,
                        "isManaged": false,
                        "experiments": {},
                        "lastActive": "2020-09-15T22:13:20.503880Z",
                        "isStaff": false,
                        "id": "655784",
                        "isActive": true,
                        "has2fa": false,
                        "name": "hell.boy@sentry.io",
                        "avatarUrl": "https://secure.gravatar.com/avatar/eaa22e25b3a984659420831a77e4874e?s=32&d=mm",
                        "dateJoined": "2020-04-20T16:21:25.365772Z",
                        "emails": [
                          {
                            "is_verified": false,
                            "id": "784574",
                            "email": "hellboy@gmail.com"
                          },
                          {
                            "is_verified": true,
                            "id": "749185",
                            "email": "hell.boy@sentry.io"
                          }
                        ],
                        "avatar": {
                          "avatarUuid": null,
                          "avatarType": "letter_avatar"
                        },
                        "hasPasswordAuth": false,
                        "email": "hell.boy@sentry.io"
                      }
                    ],
                    "owner": null,
                    "ref": "master",
                    "projects": [
                      {
                        "name": "Sentry CSP",
                        "slug": "sentry-csp"
                      },
                      {
                        "name": "Backend",
                        "slug": "sentry"
                      },
                      {
                        "name": "Frontend",
                        "slug": "javascript"
                      }
                    ]
                  },
                  "groupID": "1341191803"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["event:read"]
          }
        ]
      }
    },
    "/api/0/issues/{issue_id}/events/latest/": {
      "get": {
        "tags": ["Events"],
        "description": "Retrieves the details of the latest event for an issue.",
        "operationId": "Retrieve the Latest Event for an Issue",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "eventID",
                    "dist",
                    "userReport",
                    "previousEventID",
                    "message",
                    "id",
                    "size",
                    "errors",
                    "platform",
                    "nextEventID",
                    "type",
                    "metadata",
                    "tags",
                    "dateCreated",
                    "dateReceived",
                    "user",
                    "entries",
                    "packages",
                    "sdk",
                    "_meta",
                    "contexts",
                    "fingerprints",
                    "context",
                    "release",
                    "groupID",
                    "title"
                  ],
                  "properties": {
                    "eventID": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "userReport": {
                      "type": "object",
                      "nullable": true
                    },
                    "previousEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string"
                    },
                    "nextEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": ["type", "value"],
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": ["title"],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "_meta": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dateReceived": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "username",
                        "name",
                        "ip_address",
                        "email",
                        "data",
                        "id"
                      ],
                      "properties": {
                        "username": {
                          "type": "string",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "ip_address": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "data": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "isStaff": {
                              "type": "boolean"
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": ["values"],
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "category",
                                        "level",
                                        "event_id",
                                        "timestamp",
                                        "data",
                                        "message",
                                        "type"
                                      ],
                                      "properties": {
                                        "category": {
                                          "type": "string"
                                        },
                                        "level": {
                                          "type": "string"
                                        },
                                        "event_id": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "message": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "fragment",
                                  "cookies",
                                  "inferredContentType",
                                  "env",
                                  "headers",
                                  "url",
                                  "query",
                                  "data",
                                  "method"
                                ],
                                "properties": {
                                  "fragment": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "cookies": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "inferredContentType": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "env": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "ENV": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "query": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "data": {
                                    "type": "object",
                                    "nullable": true
                                  },
                                  "method": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": ["formatted"],
                                "properties": {
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": ["type", "data"],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "excOmitted",
                                  "hasSystemFrames",
                                  "values"
                                ],
                                "properties": {
                                  "excOmitted": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "hasSystemFrames": {
                                    "type": "boolean"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "stacktrace",
                                        "module",
                                        "rawStacktrace",
                                        "mechanism",
                                        "threadId",
                                        "value",
                                        "type"
                                      ],
                                      "properties": {
                                        "stacktrace": {
                                          "type": "object",
                                          "nullable": true,
                                          "required": [
                                            "frames",
                                            "framesOmitted",
                                            "registers",
                                            "hasSystemFrames"
                                          ],
                                          "properties": {
                                            "frames": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "function",
                                                  "errors",
                                                  "colNo",
                                                  "vars",
                                                  "package",
                                                  "absPath",
                                                  "inApp",
                                                  "lineNo",
                                                  "module",
                                                  "filename",
                                                  "platform",
                                                  "instructionAddr",
                                                  "context",
                                                  "symbolAddr",
                                                  "trust",
                                                  "symbol"
                                                ],
                                                "properties": {
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "errors": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "colNo": {
                                                    "type": "integer",
                                                    "nullable": true
                                                  },
                                                  "vars": {
                                                    "type": "object",
                                                    "nullable": true
                                                  },
                                                  "package": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "absPath": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "inApp": {
                                                    "type": "boolean"
                                                  },
                                                  "lineNo": {
                                                    "type": "integer"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "type": "string"
                                                  },
                                                  "platform": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "instructionAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "context": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "symbolAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "trust": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "symbol": {
                                                    "type": "string",
                                                    "nullable": true
                                                  }
                                                }
                                              }
                                            },
                                            "framesOmitted": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "registers": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "hasSystemFrames": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "module": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "rawStacktrace": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "mechanism": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "handled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "threadId": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "packages": {
                      "type": "object"
                    },
                    "sdk": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_meta": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "string",
                          "nullable": true
                        },
                        "context": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "object"
                        },
                        "contexts": {
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        },
                        "packages": {
                          "type": "string",
                          "nullable": true
                        },
                        "tags": {
                          "type": "object"
                        },
                        "sdk": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "contexts": {
                      "type": "object"
                    },
                    "fingerprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object"
                    },
                    "release": {
                      "type": "object",
                      "required": [
                        "authors",
                        "commitCount",
                        "data",
                        "dateCreated",
                        "dateReleased",
                        "deployCount",
                        "firstEvent",
                        "lastCommit",
                        "lastDeploy",
                        "lastEvent",
                        "newGroups",
                        "owner",
                        "projects",
                        "ref",
                        "shortVersion",
                        "version",
                        "url"
                      ],
                      "properties": {
                        "authors": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "commitCount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "data": {
                          "type": "object"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dateReleased": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "deployCount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "firstEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "lastCommit": {
                          "type": "object",
                          "nullable": true
                        },
                        "lastDeploy": {
                          "type": "object",
                          "required": [
                            "environment",
                            "name",
                            "dateStarted",
                            "dateFinished",
                            "url",
                            "id"
                          ],
                          "properties": {
                            "environment": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "dateStarted": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateFinished": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "lastEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "newGroups": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "owner": {
                          "type": "object",
                          "nullable": true
                        },
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ref": {
                          "type": "string",
                          "nullable": true
                        },
                        "shortVersion": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                  "dist": null,
                  "userReport": null,
                  "previousEventID": null,
                  "message": "",
                  "title": "This is an example Python exception",
                  "id": "9999aaafcc8b46d797c23c6077c6ff01",
                  "size": 107762,
                  "errors": [
                    {
                      "data": {
                        "column": 8,
                        "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                        "row": 15
                      },
                      "message": "Invalid location in sourcemap",
                      "type": "js_invalid_sourcemap_location"
                    }
                  ],
                  "platform": "javascript",
                  "nextEventID": "99f9e199e9a74a14bfef6196ad741619",
                  "type": "error",
                  "metadata": {
                    "type": "ForbiddenError",
                    "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                  },
                  "tags": [
                    {
                      "value": "Chrome 83.0.4103",
                      "key": "browser",
                      "_meta": null
                    },
                    {
                      "value": "Chrome",
                      "key": "browser.name",
                      "_meta": null
                    },
                    {
                      "value": "prod",
                      "key": "environment",
                      "_meta": null
                    },
                    {
                      "value": "yes",
                      "key": "handled",
                      "_meta": null
                    },
                    {
                      "value": "error",
                      "key": "level",
                      "_meta": null
                    },
                    {
                      "value": "generic",
                      "key": "mechanism",
                      "_meta": null
                    }
                  ],
                  "dateCreated": "2020-06-17T22:26:56.098086Z",
                  "dateReceived": "2020-06-17T22:26:56.428721Z",
                  "user": {
                    "username": null,
                    "name": "Hell Boy",
                    "ip_address": "192.168.1.1",
                    "email": "hell@boy.cat",
                    "data": {
                      "isStaff": false
                    },
                    "id": "550747"
                  },
                  "entries": [
                    {
                      "type": "exception",
                      "data": {
                        "values": [
                          {
                            "stacktrace": {
                              "frames": [
                                {
                                  "function": "ignoreOnError",
                                  "errors": null,
                                  "colNo": 23,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "inApp": false,
                                  "lineNo": 71,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [66, "            }"],
                                    [
                                      67,
                                      "            // Attempt to invoke user-land function"
                                    ],
                                    [
                                      68,
                                      "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                    ],
                                    [
                                      69,
                                      "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                    ],
                                    [
                                      70,
                                      "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                    ],
                                    [
                                      71,
                                      "            return fn.apply(this, wrappedArguments);"
                                    ],
                                    [
                                      72,
                                      "            // tslint:enable:no-unsafe-any"
                                    ],
                                    [73, "        }"],
                                    [74, "        catch (ex) {"],
                                    [75, "            ignoreNextOnError();"],
                                    [
                                      76,
                                      "            withScope(function (scope) {"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": "apply",
                                  "errors": null,
                                  "colNo": 24,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "inApp": false,
                                  "lineNo": 74,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [69, "     */"],
                                    [
                                      70,
                                      "    triggerAsync: function triggerAsync() {"
                                    ],
                                    [71, "        var args = arguments,"],
                                    [72, "            me = this;"],
                                    [73, "        _.nextTick(function () {"],
                                    [
                                      74,
                                      "            me.trigger.apply(me, args);"
                                    ],
                                    [75, "        });"],
                                    [76, "    },"],
                                    [77, ""],
                                    [78, "    /**"],
                                    [
                                      79,
                                      "     * Wraps the trigger mechanism with a deferral function."
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "module": null,
                            "rawStacktrace": {
                              "frames": [
                                {
                                  "function": "a",
                                  "errors": null,
                                  "colNo": 88800,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 81,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [76, "/*!"],
                                    [77, "  Copyright (c) 2018 Jed Watson."],
                                    [
                                      78,
                                      "  Licensed under the MIT License (MIT), see"
                                    ],
                                    [
                                      79,
                                      "  http://jedwatson.github.io/react-select"
                                    ],
                                    [80, "*/"],
                                    [
                                      81,
                                      "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                    ],
                                    [82, "/*!"],
                                    [83, " * JavaScript Cookie v2.2.1"],
                                    [
                                      84,
                                      " * https://github.com/js-cookie/js-cookie"
                                    ],
                                    [85, " *"],
                                    [
                                      86,
                                      " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": null,
                                  "errors": null,
                                  "colNo": 149484,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 119,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [114, "/* @license"],
                                    [115, "Papa Parse"],
                                    [116, "v5.2.0"],
                                    [117, "https://github.com/mholt/PapaParse"],
                                    [118, "License: MIT"],
                                    [
                                      119,
                                      "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                    ],
                                    [120, "/**!"],
                                    [
                                      121,
                                      " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                    ],
                                    [122, " * @version 1.16.1"],
                                    [123, " * @license"],
                                    [
                                      124,
                                      " * Copyright (c) 2016 Federico Zivolo and contributors"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "mechanism": {
                              "type": "generic",
                              "handled": true
                            },
                            "threadId": null,
                            "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                            "type": "ForbiddenError"
                          }
                        ],
                        "excOmitted": null,
                        "hasSystemFrames": true
                      }
                    },
                    {
                      "type": "breadcrumbs",
                      "data": {
                        "values": [
                          {
                            "category": "tracing",
                            "level": "debug",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.266586Z",
                            "data": null,
                            "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                            "type": "debug"
                          },
                          {
                            "category": "xhr",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.619446Z",
                            "data": {
                              "url": "/api/0/internal/health/",
                              "status_code": 200,
                              "method": "GET"
                            },
                            "message": null,
                            "type": "http"
                          },
                          {
                            "category": "sentry.transaction",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.945016Z",
                            "data": null,
                            "message": "7787a027f3fb46c985aaa2287b3f4d09",
                            "type": "default"
                          }
                        ]
                      }
                    },
                    {
                      "type": "request",
                      "data": {
                        "fragment": null,
                        "cookies": [],
                        "inferredContentType": null,
                        "env": null,
                        "headers": [
                          [
                            "User-Agent",
                            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                          ]
                        ],
                        "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                        "query": [["project", "5236886"]],
                        "data": null,
                        "method": null
                      }
                    }
                  ],
                  "packages": {},
                  "sdk": {
                    "version": "5.17.0",
                    "name": "sentry.javascript.browser"
                  },
                  "_meta": {
                    "user": null,
                    "context": null,
                    "entries": {},
                    "contexts": null,
                    "message": null,
                    "packages": null,
                    "tags": {},
                    "sdk": null
                  },
                  "contexts": {
                    "ForbiddenError": {
                      "status": 403,
                      "statusText": "Forbidden",
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "type": "default"
                    },
                    "browser": {
                      "version": "83.0.4103",
                      "type": "browser",
                      "name": "Chrome"
                    },
                    "os": {
                      "version": "10",
                      "type": "os",
                      "name": "Windows"
                    },
                    "trace": {
                      "span_id": "83db1ad17e67dfe7",
                      "type": "trace",
                      "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                      "op": "navigation"
                    },
                    "organization": {
                      "type": "default",
                      "id": "323938",
                      "slug": "hellboy-meowmeow"
                    }
                  },
                  "fingerprints": ["fbe908cc63d63ea9763fd84cb6bad177"],
                  "context": {
                    "resp": {
                      "status": 403,
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "name": "ForbiddenError",
                      "statusText": "Forbidden",
                      "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                      "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                    }
                  },
                  "release": {
                    "dateReleased": "2020-06-17T19:21:02.186004Z",
                    "newGroups": 4,
                    "commitCount": 11,
                    "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                    "data": {},
                    "lastDeploy": {
                      "name": "b65bc521378269d3eaefdc964f8ef56621414943 to prod",
                      "url": null,
                      "environment": "prod",
                      "dateStarted": null,
                      "dateFinished": "2020-06-17T19:20:55.641748Z",
                      "id": "6883490"
                    },
                    "deployCount": 1,
                    "dateCreated": "2020-06-17T18:45:31.042157Z",
                    "lastEvent": "2020-07-08T21:21:21Z",
                    "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "firstEvent": "2020-06-17T22:25:14Z",
                    "lastCommit": {
                      "repository": {
                        "status": "active",
                        "integrationId": "2933",
                        "externalSlug": "getsentry/getsentry",
                        "name": "getsentry/getsentry",
                        "provider": {
                          "id": "integrations:github",
                          "name": "GitHub"
                        },
                        "url": "https://github.com/getsentry/getsentry",
                        "id": "2",
                        "dateCreated": "2016-10-10T21:36:45.373994Z"
                      },
                      "releases": [
                        {
                          "dateReleased": "2020-06-23T13:26:18.427090Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/staging/2077/",
                          "dateCreated": "2020-06-23T13:22:50.420265Z",
                          "version": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "shortVersion": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "ref": "perf/source-maps-test"
                        },
                        {
                          "dateReleased": "2020-06-17T19:21:02.186004Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                          "dateCreated": "2020-06-17T18:45:31.042157Z",
                          "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "ref": "master"
                        }
                      ],
                      "dateCreated": "2020-06-17T18:43:37Z",
                      "message": "feat(billing): Get a lot of money",
                      "id": "b65bc521378269d3eaefdc964f8ef56621414943"
                    },
                    "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "authors": [
                      {
                        "username": "a37a1b4520ce46cea147ae2885a4e7e7",
                        "lastLogin": "2020-09-14T22:34:55.550640Z",
                        "isSuperuser": false,
                        "isManaged": false,
                        "experiments": {},
                        "lastActive": "2020-09-15T22:13:20.503880Z",
                        "isStaff": false,
                        "id": "655784",
                        "isActive": true,
                        "has2fa": false,
                        "name": "hell.boy@sentry.io",
                        "avatarUrl": "https://secure.gravatar.com/avatar/eaa22e25b3a984659420831a77e4874e?s=32&d=mm",
                        "dateJoined": "2020-04-20T16:21:25.365772Z",
                        "emails": [
                          {
                            "is_verified": false,
                            "id": "784574",
                            "email": "hellboy@gmail.com"
                          },
                          {
                            "is_verified": true,
                            "id": "749185",
                            "email": "hell.boy@sentry.io"
                          }
                        ],
                        "avatar": {
                          "avatarUuid": null,
                          "avatarType": "letter_avatar"
                        },
                        "hasPasswordAuth": false,
                        "email": "hell.boy@sentry.io"
                      }
                    ],
                    "owner": null,
                    "ref": "master",
                    "projects": [
                      {
                        "name": "Sentry CSP",
                        "slug": "sentry-csp"
                      },
                      {
                        "name": "Backend",
                        "slug": "sentry"
                      },
                      {
                        "name": "Frontend",
                        "slug": "javascript"
                      }
                    ]
                  },
                  "groupID": "1341191803"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["event:read"]
          }
        ]
      }
    },
    "/api/0/issues/{issue_id}/events/": {
      "get": {
        "tags": ["Events"],
        "description": "This endpoint lists an issue's events.",
        "operationId": "List an Issue's Events",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full",
            "in": "query",
            "description": "If this is set to true then the event payload will include the full event body, including the stacktrace. \nSet to true to enable.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "eventID",
                      "tags",
                      "dateCreated",
                      "user",
                      "message",
                      "id",
                      "platform",
                      "event.type",
                      "groupID",
                      "title"
                    ],
                    "properties": {
                      "eventID": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "dateCreated": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "username",
                          "name",
                          "ip_address",
                          "email",
                          "data",
                          "id"
                        ],
                        "properties": {
                          "username": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "ip_address": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "data": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "isStaff": {
                                "type": "boolean"
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "message": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string"
                      },
                      "event.type": {
                        "type": "string"
                      },
                      "groupID": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "eventID": "9fac2ceed9344f2bbfdd1fdacb0ed9b1",
                    "tags": [
                      {
                        "key": "browser",
                        "value": "Chrome 60.0"
                      },
                      {
                        "key": "device",
                        "value": "Other"
                      },
                      {
                        "key": "environment",
                        "value": "production"
                      },
                      {
                        "value": "fatal",
                        "key": "level"
                      },
                      {
                        "key": "os",
                        "value": "Mac OS X 10.12.6"
                      },
                      {
                        "value": "CPython 2.7.16",
                        "key": "runtime"
                      },
                      {
                        "key": "release",
                        "value": "17642328ead24b51867165985996d04b29310337"
                      },
                      {
                        "key": "server_name",
                        "value": "web1.example.com"
                      }
                    ],
                    "dateCreated": "2020-09-11T17:46:36Z",
                    "user": null,
                    "message": "",
                    "title": "This is an example Python exception",
                    "id": "dfb1a2d057194e76a4186cc8a5271553",
                    "platform": "python",
                    "event.type": "error",
                    "groupID": "1889724436"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["event:read"]
          }
        ]
      }
    },
    "/api/0/issues/{issue_id}/": {
      "get": {
        "tags": ["Events"],
        "description": "Return details on an individual issue. This returns the basic stats for the issue (title, last seen, first seen), some overall numbers (number of comments, user reports) as well as the summarized event data.",
        "operationId": "Retrieve an Issue",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "activity",
                    "annotations",
                    "assignedTo",
                    "count",
                    "culprit",
                    "firstRelease",
                    "firstSeen",
                    "hasSeen",
                    "id",
                    "isBookmarked",
                    "isPublic",
                    "isSubscribed",
                    "lastRelease",
                    "lastSeen",
                    "level",
                    "logger",
                    "metadata",
                    "numComments",
                    "participants",
                    "permalink",
                    "pluginActions",
                    "pluginContexts",
                    "pluginIssues",
                    "project",
                    "seenBy",
                    "shareId",
                    "shortId",
                    "stats",
                    "status",
                    "statusDetails",
                    "subscriptionDetails",
                    "tags",
                    "title",
                    "type",
                    "userCount",
                    "userReportCount"
                  ],
                  "properties": {
                    "activity": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object"
                          },
                          "dateCreated": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "assignedTo": {
                      "type": "object",
                      "nullable": true
                    },
                    "count": {
                      "type": "string"
                    },
                    "culprit": {
                      "type": "string"
                    },
                    "firstRelease": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "authors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "commitCount": {
                          "type": "integer"
                        },
                        "data": {
                          "type": "object",
                          "nullable": true
                        },
                        "dateCreated": {
                          "type": "string"
                        },
                        "dateReleased": {
                          "type": "string",
                          "nullable": true
                        },
                        "deployCount": {
                          "type": "integer"
                        },
                        "firstEvent": {
                          "type": "string"
                        },
                        "lastCommit": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastDeploy": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastEvent": {
                          "type": "string"
                        },
                        "newGroups": {
                          "type": "integer"
                        },
                        "owner": {
                          "type": "string",
                          "nullable": true
                        },
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ref": {
                          "type": "string",
                          "nullable": true
                        },
                        "shortVersion": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "firstSeen": {
                      "type": "string"
                    },
                    "hasSeen": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "isSubscribed": {
                      "type": "boolean"
                    },
                    "lastRelease": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastSeen": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "logger": {
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": ["filename", "type", "value"],
                          "properties": {
                            "filename": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": ["title"],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "numComments": {
                      "type": "integer"
                    },
                    "participants": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "permalink": {
                      "type": "string"
                    },
                    "pluginActions": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "pluginContexts": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pluginIssues": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    },
                    "seenBy": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "shareId": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortId": {
                      "type": "string"
                    },
                    "stats": {
                      "type": "object",
                      "properties": {
                        "24h": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        },
                        "30d": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": ["resolved", "unresolved", "ignored"]
                    },
                    "statusDetails": {
                      "type": "object"
                    },
                    "subscriptionDetails": {
                      "type": "object",
                      "nullable": true
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "userCount": {
                      "type": "integer"
                    },
                    "userReportCount": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "activity": [
                    {
                      "data": {},
                      "dateCreated": "2018-11-06T21:19:55Z",
                      "id": "0",
                      "type": "first_seen",
                      "user": null
                    }
                  ],
                  "annotations": [],
                  "assignedTo": null,
                  "count": "1",
                  "culprit": "raven.scripts.runner in main",
                  "firstRelease": {
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:19:55.146Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": "2018-11-06T21:19:55.271Z",
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": "2018-11-06T21:19:55.271Z",
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Pump Station",
                        "slug": "pump-station"
                      }
                    ],
                    "ref": null,
                    "shortVersion": "1764232",
                    "url": null,
                    "version": "17642328ead24b51867165985996d04b29310337"
                  },
                  "firstSeen": "2018-11-06T21:19:55Z",
                  "hasSeen": false,
                  "id": "1",
                  "isBookmarked": false,
                  "isPublic": false,
                  "isSubscribed": true,
                  "lastRelease": null,
                  "lastSeen": "2018-11-06T21:19:55Z",
                  "level": "error",
                  "logger": null,
                  "metadata": {
                    "title": "This is an example Python exception"
                  },
                  "numComments": 0,
                  "participants": [],
                  "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                  "pluginActions": [],
                  "pluginContexts": [],
                  "pluginIssues": [],
                  "project": {
                    "id": "2",
                    "name": "Pump Station",
                    "slug": "pump-station"
                  },
                  "seenBy": [],
                  "shareId": null,
                  "shortId": "PUMP-STATION-1",
                  "stats": {
                    "24h": [
                      [1541451600, 557],
                      [1541455200, 473],
                      [1541458800, 914],
                      [1541462400, 991],
                      [1541466000, 925],
                      [1541469600, 881],
                      [1541473200, 182],
                      [1541476800, 490],
                      [1541480400, 820],
                      [1541484000, 322],
                      [1541487600, 836],
                      [1541491200, 565],
                      [1541494800, 758],
                      [1541498400, 880],
                      [1541502000, 677],
                      [1541505600, 381],
                      [1541509200, 814],
                      [1541512800, 329],
                      [1541516400, 446],
                      [1541520000, 731],
                      [1541523600, 111],
                      [1541527200, 926],
                      [1541530800, 772],
                      [1541534400, 400],
                      [1541538000, 943]
                    ],
                    "30d": [
                      [1538870400, 565],
                      [1538956800, 12862],
                      [1539043200, 15617],
                      [1539129600, 10809],
                      [1539216000, 15065],
                      [1539302400, 12927],
                      [1539388800, 12994],
                      [1539475200, 13139],
                      [1539561600, 11838],
                      [1539648000, 12088],
                      [1539734400, 12338],
                      [1539820800, 12768],
                      [1539907200, 12816],
                      [1539993600, 15356],
                      [1540080000, 10910],
                      [1540166400, 12306],
                      [1540252800, 12912],
                      [1540339200, 14700],
                      [1540425600, 11890],
                      [1540512000, 11684],
                      [1540598400, 13510],
                      [1540684800, 12625],
                      [1540771200, 12811],
                      [1540857600, 13180],
                      [1540944000, 14651],
                      [1541030400, 14161],
                      [1541116800, 12612],
                      [1541203200, 14316],
                      [1541289600, 14742],
                      [1541376000, 12505],
                      [1541462400, 14180]
                    ]
                  },
                  "status": "unresolved",
                  "statusDetails": {},
                  "subscriptionDetails": null,
                  "tags": [],
                  "title": "This is an example Python exception",
                  "type": "default",
                  "userCount": 0,
                  "userReportCount": 0
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["event:read"]
          }
        ]
      },
      "put": {
        "tags": ["Events"],
        "description": "Updates an individual issue's attributes.  Only the attributes submitted are modified.",
        "operationId": "Update an Issue",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the group to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The new status for the issues. Valid values are `\"resolved\"`, `\"resolvedInNextRelease\"`, `\"unresolved\"`, and `\"ignored\"`.",
                    "example": "unresolved"
                  },
                  "assignedTo": {
                    "type": "string",
                    "description": "The actor id (or username) of the user or team that should be assigned to this issue."
                  },
                  "hasSeen": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the flag that indicates if the user has seen the event."
                  },
                  "isBookmarked": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the bookmark flag."
                  },
                  "isSubscribed": {
                    "type": "boolean"
                  },
                  "isPublic": {
                    "type": "boolean",
                    "description": "Sets the issue to public or private."
                  }
                }
              },
              "example": {
                "status": "unresolved"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "lastSeen",
                    "numComments",
                    "userCount",
                    "culprit",
                    "title",
                    "id",
                    "assignedTo",
                    "logger",
                    "type",
                    "annotations",
                    "metadata",
                    "status",
                    "subscriptionDetails",
                    "isPublic",
                    "hasSeen",
                    "shortId",
                    "shareId",
                    "firstSeen",
                    "count",
                    "permalink",
                    "level",
                    "isSubscribed",
                    "isBookmarked",
                    "project",
                    "statusDetails"
                  ],
                  "properties": {
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "assignedTo": {
                      "type": "object",
                      "nullable": true
                    },
                    "count": {
                      "type": "string"
                    },
                    "culprit": {
                      "type": "string"
                    },
                    "firstSeen": {
                      "type": "string"
                    },
                    "hasSeen": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "isSubscribed": {
                      "type": "boolean"
                    },
                    "lastSeen": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "logger": {
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": ["filename", "type", "value"],
                          "properties": {
                            "filename": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": ["title"],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "numComments": {
                      "type": "integer"
                    },
                    "permalink": {
                      "type": "string"
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    },
                    "shareId": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["resolved", "unresolved", "ignored"]
                    },
                    "statusDetails": {
                      "type": "object"
                    },
                    "subscriptionDetails": {
                      "type": "object",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "userCount": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "annotations": [],
                  "assignedTo": null,
                  "count": "1",
                  "culprit": "raven.scripts.runner in main",
                  "firstSeen": "2018-11-06T21:19:55Z",
                  "hasSeen": false,
                  "id": "1",
                  "isBookmarked": false,
                  "isPublic": false,
                  "isSubscribed": true,
                  "lastSeen": "2018-11-06T21:19:55Z",
                  "level": "error",
                  "logger": null,
                  "metadata": {
                    "title": "This is an example Python exception"
                  },
                  "numComments": 0,
                  "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                  "project": {
                    "id": "2",
                    "name": "Pump Station",
                    "slug": "pump-station"
                  },
                  "shareId": null,
                  "shortId": "PUMP-STATION-1",
                  "status": "unresolved",
                  "statusDetails": {},
                  "subscriptionDetails": null,
                  "title": "This is an example Python exception",
                  "type": "default",
                  "userCount": 0
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["event:write"]
          }
        ]
      },
      "delete": {
        "tags": ["Events"],
        "description": "Removes an individual issue.",
        "operationId": "Remove an Issue",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": ["event:admin"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/": {
      "get": {
        "tags": ["Releases"],
        "description": "Return a list of releases for a given organization.",
        "operationId": "List an Organization's Releases",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "This parameter can be used to create a \"starts with\" filter for the version.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "authors",
                      "commitCount",
                      "data",
                      "dateCreated",
                      "dateReleased",
                      "deployCount",
                      "firstEvent",
                      "lastCommit",
                      "lastDeploy",
                      "lastEvent",
                      "newGroups",
                      "owner",
                      "projects",
                      "ref",
                      "shortVersion",
                      "version",
                      "url"
                    ],
                    "properties": {
                      "authors": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "commitCount": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "data": {
                        "type": "object"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateReleased": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "deployCount": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "firstEvent": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "lastCommit": {
                        "type": "object",
                        "nullable": true
                      },
                      "lastDeploy": {
                        "type": "object",
                        "required": [
                          "environment",
                          "name",
                          "dateStarted",
                          "dateFinished",
                          "url",
                          "id"
                        ],
                        "properties": {
                          "environment": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "dateStarted": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "dateFinished": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "url": {
                            "type": "string",
                            "nullable": true
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "lastEvent": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "newGroups": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "owner": {
                        "type": "object",
                        "nullable": true
                      },
                      "projects": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ref": {
                        "type": "string",
                        "nullable": true
                      },
                      "shortVersion": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:20:08.033Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": null,
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": null,
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Pump Station",
                        "slug": "pump-station"
                      }
                    ],
                    "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                    "shortVersion": "2.0rc2",
                    "url": null,
                    "version": "2.0rc2"
                  },
                  {
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:19:58.559Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": "2018-11-06T21:19:58.639Z",
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": "2018-11-06T21:19:58.639Z",
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Prime Mover",
                        "slug": "prime-mover"
                      }
                    ],
                    "ref": null,
                    "shortVersion": "2b6af31",
                    "url": null,
                    "version": "2b6af31b2edccc73a629108b17344dfe20858780"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Permission Denied"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "post": {
        "tags": ["Releases"],
        "description": "Create a new release for the given organization.  Releases are used by\nSentry to improve its error reporting abilities by correlating\nfirst seen events with the release that might have introduced the\nproblem.\nReleases are also necessary for source maps and other debug features\nthat require manual upload for functioning well.",
        "operationId": "Create a New Release for an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["version", "projects"],
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "A version identifier for this release. Can be a version number, a commit hash, etc.",
                    "example": "2.0rc2"
                  },
                  "ref": {
                    "type": "string",
                    "description": "An optional commit reference. This is useful if a tagged version has been provided.",
                    "example": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb"
                  },
                  "url": {
                    "type": "string",
                    "description": "A URL that points to the release. This can be the path to an online interface to the source code for instance"
                  },
                  "projects": {
                    "type": "array",
                    "description": "A list of project slugs that are involved in this release.",
                    "example": ["pump-station"],
                    "items": {
                      "type": "string"
                    }
                  },
                  "dateReleased": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the release went live. If not provided the current time is assumed."
                  },
                  "commits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "patch_set": {
                          "type": "array",
                          "description": "A list of the files that have been changed in the commit. Specifying the patch_set is necessary to power suspect commits and suggested assignees.",
                          "items": {
                            "type": "object",
                            "required": ["path", "type"],
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the file. Both forward and backward slashes are supported."
                              },
                              "type": {
                                "type": "string",
                                "enum": ["A", "M", "D"],
                                "description": "The type of change that happened in the commit."
                              }
                            }
                          }
                        },
                        "repository": {
                          "type": "string",
                          "description": "The full name of the repository the commit belongs to. If this field is not given Sentry will generate a name in the form: u'organization-<organization_id>' (i.e. if the organization id is 123, then the generated repository name will be u'organization-123)."
                        },
                        "author_name": {
                          "type": "string",
                          "description": "The name of the commit author."
                        },
                        "author_email": {
                          "type": "string",
                          "description": "The email of the commit author. The commit author's email is required to enable the suggested assignee feature."
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The commit timestamp is used to sort the commits given. If a timestamp is not included, the commits will remain sorted in the order given."
                        },
                        "message": {
                          "type": "string",
                          "description": "The commit message."
                        },
                        "id": {
                          "type": "string",
                          "description": "The commit ID (the commit SHA)."
                        }
                      }
                    },
                    "description": "An optional list of commit data to be associated with the release. Commits must include parameters `id` (the SHA of the commit), and can optionally include `repository`, `message`, `patch_set`, `author_name`, `author_email`, and `timestamp`."
                  },
                  "refs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "repository": {
                          "type": "string",
                          "description": "The full name of the repository the commit belongs to."
                        },
                        "commit": {
                          "type": "string",
                          "description": "The current release's commit."
                        },
                        "previousCommit": {
                          "type": "string",
                          "description": "The previous release's commit."
                        }
                      }
                    },
                    "description": "An optional way to indicate the start and end commits for each repository included in a release. Head commits must include parameters `repository` and `commit` (the HEAD sha). They can optionally include `previousCommit` (the sha of the HEAD of the previous release), which should be specified if this is the first time you've sent commit data. `commit` may contain a range in the form of `previousCommit..commit`."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "authors",
                    "commitCount",
                    "data",
                    "dateCreated",
                    "dateReleased",
                    "deployCount",
                    "firstEvent",
                    "lastCommit",
                    "lastDeploy",
                    "lastEvent",
                    "newGroups",
                    "owner",
                    "projects",
                    "ref",
                    "shortVersion",
                    "version",
                    "url"
                  ],
                  "properties": {
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "commitCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "data": {
                      "type": "object"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateReleased": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "deployCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastCommit": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastDeploy": {
                      "type": "object",
                      "required": [
                        "environment",
                        "name",
                        "dateStarted",
                        "dateFinished",
                        "url",
                        "id"
                      ],
                      "properties": {
                        "environment": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "dateStarted": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateFinished": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "lastEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "newGroups": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "owner": {
                      "type": "object",
                      "nullable": true
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ref": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortVersion": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "authors": [],
                  "commitCount": 0,
                  "data": {},
                  "dateCreated": "2019-01-03T00:12:55.109Z",
                  "dateReleased": null,
                  "deployCount": 0,
                  "firstEvent": null,
                  "lastCommit": null,
                  "lastDeploy": null,
                  "lastEvent": null,
                  "newGroups": 0,
                  "owner": null,
                  "projects": [
                    {
                      "name": "Pump Station",
                      "slug": "pump-station"
                    }
                  ],
                  "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                  "shortVersion": "2.0rc2",
                  "url": null,
                  "version": "2.0rc2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/": {
      "get": {
        "tags": ["Releases"],
        "description": "Return a release for a given organization.",
        "operationId": "Retrieve an Organization's Releases",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "authors",
                    "commitCount",
                    "data",
                    "dateCreated",
                    "dateReleased",
                    "deployCount",
                    "firstEvent",
                    "lastCommit",
                    "lastDeploy",
                    "lastEvent",
                    "newGroups",
                    "owner",
                    "projects",
                    "ref",
                    "shortVersion",
                    "version",
                    "url"
                  ],
                  "properties": {
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "commitCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "data": {
                      "type": "object"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateReleased": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "deployCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastCommit": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastDeploy": {
                      "type": "object",
                      "required": [
                        "environment",
                        "name",
                        "dateStarted",
                        "dateFinished",
                        "url",
                        "id"
                      ],
                      "properties": {
                        "environment": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "dateStarted": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateFinished": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "lastEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "newGroups": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "owner": {
                      "type": "object",
                      "nullable": true
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ref": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortVersion": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "authors": [],
                  "commitCount": 0,
                  "data": {},
                  "dateCreated": "2018-11-06T21:20:08.033Z",
                  "dateReleased": null,
                  "deployCount": 0,
                  "firstEvent": null,
                  "lastCommit": null,
                  "lastDeploy": null,
                  "lastEvent": null,
                  "newGroups": 0,
                  "owner": null,
                  "projects": [
                    {
                      "name": "Pump Station",
                      "slug": "pump-station"
                    }
                  ],
                  "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                  "shortVersion": "2.0rc2",
                  "url": null,
                  "version": "2.0rc2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "put": {
        "tags": ["Releases"],
        "description": "Update a release for a given organization.",
        "operationId": "Update an Organization's Release",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ref": {
                    "type": "string",
                    "description": "An optional commit reference. This is useful if a tagged version has been provided.",
                    "example": "freshtofu"
                  },
                  "url": {
                    "type": "string",
                    "description": "A URL that points to the release. This can be the path to an online interface to the source code for instance.",
                    "example": "https://vcshub.invalid/user/project/refs/freshtofu"
                  },
                  "dateReleased": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the release went live. If not provided the current time is assumed."
                  },
                  "commits": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "An optional list of commit data to be associated with the release. Commits must include parameters `id` (the sha of the commit), and can optionally include `repository`, `message`, `author_name`, `author_email`, and `timestamp`."
                  },
                  "refs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "An optional way to indicate the start and end commits for each repository included in a release. Head commits must include parameters `repository` and `commit` (the HEAD sha). They can optionally include `previousCommit` (the sha of the HEAD of the previous release), which should be specified if this is the first time you've sent commit data."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "authors",
                    "commitCount",
                    "data",
                    "dateCreated",
                    "dateReleased",
                    "deployCount",
                    "firstEvent",
                    "lastCommit",
                    "lastDeploy",
                    "lastEvent",
                    "newGroups",
                    "owner",
                    "projects",
                    "ref",
                    "shortVersion",
                    "version",
                    "url"
                  ],
                  "properties": {
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "commitCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "data": {
                      "type": "object"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateReleased": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "deployCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastCommit": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastDeploy": {
                      "type": "object",
                      "required": [
                        "environment",
                        "name",
                        "dateStarted",
                        "dateFinished",
                        "url",
                        "id"
                      ],
                      "properties": {
                        "environment": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "dateStarted": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateFinished": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "lastEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "newGroups": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "owner": {
                      "type": "object",
                      "nullable": true
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ref": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortVersion": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "authors": [],
                  "commitCount": 0,
                  "data": {},
                  "dateCreated": "2019-01-03T00:12:55.109Z",
                  "dateReleased": null,
                  "deployCount": 0,
                  "firstEvent": null,
                  "lastCommit": null,
                  "lastDeploy": null,
                  "lastEvent": null,
                  "newGroups": 0,
                  "owner": null,
                  "projects": [
                    {
                      "name": "Pump Station",
                      "slug": "pump-station"
                    }
                  ],
                  "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                  "shortVersion": "2.0rc2",
                  "url": null,
                  "version": "2.0rc2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "delete": {
        "tags": ["Releases"],
        "description": "Delete a release for a given organization.",
        "operationId": "Delete an Organization's Release",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/files/": {
      "get": {
        "tags": ["Releases"],
        "description": "Return a list of files for a given release.",
        "operationId": "List an Organization's Release Files",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sha1",
                      "dist",
                      "name",
                      "dateCreated",
                      "headers",
                      "id",
                      "size"
                    ],
                    "properties": {
                      "sha1": {
                        "type": "string"
                      },
                      "dist": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "headers": {
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:20:22.894Z",
                    "dist": null,
                    "headers": {
                      "Content-Type": "text/plain; encoding=utf-8"
                    },
                    "id": "3",
                    "name": "/demo/goodbye.txt",
                    "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                    "size": 15
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "post": {
        "tags": ["Releases"],
        "description": "Upload a new organization release file.",
        "operationId": "Upload a New Organization Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name (full path) of the file.",
                    "example": "/demo/release.min.js"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The multipart encoded file.",
                    "example": "release.min.js"
                  },
                  "dist": {
                    "type": "string",
                    "description": "The name of the dist."
                  },
                  "header": {
                    "type": "string",
                    "description": "This parameter can be supplied multiple times to attach headers to the file. Each header is a string in the format `key:value`. For instance it can be used to define a content type."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/": {
      "get": {
        "tags": ["Releases"],
        "description": "Return a list of files for a given release.",
        "operationId": "List a Project's Release Files",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sha1",
                      "dist",
                      "name",
                      "dateCreated",
                      "headers",
                      "id",
                      "size"
                    ],
                    "properties": {
                      "sha1": {
                        "type": "string"
                      },
                      "dist": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "headers": {
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:20:22.894Z",
                    "dist": null,
                    "headers": {
                      "Content-Type": "text/plain; encoding=utf-8"
                    },
                    "id": "3",
                    "name": "/demo/goodbye.txt",
                    "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                    "size": 15
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "post": {
        "tags": ["Releases"],
        "description": "Upload a new project release file.",
        "operationId": "Upload a New Project Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name (full path) of the file.",
                    "example": "/demo/hello.min.js.map"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The multipart encoded file.",
                    "example": "hello.min.js.map"
                  },
                  "dist": {
                    "type": "string",
                    "description": "The name of the dist."
                  },
                  "header": {
                    "type": "string",
                    "description": "This parameter can be supplied multiple times to attach headers to the file. Each header is a string in the format `key:value`. For instance it can be used to define a content type."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:22.894Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "3",
                  "name": "/demo/goodbye.txt",
                  "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                  "size": 15
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/files/{file_id}/": {
      "get": {
        "tags": ["Releases"],
        "description": "Retrieve a file for a given release.",
        "operationId": "Retrieve an Organization Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:19.150Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "1",
                  "name": "/demo/message-for-you.txt",
                  "sha1": "2ef7bde608ce5404e97d5f042f95f89f1c232871",
                  "size": 12
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "put": {
        "tags": ["Releases"],
        "description": "Update an organization release file.",
        "operationId": "Update an Organization Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["version", "projects"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name (full path) of the file.",
                    "example": "/demo/goodbye.txt"
                  },
                  "dist": {
                    "type": "string",
                    "description": "The new name of the dist."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:22.894Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "3",
                  "name": "/demo/goodbye.txt",
                  "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                  "size": 15
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "delete": {
        "tags": ["Releases"],
        "description": "Delete a file for a given release.",
        "operationId": "Delete an Organization Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/{file_id}/": {
      "get": {
        "tags": ["Releases"],
        "description": "Retrieve a file for a given release.",
        "operationId": "Retrieve a Project Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "description": "The ID of the file to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:19.150Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "1",
                  "name": "/demo/message-for-you.txt",
                  "sha1": "2ef7bde608ce5404e97d5f042f95f89f1c232871",
                  "size": 12
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "put": {
        "tags": ["Releases"],
        "description": "Update a project release file.",
        "operationId": "Update a Project Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["version", "projects"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name (full path) of the file.",
                    "example": "/demo/goodbye.txt"
                  },
                  "dist": {
                    "type": "string",
                    "description": "The new name of the dist."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:22.894Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "3",
                  "name": "/demo/goodbye.txt",
                  "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                  "size": 15
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "delete": {
        "tags": ["Releases"],
        "description": "Delete a file for a given release.",
        "operationId": "Delete a Project Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/commits/": {
      "get": {
        "tags": ["Releases"],
        "description": "List an organization release's commits.",
        "operationId": "List an Organization Release's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["dateCreated", "id", "message"],
                    "properties": {
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "acbafc639127fd89d10f474520104517ff1d709e",
                    "message": "Initial commit from Create Next App"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/commits/": {
      "get": {
        "tags": ["Releases"],
        "description": "List a project release's commits.",
        "operationId": "List a Project Release's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["dateCreated", "id", "message"],
                    "properties": {
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "acbafc639127fd89d10f474520104517ff1d709e",
                    "message": "Initial commit from Create Next App"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/commitfiles/": {
      "get": {
        "tags": ["Releases"],
        "description": "Retrieve files changed in a release's commits",
        "operationId": "Retrieve Files Changed in a Release's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/resolved/": {
      "get": {
        "tags": ["Releases"],
        "description": "List issues to be resolved in a particular release.",
        "operationId": "List Issues to be Resolved in a Particular Release",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/deploys/": {
      "get": {
        "tags": ["Releases"],
        "description": "Return a list of deploys for a given release.",
        "operationId": "List a Release's Deploys",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "environment",
                      "name",
                      "dateStarted",
                      "dateFinished",
                      "url",
                      "id"
                    ],
                    "properties": {
                      "environment": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "dateStarted": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "dateFinished": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "environment": "prod",
                    "name": null,
                    "url": null,
                    "dateStarted": null,
                    "dateFinished": "2020-08-31T19:40:38.651670Z",
                    "id": "1234567"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      },
      "post": {
        "tags": ["Releases"],
        "description": "Create a deploy.",
        "operationId": "Create a New Deploy for an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["environment"],
                "properties": {
                  "environment": {
                    "type": "string",
                    "description": "The environment you're deploying to.",
                    "example": "prod"
                  },
                  "url": {
                    "type": "string",
                    "description": "The optional URL that points to the deploy."
                  },
                  "name": {
                    "type": "string",
                    "description": "The optional name of the deploy."
                  },
                  "dateStarted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the deploy started."
                  },
                  "dateFinished": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the deploy ended. If not provided, the current time is used."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "environment",
                    "name",
                    "dateStarted",
                    "dateFinished",
                    "url",
                    "id"
                  ],
                  "properties": {
                    "environment": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateStarted": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "dateFinished": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "environment": "prod",
                  "name": null,
                  "url": null,
                  "dateStarted": null,
                  "dateFinished": "2020-08-31T19:40:38.651670Z",
                  "id": "1234567"
                }
              }
            }
          },
          "208": {
            "description": "Already Reported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": ["project:releases"]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "auth_token": {
        "type": "http",
        "scheme": "bearer"
      },
      "dsn": {
        "type": "http",
        "scheme": "DSN"
      }
    }
  }
}
