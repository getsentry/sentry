#!/usr/bin/env node
/* eslint no-console:0 import/no-nodejs-modules:0 */
/* global process */
const fs = require('fs');
const {cpus} = require('os');

const CLIEngine = require('eslint').CLIEngine;
const Worker = require('jest-worker').default;

async function main() {
  const argv = process.argv.slice(2);
  const extensions = argv[1].split(',');

  const cli = new CLIEngine({
    fix: false,
    extensions,
    configFile: '.eslintrc.relax.js',
  });

  const numWorkers = Math.max(cpus().length - 1, 1);
  const eslintWorker = new Worker(require.resolve('../scripts/eslint-worker.js'), {
    numWorkers,
    setupArgs: [extensions],
    enableWorkerThreads: true,
  });

  const chunks = [];
  const chunkSize = Math.ceil((argv.length - 3) / numWorkers);
  for (const i = 3; i < argv.length; i += chunkSize) {
    chunks.push(eslintWorker.lintFiles(argv.slice(i, i + chunkSize)));
  }

  const reports = await Promise.all(chunks);
  const terminator = eslintWorker.end();
  const results = [].concat(...reports.map(report => report.results));

  // get the default formatter
  const consoleFormatter = cli.getFormatter();

  const otherFormatterType =
    argv.indexOf('--format=checkstyle') > -1 ? 'checkstyle' : null;

  // output to console
  console.log(consoleFormatter(results));

  await terminator;
  // Output to checkstyle format for zeus
  if (otherFormatterType) {
    const otherFormatter = cli.getFormatter(otherFormatterType);

    fs.writeFile('eslint.checkstyle.xml', otherFormatter(results), 'utf8', () => {
      const totalErrorCount = reports.reduce(
        (total, report) => total + report.errorCount
      );
      process.exit(totalErrorCount);
    });
  }
}

main();
