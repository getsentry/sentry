[build-system]
requires = ["setuptools>=40.2.0,<64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
# File filtering is taken care of in pre-commit.
line-length = 100
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 100
lines_between_sections = 1
known_first_party = "sentry"
skip = "migrations"

[tool.pytest.ini_options]
python_files = "test_*.py sentry/testutils/*"
# note: When updating the traceback format, make sure to update .github/pytest.json
# We don't use the celery pytest plugin.
addopts = "-ra --tb=short --strict-markers -p no:celery"
# TODO: --import-mode=importlib will become the default soon,
# currently we have a few relative imports that don't work with that.
markers = [
    "snuba: test requires access to snuba",
    "sentry_metrics: test requires access to sentry metrics",
    "symbolicator: test requires access to symbolicator",
]
selenium_driver = "chrome"
filterwarnings = [
    # Consider all warnings to be errors other than the ignored ones.
    "error",

    "ignore::django.utils.deprecation.RemovedInDjango30Warning",

    # At writing, the Google Bigtable Emulator relies on deprecated behavior
    # internally, this can be removed once a version containing this fix is
    # released: https://github.com/googleapis/python-bigtable/pull/246
    "ignore:The `channel` argument is deprecated; use `transport` instead.:PendingDeprecationWarning:google.cloud.bigtable*",

    # The following warning filters are for pytest only.
    # This is so we don't have to wrap most datetime objects in testing code
    # with django.utils.timezone.
    "ignore:DateTimeField.*naive datetime:RuntimeWarning",
    "ignore:.*sentry.digests.backends.dummy.DummyBackend.*:sentry.utils.warnings.UnsupportedBackend",

    # pytest has not yet implemented the replacement for this yet
    "ignore:The --looponfail command line argument.*",
]
looponfailroots = ["src", "tests"]

[tool.mypy]
python_version = "3.8"
mypy_path = ["fixtures/stubs-for-mypy"]
plugins = ["pydantic.mypy"]
files = ["."]
exclude = ["^.venv/", "^self-hosted/"]

# minimal strictness settings
check_untyped_defs = true
no_implicit_reexport = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true

# these have py.typed but incorrect types
[[tool.mypy.overrides]]
module = [
    # TODO: remove after https://github.com/getsentry/sentry/pull/50508
    "docker.*",
    # TODO: these cause type errors when followed
    "snuba_sdk.*",
    # this package marks itself as typed but has no annotations
    "google.cloud.bigtable.*",
    # https://github.com/googleapis/python-api-core/pull/453
    "google.api_core.retry",
]
follow_imports = "skip"

# https://github.com/python/mypy/issues/15343
[[tool.mypy.overrides]]
module = "google.*"
ignore_missing_imports = true

# python3 -m tools.mypy_helpers.make_stub_ignores
# begin: missing 3rd party stubs
# - add .pyi files to fixtures/stubs-for-mypy
# - or find a 3rd party stub
[[tool.mypy.overrides]]
module = [
    "amqp.*",
    "boto3.*",
    "botocore.client.*",
    "botocore.exceptions.*",
    "celery.*",
    "codeowners.*",
    "confluent_kafka.*",
    "csp.middleware.*",
    "cssselect.*",
    "datadog.*",
    "django_zero_downtime_migrations.backends.postgres.schema.*",
    "docker.errors.*",
    "email_reply_parser.*",
    "fido2.*",
    "honcho.manager.*",
    "honcho.printer.*",
    "isodate.*",
    "kombu.*",
    "mistune.*",
    "mmh3.*",
    "onelogin.saml2.auth.*",
    "onelogin.saml2.constants.*",
    "onelogin.saml2.idp_metadata_parser.*",
    "openapi_core.*",
    "petname.*",
    "phabricator.*",
    "phonenumbers.*",
    "progressbar.*",
    "pytest_benchmark.*",
    "pytest_rerunfailures.*",
    "rapidjson.*",
    "rb.*",
    "rediscluster.*",
    "requests_oauthlib.*",
    "sentry_relay.*",
    "sqlparse.*",
    "statsd.*",
    "symbolic.*",
    "toronado.*",
    "u2flib_server.model.*",
    "ua_parser.user_agent_parser.*",
    "unidiff.*",
    "uwsgi.*",
    "uwsgidecorators.*",
]
ignore_missing_imports = true
# end: missing 3rd party stubs

# python3 -m tools.mypy_helpers.make_module_ignores
# begin: sentry modules with typing issues
# end: sentry modules with typing issues
