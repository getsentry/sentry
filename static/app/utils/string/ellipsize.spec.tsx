import {ellipsize} from 'sentry/utils/string/ellipsize';

describe('ellipsize', () => {
  it.each([
    ['hello', 10, 'hello'],
    ['test', 5, 'test'],
    ['a', 2, 'a'],
    ['hello', 5, 'hello'],
    ['test', 4, 'test'],
    ['a', 1, 'a'],
    ['hello world', 8, 'hello woâ€¦'],
    ['this is a long string', 10, 'this is aâ€¦'],
    ['abcdefghijk', 5, 'abcdeâ€¦'],
    ['hello', 1, 'hâ€¦'],
    ['ab', 1, 'aâ€¦'],
    ['abc', 1, 'aâ€¦'],
    ['hello', 0, 'â€¦'],
    ['hello there', 6, 'helloâ€¦'],
    ['  hello there', 6, '  hellâ€¦'],
    ['', 0, ''],
    ['hello', -1, ''],
    ['hello', -5, ''],
    ['hello@world.com', 10, 'hello@worlâ€¦'],
    ['line1\nline2\nline3', 12, 'line1\nline2â€¦'],
    ['cafÃ©', 3, 'cafâ€¦'],
    ['rÃ©sumÃ©', 5, 'rÃ©sumâ€¦'],
    ['ðŸ‘‹ hello world', 8, 'ðŸ‘‹ helloâ€¦'],
    ['   ', 2, ''],
    ['  hello  ', 6, '  hellâ€¦'],
    ['\t\n\r', 2, ''],
  ])('should truncate "%s" with maxLength %d to "%s"', (input, maxLength, expected) => {
    expect(ellipsize(input, maxLength)).toBe(expected);
  });
});
