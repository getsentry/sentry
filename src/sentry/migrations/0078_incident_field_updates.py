# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-05-15 20:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion

import sentry.db.models.fields.foreignkey
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def delete_incidents_with_no_alert_rule(apps, schema_editor):
    # These are only test incidents that we don't care about, should be fine to remove
    # these so that we can require there always be an AlertRule associated with
    # Incidents going forward
    Incident = apps.get_model("sentry", "Incident")
    for incident in RangeQuerySetWrapperWithProgressBar(
        Incident.objects.filter(alert_rule__isnull=True)
    ):
        incident.delete()


class Migration(migrations.Migration):
    # This flag is used to mark that a migration shouldn't be automatically run in
    # production. We set this to True for operations that we think are risky and want
    # someone from ops to run manually and monitor.
    # General advice is that if in doubt, mark your migration as `is_dangerous`.
    # Some things you should always mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that
    #   they can be monitored. Since data migrations will now hold a transaction open
    #   this is even more important.
    # - Adding columns to highly active tables, even ones that are NULL.
    is_dangerous = False

    # This flag is used to decide whether to run this migration in a transaction or not.
    # By default we prefer to run in a transaction, but for migrations where you want
    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
    # want to create an index concurrently when adding one to an existing table.
    atomic = False

    dependencies = [("sentry", "0077_alert_query_col_drop_state")]

    operations = [
        migrations.RunPython(
            delete_incidents_with_no_alert_rule, reverse_code=migrations.RunPython.noop
        ),
        migrations.RemoveField(model_name="incident", name="groups"),
        migrations.AlterField(
            model_name="incident",
            name="aggregation",
            field=models.PositiveSmallIntegerField(default=0, null=True),
        ),
        migrations.AlterField(
            model_name="incident",
            name="alert_rule",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="sentry.AlertRule"
            ),
        ),
        migrations.AlterField(
            model_name="incident", name="query", field=models.TextField(null=True)
        ),
        migrations.AlterField(
            model_name="incidentgroup",
            name="incident",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.CASCADE,
                to="sentry.Incident",
            ),
        ),
    ]
