# Generated by Django 5.2.1 on 2025-08-06 20:24

import django.db.models.deletion
from django.db import migrations, models

import sentry.db.models.fields.bounded
import sentry.db.models.fields.foreignkey
from sentry.new_migrations.migrations import CheckedMigration


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = False

    dependencies = [
        ("sentry", "0963_scheduleddeletion_json_field"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommitComparison",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                (
                    "organization_id",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(db_index=True),
                ),
                ("head_sha", models.CharField(max_length=64)),
                ("base_sha", models.CharField(max_length=64, null=True)),
                ("provider", models.CharField(max_length=64, null=True)),
                ("head_repo_name", models.CharField(max_length=255)),
                ("base_repo_name", models.CharField(max_length=255, null=True)),
                ("head_ref", models.CharField(max_length=255, null=True)),
                ("base_ref", models.CharField(max_length=255, null=True)),
                ("pr_number", models.PositiveIntegerField(null=True)),
                (
                    "base_commit",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="base_commit_set",
                        to="sentry.commit",
                    ),
                ),
                (
                    "head_commit",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="head_commit_set",
                        to="sentry.commit",
                    ),
                ),
            ],
            options={
                "db_table": "sentry_commitcomparison",
                "indexes": [
                    models.Index(
                        fields=["organization_id", "head_repo_name", "head_sha"],
                        name="sentry_comm_organiz_d9bea9_idx",
                    ),
                    models.Index(
                        fields=["organization_id", "head_repo_name", "base_sha"],
                        name="sentry_comm_organiz_2c6634_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("base_sha__isnull", False)),
                        fields=("organization_id", "head_sha", "base_sha"),
                        name="unique_commit_comparison",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("base_sha__isnull", True)),
                        fields=("organization_id", "head_sha"),
                        name="unique_single_commit",
                    ),
                ],
            },
        ),
    ]
