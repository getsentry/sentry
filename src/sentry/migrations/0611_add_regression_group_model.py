# Generated by Django 3.2.23 on 2023-12-01 17:39

from django.db import migrations, models

import sentry.db.models.fields.bounded
from sentry.new_migrations.migrations import CheckedMigration


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_post_deployment = False

    dependencies = [
        ("sentry", "0610_remove_notification_setting_table"),
    ]

    operations = [
        migrations.CreateModel(
            name="RegressionGroup",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("date_regressed", models.DateTimeField()),
                ("date_resolved", models.DateTimeField(null=True)),
                ("version", models.IntegerField()),
                ("active", models.BooleanField(default=True)),
                (
                    "project_id",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(db_index=True),
                ),
                ("type", sentry.db.models.fields.bounded.BoundedIntegerField()),
                ("fingerprint", models.CharField(max_length=32)),
                ("baseline", models.FloatField()),
                ("regressed", models.FloatField()),
            ],
            options={
                "unique_together": {("type", "project_id", "fingerprint", "version")},
                "index_together": {("type", "project_id", "fingerprint", "active")},
            },
        ),
    ]
