# Generated by Django 3.2.23 on 2024-01-19 05:45
from typing import Any

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils import json
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def validate_payload(outbox) -> bool:
    payload = outbox.payload
    body: str = payload.get("body", None)
    if not payload or not body:
        return False

    headers = payload.get("headers", None)
    if not headers or "application/json" not in headers.get("Content-Type", ""):
        return False

    return True


def get_integration_id_from_payload(parsed_body, IntegrationModel) -> int | None:
    installation_id = parsed_body.get("installation", {}).get("id", None)
    if not installation_id:
        return None

    integration = IntegrationModel.objects.filter(
        external_id=installation_id, provider="github"
    ).first()

    return integration.id if integration else None


def backfill_webhook_outbox_shard_ids(apps, schema_editor):
    ControlOutbox = apps.get_model("sentry", "ControlOutbox")
    Integration = apps.get_model("sentry", "Integration")

    for outbox in RangeQuerySetWrapperWithProgressBar(
        ControlOutbox.objects.filter(
            category=1,
            shard_scope=2,  # Webhook proxy category  # Webhook scope
            shard_identifier=1,  # GitHub Provider Identity
        )
    ):
        if not validate_payload(outbox=outbox):
            continue

        body: dict[str, Any] = json.loads(outbox.payload.get("body"))

        integration_id = get_integration_id_from_payload(
            parsed_body=body, IntegrationModel=Integration
        )
        if integration_id is None:
            continue

        outbox.shard_identifier = integration_id
        try:
            outbox.save()
        except Exception:
            pass


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = True

    dependencies = [
        ("sentry", "0633_add_priority_locked_at_to_groupedmessage"),
    ]

    operations = [
        migrations.RunPython(
            backfill_webhook_outbox_shard_ids,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_controloutbox", "sentry_integration"]},
        )
    ]
