# Generated by Django 5.0.2 on 2024-03-12 14:45

from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def clear_missed_timeout_as_error(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    MonitorEnvironment = apps.get_model("sentry", "MonitorEnvironment")

    # Status from MonitorStatus:
    #
    # 6: MonitorStatus.MISSED_CHECKIN
    # 7: MonitorStatus.TIMEOUT
    monitors_missed_timeout = MonitorEnvironment.objects.filter(status__in=(6, 7))

    for monitor_env in RangeQuerySetWrapperWithProgressBar(monitors_missed_timeout):
        # Set to MonitorStatus.ERROR
        monitor_env.status = 5
        monitor_env.save(update_fields=["status"])


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_post_deployment = True

    dependencies = [
        ("sentry", "0673_add_env_muted_to_broken_detection"),
    ]

    operations = [
        migrations.RunPython(
            clear_missed_timeout_as_error,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_monitorenvironment"]},
        ),
    ]
