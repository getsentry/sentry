# Generated by Django 2.2.28 on 2022-11-02 01:54

from django.db import migrations, models

from sentry.new_migrations.migrations import CheckedMigration


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    #
    # XXX(epurkhiser): For some reason in producton this migration is failing
    #                  to run. We're mmarking as dangersous so we can run some
    #                  custom SQL instead.
    #
    #                  psycopg2.errors.UndefinedObject:
    #                  UndefinedObject('constraint
    #                  "sentry_savedsearch_organization_id_48379b0f7f6794f" of
    #                  relation "sentry_savedsearch" does not exist\n')
    is_dangerous = True

    # This flag is used to decide whether to run this migration in a transaction or not. Generally
    # we don't want to run in a transaction here, since for long running operations like data
    # back-fills this results in us locking an increasing number of rows until we finally commit.
    atomic = False

    dependencies = [
        ("sentry", "0340_drop_deprecated_savedsearch_columns_db_op"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="savedsearch",
            name="sentry_savedsearch_is_global_6793a2f9e1b59b95",
        ),
        migrations.AlterUniqueTogether(
            name="savedsearch",
            unique_together=set(),
        ),
        migrations.AddConstraint(
            model_name="savedsearch",
            constraint=models.UniqueConstraint(
                condition=models.Q(visibility="owner_pinned"),
                fields=("organization", "owner", "type"),
                name="sentry_savedsearch_pinning_constraint",
            ),
        ),
    ]
