# Generated by Django 2.2.28 on 2023-05-08 15:23

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar

ACTOR_TEAM_TYPE = 0
ACTOR_USER_TYPE = 1


def backfill_notificationsetting(apps, schema_editor):
    NotificationSetting = apps.get_model("sentry", "NotificationSetting")
    Actor = apps.get_model("sentry", "Actor")

    # Only modify records that don't have a user or team set.
    queryset = NotificationSetting.objects.filter(user_id__isnull=True, team_id__isnull=True)
    for setting in RangeQuerySetWrapperWithProgressBar(queryset):
        actor = Actor.objects.filter(id=setting.target_id).first()
        if actor:
            if actor.type == ACTOR_TEAM_TYPE and actor.team_id and not setting.team_id:
                setting.team_id = actor.team_id
                setting.save(update_fields=["team_id"])
            elif actor.type == ACTOR_USER_TYPE and actor.user_id and not setting.user_id:
                setting.user_id = actor.user_id
                setting.save(update_fields=["user_id"])


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = True

    dependencies = [
        ("sentry", "0438_break_inviter_fk_organizationmember"),
    ]

    operations = [
        migrations.RunPython(
            backfill_notificationsetting,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_notificationsetting", "sentry_actor"]},
        )
    ]
