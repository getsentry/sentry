# Generated by Django 3.2.20 on 2023-09-20 11:02

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import sentry.db.models.fields.bounded
import sentry.db.models.fields.foreignkey
from sentry.new_migrations.migrations import CheckedMigration


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = False

    dependencies = [
        ("sentry", "0558_add_organization_member_team_replica"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomDynamicSamplingRule",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_active", models.BooleanField(default=True)),
                ("is_org_level", models.BooleanField(default=False)),
                ("rule_id", models.IntegerField(default=0)),
                ("condition", models.TextField()),
                ("sample_rate", models.FloatField(default=0.0)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField()),
                ("num_samples", models.IntegerField()),
                ("condition_hash", models.CharField(max_length=40)),
                (
                    "organization",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sentry.organization"
                    ),
                ),
            ],
            options={
                "db_table": "sentry_customdynamicsamplingrule",
            },
        ),
        migrations.CreateModel(
            name="CustomDynamicSamplingRuleProject",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                (
                    "custom_dynamic_sampling_rule",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sentry.customdynamicsamplingrule",
                    ),
                ),
                (
                    "project",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sentry.project"
                    ),
                ),
            ],
            options={
                "db_table": "sentry_customdynamicsamplingruleproject",
                "unique_together": {("custom_dynamic_sampling_rule", "project")},
            },
        ),
        migrations.AddField(
            model_name="customdynamicsamplingrule",
            name="projects",
            field=models.ManyToManyField(
                related_name="custom_dynamic_sampling_rules",
                through="sentry.CustomDynamicSamplingRuleProject",
                to="sentry.Project",
            ),
        ),
        migrations.AddIndex(
            model_name="customdynamicsamplingrule",
            index=models.Index(
                condition=models.Q(("is_active", True)), fields=["organization"], name="org_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customdynamicsamplingrule",
            index=models.Index(
                condition=models.Q(("is_active", True)), fields=["end_date"], name="end_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customdynamicsamplingrule",
            index=models.Index(
                condition=models.Q(("is_active", True)),
                fields=["condition_hash"],
                name="condition_hash_idx",
            ),
        ),
    ]
