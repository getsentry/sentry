# Generated by Django 3.2.20 on 2023-08-09 08:09

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def delete_flat_files(apps, schema_editor):
    FlatFileIndexState = apps.get_model("sentry", "FlatFileIndexState")
    ArtifactBundleFlatFileIndex = apps.get_model("sentry", "ArtifactBundleFlatFileIndex")

    # step 1: truncate all of `FlatFileIndexState`:
    FlatFileIndexState.objects.raw("TRUNCATE sentry_flatfileindexstate")

    # step 2: delete all the associated `File`s,
    # and delete all the `ArtifactBundleFlatFileIndex` records:
    for obj in RangeQuerySetWrapperWithProgressBar(
        ArtifactBundleFlatFileIndex.objects.select_related("flat_file_index").all()
    ):
        # NOTE: this data migration only works as long as `flat_file_index` still
        # exists on the Model.
        if obj.flat_file_index:
            obj.flat_file_index.delete()
        obj.delete()


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = True

    dependencies = [
        ("sentry", "0527_backfill_next_checkin_latest"),
    ]

    operations = [
        migrations.RunPython(
            delete_flat_files,
            migrations.RunPython.noop,
            hints={
                "tables": [
                    "sentry_flatfileindexstate",
                    "sentry_artifactbundleflatfileindex",
                ]
            },
        ),
    ]
