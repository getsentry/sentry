# Generated by Django 2.2.28 on 2023-03-08 01:21

from django.db import migrations

import sentry.db.models.fields.hybrid_cloud_foreign_key
from sentry.new_migrations.migrations import CheckedMigration


def apikey_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="apikey",
            name="organization",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.Organization", db_constraint=False, db_index=True, null=False
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="apikey",
            name="organization",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.Organization", db_index=True, on_delete="CASCADE", null=False
            ),
        ),
        migrations.RenameField(
            model_name="apikey",
            old_name="organization",
            new_name="organization_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def authprovider_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="authprovider",
            name="organization",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.Organization",
                db_constraint=False,
                db_index=True,
                null=False,
                unique=True,
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="authprovider",
            name="organization",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.Organization", db_index=True, on_delete="CASCADE", null=False, unique=True
            ),
        ),
        migrations.RenameField(
            model_name="authprovider",
            old_name="organization",
            new_name="organization_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def organizationintegration_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="organizationintegration",
            name="organization",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.Organization", db_constraint=False, db_index=True, null=False
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="organizationintegration",
            name="organization",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.Organization", db_index=True, on_delete="CASCADE", null=False
            ),
        ),
        migrations.RenameField(
            model_name="organizationintegration",
            old_name="organization",
            new_name="organization_id",
        ),
        migrations.AlterUniqueTogether(
            "organizationintegration", (("organization_id", "integration"),)
        ),
        migrations.RemoveField(
            model_name="integration",
            name="organizations",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def sentryapp_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="sentryapp",
            name="owner",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.Organization", db_constraint=False, db_index=True, null=False
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="sentryapp",
            name="owner",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.Organization", db_index=True, on_delete="CASCADE", null=False
            ),
        ),
        migrations.RenameField(
            model_name="sentryapp",
            old_name="owner",
            new_name="owner_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def sentryappinstallation_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="sentryappinstallation",
            name="organization",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.Organization", db_constraint=False, db_index=True, null=False
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="sentryappinstallation",
            name="organization",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.Organization", db_index=True, on_delete="CASCADE", null=False
            ),
        ),
        migrations.RenameField(
            model_name="sentryappinstallation",
            old_name="organization",
            new_name="organization_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def sentryappinstallationforprovider_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="sentryappinstallationforprovider",
            name="organization",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.Organization", db_constraint=False, db_index=True, null=False
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="sentryappinstallationforprovider",
            name="organization",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.Organization", db_index=True, on_delete="CASCADE", null=False
            ),
        ),
        migrations.RenameField(
            model_name="sentryappinstallationforprovider",
            old_name="organization",
            new_name="organization_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def organizationaccessrequest_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="organizationaccessrequest",
            name="requester",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.User", db_constraint=False, db_index=True, null=True
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="organizationaccessrequest",
            name="requester",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.User", db_index=True, on_delete="CASCADE", null=True
            ),
        ),
        migrations.RenameField(
            model_name="organizationaccessrequest",
            old_name="requester",
            new_name="requester_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def organizationonboardingtask_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="organizationonboardingtask",
            name="user",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.User", db_constraint=False, db_index=True, null=True
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="organizationonboardingtask",
            name="user",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.User", db_index=True, on_delete="SET_NULL", null=True
            ),
        ),
        migrations.RenameField(
            model_name="organizationonboardingtask",
            old_name="user",
            new_name="user_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def projectbookmark_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="projectbookmark",
            name="user",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.User", db_constraint=False, db_index=True, null=False
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="projectbookmark",
            name="user",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.User", db_index=True, on_delete="CASCADE", null=False
            ),
        ),
        migrations.RenameField(
            model_name="projectbookmark",
            old_name="user",
            new_name="user_id",
        ),
        migrations.AlterUniqueTogether(
            name="projectbookmark",
            unique_together={("project", "user_id")},
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def promptsactivity_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="promptsactivity",
            name="user",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.User", db_constraint=False, db_index=True, null=False
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="promptsactivity",
            name="user",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.User", db_index=True, on_delete="CASCADE", null=False
            ),
        ),
        migrations.RenameField(
            model_name="promptsactivity",
            old_name="user",
            new_name="user_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


def ruleactivity_migrations():
    database_operations = [
        migrations.AlterField(
            model_name="ruleactivity",
            name="user",
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                to="sentry.User", db_constraint=False, db_index=True, null=True
            ),
        ),
    ]

    state_operations = [
        migrations.AlterField(
            model_name="ruleactivity",
            name="user",
            field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                "sentry.User", db_index=True, on_delete="SET_NULL", null=True
            ),
        ),
        migrations.RenameField(
            model_name="ruleactivity",
            old_name="user",
            new_name="user_id",
        ),
    ]

    return database_operations + [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = False

    dependencies = [
        ("sentry", "0396_add_usecase_to_indexer"),
    ]

    operations = (
        apikey_migrations()
        + authprovider_migrations()
        + sentryapp_migrations()
        + sentryappinstallation_migrations()
        + sentryappinstallationforprovider_migrations()
        + organizationaccessrequest_migrations()
        + organizationonboardingtask_migrations()
        + projectbookmark_migrations()
        + promptsactivity_migrations()
        + ruleactivity_migrations()
        + organizationintegration_migrations()
    )
