# Generated by Django 2.2.24 on 2021-11-05 19:14

from django.db import migrations

from sentry.utils import json
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def delete_itunes_credentials(apps, schema_editor):
    """
    Delete iTunes credentials from App Store Connect symbol sources in project options.
    """
    fields_to_delete = [
        "itunesCreated",
        "itunesSession",
        "orgPublicId",
        "orgName",
        "itunesUser",
        "itunesPassword",
    ]

    ProjectOption = apps.get_model("sentry", "ProjectOption")
    for project_option in RangeQuerySetWrapperWithProgressBar(
        ProjectOption.objects.filter(key="sentry:symbol_sources")
    ):
        symbol_sources = json.loads(project_option.value or "[]")
        had_itunes_fields = False
        for config in symbol_sources:
            if config["type"] == "appStoreConnect":
                for field in fields_to_delete:
                    try:
                        del config[field]
                        had_itunes_fields = True
                    except KeyError:
                        continue
        if had_itunes_fields:
            new_sources = json.dumps(symbol_sources)
            project_option.value = new_sources
            project_option.save()


class Migration(migrations.Migration):
    # This flag is used to mark that a migration shouldn't be automatically run in
    # production. We set this to True for operations that we think are risky and want
    # someone from ops to run manually and monitor.
    # General advice is that if in doubt, mark your migration as `is_dangerous`.
    # Some things you should always mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that
    #   they can be monitored. Since data migrations will now hold a transaction open
    #   this is even more important.
    # - Adding columns to highly active tables, even ones that are NULL.
    is_dangerous = True

    # This flag is used to decide whether to run this migration in a transaction or not.
    # By default we prefer to run in a transaction, but for migrations where you want
    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
    # want to create an index concurrently when adding one to an existing table.
    # You'll also usually want to set this to `False` if you're writing a data
    # migration, since we don't want the entire migration to run in one long-running
    # transaction.
    atomic = False

    dependencies = [
        ("sentry", "0244_organization_and_integration_foreign_keys"),
    ]

    operations = [
        migrations.RunPython(
            delete_itunes_credentials,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_projectoptions"]},
        )
    ]
