# Generated by Django 5.2.1 on 2025-06-02 19:33

from typing import Any

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration


def backfill_dashboard_organization(apps: Any, _schema_editor: Any) -> None:
    """
    Backfill the organization field for DashboardFavoriteUser objects for existing favorites.
    """
    DashboardFavoriteUser = apps.get_model("sentry", "DashboardFavoriteUser")

    batch_size = 1000
    favorites_to_update = []

    for favorite in (
        DashboardFavoriteUser.objects.filter(organization__isnull=True)
        .select_related("dashboard")
        .iterator(chunk_size=batch_size)
    ):
        favorite.organization = favorite.dashboard.organization
        favorites_to_update.append(favorite)

        if len(favorites_to_update) >= batch_size:
            DashboardFavoriteUser.objects.bulk_update(
                favorites_to_update, ["organization"], batch_size=batch_size
            )
            favorites_to_update = []

    # Update remaining items
    if favorites_to_update:
        DashboardFavoriteUser.objects.bulk_update(
            favorites_to_update, ["organization"], batch_size=batch_size
        )


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("sentry", "0922_dashboard_starred_add_position_column_and_constraint"),
    ]

    operations = [
        migrations.RunPython(
            code=backfill_dashboard_organization,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_dashboardfavoriteuser"]},
        ),
    ]
