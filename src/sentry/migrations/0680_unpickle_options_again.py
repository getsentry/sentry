# Generated by Django 2.2.28 on 2023-05-19 17:25

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def _backfill_option(apps, schema_editor):
    Option = apps.get_model("sentry", "Option")

    for obj in RangeQuerySetWrapperWithProgressBar(Option.objects.all()):
        # load pickle, save json
        obj.save(update_fields=["value"])


def _backfill_controloption(apps, schema_editor):
    ControlOption = apps.get_model("sentry", "ControlOption")

    for obj in RangeQuerySetWrapperWithProgressBar(ControlOption.objects.all()):
        # load pickle, save json
        obj.save(update_fields=["value"])


def _backfill_organizationoption(apps, schema_editor):
    cls = apps.get_model("sentry", "OrganizationOption")

    for obj in RangeQuerySetWrapperWithProgressBar(cls.objects.all()):
        # load pickle, save json
        obj.save(update_fields=["value"])


def _backfill_useroption(apps, schema_editor):
    cls = apps.get_model("sentry", "UserOption")

    for obj in RangeQuerySetWrapperWithProgressBar(cls.objects.all()):
        # load pickle, save json
        obj.save(update_fields=["value"])


class Migration(CheckedMigration):
    # data migration: must be run out of band
    is_dangerous = True

    # data migration: run outside of a transaction
    atomic = False

    dependencies = [
        ("sentry", "0679_add_query_sub_fk_to_aar_activations"),
    ]

    operations = [
        migrations.RunPython(
            _backfill_useroption,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_useroption"]},
        ),
        migrations.RunPython(
            _backfill_organizationoption,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_organizationoptions"]},
        ),
        migrations.RunPython(
            _backfill_controloption,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_controloption"]},
        ),
        migrations.RunPython(
            _backfill_option,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_option"]},
        ),
    ]
