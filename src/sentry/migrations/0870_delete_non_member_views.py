# Generated by Django 5.1.7 on 2025-04-24 17:34

from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def delete_non_member_views(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    """
    Deletes GroupSearchView entries where the associated user is not
    a member of the associated organization.
    """
    GroupSearchView = apps.get_model("sentry", "GroupSearchView")
    OrganizationMember = apps.get_model("sentry", "OrganizationMember")

    for view in RangeQuerySetWrapperWithProgressBar(GroupSearchView.objects.all()):
        is_member = OrganizationMember.objects.filter(
            user_id=view.user_id, organization_id=view.organization_id
        ).exists()

        if not is_member:
            view.delete()


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("sentry", "0869_fix_drift_db_default_pt2"),
    ]

    operations = [
        migrations.RunPython(
            delete_non_member_views,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_groupsearchview", "sentry_organizationmember"]},
        )
    ]
