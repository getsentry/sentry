# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-04-20 20:03
from __future__ import unicode_literals

from django.db import migrations

def has_access(org, user, access=None):
    queryset = org.member_set.filter(user=user)
    if access is not None:
        queryset = queryset.filter(type__lte=access)

    return queryset.exists()


def remove_tracked_superuser_views(apps, schema_editor):
    """
    We recently added code to only track alert views of people in the org + member of associated alert projects.
    This migration removes all of the views we've tracked before adding this change (i.e. superuser views of orgs we're not a part of).
    """
    IncidentSeen = apps.get_model("sentry", "IncidentSeen")
    tracked_views = IncidentSeen.objects.all().select_related("user", "incident")
    for tracked_view in tracked_views:
        org_member = has_access(tracked_view.incident.organization, tracked_view.user)
        if not org_member:
            tracked_view.delete()


class Migration(migrations.Migration):
    # This flag is used to mark that a migration shouldn't be automatically run in
    # production. We set this to True for operations that we think are risky and want
    # someone from ops to run manually and monitor.
    # General advice is that if in doubt, mark your migration as `is_dangerous`.
    # Some things you should always mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that
    #   they can be monitored. Since data migrations will now hold a transaction open
    #   this is even more important.
    # - Adding columns to highly active tables, even ones that are NULL.
    is_dangerous = False

    # This flag is used to decide whether to run this migration in a transaction or not.
    # By default we prefer to run in a transaction, but for migrations where you want
    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
    # want to create an index concurrently when adding one to an existing table.
    atomic = False


    dependencies = [
        ('sentry', '0068_project_default_flags'),
    ]

    operations = [
        migrations.RunPython(remove_tracked_superuser_views, reverse_code=migrations.RunPython.noop),
    ]
