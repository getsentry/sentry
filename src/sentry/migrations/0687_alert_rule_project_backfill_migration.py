# Generated by Django 5.0.3 on 2024-03-22 22:36

import logging

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration

logger = logging.getLogger(__name__)


def _backfill_alert_rule_projects(apps, schema_editor):
    QuerySubscriptions = apps.get_model("sentry", "QuerySubscription")
    AlertRuleProjects = apps.get_model("sentry", "AlertRuleProjects")

    for subscription in QuerySubscriptions.objects.all():

        snuba_query = subscription.snuba_query
        if not snuba_query:
            logger.warning(
                "QuerySubscription found with no snuba_query",
                extra={"query_subscription_id": subscription.id},
            )
            continue

        alert_rule = snuba_query.alertrule_set.get()

        existing_alert_rule_projects = AlertRuleProjects.objects.filter(alert_rule=alert_rule)
        if not existing_alert_rule_projects.exists() or (
            len(existing_alert_rule_projects) == 1
            and existing_alert_rule_projects.get().project != subscription.project
        ):
            if (
                existing_alert_rule_projects.exists()
                and existing_alert_rule_projects.get().project != subscription.project
            ):
                logger.warning(
                    "AlertRuleProject found with different project than subscription",
                    extra={"alert_rule_id": alert_rule.id},
                )
                existing_alert_rule_projects.delete()

            AlertRuleProjects.objects.create(
                alert_rule=alert_rule,
                project=subscription.project,
            )
        if existing_alert_rule_projects.exists() and len(existing_alert_rule_projects) == 1:
            logger.warning(
                "AlertRule found with multiple projects",
                extra={"alert_rule_id": alert_rule.id},
            )


class Migration(CheckedMigration):
    is_dangerous = True

    dependencies = [
        ("sentry", "0686_remove_config_from_checkin_state_operation"),
    ]

    operations = [
        # Run the data migration
        migrations.RunPython(
            _backfill_alert_rule_projects,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_alertruleprojects", "sentry_querysubscription"]},
        ),
    ]
