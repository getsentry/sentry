# Generated by Django 3.2.23 on 2023-11-14 01:30

import django.utils.timezone
from django.db import migrations, models

import sentry.db.models.fields.bounded
import sentry.db.models.fields.uuid
from sentry.new_migrations.migrations import CheckedMigration


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = False

    dependencies = [
        ("sentry", "0598_trivial_but_dangerous_1"),
    ]

    operations = [
        migrations.CreateModel(
            name="ControlImportChunk",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("date_updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now, null=True)),
                (
                    "import_uuid",
                    sentry.db.models.fields.uuid.UUIDField(db_index=True, max_length=32),
                ),
                ("model", models.CharField(db_index=True, max_length=64)),
                ("min_ordinal", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("max_ordinal", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("min_source_pk", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("max_source_pk", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                (
                    "min_inserted_pk",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(null=True),
                ),
                (
                    "max_inserted_pk",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(null=True),
                ),
                ("inserted_map", models.JSONField(default=dict)),
                ("existing_map", models.JSONField(default=dict)),
                ("overwrite_map", models.JSONField(default=dict)),
                ("inserted_identifiers", models.JSONField(default=dict)),
            ],
            options={
                "db_table": "sentry_controlimportchunk",
            },
        ),
        migrations.CreateModel(
            name="ControlImportChunkReplica",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("date_updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now, null=True)),
                (
                    "import_uuid",
                    sentry.db.models.fields.uuid.UUIDField(db_index=True, max_length=32),
                ),
                ("model", models.CharField(db_index=True, max_length=64)),
                ("min_ordinal", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("max_ordinal", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("min_source_pk", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("max_source_pk", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                (
                    "min_inserted_pk",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(null=True),
                ),
                (
                    "max_inserted_pk",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(null=True),
                ),
                ("inserted_map", models.JSONField(default=dict)),
                ("existing_map", models.JSONField(default=dict)),
                ("overwrite_map", models.JSONField(default=dict)),
                ("inserted_identifiers", models.JSONField(default=dict)),
            ],
            options={
                "db_table": "sentry_controlimportchunkreplica",
            },
        ),
        migrations.CreateModel(
            name="RegionImportChunk",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("date_updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now, null=True)),
                (
                    "import_uuid",
                    sentry.db.models.fields.uuid.UUIDField(db_index=True, max_length=32),
                ),
                ("model", models.CharField(db_index=True, max_length=64)),
                ("min_ordinal", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("max_ordinal", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("min_source_pk", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                ("max_source_pk", sentry.db.models.fields.bounded.BoundedBigIntegerField()),
                (
                    "min_inserted_pk",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(null=True),
                ),
                (
                    "max_inserted_pk",
                    sentry.db.models.fields.bounded.BoundedBigIntegerField(null=True),
                ),
                ("inserted_map", models.JSONField(default=dict)),
                ("existing_map", models.JSONField(default=dict)),
                ("overwrite_map", models.JSONField(default=dict)),
                ("inserted_identifiers", models.JSONField(default=dict)),
            ],
            options={
                "db_table": "sentry_regionimportchunk",
            },
        ),
    ]
