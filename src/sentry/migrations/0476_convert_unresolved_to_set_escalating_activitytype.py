# Generated by Django 2.2.28 on 2023-05-26 07:32

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.types.activity import ActivityType
from sentry.utils.query import RangeQuerySetWrapper


def convert_to_set_escalating(apps, schema_editor):
    Activity = apps.get_model("sentry", "Activity")

    for activity in RangeQuerySetWrapper(
        Activity.objects.filter(type=ActivityType.SET_UNRESOLVED.value)
    ):

        if not activity.data.get("forecast"):
            continue

        activity.type = ActivityType.SET_ESCALATING
        activity.save(update_fields=["type"])


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = True

    dependencies = [
        ("sentry", "0475_backfill_groupedmessage_unresolved_none_status"),
    ]

    operations = [
        migrations.RunPython(
            convert_to_set_escalating,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_activity"]},
        )
    ]
