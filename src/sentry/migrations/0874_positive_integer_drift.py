# Generated by Django 5.1.7 on 2025-04-29 14:35

from typing import LiteralString

from sentry.new_migrations.migrations import CheckedMigration
from sentry.new_migrations.monkey.special import SafeRunSQL


def _positive_integer_sql(table: LiteralString, column: LiteralString) -> list[SafeRunSQL]:
    return [
        SafeRunSQL(
            f"ALTER TABLE {table} DROP CONSTRAINT IF EXISTS {table}_{column}_check;\n"
            f"ALTER TABLE {table} ADD CONSTRAINT {table}_{column}_check CHECK (({column} >= 0)) NOT VALID;\n",
            reverse_sql="",
            hints={"tables": [table]},
        ),
        SafeRunSQL(
            f"ALTER TABLE {table} VALIDATE CONSTRAINT {table}_{column}_check;\n",
            reverse_sql="",
            hints={"tables": [table]},
            use_statement_timeout=False,
        ),
    ]


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("sentry", "0873_update_groupsearchview_visibility_default"),
    ]

    operations = [
        *_positive_integer_sql("auth_user", "avatar_type"),
        *_positive_integer_sql("sentry_alertruletriggeraction", "status"),
        *_positive_integer_sql("sentry_dashboardwidget", "dataset_source"),
        *_positive_integer_sql("sentry_discoversavedquery", "dataset"),
        *_positive_integer_sql("sentry_discoversavedquery", "dataset_source"),
        *_positive_integer_sql("sentry_pullrequest_comment", "comment_type"),
        *_positive_integer_sql("sentry_rule", "source"),
    ]
