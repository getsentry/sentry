# Generated by Django 5.2.1 on 2025-06-13 22:49

import django.contrib.postgres.constraints
from django.contrib.postgres.fields.ranges import RangeBoundary, RangeOperators
from django.db import migrations, models

import sentry.models.groupopenperiod
from sentry.new_migrations.migrations import CheckedMigration
from sentry.new_migrations.monkey.special import SafeRunSQL


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("sentry", "0929_no_pickle_authenticator"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                SafeRunSQL(
                    """\
                    ALTER TABLE "sentry_groupopenperiod" ADD CONSTRAINT "exclude_overlapping_date_start_end" EXCLUDE USING GIST ("group_id" WITH =, (TSTZRANGE("date_started", "date_ended", '[]')) WITH &&);
                    """,
                    reverse_sql="ALTER TABLE sentry_groupopenperiod DROP CONSTRAINT IF EXISTS exclude_overlapping_date_start_end;",
                    hints={"tables": ["sentry_groupopenperiod"]},
                ),
            ],
            state_operations=[
                migrations.AddConstraint(
                    model_name="groupopenperiod",
                    constraint=django.contrib.postgres.constraints.ExclusionConstraint(
                        expressions=[
                            (models.F("group"), RangeOperators.EQUAL),
                            (
                                sentry.models.groupopenperiod.TsTzRange(
                                    "date_started",
                                    "date_ended",
                                    RangeBoundary(inclusive_lower=True, inclusive_upper=True),
                                ),
                                RangeOperators.OVERLAPS,
                            ),
                        ],
                        name="exclude_overlapping_date_start_end",
                    ),
                ),
            ],
        ),
        migrations.RemoveConstraint(
            model_name="groupopenperiod",
            name="exclude_overlapping_start_end",
        ),
    ]
