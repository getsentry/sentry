# Generated by Django 2.2.28 on 2023-04-25 20:25

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def backfill_use_case_id(apps, schema_editor):
    """
    When the `use_case_id` was added to the sentry_perfstringindexer table
    the default was "performance". We now want the use_case_id to align
    with the relay namespace, which should be "transactions".

    This migration may run after we've starting to write new rows that
    have the correct "transactions" use_case_id, so we just want to fix the
    rows that still have the "performance" use_case_id.

    Ultimately the default for this column should be removed, as we add
    more use cases.

    """
    PerfStringIndexer = apps.get_model("sentry", "PerfStringIndexer")
    for indexed_str in RangeQuerySetWrapperWithProgressBar(PerfStringIndexer.objects.all()):
        if indexed_str.use_case_id == "performance":
            indexed_str.use_case_id = "transactions"
            indexed_str.save(update_fields=["use_case_id"])


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = True

    dependencies = [
        ("sentry", "0445_drop_deprecated_monitor_next_last_checkin_db_op"),
    ]

    operations = [
        migrations.RunPython(
            backfill_use_case_id,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_perfstringindexer"]},
        ),
    ]
