{% load sentry_helpers %}(function(d,q,r,h,g){function t(b){if(!u){u=!0;var c=q.getElementsByTagName(r)[0],a=q.createElement(r);a.src="{{ jsSdkUrl|safe }}";a.crossorigin="anonymous";a.addEventListener("load",function(){try{d[h]=l;d[g]=m;var a=d.Sentry,c=a.init;a.init=function(a){c(Object.assign({{ config|to_json|safe }},a))};w(b,a)}catch(k){console.error(k)}});c.parentNode.insertBefore(a,c)}}function w(b,f){try{b();
var a=c.data,g=d[h];if(a.length)for(var e=0;e<a.length;e++)if(a[e].e)g.apply(d,a[e].e);else if(a[e].p)f.captureException(a[e].p);else if(a[e].f){var k=a[e];f[k.f].apply(f,k.a)}}catch(x){console.error(x)}}var n="no",u=!1,v,c=function(b){(b.e||b.p||b.f&&-1<b.f.indexOf("capture"))&&"no"!==n&&t(v);c.data.push(b)};c.data=[];d.Sentry={onLoad:function(b){"no"==n?t(b):v=b},addBreadcrumb:function(){c({f:"addBreadcrumb",a:arguments})},captureMessage:function(){c({f:"captureMessage",a:arguments})},captureException:function(){c({f:"captureException",
a:arguments})},captureEvent:function(){c({f:"captureEvent",a:arguments})},configureScope:function(){c({f:"configureScope",a:arguments})}};var l=d[h];d[h]=function(b,f,a,g,e){c({e:[].slice.call(arguments)});l&&l.apply(d,arguments)};var m=d[g];d[g]=function(b){c({p:b.reason});m&&m.apply(d,arguments)};for(var p=Array.prototype.slice.apply(document.scripts).filter(function(b){return-1<b.src.indexOf("{{ publicKey|safe }}")})[0].attributes,f=0;f<p.length;f++)"data-lazy"===p[f].name&&"yes"===
p[f].value&&(n="yes")})(window,document,"script","onerror","onunhandledrejection");
