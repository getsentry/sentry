# Generated by Django 5.2.1 on 2025-08-18 16:57

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import sentry.db.models.fields.bounded
import sentry.db.models.fields.foreignkey
import sentry.db.models.fields.hybrid_cloud_foreign_key
from sentry.new_migrations.migrations import CheckedMigration


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = False

    initial = True

    dependencies = [
        ("sentry", "0966_groupopenperiod_data_pending_inc_detector_id_index"),
    ]

    operations = [
        migrations.CreateModel(
            name="EscalationPolicy",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "user_id",
                    sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                        "sentry.User", db_index=True, null=True, on_delete="SET_NULL"
                    ),
                ),
                ("repeat_n_times", models.PositiveIntegerField(default=1)),
                (
                    "organization",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sentry.organization"
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to="sentry.team"
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_escalation_policy",
                "unique_together": {("organization", "name")},
            },
        ),
        migrations.CreateModel(
            name="EscalationPolicyState",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("run_step_n", models.PositiveIntegerField(null=True)),
                ("run_step_at", models.DateTimeField(null=True)),
                ("state", models.CharField(max_length=32)),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now)),
                ("date_updated", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "escalation_policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="escalation_policies.escalationpolicy",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sentry.group"
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_escalation_policy_state",
            },
        ),
        migrations.CreateModel(
            name="EscalationPolicyStep",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("step_number", models.PositiveIntegerField()),
                ("escalate_after_sec", models.PositiveIntegerField()),
                (
                    "policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="escalation_policies.escalationpolicy",
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_escalation_policy_step",
                "ordering": ["step_number"],
                "unique_together": {("policy", "step_number")},
            },
        ),
        migrations.CreateModel(
            name="RotationSchedule",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=256)),
                ("description", models.CharField(blank=True, max_length=512, null=True)),
                (
                    "user_id",
                    sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                        "sentry.User", db_index=True, null=True, on_delete="SET_NULL"
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sentry.organization"
                    ),
                ),
                (
                    "team",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedules",
                        to="sentry.team",
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_rotation_schedule",
                "unique_together": {("organization", "name")},
            },
        ),
        migrations.CreateModel(
            name="EscalationPolicyStepRecipient",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                (
                    "user_id",
                    sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                        "sentry.User", db_index=True, null=True, on_delete="CASCADE"
                    ),
                ),
                (
                    "escalation_policy_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipients",
                        to="escalation_policies.escalationpolicystep",
                    ),
                ),
                (
                    "team",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="sentry.team"
                    ),
                ),
                (
                    "schedule",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="escalation_policies.rotationschedule",
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_escalation_policy_step_recipient",
            },
        ),
        migrations.CreateModel(
            name="RotationScheduleLayer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("precedence", models.PositiveIntegerField()),
                ("rotation_type", models.CharField(max_length=20)),
                ("handoff_time", models.CharField(max_length=20)),
                ("schedule_layer_restrictions", models.JSONField()),
                ("start_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="layers",
                        to="escalation_policies.rotationschedule",
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_rotation_schedule_layer",
                "ordering": ("precedence",),
                "unique_together": {("schedule_id", "precedence")},
            },
        ),
        migrations.CreateModel(
            name="RotationScheduleOverride",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "user_id",
                    sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                        "sentry.User", db_index=True, null=True, on_delete="CASCADE"
                    ),
                ),
                (
                    "rotation_schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overrides",
                        to="escalation_policies.rotationschedule",
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_rotation_schedule_override",
            },
        ),
        migrations.CreateModel(
            name="RotationScheduleUserOrder",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                (
                    "user_id",
                    sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                        "sentry.User", db_index=True, null=True, on_delete="CASCADE"
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "schedule_layer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_orders",
                        to="escalation_policies.rotationschedulelayer",
                    ),
                ),
            ],
            options={
                "db_table": "escalation_policies_rotation_schedule_layer_user_order",
                "unique_together": {("schedule_layer", "user_id")},
            },
        ),
    ]
