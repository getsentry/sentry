# Generated by Django 5.2.1 on 2025-07-24 21:44

import logging

from django.apps.registry import Apps
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

from sentry.new_migrations.migrations import CheckedMigration

logger = logging.getLogger(__name__)


def disconnect_error_detector_cron_workflows(
    apps: Apps, schema_editor: BaseDatabaseSchemaEditor
) -> None:
    Rule = apps.get_model("sentry", "Rule")
    AlertRuleWorkflow = apps.get_model("workflow_engine", "AlertRuleWorkflow")
    DetectorWorkflow = apps.get_model("workflow_engine", "DetectorWorkflow")

    for rule in Rule.objects.filter(source=1):
        arw = AlertRuleWorkflow.objects.filter(rule_id=rule.id).select_related("workflow").first()
        if not arw:
            logger.info(
                "No AlertRuleWorkflow found for rule, skipping",
                extra={"rule_id": rule.id},
            )
            continue

        workflow = arw.workflow
        # delete all DetectorWorkflow entries for this workflow, it should only be connected to error detectors
        DetectorWorkflow.objects.filter(workflow=workflow).delete()
        logger.info(
            "Disconnected cron workflow from error detectors",
            extra={"rule_id": rule.id, "workflow_id": workflow.id},
        )


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("workflow_engine", "0081_add_unique_constraint_to_detector_group"),
    ]

    operations = [
        migrations.RunPython(
            disconnect_error_detector_cron_workflows,
            migrations.RunPython.noop,
            hints={"tables": ["sentry_rule"]},
        )
    ]
