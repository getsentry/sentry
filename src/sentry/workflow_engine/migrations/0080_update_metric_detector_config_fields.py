# Generated by Django 5.2.1 on 2025-06-05 18:39

from django.apps.registry import Apps
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapper


def update_metric_detector_config_fields(
    apps: Apps, schema_editor: BaseDatabaseSchemaEditor
) -> None:
    Detector = apps.get_model("workflow_engine", "Detector")

    metric_detectors = Detector.objects.filter(type="metric_issue")

    for detector in RangeQuerySetWrapper(metric_detectors):
        config = detector.config
        new_config = {
            "comparison_delta": config.get("comparison_delta"),
            "detection_type": config.get("detection_type"),
        }
        detector.config = new_config
        detector.save()


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("workflow_engine", "0079_add_unique_constraint_to_detector_group"),
    ]

    operations = [
        migrations.RunPython(
            update_metric_detector_config_fields,
            migrations.RunPython.noop,
            hints={"tables": ["workflow_engine_detector"]},
        )
    ]
