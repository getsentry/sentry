# Generated by Django 5.2.1 on 2025-01-10 22:54

import logging
from typing import Any

from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

from sentry.new_migrations.migrations import CheckedMigration

logger = logging.getLogger(__name__)


def update_error_detector_names(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    """
    Update the name field of all Detector objects with type 'error' to 'Error Monitor'.
    """
    Detector = apps.get_model("workflow_engine", "Detector")

    batch_size = 1000
    detectors_to_update = []

    logger.info("Starting update of error detector names")

    error_detectors = Detector.objects.filter(type="error")
    total_count = error_detectors.count()

    logger.info(f"Found {total_count} error detectors to update")

    for detector in error_detectors.iterator(chunk_size=batch_size):
        detector.name = "Error Monitor"
        detectors_to_update.append(detector)

        if len(detectors_to_update) >= batch_size:
            Detector.objects.bulk_update(detectors_to_update, ["name"], batch_size=batch_size)
            logger.info(f"Updated {len(detectors_to_update)} error detector names")
            detectors_to_update = []

    # Update remaining items
    if detectors_to_update:
        Detector.objects.bulk_update(detectors_to_update, ["name"], batch_size=batch_size)
        logger.info(f"Updated final {len(detectors_to_update)} error detector names")

    logger.info(f"Completed update of {total_count} error detector names")


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("workflow_engine", "0067_workflow_action_group_status_group_db_constraint"),
    ]

    operations = [
        migrations.RunPython(
            code=update_error_detector_names,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["workflow_engine_detector"]},
        ),
    ]
