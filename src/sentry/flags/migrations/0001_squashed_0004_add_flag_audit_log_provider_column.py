# Generated by Django 5.2.1 on 2025-05-21 16:29

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import sentry.db.models.fields.bounded
import sentry.db.models.fields.foreignkey
import sentry.db.models.fields.hybrid_cloud_foreign_key
from sentry.new_migrations.migrations import CheckedMigration


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    replaces = [
        ("flags", "0001_add_flag_audit_log"),
        ("flags", "0002_add_flags_webhooksigningsecret"),
        ("flags", "0003_allow_null_created_by"),
        ("flags", "0004_add_flag_audit_log_provider_column"),
    ]

    initial = True

    checked = False  # This is an initial migration and can take locks

    dependencies = [
        ("sentry", "0001_squashed_0904_onboarding_task_project_id_idx"),
    ]

    operations = [
        migrations.CreateModel(
            name="FlagAuditLogModel",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("action", models.PositiveSmallIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("created_by", models.CharField(max_length=100, null=True)),
                ("created_by_type", models.PositiveSmallIntegerField(null=True)),
                ("flag", models.CharField(max_length=100)),
                (
                    "organization_id",
                    sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                        "sentry.Organization", db_index=True, on_delete="CASCADE"
                    ),
                ),
                ("provider", models.PositiveSmallIntegerField(null=True)),
                ("tags", models.JSONField()),
            ],
            options={
                "db_table": "flags_audit_log",
                "indexes": [models.Index(fields=["flag"], name="flags_audit_flag_455822_idx")],
            },
        ),
        migrations.CreateModel(
            name="FlagWebHookSigningSecretModel",
            fields=[
                (
                    "id",
                    sentry.db.models.fields.bounded.BoundedBigAutoField(
                        primary_key=True, serialize=False
                    ),
                ),
                (
                    "created_by",
                    sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey(
                        "sentry.User", db_index=True, null=True, on_delete="SET_NULL"
                    ),
                ),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now)),
                ("provider", models.CharField(db_index=True)),
                ("secret", models.CharField()),
                (
                    "organization",
                    sentry.db.models.fields.foreignkey.FlexibleForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sentry.organization"
                    ),
                ),
            ],
            options={
                "db_table": "flags_webhooksigningsecret",
                "unique_together": {("organization", "provider", "secret")},
            },
        ),
    ]
