# Generated by Django 5.1.5 on 2025-01-21 23:10
from django.db import IntegrityError, migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def migrate_header_objects_to_lists(
    apps: StateApps,
    schema_editor: BaseDatabaseSchemaEditor,
) -> None:
    UptimeSubscription = apps.get_model("uptime", "UptimeSubscription")
    for sub in RangeQuerySetWrapperWithProgressBar(UptimeSubscription.objects.filter(headers={})):
        sub.headers = []
        try:
            sub.save()
        except IntegrityError:
            # Skip monitors where there are duplicate subscriptions where one
            # has a `[]` header and the other has `{}` headers. We'll fix this
            # up in another migration
            pass


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("uptime", "0022_add_trace_sampling_to_uptime_monitors"),
    ]

    operations = [
        migrations.RunPython(
            migrate_header_objects_to_lists,
            migrations.RunPython.noop,
            hints={"tables": ["uptime_uptimesubscription"]},
        ),
    ]
