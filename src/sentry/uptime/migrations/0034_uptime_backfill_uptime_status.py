# Generated by Django 5.1.7 on 2025-04-17 21:24

from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def backfill_uptime_status(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    ProjectUptimeSubscription = apps.get_model("uptime", "ProjectUptimeSubscription")

    monitors = ProjectUptimeSubscription.objects.filter().select_related("uptime_subscription")
    for monitor in RangeQuerySetWrapperWithProgressBar(monitors):
        sub = monitor.uptime_subscription
        sub.uptime_status = monitor.uptime_status
        sub.uptime_status_update_date = monitor.uptime_status_update_date
        sub.save()


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production.
    # This should only be used for operations where it's safe to run the migration after your
    # code has deployed. So this should not be used for most operations that alter the schema
    # of a table.
    # Here are some things that make sense to mark as post deployment:
    # - Large data migrations. Typically we want these to be run manually so that they can be
    #   monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   run this outside deployments so that we don't block them. Note that while adding an index
    #   is a schema change, it's completely safe to run the operation after the code has deployed.
    # Once deployed, run these manually via: https://develop.sentry.dev/database-migrations/#migration-deployment

    is_post_deployment = True

    dependencies = [
        ("uptime", "0033_uptime_backfill_to_detectors"),
    ]

    operations = []
    operations = [
        migrations.RunPython(
            code=backfill_uptime_status,
            reverse_code=migrations.RunPython.noop,
            hints={
                "tables": [
                    "uptime_projectuptimesubscription",
                    "uptime_uptimesubscription",
                ]
            },
        ),
    ]
