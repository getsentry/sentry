steps:
# Prime the cache if available
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
    - '-c'
    - 'docker pull us.gcr.io/$PROJECT_ID/sentry:latest || true'
# Build the main getsentry/sentry image
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--build-arg', 'SOURCE_COMMIT=$COMMIT_SHA',
    '--cache-from', 'us.gcr.io/$PROJECT_ID/sentry:latest',
    '-t', 'us.gcr.io/$PROJECT_ID/sentry:$COMMIT_SHA',
    '-t', 'us.gcr.io/$PROJECT_ID/sentry:$SHORT_SHA',
    '-t', 'us.gcr.io/$PROJECT_ID/sentry:latest',
    '-f', './docker/Dockerfile', '.'
  ]
# Derive the -onbuild variant
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'us.gcr.io/$PROJECT_ID/sentry:$COMMIT_SHA-onbuild',
    '-t', 'us.gcr.io/$PROJECT_ID/sentry:$SHORT_SHA-onbuild',
    '-t', 'us.gcr.io/$PROJECT_ID/sentry:latest-onbuild',
    '-f', './docker/onbuild/Dockerfile', '.'
  ]
# Smoke tests
- name: 'us.gcr.io/$PROJECT_ID/sentry:$COMMIT_SHA'
  args: ['config', 'get', 'system.secret-key']
  env:
    - SENTRY_SKIP_BACKEND_VALIDATION=1
    - SENTRY_SECRET_KEY=abc
    - SENTRY_REDIS_HOST=localhost
 # Only tag "latest" when on master
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-e'
  - '-c'
  - |
    if [ "$BRANCH_NAME" == "master" ]; then
      docker push us.gcr.io/$PROJECT_ID/sentry:latest
      docker push us.gcr.io/$PROJECT_ID/sentry:latest-onbuild
    fi
timeout: 1200s
images:
- 'us.gcr.io/$PROJECT_ID/sentry:$COMMIT_SHA'
- 'us.gcr.io/$PROJECT_ID/sentry:$COMMIT_SHA-onbuild'
- 'us.gcr.io/$PROJECT_ID/sentry:$SHORT_SHA'
- 'us.gcr.io/$PROJECT_ID/sentry:$SHORT_SHA-onbuild'
