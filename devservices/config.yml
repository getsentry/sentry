# Ignored by docker compose, used by devservices
x-sentry-service-config:
  version: 0.1
  service_name: sentry
  dependencies:
    snuba:
      description: Service that provides fast aggregation and query capabilities on top of Clickhouse
      remote:
        repo_name: snuba
        branch: master
        repo_link: https://github.com/getsentry/snuba.git
        mode: containerized
    relay:
      description: Service event forwarding and ingestion service
      remote:
        repo_name: relay
        branch: master
        repo_link: https://github.com/getsentry/relay.git
        mode: containerized
    postgres:
      description: Database used to store Sentry data
    redis:
      description: Shared instance of redis used by sentry services
      remote:
        repo_name: sentry-shared-redis
        branch: main
        repo_link: https://github.com/getsentry/sentry-shared-redis.git
    chartcuterie:
      description: Chartcuterie is a service that generates charts
      remote:
        repo_name: chartcuterie
        branch: master
        repo_link: https://github.com/getsentry/chartcuterie.git
    taskbroker:
      description: Service used to process asynchronous tasks
      remote:
        repo_name: taskbroker
        branch: main
        repo_link: https://github.com/getsentry/taskbroker.git
        mode: containerized
  modes:
    default: [snuba, postgres, relay]
    migrations: [postgres, redis]
    acceptance-ci: [postgres, snuba, chartcuterie]
    taskbroker: [snuba, postgres, relay, taskbroker]

services:
  postgres:
    image: ghcr.io/getsentry/image-mirror-library-postgres:14-alpine
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: sentry
    command:
      [
        postgres,
        -c,
        wal_level=logical,
        -c,
        max_replication_slots=1,
        -c,
        max_wal_senders=1,
      ]
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - devservices
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:5432:5432
    extra_hosts:
      - host.docker.internal:host-gateway
    labels:
      - orchestrator=devservices
    restart: unless-stopped

networks:
  devservices:
    name: devservices
    external: true

volumes:
  postgres-data:
